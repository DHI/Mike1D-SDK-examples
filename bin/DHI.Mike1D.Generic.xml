<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DHI.Mike1D.Generic</name>
    </assembly>
    <members>
        <member name="T:DHI.Mike1D.Generic.AbstractDataAccess">
            <summary>
            Abstract base class for all Mike1D data access modules
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.AbstractDataAccess.Connection">
            <summary>
            Holder of read/write information
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.AbstractDataAccess._connection">
            <summary>
            Protected holder of read/write info
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.AbstractDataAccess.CustomTypes">
            <summary>
            List of custom types stored in the data object and that must be serialized.
            <para>
            A custom type is e.g. a user implemented structure or catchment model. In order to store 
            information on the custom type in the .m1dx file, the system needs to know which custom types
            are being used, and they must be added to this list.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.AbstractDataAccess.ExtensionData">
            <summary>
            Holds data from an extended DataContract
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.CustomTypes">
            <summary>
            A CustomType contains information for types of objects that needs to be stored in the MIKE 1D setup file (.m1dx)
            but which are not part of the MIKE 1D system.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.CustomTypes.AssemblyFiles">
            <summary>
            Name or paths of assemblies that contains custom types.
            <para>
            The name must contain the full/relative path to the assembly file on the disc.
            It can also contain the fully qualified/long name of the assembly to load from the GAC (including Version, Culture and PublicKeyToken).
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.CustomTypes.Types">
            <summary>
            Custom types
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.CustomTypes.Add(System.Type)">
            <summary>
            Add type to list of types
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.CustomTypes.LoadCustomTypes(System.String)">
            <summary>
            Load custom types from assemblies
            </summary>
            <param name="basePath">Base path of setup, used as base of relative paths.</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.CustomTypes.__typestrings">
            <summary>
            Serialization property
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.AssemblyResolver">
            <summary>
            Helper class for resolving assemblies based on file names.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.AssemblyResolver.Assemblies">
            <summary>
            Known assemblies.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.AssemblyResolver.AddAssembly(System.String)">
            <summary>
            Add assembly to list of assemblies, loading by name
            <para>
            If assembly is not loaded, an exception is thrown.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.AssemblyResolver.LoadAssembly(System.String)">
            <summary>
            Static method to load assembly based on its fully qualified name, or from a file path.
            </summary>
            <param name="assemblyName">Name of assembly</param>
            <returns>Assembly, or null if not found</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.AssemblyResolver.ResolveAssembly(System.Object,System.ResolveEventArgs)">
            <summary>
            Resolve assembly
            <para>
            To bind to <code>AppDomain.CurrentDomain.AssemblyResolve</code> event.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Collections.EnumerableWrapper`2">
            <summary>
            Wrap an enumerable of type T1 to one of type T2.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumerableWrapper`2.#ctor(System.Collections.Generic.IEnumerable{`0},System.Func{`0,`1})">
            <summary>
            Constructor
            </summary>
            <param name="enumerable">Enumerable to wrap</param>
            <param name="wrapFunc">Function that creates a wrapper class around the original class</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumerableWrapper`2.GetEnumerator">
            <summary>
            Returns an enumerator of <typeparamref name="T2"/> that iterates through the collection.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Collections.EnumerableBaseWrapper`2">
            <summary>
            <para>
            Wrapping of an <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <typeparamref name="T"/>
            to an <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <typeparamref name="TBase"/>, 
            under the assumption that <typeparamref name="T"/> extends <typeparamref name="TBase"/>.
            </para>
            <para>
            This will make the enumerable available as having base class elements, without copying the
            content of the enumerable. 
            </para>
            </summary>
            <remarks> 
            This is required since an <see cref="T:System.Collections.Generic.IEnumerable`1"/> does not extend an <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            even though T extends TBase
            </remarks>
            <typeparam name="T">Type extending <typeparamref name="TBase"/></typeparam>
            <typeparam name="TBase">Base type</typeparam>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumerableBaseWrapper`2.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Create a new wrapper object that wraps the provided enumerable
            </summary>
            <param name="enumerable">Enumerable to wrap</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumerableBaseWrapper`2.GetEnumerator">
            <summary>
            Returns an enumerator of <typeparamref name="TBase"/> that iterates through the collection.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Collections.EnumerableKeyWrapper`2">
            <summary>
            <para>
            Wrapping of an <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <typeparamref name="T"/>
            to an <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <typeparamref name="TKey"/>, 
            where the provided key selector can extract from <typeparamref name="T"/> 
            a key of type <typeparamref name="TKey"/>.
            </para>
            <para>
            This will make the enumerable available as having key class elements, without copying the
            content of the enumerable. 
            </para>
            </summary>
            <typeparam name="T">Type of objects in collection</typeparam>
            <typeparam name="TKey">Type of key for object in collection</typeparam>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumerableKeyWrapper`2.#ctor(System.Collections.Generic.IEnumerable{`0},System.Func{`0,`1})">
            <summary>
            Create a new wrapper object that wraps the provided enumerable
            </summary>
            <param name="enumerable">Enumerable to wrap</param>
            <param name="keySelector">Delegate that extracts a key from the object in the wrapped enumerator</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumerableKeyWrapper`2.GetEnumerator">
            <summary>
            Returns an enumerator of <typeparamref name="TKey"/> that iterates through the collection.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Collections.EnumeratorWrapper`2">
            <summary>
            Wrap an enumerator of type T2 to one of type T1.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumeratorWrapper`2.#ctor(System.Collections.Generic.IEnumerator{`0},System.Func{`0,`1})">
            <summary>
            Constructor
            </summary>
            <param name="enumerator">Enumerator to wrap</param>
            <param name="wrapFunc">Function that creates a wrapper class around the original class</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumeratorWrapper`2.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumeratorWrapper`2.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.EnumeratorWrapper`2.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>
            The current element in the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.EnumeratorWrapper`2.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <returns>
            The element in the collection at the current position of the enumerator.
            </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumeratorWrapper`2.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:DHI.Mike1D.Generic.Collections.EnumeratorBaseWrapper`2">
            <summary>
            <para>
            Wrapping of an <see cref="T:System.Collections.Generic.IEnumerator`1"/> of <typeparamref name="T"/>
            to an <see cref="T:System.Collections.Generic.IEnumerator`1"/> of <typeparamref name="TBase"/>, 
            under the assumption that <typeparamref name="T"/> extends <typeparamref name="TBase"/>.
            </para>
            <para>
            This will make the enumerator available as having base class elements, without copying the
            content of the enumerator. 
            </para>
            </summary>
            <remarks> 
            This is required since an <see cref="T:System.Collections.Generic.IEnumerator`1"/> does not extend an <see cref="T:System.Collections.Generic.IEnumerator`1"/>
            even though T extends TBase
            </remarks>
            <typeparam name="T">Type extending <typeparamref name="TBase"/></typeparam>
            <typeparam name="TBase">Base type</typeparam>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumeratorBaseWrapper`2.#ctor(System.Collections.Generic.IEnumerator{`0})">
            <summary>
            Create a new wrapper object that wraps the provided enumerator
            </summary>
            <param name="enumerator">Enumerator to wrap</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumeratorBaseWrapper`2.Dispose">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumeratorBaseWrapper`2.MoveNext">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumeratorBaseWrapper`2.Reset">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.EnumeratorBaseWrapper`2.Current">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.Collections.EnumeratorKeyWrapper`2">
            <summary>
            <para>
            Wrapping of an <see cref="T:System.Collections.Generic.IEnumerator`1"/> of <typeparamref name="T"/>
            to an <see cref="T:System.Collections.Generic.IEnumerator`1"/> of <typeparamref name="TKey"/>, 
            where the provided key selector can extract from <typeparamref name="T"/> 
            a key of type <typeparamref name="TKey"/>.
            </para>
            <para>
            This will make the enumerator available as having key class elements, without copying the
            content of the enumerator. 
            </para>
            </summary>
            <typeparam name="T">Type of objects in collection</typeparam>
            <typeparam name="TKey">Type of key for object in collection</typeparam>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumeratorKeyWrapper`2.#ctor(System.Collections.Generic.IEnumerator{`0},System.Func{`0,`1})">
            <summary>
            Create a new wrapper object that wraps the provided enumerator
            </summary>
            <param name="enumerator">Enumerator to wrap</param>
            <param name="keySelector">Delegate that extracts a key from the object in the wrapped enumerator</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumeratorKeyWrapper`2.Dispose">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumeratorKeyWrapper`2.MoveNext">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.EnumeratorKeyWrapper`2.Reset">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.EnumeratorKeyWrapper`2.Current">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.Collections.ListWrapper`2">
            <summary>
            List class that is wrapping an IList{T1}
            as in IList{T2}, where T2 is evaluated from 
            T1. 
            <para>
            Often T2 is a property of T1, 
            i.e. if having a list of complex objects like MyClass
            below, to expose the string id's a an IList{string}:
            <code>
            Class MyClass 
            {
              public string Id { get; set;}
              ...
            }
            
            IList{string} listStrings = new ListSelector(IList{MyClass} list, (mc) => mc.Id);
            </code>
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`2.#ctor(System.Collections.Generic.IList{`0},System.Func{`0,`1})">
            <summary>
            Create new wrapper
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`2.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`2.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`2.Add(`1)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`2.Clear">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`2.Contains(`1)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`2.CopyTo(`1[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`2.Remove(`1)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.ListWrapper`2.Count">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.ListWrapper`2.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`2.IndexOf(`1)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`2.Insert(System.Int32,`1)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`2.RemoveAt(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.ListWrapper`2.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.Collections.ListWrapper`1">
            <summary>
            <para>
            Wrapping of an <see cref="T:System.Collections.Generic.IList`1"/> of <typeparamref name="T"/>
            to also implement an <see cref="T:System.Collections.IList"/>.
            </para>
            <para>
            This will make the list available as a non-generic list, without copying the
            content of the list. 
            </para>
            <para>
            The wrapper supports all read functionality, while only partly "write" functionality. 
            For example, adding to the list an element which is not of type 
            <typeparamref name="T"/> will throw an exception.
            </para>
            </summary>
            <remarks>
            This is required since an <see cref="T:System.Collections.IList"/> does not extend an <see cref="T:System.Collections.Generic.IList`1"/>
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Create a new list wrapper object
            </summary>
            <param name="list"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.ListWrapper`1.WrappedList">
            <summary>
            Returns the wrapped list
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.ListWrapper`1.Count">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`1.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`1.Add(`0)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`1.Insert(System.Int32,`0)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`1.RemoveAt(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`1.Clear">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`1.Contains(`0)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`1.Remove(`0)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`1.CopyTo(System.Array,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`1.CopyTo(`0[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListWrapper`1.IndexOf(`0)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.ListWrapper`1.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.ListWrapper`1.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.Collections.ListBaseWrapper`2">
            <summary>
            <para>
            Wrapping of an IList{T} to an IList{TBase}, 
            when <typeparamref name="T"/> extends <typeparamref name="TBase"/>.
            </para>
            <para>
            This will make the list available as a list with base class elements, without copying the
            content of the list. 
            </para>
            <para>
            The wrapper supports all read functionality, while only partly "write" functionality. 
            For example, adding to the list an element which is of type 
            <typeparamref name="TBase"/> and not of <typeparamref name="T"/> will throw an exception.
            </para>
            </summary>
            <example>
            Assuming having two classes where
            <code> C : CBase </code>
            When an <code>IList{CBase}</code> is required, but what is available is an
            <code>IList{C}</code>, then these are not compatible. The wrapper can be used
            to 
            <code>
            IList{C} CList = ...;
            IList{CBase} CBaseList = new ListWrapper{C,CBase}(CList);
            </code>
            </example>
            <remarks>
            This is required since an <see cref="T:System.Collections.Generic.IList`1"/> does not extend an <see cref="T:System.Collections.Generic.IList`1"/>
            even though T extends TBase
            </remarks>
            <typeparam name="T">Type extending <typeparamref name="TBase"/></typeparam>
            <typeparam name="TBase">Base type</typeparam>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListBaseWrapper`2.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Create a new list wrapper object, wrapping the provided list.
            </summary>
            <param name="list"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.ListBaseWrapper`2.WrappedList">
            <summary>
            Returns the wrapped lsit
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListBaseWrapper`2.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListBaseWrapper`2.Add(`1)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListBaseWrapper`2.Clear">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListBaseWrapper`2.Contains(`1)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListBaseWrapper`2.CopyTo(`1[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListBaseWrapper`2.Remove(`1)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.ListBaseWrapper`2.Count">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.ListBaseWrapper`2.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListBaseWrapper`2.IndexOf(`1)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListBaseWrapper`2.Insert(System.Int32,`1)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ListBaseWrapper`2.RemoveAt(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.ListBaseWrapper`2.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.Collections.FifoQueue`1">
            <summary>
            Represents a first-in, first-out collection of objects.
            <para>
            Compared to the standard generic Queue, this queue allows access to
            queue elements throught the <see cref="P:Item(int)"/> property of the IList{T}
            interface. It implements the IList{T} interface, supporting in-queue 
            modifications, i.e. methods like Remove and Insert.
            </para>
            <para>
            The next element to be dequeued is the first element in the IList{T}, <code>this[0]</code>.
            New elements are added in the end of the list.
            </para>
            </summary>
            <remarks>
            <para>
            This class implements a generic queue as a circular array. Objects stored in a 
            FifoQueue{T} are inserted at one end and removed from the other. 
            The operations <see cref="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.Enqueue(`0)"/> and <see cref="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.Dequeue"/>
            are O(1) operations.
            </para>
            <para>
            The capacity of a FifoQueue{T} is the number of elements the FifoQueue{T} can currently hold. 
            As elements are added to a FifoQueue{T}, the capacity is automatically increased as 
            required by reallocating the internal array.
            </para>
            <para>
            FifoQueue{T} accepts null as a valid value for reference types and allows duplicate elements.
            </para>
            </remarks>
        </member>
        <member name="F:DHI.Mike1D.Generic.Collections.FifoQueue`1._q">
            <summary>
            Internal array of queue values, used as circular array.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Collections.FifoQueue`1._head">
            <summary>
            Index of first element in circular array <see cref="F:DHI.Mike1D.Generic.Collections.FifoQueue`1._q"/>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Collections.FifoQueue`1._count">
            <summary>
            Number of elements currently in the queue/circular array
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.#ctor">
            <summary>
            Initializes a new instance of the FifoQueue{T} class that 
            is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the FifoQueue{T} class that 
            is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the queue initially has room for. It cannot be less than 2</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the FifoQueue{T} class that 
            contains elements copied from the specified collection and has 
            sufficient capacity to accommodate the number of elements copied.
            <para>
            If <paramref name="collection"/> is an <see cref="T:System.Collections.ICollection"/>,
            the capacity will match exactly the size of the collection.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.FifoQueue`1.Count">
            <summary>
            Gets the number of elements contained in the FifoQueue{T}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.FifoQueue`1.Capacity">
            <summary>
            Gets or sets the total number of elements the internal data structure can hold without resizing.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.FifoQueue`1.Tail">
            <summary>
            Index in internal <see cref="F:DHI.Mike1D.Generic.Collections.FifoQueue`1._q"/> array of last element in the queue
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.Index(System.Int32)">
            <summary>
            Index in internal <see cref="F:DHI.Mike1D.Generic.Collections.FifoQueue`1._q"/> array <see cref="F:DHI.Mike1D.Generic.Collections.FifoQueue`1._q"/> of the element with <paramref name="index"/> in queue,
            handling circular array wrapping.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.Enqueue(`0)">
            <summary>
            Adds an object to the end of the FifoQueue{T}.
            </summary>
            <param name="item">The object to add to the FifoQueue{T}. The value can be null for reference types.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.Add(`0)">
            <summary>
            Adds an object to the end of the FifoQueue{T}, same as <see cref="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.Enqueue(`0)"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds an object to the end of the FifoQueue{T}, same as <see cref="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.Enqueue(`0)"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.AddRotate(`0)">
            <summary>
            Adds an object to the end of the FifoQueue{T}, dequeuing the first item if queue is full (capacity is met).
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.ResizeArray(System.Int32)">
            <summary>
            Make new array and copy over content, first element in first 
            </summary>
            <param name="newLength">Size of new array</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.Peek">
            <summary>
            Returns the object at the beginning of the FifoQueue{T} without removing it.
            </summary>
            <remarks>
            <para>
            This method is similar to the Dequeue method, but Peek does not modify the FifoQueue{T}.
            </para><para>
            If type T is a reference type, null can be added to the FifoQueue{T} as a value.
            </para><para>
            This method is an O(1) operation.
            </para>
            </remarks>
            <returns>The object at the beginning of the FifoQueue{T}.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.Dequeue">
            <summary>
            Removes and returns the object at the beginning of the FifoQueue{T}.
            </summary>
            <remarks>
            <para>
            This method is similar to the Peek method, but Peek does not modify the FifoQueue{T}.
            </para><para>
            If type T is a reference type, null can be added to the FifoQueue{T} as a value.
            </para><para>
            This method is an O(1) operation.
            </para>
            </remarks>
            <returns>The object that is removed from the beginning of the FifoQueue{T}.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.PushBack">
            <summary>
            Put the first element to the end of the queue
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.Clear">
            <summary>
            Removes all objects from the FifoQueue{T}.
            </summary>
            <remarks>
            <para>
            Count is set to zero, and references to other objects from 
            elements of the collection are also released.
            </para><para>
            The capacity remains unchanged. To reset the capacity of the FifoQueue{T}, 
            call TrimExcess. Trimming an empty FifoQueue{T} sets the capacity of the 
            FifoQueue{T} to the default capacity.
            </para><para>
            This method is an O(n) operation, where n is Count.
            </para>
            </remarks>
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.FifoQueue`1.Item(System.Int32)">
            <summary>
            Gets/sets the element at the specified position in the FifoQueue{T}.
            </summary>
            <remarks>
            <para>
            FifoQueue{T} accepts null as a valid value for reference 
            types and allows duplicate elements.
            </para><para>
            This property provides the ability to access a specific element in 
            the collection by using the following syntax: myCollection[index].
            </para><para>
            Retrieving the value of this property is an O(1) operation; 
            setting the property is also an O(1) operation.
            </para>
            </remarks>
            <param name="index">Zero based index/position in queue</param>
            <returns>The element at the specified index/position in the queue.</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.FifoQueue`1.Array">
            <summary>
            An array representation of the current content of the queue.
            <para>
            Note that this will make a copy of the internal array
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the FifoQueue{T}.
            </summary>
            <returns>An FifoQueue{T}.Enumerator for the FifoQueue{T}.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the FifoQueue{T}.
            </summary>
            <returns>An FifoQueue{T}.Enumerator for the FifoQueue{T}.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the FifoQueue{T}.
            </summary>
            <returns>An FifoQueue{T}.Enumerator for the FifoQueue{T}.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.Contains(`0)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.CopyTo(`0[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.IndexOf(`0)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.Insert(System.Int32,`0)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.Remove(`0)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.RemoveAt(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Mike1D.Generic.Collections.FifoQueue`1.Enumerator">
            <summary>
            Enumerates the elements of a FiroQueue{T}.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.Enumerator.Dispose">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.Enumerator.MoveNext">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.FifoQueue`1.Enumerator.Reset">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.FifoQueue`1.Enumerator.Current">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.Collections.SingleEnumerable`1">
            <summary>
            Light weight class for enumerating over a single object.
            </summary>
            <typeparam name="T">The type of objects to enumerate.</typeparam>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.SingleEnumerable`1.#ctor(`0)">
            <summary>
            Default constructor
            </summary>
            <param name="o">Object to enumerate over</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.SingleEnumerable`1.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.Collections.SingleEnumerator`1">
            <summary>
            Light weight class for enumerating over a single object.
            </summary>
            <typeparam name="T">The type of objects to enumerate.</typeparam>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.SingleEnumerator`1.#ctor(`0)">
            <summary>
            Default constructor
            </summary>
            <param name="o">Object to enumerate over</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.SingleEnumerator`1.Dispose">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.SingleEnumerator`1.MoveNext">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.SingleEnumerator`1.Reset">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Collections.SingleEnumerator`1.Current">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ValueIdList.GetItem(System.Int32)">
            <summary>
            Get item at index
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.ValueIdList.GetItem(System.String)">
            <summary>
            Get item. Create if not already there.
            </summary>
        </member>
        <member name="E:DHI.Mike1D.Generic.Collections.NetworkValueIdList.ApplyExternalSourcesEvent">
            <summary>
            An event that is called everytime external sources are to be applied
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Collections.NetworkValueIdList.TriggerApplyExternalSourcesEvent(System.DateTime,System.DateTime)">
            <summary>
             
            </summary>
            <param name="timeN">Time at start of time step</param>
            <param name="timeNp1">Time at end of time step</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.DiagnosticsException">
            <summary>
            A custom exception, used by the <see cref="T:DHI.Mike1D.Generic.IDiagnostics"/>
            system.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsException.#ctor(DHI.Mike1D.Generic.DiagnosticItemID)">
            <summary>
            Create new Diagnostics Exception
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticsException.DiagnosticItem">
            <summary>
            The diagnostic item associated with the exception
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.DiagnosticsHandler">
            <summary>
            <see cref="T:DHI.Mike1D.Generic.DiagnosticsHandler"/> collects all diagnostics 
            messages entered by any of the Write method 
            and triggers a <see cref="E:DHI.Mike1D.Generic.DiagnosticsHandler.MessageEvent"/>. However, it only
            issues the same message 100 timers, the statistics for that
            can be retrieved by <see cref="M:DHI.Mike1D.Generic.DiagnosticsHandler.WriteSkippedMessagesSummary"/>
            <para>
            It is thread safe, i.e. it handles synchronization issues 
            between potential several worker threads.
            </para>
            <para>
            To connect a diagnostics object for "live" messages, connect
            the DiagnosticsHandler object directly to the Diagnostics object:
            <code>
            diagnostics.DiagnosticsEvent += diagnosticsHandler.Write;
            </code>
            To write all messages of a diagnostics object, call the
            <see cref="M:DHI.Mike1D.Generic.DiagnosticsHandler.WriteAllIssuesRecursive(DHI.Mike1D.Generic.IDiagnostics)"/> method.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.DiagnosticsHandler.MessageType">
            <summary>
            Type of diagnostics message
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsHandler.MessageType.Error">
            <summary> Error </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsHandler.MessageType.Warning">
            <summary> Warning </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsHandler.MessageType.Hint">
            <summary> Hint </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsHandler.MessageType.Info">
            <summary> Info </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsHandler.MessageType.Action">
            <summary> Action  </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsHandler._numberOfIdenticalMessagesToWrite">
            <summary>
            Number of identical messages to write. 
            <para>
            If more than this number of messages (same message id), these messages are skipped.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticsHandler.NumberOfIdenticalMessagesToWrite">
            <summary>
            Number of identical messages to write. 
            <para>
            If more than this number of messages (same message id), these messages are skipped for the <see cref="E:DHI.Mike1D.Generic.DiagnosticsHandler.MessageEvent"/>.
            </para>
            </summary>
        </member>
        <member name="E:DHI.Mike1D.Generic.DiagnosticsHandler.MessageEvent">
            <summary>
            Event that is triggered every time a new diagnostics message is produced
            by one of the connected diagnostics objects. 
            <para>
            The number of identical messages is limited by <see cref="F:DHI.Mike1D.Generic.DiagnosticsHandler._numberOfIdenticalMessagesToWrite"/>
            </para>
            <para>
            Parameters: Type of message and message content.
            </para>
            </summary>
        </member>
        <member name="E:DHI.Mike1D.Generic.DiagnosticsHandler.MessageEventAll">
            <summary>
            Event that is triggered every time a new diagnostics message is produced
            by one of the connected diagnostics objects.
            <para>
            Parameters: Type of message, message id and message content
            </para>
            <para>
            Message id can be null.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsHandler.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsHandler.Reset">
            <summary>
            Reset DiagnosticsHandler, clearing counters for error messages
            and any pending messages in the queue
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsHandler.NewMessage(DHI.Mike1D.Generic.DiagnosticsHandler.MessageType,System.String)">
            <summary>
            Create directly a new message to be sent on
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsHandler.TriggerMessage(DHI.Mike1D.Generic.DiagnosticsHandler.MessageType,System.String,System.String)">
            <summary>
            Create directly a new message to be sent on
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsHandler.TriggerMessageAllOnly(DHI.Mike1D.Generic.DiagnosticsHandler.MessageType,System.String,System.String)">
            <summary>
            Create directly a new message to be sent on
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticsHandler.Heading">
            <summary>
            If diagnostic items are generated, then this heading is printed
            before the items. Immediately after the Heading is reset (hence only written once).
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsHandler.Write(DHI.Mike1D.Generic.DiagnosticsType,DHI.Mike1D.Generic.IDiagnostics,DHI.Mike1D.Generic.IDiagnosticItem)">
            <summary>
             Print one item of a Diagnostics to listeners. Can be used to connect to 
             DiagnosticsEvent of another Diagnostics object, to transfer any items to this class.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsHandler.Write(DHI.Mike1D.Generic.DiagnosticsType,DHI.Mike1D.Generic.IDiagnostics,DHI.Mike1D.Generic.IDiagnosticItem,System.Boolean)">
            <summary>
             Print one item of a Diagnostics to listeners.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsHandler.WriteSkippedMessagesSummary">
            <summary>
             Print a summary of hints, warnings, and erros that has been skipped.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsHandler.WriteAllIssuesRecursive(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Print hints, warnings, and erros of a Diagnostics to the listeners.
             Calls all children recursively.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsHandler.WriteAllIssues(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Print all hints, warnings, and erros of one Diagnostics to the console.
            </summary>
            <param name="diagnostics"></param>
        </member>
        <member name="T:DHI.Mike1D.Generic.DiagnosticsLocationType">
            <summary>
            Type of diagnostics location
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsLocationType.Node">
            <summary> Node </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsLocationType.Reach">
            <summary> Reach </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsLocationType.GridPoint">
            <summary> Grid point </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsLocationType.Catchment">
            <summary> Catchment </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsLocationType.Boundary">
            <summary> Boundary </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsLocationType.Structure">
            <summary> Structure </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDiagnosticsLocation">
            <summary>
            Location of diagnostics message
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticsLocation.Type">
            <summary>
            Type of location
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticsLocation.ID">
            <summary>
            ID of location. Its interpretation depends on <see cref="P:DHI.Mike1D.Generic.IDiagnosticsLocation.Type"/>.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticsLocation.Chainage">
            <summary>
            Chainage of location. Only applicable if <see cref="P:DHI.Mike1D.Generic.IDiagnosticsLocation.Type"/> is 
            <see cref="F:DHI.Mike1D.Generic.DiagnosticsLocationType.GridPoint"/> or 
            <see cref="F:DHI.Mike1D.Generic.DiagnosticsLocationType.Reach"/> 
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.DiagnosticsLocation">
            <summary>
            Location of diagnostics message
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticsLocation.Type">
            <summary>
            Type of location
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticsLocation.ID">
            <summary>
            ID of location. Its interpretation depends on <see cref="P:DHI.Mike1D.Generic.DiagnosticsLocation.Type"/>.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticsLocation.Chainage">
            <summary>
            Chainage of location. Only applicable if <see cref="P:DHI.Mike1D.Generic.DiagnosticsLocation.Type"/> is 
            <see cref="F:DHI.Mike1D.Generic.DiagnosticsLocationType.GridPoint"/> or 
            <see cref="F:DHI.Mike1D.Generic.DiagnosticsLocationType.Reach"/> 
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.DomainThreadPool">
            <summary>
            A pool of threads, having a specific number of threads available and waiting.
            <para>
            This implementation assures a specified number of threads and
            allow assigning specific tasks to specific threads.
            </para>
            <para>
            When a specific number of tasks has to synchronize at certain points, 
            the same specific number of threads is required running at the same time.
            </para>
            <para>
            If one task has to follow another in a number of parallel
            "pipelines", it is required to assign specific tasks to specific
            threads.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DomainThreadPool.#ctor(System.Int32)">
            <summary>
            Create a threadpool with the specified number of threads
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DomainThreadPool.Start">
            <summary>
            Start all threads. Can only be called once.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DomainThreadPool.Stop">
            <summary>
            Stop all threads. Threads cannot be started again.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DomainThreadPool.AssingTask(System.Int32,System.Action)">
            <summary>
            Assign task to thread, activate thread if it is waiting
            <para>
            You need to call <see cref="M:DHI.Mike1D.Generic.DomainThreadPool.Start"/> before any tasks
            will be processed.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.DomainThreadPool.ThreadSys">
            <summary>
            Helper class, containing one thread and a queue of tasks
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DomainThreadPool.ThreadSys.Start">
            <summary>
            Start thread
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DomainThreadPool.ThreadSys.Stop">
            <summary>
            Stop thread
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Graph.DepthFirstSearch">
            <summary>
            Class for performing a depth first search on a graph.
            <para>
            It returns a number of properties of the graph
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Graph.DepthFirstSearch.Status">
            <summary>
            Status of a vertex
            </summary>
        </member>
        <member name="E:DHI.Mike1D.Generic.Graph.DepthFirstSearch.DiscoveredEvent">
            <summary>
            Event fired when a vertex is discovered
            </summary>
        </member>
        <member name="E:DHI.Mike1D.Generic.Graph.DepthFirstSearch.FinishedEvent">
            <summary>
            Event fired when a vertex is finished
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.DepthFirstSearch.AllowCyclicGraph">
            <summary>
            Flag specifying whether cyclic graphs are allowed. Default is true.
            If set to false, and the graph is cyclic, an exception will be thrown
            during the search.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.DepthFirstSearch.NumberOfCycles">
            <summary>
            Returns the number of cycles identified in the graph.
            <para>
            The number of cycles equals the number of "back edges" in the graph.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.DepthFirstSearch.NumberOfSplitJoins">
            <summary>
            Returns the number of split-join cycles identified in the graph.
            <para>
            The number of split-join cycles equals the number of "forward edges" in the graph.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.DepthFirstSearch.NumberOfCrossTreeConnections">
            <summary>
            Returns the number of cross-tree connections, i.e. connections between different
            predecessor trees.
            <para>
            The number of cross tree connections equals the number of "cross edges" in the graph.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.DepthFirstSearch.NumberOfIndependentSubgraphs">
            <summary>
            Returns the number of independent subgraphs in the graph, i.e. graphs
            that does not connect to each other in any way
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.DepthFirstSearch.NumberOfPredecessorTrees">
            <summary>
            Returns the number predecessor trees in the predecessor forest, i.e.
            the number of -1's found in the <see cref="P:DHI.Mike1D.Generic.Graph.DepthFirstSearch.Predecessors"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.DepthFirstSearch.#ctor(DHI.Mike1D.Generic.Graph.IGraph)">
            <summary>
            Default constructor
            </summary>
            <param name="graph">Graph to perform depth first search on</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.DepthFirstSearch.Predecessors">
            <summary>
            Main output of the depth first search is the predecessor tree forest.
            <para>
            Each root vertex in a predecessor tree returns -1. The remaining vertices
            return the index of its predecessor in the tree, i.e. 
            <code>
            Predecessors[4] = 2
            </code>
            means that the index-4 vertex has the index-2 vertex as its predecessor.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.DepthFirstSearch.Discovered">
            <summary>
            An integer describing the step in the depth first search tree
            where each vertex was discovered.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.DepthFirstSearch.Finished">
            <summary>
            An integer describing the step in the depth first search tree
            where each vertex was finished.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.DepthFirstSearch.Start">
            <summary>
            Start performing the depth first search
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.DepthFirstSearch.VisitRecursive(System.Int32)">
            <summary>
            Version of the Visit method based on recursive calls, the "traditional" implementation
            It is here only for comparison and testing
            </summary>
            <param name="iu">Start vertex</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.DepthFirstSearch.VisitStack(System.Int32)">
            <summary>
            Version of the Visit method based on a stack instead of recursive calls
            </summary>
            <param name="root">Start vertex</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.Graph.DepthFirstSearch.VertexStackInfo">
            <summary>
            Helper class for the stack, to store each vertex, and keeps track
            of how many of the edges that have been processed
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Graph.DepthFirstSearch.VertexStackInfo.Vertex">
            <summary> Vertex </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Graph.DepthFirstSearch.VertexStackInfo.EdgeIndex">
            <summary> Index of next edge to process </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Graph.Dijkstra">
            <summary>
            Class for calculating distances from a vertex/node to any other vertex/node in the graph,
            using the Dijstra algorithm.
            <para>
            Before calling <see cref="M:DHI.Mike1D.Generic.Graph.Dijkstra.Start"/>, you must initialize the algorithm by calling either
            <see cref="M:DHI.Mike1D.Generic.Graph.Dijkstra.Initialize(System.Int32)"/>, or <see cref="M:DHI.Mike1D.Generic.Graph.Dijkstra.Initialize"/> followed by at least one
            call to <see cref="M:DHI.Mike1D.Generic.Graph.Dijkstra.SetSource(System.Int32,System.Double)"/>.
            </para>
            <para>
            The algorithm uses a binary heap as priority queue, hence the running time of 
            the Dijkstra algorithm is O((E+V)*log(V))
            </para>
            </summary>
            <example>  
            This sample shows how to use the Dijkstra class
            <code> 
              Dijkstra dijkstra = new Dijkstra(someGraph);
              // Set vertex number 6 (index 5) as source vertex
              dijkstra.Initialize(5);
              dijkstra.Start();
            </code> 
            </example>   
        </member>
        <member name="F:DHI.Mike1D.Generic.Graph.Dijkstra._distance">
            <summary> Indicating for each vertex the distance from the source.</summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Graph.Dijkstra._predecessor">
            <summary> Indicating for each vertex the predecessor on the path from the source to this vertex.</summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Graph.Dijkstra._predecessorSource">
            <summary> Indicating for each vertex the predecessor source.</summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Graph.Dijkstra._visited">
            <summary> Indicating for each vertex if the vertex has been visited. </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Graph.Dijkstra._queue">
            <summary> Priority queue of vertices to visit next. </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Graph.Dijkstra._queueNodes">
            <summary> Queue-nodes, used to update node in priority queue, when a new distance is found </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.Dijkstra.Stop">
            <summary>
            User defined stopping criteria. When node i has been visited
            (distance has been calculated for node), return true to stop.
            <para>
            If not set, distances to all vertices are calculated.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.Dijkstra.VisitEdge">
            <summary>
            User defined criteria of whether to visit edge.
            If returning false, this edge is disregarded.
            <para>
            If not set, all edges are considered.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.Dijkstra.UsePredecessorSource">
            <summary>
            Flag defining whether to calculate and store the <see cref="P:DHI.Mike1D.Generic.Graph.Dijkstra.PredecessorSource"/>
            <para>
            Must be set before calling <see cref="M:DHI.Mike1D.Generic.Graph.Dijkstra.Initialize"/>
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.Dijkstra.Distances">
            <summary>
            Distances to all vertices from source vertex. 
            <para>
            The value double.MaxValue indicates that the vertex
            can not be reached from the source vertices, or that the 
            algorithm has been manually stopped before reaching the vertix.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.Dijkstra.Predecessor">
            <summary>
            Predecessors index for each vertex it specifies the previous 
            vertex in the path from source to target.
            <para>
            The value -1 indicates that the vertex
            can not be reached from the source vertices, or that the 
            algorithm has been manually stopped before reaching the vertix,
            or the vertex is a source vertex.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.Dijkstra.PredecessorSource">
            <summary>
            Predecessor source index, for each vertex it specifies the predecessor
            source, i.e. which source this vertex has the shortest path from. 
            This is only relevant if more than one source is specified.
            <para>
            Enable by setting the <see cref="P:DHI.Mike1D.Generic.Graph.Dijkstra.UsePredecessorSource"/> flag. If the flag
            is not enabled, this array will be null.
            </para>
            <para>
            The value -1 indicates that the vertex
            can not be reached from the source vertices, or that the 
            algorithm has been manually stopped before reaching the vertix.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.Dijkstra.Visited">
            <summary>
            Array of visited vertices. 
            <para>
            When no stopping criteria is set (using the <see cref="P:DHI.Mike1D.Generic.Graph.Dijkstra.Stop"/> property), 
            the non-visited nodes are not reachable from the source nodes. 
            </para>
            <para>
            If a stopping criteria is set, only nodes with the visited flag set
            to true has a shortest distance correctly calculated.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.Dijkstra.#ctor(DHI.Mike1D.Generic.Graph.IGraph)">
            <summary>
            Constructor, providing the graph to use.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.Dijkstra.Initialize">
            <summary>
            Initialize algorithm. Must be called before the Dijkstra 
            algorithm is started
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.Dijkstra.Initialize(System.Int32)">
            <summary>
            Initialize algorithm. Must be called before the Dijkstra 
            algorithm is started.
            <para>
            Sets the <paramref name="sourceVertex"/> as the source for the distance calculations.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.Dijkstra.SetSource(System.Int32,System.Double)">
            <summary>
            Sets a vertex as a source for the calculations,
            providing its "distance" from the "original" source
            in case that does not exactly co-inside with the vertex.
            <para>
            It is allowed to set more than one source.
            </para>
            </summary>
            <param name="sourceVertex">Vertex to set as source</param>
            <param name="distance">Distance for source vertex</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.Dijkstra.Start">
            <summary>
            Start the algorithm
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.Dijkstra.SetStopTargetVertex(System.Int32)">
            <summary>
            Setup up stop criteria that stops the Dijstra algorithm
            when a target vertex has been reached (visited).
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.Dijkstra.SetStopMaxDistance(System.Double)">
            <summary>
            Setup stop criteria that stops the Dijstra algorithm
            when when distances exceed a provided distance.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Graph.Dijkstra.SmallestComparer">
            <summary>
            Helper class, making priority queue return nodes with smallest
            values first.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Graph.GraphExtensions">
            <summary>
            Extension methods related to a graph
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.GraphExtensions.Degree(DHI.Mike1D.Generic.Graph.IVertex)">
            <summary>
            Returns the degree of the vertex, i.e. the number of
            edges connected to this vertex
            </summary>
            <param name="vertex">Vertex to find degree for</param>
            <returns>Degree of vertex</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.Graph.Graph">
            <summary>
            Base implementation of the <see cref="T:DHI.Mike1D.Generic.Graph.IGraph"/> interface, using
            the <see cref="T:DHI.Mike1D.Generic.Graph.Vertex"/> class for all its vertices
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.Graph.#ctor">
            <summary>
            Create a new empty graph. 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.Graph.#ctor(System.Int32)">
            <summary>
            Create new graph with the specified number of vertices allocated. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.Graph.Vertices">
            <summary> Vertices in graph </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.Graph.AddVertex(DHI.Mike1D.Generic.Graph.Vertex)">
            <summary> Add vertex to graph, its index is the position in the list of vertices </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.Graph.AddEdge(DHI.Mike1D.Generic.Graph.Vertex,DHI.Mike1D.Generic.Graph.Vertex)">
            <summary> Add edge between from and to vertices</summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.Graph.AddEdge(System.Int32,System.Int32)">
            <summary> Add edge between two vertices in graph. Vertices must already be part of graph</summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.Graph.AddEdge(System.Int32,System.Int32,System.Double)">
            <summary> Add edge between two vertices in graph, with specified weight. Vertices must already be part of graph</summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.Graph.DHI#Mike1D#Generic#Graph#IGraph#Vertices">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.Graph.Vertex">
            <summary>
            Vertex/node in a graph
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.Vertex.Index">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.Vertex.Edges">
            <summary> List of edges connected to vertex </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.Vertex.DHI#Mike1D#Generic#Graph#IVertex#Edges">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.Vertex.AddEdgeTo(DHI.Mike1D.Generic.Graph.Vertex)">
            <summary> Add edge from this vertex to <paramref name="toVertex"/> </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.Vertex.AddEdgeTo(DHI.Mike1D.Generic.Graph.Vertex,System.Double)">
            <summary> Add edge from this vertex to <paramref name="toVertex"/> with provided <paramref name="weight"/></summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Graph.Edge">
            <summary>
            Edge in graph, from <see cref="P:DHI.Mike1D.Generic.Graph.Edge.StartVertex"/> to <see cref="P:DHI.Mike1D.Generic.Graph.Edge.EndVertex"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.Edge.#ctor(DHI.Mike1D.Generic.Graph.Vertex,DHI.Mike1D.Generic.Graph.Vertex)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.Edge.StartVertex">
            <summary> Start vertex in edge </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.Edge.EndVertex">
            <summary> End vertex in edge </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.Edge.DHI#Mike1D#Generic#Graph#IEdge#StartVertex">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.Edge.DHI#Mike1D#Generic#Graph#IEdge#EndVertex">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.Edge.Weight">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.Graph.GraphException">
            <summary>
            An exception specific to the graph algorithms
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.GraphException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the GraphException class with a specified error message.
            </summary>
            <param name="s">The message that describes the error.</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.Graph.IGraph">
            <summary>
            Interface for a generic graph.
            <para>
            The graph interfaces provide what the graph algorithms
            as a minimum requires in order to do their processing.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.IGraph.Vertices">
            <summary>
            Vertices/nodes in the graph
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Graph.IVertex">
            <summary>
            A vertex is a junction in the graph, often also called a node.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.IVertex.Index">
            <summary>
            Index of this vertex in the list of vertices in the graph.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.IVertex.Edges">
            <summary>
            Edges that are connected to this vertex.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Graph.IEdge">
            <summary>
            An edge connects two vertices. It can have a weight associated.
            <para>
            An edge is also sometimes called a link.
            </para>
            <para>
            The two vertices is specified by their index into the list of vertices in the graph.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.IEdge.StartVertex">
            <summary>
            Start vertex of edge
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.IEdge.EndVertex">
            <summary>
            End vertex of edge
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.IEdge.Weight">
            <summary>
            Weight of edge, can be length or others.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Graph.RCM">
            <summary>
            <para>
            Calculates a Reverse Cuthill-McKee ordering for a graph. This minimizes the bandwidth of 
            a (sparse) symmetric matrix representation of the graph.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.RCM.#ctor(DHI.Mike1D.Generic.Graph.IGraph)">
            <summary>
            Create an RCM class working with the provided graph.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.RCM.CalculateReordering">
            <summary>
            <para>
            Create a reordering index array. 
            </para>
            <para>
            The result array is intepreted like this: 
            R[j] = i means that the vertex on index i should be moved to index j
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.RCM.SortEdgesOfVertexByDegree(DHI.Mike1D.Generic.Graph.IVertex)">
            <summary>
            Make a copy of the list of edges for the vertex, and sort them
            by degree of the adjacent vertex
            </summary>
            <param name="vertex"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.RCM.FindSmallestDegreeVertex">
            <summary>
            Find the vertex with the smallest degree that has not yet been processed. 
            If several exists, picks the first of them.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Graph.TopologicalSort">
            <summary>
            Class performing a topological sort of a directed acyclic graph.
            <para>
            A topological sort is a linear ordering of the vertices such that if the 
            graph contains and edge from u to v (v "depends on" u), then u appears 
            before v in the ordering.
            </para>
            <para>
            If the graph is cyclic, the sort procedure fails with an
            <see cref="T:DHI.Mike1D.Generic.Graph.GraphException"/>.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.TopologicalSort.#ctor(DHI.Mike1D.Generic.Graph.IGraph)">
            <summary>
            Create a new Topological sort class performing
            its sort on the provided graph
            </summary>
            <param name="graph">Graph to sort</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.TopologicalSort.Order">
            <summary>
            Vertices sorted in topological order. The vector contains
            vertex indices.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.TopologicalSort.NumberOfCycles">
            <summary>
            Returns the number of cycles identified in the graph.
            <para>
            NumberOfCycles > 0 means that topological sort failed.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Graph.TopologicalSort.FirstCircularReferenceVertex">
            <summary>
            First vertex which was found to have a circular reference.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.TopologicalSort.Sort">
            <summary>
            Perform the topological sort.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Graph.TopologicalSort.Finished(System.Int32)">
            <summary>
            This method is called whenever a vertex is "finished".
            </summary>
            <param name="vertexIndex"></param>
        </member>
        <member name="T:DHI.Mike1D.Generic.HotstartInfo">
            <summary>
            Structure to store hostart information.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.HotstartInfo.#ctor(DHI.Mike1D.Generic.IFilePath)">
            <summary>
            Create new HotstartInfo based on the filename
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.HotstartInfo.#ctor(DHI.Mike1D.Generic.IFilePath,System.DateTime)">
            <summary>
            Create new HotstartInfo based on the filename and time to look up in the hotstart file
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.HotstartInfo.Connection">
            <summary>
            Connection info of file to load hotstart from
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.HotstartInfo.FileName">
            <summary>
            Name of file to load hotstart from, short of <code>Connection.FileName</code>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.HotstartInfo.Time">
            <summary>
            Time to use when extracting hotstart values from hotstart file.
            Set to <see cref="F:System.DateTime.MinValue"/>, if hotstart time should equal simulation start time.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.HyperThreadingTester">
            <summary>
            Class to test if system has Hyper-Threading enabled.
            <para>
            A polynomial function is evaluated a number of times 
            in parallel, and timed using various number of threads.
            From those timings, it is evaluated whether hyper-threading 
            is enabled or not
            </para>
            <para>
            This will only return a correct value if the system being
            evaluated is mostly idle. If the system is stressed, 
            this may give incorrect results.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.HyperThreadingTester.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.HyperThreadingTester.NumberOfEvals">
            <summary>
            Number of evaluations of a polynomial function.
            <para>
            Default is 1000000
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.HyperThreadingTester.NumberOfRepetitions">
            <summary>
            Number of times to repeat timing
            <para>
            Default is 3
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.HyperThreadingTester.Evaluate">
            <summary>
            Evaluate whether Hyper Threading is enabled.
            </summary>
            <returns>True if hyper-threading is assumed to be enabled.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.HyperThreadingTester.Evaluate(System.Double@)">
            <summary>
            Evaluate whether Hyper Threading is enabled.
            </summary>
            <param name="htSpeedup">Speedup factor from half number of threads to all threads</param>
            <returns>True if hyper-threading is assumed to be enabled.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.HyperThreadingTester.TimeAll">
            <summary>
            Give timings (in seconds) for all number of threads from 1 to Environment.ProcessorCount
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IAnyTable">
            <summary>
            An any-table can have any dimension and any type of data, 
            it is a common container for a set of various table types.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.XYSeriesExtensions">
            <summary>
            Static extension methods for the <see cref="T:DHI.Mike1D.Generic.IAnyTable"/>
            and <see cref="T:DHI.Mike1D.Generic.XYTable"/> classes.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYSeriesExtensions.YFromX(DHI.Mike1D.Generic.XYTable,System.Double)">
            <summary>
            Interpolates/extrapolates width using linear interpolation
            </summary>
            <param name="table">Data series</param>
            <param name="x">the lookup variable</param>
            <returns>the interpolated value</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYSeriesExtensions.YFromX(DHI.Mike1D.Generic.XYGenericTable{System.Double,System.Double},System.Double,DHI.Mike1D.Generic.ExtrapolationTypes)">
            <summary>
            Interpolates/extrapolates width using linear interpolation
            </summary>
            <param name="table">Data series</param>
            <param name="x">the lookup variable</param>
            <param name="extrapolationType"></param>
            <returns>the interpolated value</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.XYGenericTable`2">
            <summary>
            A series of XY data, stored in two arrays.
            <para>
            Compared to the <see cref="T:DHI.Mike1D.Generic.IXYTable"/> interface and classes, the
            <see cref="T:DHI.Mike1D.Generic.IAnyTable"/> are capable of storing other values than doubles.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYGenericTable`2.#ctor(System.Int32)">
            <summary>
            Constructor, creating arrays of specified size
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYGenericTable`2.#ctor(`0[],`1[])">
            <summary>
            Constructor, using specified arrays
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYGenericTable`2.XValues">
            <summary>
             Get x values
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYGenericTable`2.YValues">
            <summary>
             Get y values
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.DateTimeYTable">
            <summary>
            Version of <see cref="T:DHI.Mike1D.Generic.XYGenericTable`2"/> containing DateTimes and doubles
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DateTimeYTable.#ctor(System.Int32)">
            <summary>
            Constructor, creating arrays of specified size
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DateTimeYTable.#ctor(System.DateTime[],System.Double[])">
            <summary>
            Constructor, using specified arrays
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.DateTimeTable2D">
            <summary>
            2D table with DateTime as the type of values in the first axis.
            <para>
            If setting the <see cref="P:DHI.Mike1D.Generic.DateTimeTable2D.YearlyVariation"/>, then all dates within the
            first year in the <see cref="P:DHI.Mike1D.Generic.DateTimeTable2D.XAxis"/> is assumed to be cyclicly repeating.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DateTimeTable2D.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor, creating arrays of specified size
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DateTimeTable2D.__tableValues">
            <summary>
            A 2D array are not supported by the datacontract serializer, so it is wrapper here.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DateTimeTable2D.XAxis">
            <summary> X-axis values </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DateTimeTable2D.YAxis">
            <summary> Y-axis values </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DateTimeTable2D.TableValues">
            <summary> Table-values </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DateTimeTable2D.YearlyVariation">
            <summary>
            Bool indicating if table contains circular values, as yearly variation values.
            In this case all DateTime values in <see cref="P:DHI.Mike1D.Generic.DateTimeTable2D.XAxis"/>
            must be in the same year. DateTime values, which are not
            in the same year as the first item in the list, are discarded.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DateTimeTable2D.Prepare">
            <summary>
            Prepare table for lookup. 
            <para>
            When <see cref="P:DHI.Mike1D.Generic.DateTimeTable2D.YearlyVariation"/> is set, the
            date-time axis is processed for circular lookup.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.DateTimeTable2D.Array2DFlattener">
            <summary>
            Helper class for serializing 2D arrays of doubles
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DateTimeTable2D.Array2DFlattener.FromArray2D(DHI.Mike1D.Generic.DateTimeTable2D.Array2DFlattener)">
            <summary>
            Create 2D array from helper class.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DateTimeTable2D.Array2DFlattener.ToArray2D(System.Double[0:,0:])">
            <summary>
            Create helper class from 2D array.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DateTimeTable2D.Lookup(System.DateTime,System.Double)">
            <summary>
            Lookup data in table for given date and y-value
            </summary>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.ActionControl0">
            <summary>
            Method signature for a control that does not take any values
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ActionControl">
            <summary>
            Method signature for a control that takes one value
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ActionControl2">
            <summary>
            Method signature for a control that takes two values
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ActionControlActivate">
            <summary>
            Method signature for a control that does not take any values
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ActionControlSet">
            <summary>
            Method signature for a control that takes one value
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ActionControlSet2">
            <summary>
            Method signature for a control that takes two values
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IControllable">
            <summary>
            If an entity implements the IControllable interface it can be controlled by
            the ControlModule.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IControllable.GetControlAction(System.String)">
            <summary>
            Get control action for the specified id. It always returns one of
            the ActionControl delegates. It will return null if 
            controlActionId is not valid.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IControllable.GetCurrentValue(System.String)">
            <summary>
            Get the current value of the control for the specified id.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IControllable.ResetControlledState">
            <summary>
            Reset internal state (if any) used by controlling class.
            Called after a controlling class has performed a control sequence,
            and simulation is restarted.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IControllable.SetControlStrategyId(System.Int32)">
            <summary>
            Set control strategy id manually
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.INetworkNode">
            <summary> A generic network node. </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkNode.ID">
            <summary> Node ID </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.INetworkGridPoint">
            <summary> A generic network grid point. </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkGridPoint.Chainage">
            <summary>
            Chainage of the gridpoint
            Unit: [m]
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.INetworkHGridPoint">
            <summary> A generic network H grid point. </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.INetworkQGridPoint">
            <summary> A generic network Q grid point. </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.INetworkReach">
            <summary> A generic network reach. </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkReach.GridPoints">
            <summary> List of gridpoints within reach, in order from start to end of reach.  </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkReach.LocationSpan">
            <summary> Location span that covers this reach. </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.INetworkCatchment">
            <summary> A generic network catchment. </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkCatchment.ID">
            <summary> Catchment ID. </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.UnitSystem">
            <summary>
            Unit systems available in the MIKE 1D system
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.UnitSystem.NoConversion">
            <summary> Do not apply any unit conversions, but read/write data directly from/to storage</summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.UnitSystem.Automatic">
            <summary> Determine unit system automatically.
            <para>
            Use this e.g. when loading a result data object from storage
            and you want to use the unit system value stored with
            the result data (the unit system of the simulation)
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.UnitSystem.Default">
            <summary> Default unit system, mostly SI units </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.UnitSystem.User">
            <summary> User defined unit system. If no user unit is provided for a quantity, the default is being used. </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.UnitSystem.UBG">
            <summary> UBG unit system (Unit Base Group). This is using the <see cref="M:DHI.Mike1D.Generic.UserUnitDefaults.GetUBGUnitProvider"/> </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.UnitSystem.US">
            <summary> US unit system. This is using the <see cref="M:DHI.Mike1D.Generic.UserUnitDefaults.GetUSUnitProvider"/> </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IUnitProvider">
            <summary>
             An IUserUnitProvider is used by DiagnosticsValue to convert values into user units.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IUnitProvider.GetUserUnit(DHI.Generic.MikeZero.eumItem)">
            <summary>
            Return user unit for EUM item type
            </summary>
            <param name="item">EUM item type of quantity.</param>
            <returns>User unit, <see cref="F:DHI.Generic.MikeZero.eumUnit.eumUUnitUndefined"/> if not found.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IUnitProvider.GetUserUnit(System.String,DHI.Generic.MikeZero.eumItem)">
            <summary>
            Return user unit
            </summary>
            <param name="quantityId">Id of quantity</param>
            <param name="item">EUM item type of quantity. Set to <see cref="F:DHI.Generic.MikeZero.eumItem.eumIItemUndefined"/> to disregard item type</param>
            <returns>User unit, <see cref="F:DHI.Generic.MikeZero.eumUnit.eumUUnitUndefined"/> if not found.</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.UserUnitInfo">
            <summary>
            Information on a user unit
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.UserUnitInfo.Id">
            <summary> Id of quantity. If null, only <see cref="F:DHI.Mike1D.Generic.UserUnitInfo.eumItem"/> is being matched.</summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.UserUnitInfo.eumItem">
            <summary> EUM item type of quantity</summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.UserUnitInfo.UserUnit">
            <summary> User specified unit of quantity </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.UserUnitInfo.#ctor(System.String,DHI.Generic.MikeZero.eumItem,DHI.Generic.MikeZero.eumUnit)">
            <summary> Default constructor </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.UBGUnitProvider">
            <summary>
            UBG unit provider. Uses the EUM Unit Base Group (UBG) system
            to determine a unit for a given item.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.UBGUnitProvider.GetUserUnit(DHI.Generic.MikeZero.eumItem)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.Generic.UBGUnitProvider.GetUserUnit(System.String,DHI.Generic.MikeZero.eumItem)">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Mike1D.Generic.UserUnitProvider">
            <summary>
            A <see cref="T:DHI.Mike1D.Generic.IUnitProvider"/> based on a specified set
            of unit definitions.
            <para>
            If a quantity ID is not provided when adding a user units,
            it will match on the <see cref="T:DHI.Generic.MikeZero.eumItem"/> value only.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.UserUnitProvider.UnitSearchType">
            <summary>
            Type of string search to apply:
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.UserUnitProvider.UnitSearchType.StartsWith">
            <summary> Quantity Id starts with this string </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.UserUnitProvider.UnitSearchType.EndsWith">
            <summary> Quantity Id ends with this string </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.UserUnitProvider.UnitSearchType.Regex">
            <summary> Use regular expression for matching quantity Id </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.UserUnitProvider.Add(DHI.Generic.MikeZero.eumItem,DHI.Generic.MikeZero.eumUnit)">
            <summary>
            Add user unit to unit provider, based on <see cref="T:DHI.Generic.MikeZero.eumItem"/> type
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.UserUnitProvider.Add(System.String,DHI.Generic.MikeZero.eumItem,DHI.Generic.MikeZero.eumUnit)">
            <summary>
            Add user unit to unit provider, based on Id of quantity
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.UserUnitProvider.Add(DHI.Mike1D.Generic.UserUnitInfo)">
            <summary>
            Add user unit to unit provider
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.UserUnitProvider.Update(DHI.Mike1D.Generic.UserUnitInfo)">
            <summary>
            Update existing unit.
            </summary>
            <returns>True if unit was updated. False if not found.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.UserUnitProvider.Add(DHI.Mike1D.Generic.UserUnitProvider.UnitSearchType,DHI.Mike1D.Generic.UserUnitInfo)">
            <summary>
            Add user unit to unit provider, with the given search type
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.UserUnitProvider.GetUserUnit(DHI.Generic.MikeZero.eumItem)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.Generic.UserUnitProvider.GetUserUnit(System.String,DHI.Generic.MikeZero.eumItem)">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Mike1D.Generic.UserUnitDefaults">
            <summary>
            Static class, containing units for various quantities, both SI and US
            <para>
            A quantity is identified by its id and EUM item type. It is possible to
            match quantity id's in three ways:
            1) Exact match (case insensitive)
            2) Id starts with: string starts with a *: "*myid"
            3) Id ends with  : string ends with a *: "myid*"
            4) Id is matching a regular expression: string is inside [] "[regexMatch]"
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.UserUnitDefaults.SIUnits">
            <summary>
            Currently active SI unit definitions
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.UserUnitDefaults.USUnits">
            <summary>
            Currently active US unit definitions
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.UserUnitDefaults.GetUBGUnitProvider">
            <summary>
            Get UBG unit provider
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.UserUnitDefaults.GetUSUnitProvider">
            <summary>
            Get default US unit provider
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.UserUnitDefaults.GetSIUnitProvider">
            <summary>
            Get default SI unit provider
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.LocationRelativeType">
            <summary>
            Type of relative location.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.LocationRelativeType.CenterOfFirstHSpan">
            <summary>
            Location of this element is relative to the two first upstream HGridPoints
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.LocationRelativeType.FirstHGridPoint">
            <summary>
            Location of this element is at the upstream HGridPoint
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.LocationRelative">
            <summary>
            A location that is relative, i.e. the exact chainage is not known.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.LocationRelative.LocationRelativeType">
            <summary>
            Where the location is.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationRelative.CompareTo(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationRelative.Clone">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationRelative.Equals(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.
                            </param>
        </member>
        <member name="P:DHI.Mike1D.Generic.LocationRelative.ID">
            <summary>
            Identification name
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.LocationRelative._id">
            <summary>
            ID of location
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationRelative.#ctor(System.String,DHI.Mike1D.Generic.LocationRelativeType)">
            <summary>
            Create a new relative location.
            </summary>
            <param name="id"></param>
            <param name="locationRelativeType"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.LocationRelative.Chainage">
            <summary>
            Chainage.
            Unit: [m]
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationRelative.FromString(System.String)">
            <summary>
            This method is made to get back from a Location.ToString(). It is therefor very important that any
            changes in ToString are reflected in this method. 
            </summary>
            <param name="locationString"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationRelative.ToStringInUserUnits">
            <summary>
            Returns a textual representation of the Location in user units
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationRelative.IDEquals(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Check if the ID equals the others ID
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationRelative.IDCompareTo(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Compare the ID with the others ID.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.LocationSpanMap`1">
            <summary>
            Helper class for fast searcing for objects defined in location spans
            or by reach id's.
            <para>
            If storing a large amount of data in each span, consider instead one of the <see cref="T:DHI.Mike1D.Generic.NetworkData`1"/>
            classes. This class is a light-weight version of the <see cref="T:DHI.Mike1D.Generic.NetworkData`1"/> implementation.
            </para>
            <para>
            It does fast lookup in a dictionary of span-id's, containing a list of spans for each id, 
            i.e. for a given span-id it does linear searching in the chainages.
            </para>
            <para>
            It can work for as well location-spans as reach-id's (covering an entire span), 
            though it does not support location-span with id matching a reach-id (undefined behavior).
            </para>
            </summary>
            <typeparam name="T">Data stored in location span</typeparam>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpanMap`1.Add(DHI.Mike1D.Generic.ILocationSpan,`0)">
            <summary>
            Add to map
            </summary>
            <param name="span">Span that data belongs to</param>
            <param name="data">Data</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpanMap`1.Add(System.String,`0)">
            <summary>
            Add to map
            </summary>
            <param name="reachId">Reach that data belongs to</param>
            <param name="data">Data</param>
            <returns>true if added, false if data already exists for this span</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpanMap`1.Find(System.String)">
            <summary>
            Find data based on the provided reach id. 
            If more than span exist with the same reachId, the first found is returned.
            </summary>
            <param name="reachId">Id of reach/span</param>
            <returns>Data, null if not found</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpanMap`1.Find(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Find data based on the provided location. 
            <para>
            It will first search without chainage tolerance, and if none found, 
            search using tolerance of <see cref="F:DHI.Mike1D.Generic.Constants.LOCATION_EQUAL_TOLERANCE"/>.
            </para>
            </summary>
            <param name="location">Location to find</param>
            <returns>Data, null if not found</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpanMap`1.Find(DHI.Mike1D.Generic.ILocation,System.Double)">
            <summary>
            Find data based on the provided location. 
            </summary>
            <param name="location">Location to find</param>
            <param name="tolerance">Tolerance accepted by the chainage when searching</param>
            <returns>Data, null if not found</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpanMap`1.FindAll(System.String)">
            <summary>
            Find data based on the provided location. 
            </summary>
            <param name="locationID">Id of location to find</param>
            <returns>Data, null if not found</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.Pair`2">
            <summary>
            Pair of key and value of generic type.
            </summary>
            <remarks>
            Implemented especially to replace the .NET KeyValuePair,
            for ease of access and better xml output.
            </remarks>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:DHI.Mike1D.Generic.Pair`2.#ctor(`0,`1)">
            <summary>
            Constructor with values.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Pair`2.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Pair`2.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Pair">
            <summary>
            Static methods for the <see cref="T:DHI.Mike1D.Generic.Pair`2"/> struct
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Pair.DictionaryToArray``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Copy dictionary data to array of key-value pairs
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Pair.DictionaryToKVArray``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Copy dictionary data to array of key-value pairs
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Pair.DictionaryFromArray``2(System.Collections.Generic.IDictionary{``0,``1},DHI.Mike1D.Generic.Pair{``0,``1}[])">
            <summary>
            Populate (empty) dictionary with values from array of key-value pairs.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Pair.DictionaryFromKVArray``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.KeyValuePair{``0,``1}[])">
            <summary>
            Populate (empty) dictionary with values from array of key-value pairs.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Pair.DictionaryFromArray``2(DHI.Mike1D.Generic.Pair{``0,``1}[])">
            <summary>
            Create dictionary with values from array of key-value pairs.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Pair.DictionaryFromArray``2(DHI.Mike1D.Generic.Pair{``0,``1}[],System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Create dictionary with values from array of key-value pairs.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Pair.DictionaryFromKVArray``2(System.Collections.Generic.KeyValuePair{``0,``1}[],System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Create dictionary with values from array of key-value pairs.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ComponentResultType">
            <summary>
            Enumeration specifying AD or ST component result type.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ComponentResultType.RainfallRunoff">
            <summary> Rainfall runoff results. </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ComponentResultType.CatchmentDischarge">
            <summary> Catchment discharge results. </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.PredefinedQuantityAD">
            <summary>
            Enumeration of predefined quantities for AD components.
            </summary>
            <remarks>
            Remember to add an entry to the <see cref="T:DHI.Mike1D.Generic.PredefinedQuantityTableADComponent"/> whenever
            a new <see cref="T:DHI.Mike1D.Generic.PredefinedQuantityAD"/> is created.
            </remarks>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.Undefined">
             <summary>
            
             </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.Concentration">
            <summary>
            Concentration of AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.Transport">
            <summary>
            Mass transport of AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.TransportSpill">
            <summary>
            Mass transport spill of AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.TransportInfiltration">
            <summary>
            Mass transport infiltration of AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.TransportAccumulated">
            <summary>
            Accumulated mass transport of AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.TransportTotalMassChange">
            <summary>
            Total mass change rate
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.TransportTotalSources">
            <summary>
            Total mass change rate from sources
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.TransportTotalSinks">
            <summary>
            Total mass change rate from sinks
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.TransportTotalBoundaryInflow">
            <summary>
            Total mass change rate from boundary inflow
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.TransportTotalBoundaryOutflow">
            <summary>
            Total mass change rate from boundary outflow
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.Mass">
            <summary>
            Mass of AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassTotal">
            <summary>
            Total mass of AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassTotalSources">
            <summary>
            Total mass of AD component from sources
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassTotalSinks">
            <summary>
            Total mass of AD component to sinks
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassTotalBoundaryInflow">
            <summary>
            Total mass of AD component from boundary inflow
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassTotalBoundaryOutflow">
            <summary>
            Total mass of AD component to boundary outflow
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassRouted">
            <summary>
            Routed mass in SWQ simulation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassRoutedAccumulated">
            <summary>
            Total routed mass in SWQ simulation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassOnCatchment">
            <summary>
            Mass of pollutant on catchment in SWQ simulation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassError">
            <summary>
            Mass error in the simulation for AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassErrorTotal">
            <summary>
            Total mass error in the simulation for AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassErrorAccumulated">
            <summary>
            Accumulated mass error in the simulation for AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassErrorAbsAccumulated">
            <summary>
            Modulus accumulated mass error in the simulation for AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassErrorTotalAccumulated">
            <summary>
            Total accumulated mass error in the simulation for AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassErrorTotalAbsAccumulated">
            <summary>
            Total modulus accumulated mass error in the simulation for AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassErrorChecksum">
            <summary>
            Mass error checksum for AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassErrorTotalChecksum">
            <summary>
            Total mass error checksum for AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassErrorAccumulatedChecksum">
            <summary>
            Accumulated mass error checksum for AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassErrorAbsAccumulatedChecksum">
            <summary>
            Modulus accumulated mass error checksum for AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.MassErrorTotalAbsAccumulatedChecksum">
            <summary>
            Total modulus accumulated mass error checksum for AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.Decay">
            <summary>
            First order decay of AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.DecayTotal">
            <summary>
            Total first order decay of AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.DecayAccumulated">
            <summary>
            Accumulated first order decay of AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.DecayTotalAccumulated">
            <summary>
            Total accumulated first order decay of AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.CatchmentDischargeTransport">
            <summary>
            Catchment discharge mass load
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.Load">
            <summary>
            Load in rainfall runoff or catchment discharge
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityAD.LoadFraction">
            <summary>
            Fraction of load in AD pollutant (RR or CD)
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.PredefinedQuantityTableADComponent">
            <summary>
            Dictionary from <see cref="T:DHI.Mike1D.Generic.PredefinedQuantityAD"/> to PredefinedQuantityProperties used by ADQuantities.Create()
            to create various Quantities for AD components.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PredefinedQuantityTableADComponent.#ctor">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.PredefinedQuantityProperties">
            <summary>
            Properties for PredefinedQuantity.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.PredefinedQuantityProperties.Extra">
            <summary> Extra string added to the end of the quantity id and description </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.PredefinedQuantityProperties.Method">
            <summary> Static method delegate to create a quantity </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PredefinedQuantityProperties.#ctor(System.String,System.Func{DHI.Mike1D.Generic.IQuantity,System.String,DHI.Mike1D.Generic.IQuantity})">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.PredefinedQuantityDataAD">
            <summary>
            Static class containing the <see cref="T:DHI.Mike1D.Generic.PredefinedQuantityTableADComponent"/>.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PredefinedQuantityDataAD.Init">
            <summary>
            Force initialization
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityDataAD.TableComponents">
            <summary>
            Instance of <see cref="T:DHI.Mike1D.Generic.PredefinedQuantityTableADComponent"/>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ExtraForQuantities">
            <summary>
            Provides methods for creating IDs and Description of quantities with extra string.
            For example, for extra = "Checksum, Total, test" we get the following strings:
              ExtraForId = "ChecksumTotalTest"
              ExtraForDescription = ", Checksum, Total, test"
            In ExtraForId we capitalize every word and remove the commas and the spaces.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ExtraForQuantities.ExtraForId">
            <summary> Extra for ID </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ExtraForQuantities.ExtraForDescription">
            <summary> Extra for Description </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ExtraForQuantities.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.ExtraForQuantities.ModifyExtraForId(System.String)">
            <summary>
            Provides converted extra for Id.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ExtraForQuantities.ModifyExtraForDescription(System.String)">
            <summary>
            Provides converted extra for description.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ADQuantities">
            <summary>
            Provides methods for creating AD quantities.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.Create(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.PredefinedQuantityAD)">
            <summary>
            Returns an AD quantity from predefined quantity for a given component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.Create(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.PredefinedQuantityAD,DHI.Mike1D.Generic.ComponentResultType)">
            <summary>
            Returns an AD quantity from predefined quantity and component result type for a given component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.Create(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.ComponentResultType)">
            <summary>
            Returns a derived quantity for a given component result type.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.Create(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns an AD quantity with extra string added for a given component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.Concentration(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns concentration quantity
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.Load(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns load quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.LoadFraction(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns load fraction quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.FaceTransport(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns face transport quantity for a given component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.FaceTransportUnit">
            <summary>
            Returns face transport quantity for a given component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.FaceTransportAccumulated(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns face transport accumulated (mass) quantity for a given component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.FaceTransportAccumulatedUnit">
            <summary>
            Returns face transport accumulated (mass) quantity for a given component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.MassQuantity(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns mass quantity for a given component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.MassQuantityUnit">
            <summary>
            Returns mass quantity for a given component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.MassErrorQuantity(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns mass quantity for a given component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.MassErrorQuantityUnit">
            <summary>
            Returns mass quantity for a given component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.MassPerTimeQuantity(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Create a mass-per-time quantity from the component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.MassPerTimeQuantityUnit">
            <summary>
            Create a mass-per-time quantity from the component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.DecayQuantity(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns decay quantity for a given component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.DecayQuantityUnit">
            <summary>
            Returns decay quantity for a given component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.DecayAccQuantity(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns decay accumulated quantity for a given component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.DecayAccQuantityUnit">
            <summary>
            Returns decay quantity for a given component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ADQuantities.CatchmentDischargeTransport(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns catchment discharge transport quantity for a given component quantity.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.PredefinedQuantityST">
            <summary>
            Enumeration of predefined quantities for ST components.
            </summary>
            <remarks>
            Remember to add an entry to the
            <see cref="T:DHI.Mike1D.Generic.PredefinedQuantityTableST"/> or
            <see cref="T:DHI.Mike1D.Generic.PredefinedQuantityTableSTComponent"/> whenever
            a new <see cref="T:DHI.Mike1D.Generic.PredefinedQuantityST"/> is created.
            </remarks>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.Undefined">
             <summary>
            
             </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.BedLoad">
            <summary>
            Bed load transport
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.SuspendedLoad">
            <summary>
            Suspended face transport
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.Transport">
            <summary>
            Sediment transport
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.TransportAccumulated">
            <summary>
            Accumulated sediment transport
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.ActiveLayerFraction">
            <summary>
            Active layer fraction
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.PassiveLayerFraction">
            <summary>
            Passive layer fraction
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.MassError">
            <summary>
            Mass error in the simulation for ST component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.FractionalConcentration">
            <summary>
            Suspended concentration
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.FractionalTotalLayerThickness">
            <summary>
            Total layer thickness for non-cohesive fractions
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.FractionalActiveLayerThickness">
            <summary>
            Active layer thickness for non-cohesive fractions
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.FractionalPassiveLayerThickness">
            <summary>
            Passive layer thickness for non-cohesive fractions
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.FractionalTotalLayerMass">
            <summary>
            Total layer mass for non-cohesive fractions
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.FractionalActiveLayerMass">
            <summary>
            Active layer mass for non-cohesive fractions
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.FractionalPassiveLayerMass">
            <summary>
            Passive layer mass for non-cohesive fractions
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.FractionalSurfaceDistribution">
            <summary>
            Surface distribution for non-cohesive fractions
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.MassOnCatchment">
            <summary>
            Mass of sediment fraction on catchment (per fraction)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.MassTransport">
            <summary>
            Total sediment mass transport (per fraction)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.MassTransportAccumulated">
            <summary>
            Total routed mass of sediment fraction in SWQ simulation (per fraction)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.BedLevel">
            <summary>
            Bed shear stress
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.BedLevelChange">
            <summary>
            Bed level change since simulation start
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.GeometricMeanDiameter">
            <summary>
            Geometric mean diameter
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.SkinFriction">
            <summary>
            Skin friction
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.BedShearStress">
            <summary>
            Dimensionless bed shear stress
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.DimensionlessBedShearStress">
            <summary>
            Dimensionless bed shear stress
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.d50">
            <summary>
            Grain size d50
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.d90">
            <summary>
            Grain size d90
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.SedimentVolumeChange">
            <summary>
            Sediment volume change
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.ActiveLayerThickness">
            <summary>
            Active layer thickness
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.BedLoadTotal">
            <summary>
            Bed load transport (integrated over fractions)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.SuspendedLoadTotal">
            <summary>
            Suspended face transport (integrated over fractions)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.TransportTotal">
            <summary>
            Total sediment transport (integrated over fractions)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.TransportAccumulatedTotal">
            <summary>
            Total accumulated sediment transport (integrated over fractions)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.ConcentrationTotal">
            <summary>
            Concentration of all components
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.LayerThicknessTotal">
            <summary>
            Total layer thickness
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.ActiveLayerThicknessTotal">
            <summary>
            Total active layer thickness
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.PassiveLayerThicknessTotal">
            <summary>
            Total passive layer thickness
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.MassOnCatchmentTotal">
            <summary>
            Mass of all sediment fractions on catchment (integrated over fractions)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.MassTransportTotal">
            <summary>
            Total sediment mass transport (integrated over fractions)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityST.MassTransportAccumulatedTotal">
            <summary>
            Total routed mass of sediments in SWQ simulation (integrated over fractions)
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.PredefinedQuantityTableSTComponent">
            <summary>
            Dictionary from <see cref="T:DHI.Mike1D.Generic.PredefinedQuantityST"/> to PredefinedQuantityProperties used by STQuantities.Create()
            to create various ST component id dependent Quantities.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PredefinedQuantityTableSTComponent.#ctor">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.PredefinedQuantityTableST">
            <summary>
            Dictionary from PredefinedQuantityST to ST component id independent Quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PredefinedQuantityTableST.#ctor">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.STPredefinedQuantityData">
            <summary>
            Static class containing the <see cref="T:DHI.Mike1D.Generic.PredefinedQuantityTableST"/>.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.STPredefinedQuantityData.TableComponents">
            <summary>
            Instance of <see cref="T:DHI.Mike1D.Generic.PredefinedQuantityTableSTComponent"/>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.STPredefinedQuantityData.Table">
            <summary>
            Instance of <see cref="T:DHI.Mike1D.Generic.PredefinedQuantityTableST"/>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.STQuantities">
            <summary>
            Provides methods for creating ST quantities.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.Create(DHI.Mike1D.Generic.PredefinedQuantityST)">
            <summary>
            Returns an ST quantity from predefined quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.Create(DHI.Mike1D.Generic.PredefinedQuantityST,DHI.Mike1D.Generic.ComponentResultType)">
            <summary>
            Returns an ST quantity from predefined quantity and component result type.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.Create(System.String,DHI.Mike1D.Generic.PredefinedQuantityST)">
            <summary>
            Returns an ST quantity from predefined quantity for a given component quantity id.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.Create(System.String,DHI.Mike1D.Generic.PredefinedQuantityST,DHI.Mike1D.Generic.ComponentResultType)">
            <summary>
            Returns an ST quantity from predefined quantity for a given component quantity id and component result type.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.Create(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.PredefinedQuantityST)">
            <summary>
            Returns an ST quantity from predefined quantity for a given component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.Create(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.PredefinedQuantityST,DHI.Mike1D.Generic.ComponentResultType)">
            <summary>
            Returns an ST quantity from predefined quantity and component result type for a given component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.BedLoad(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns bed load transport quantity for a given ST component quantity, in [m3/s]
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.SuspLoad(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns suspended face transport quantity for a given component in [m3/s].
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.TotalLoad(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns face transport quantity for a given ST component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.TotalLoadAccumulated(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns accumulated transport quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.ActiveLayerFraction(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns active layer fraction quantity for a given ST component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.PassiveLayerFraction(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns passive layer fraction quantity for a given ST component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.MassError(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns mass error quantity for a given ST component quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.FractionalConcentration(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns suspended concentration quantity for fraction, in unit [g/m3]
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.FractionalTotalLayerThickness(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns total layer thickness per NonCohesive fractions
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.FractionalActiveLayerThickness(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns active layer thickness per NonCohesive fractions
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.FractionalPassiveLayerThickness(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns passive layer thickness per NonCohesive fractions
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.FractionalTotalLayerMass(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns total layer mass per NonCohesive fractions
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.FractionalActiveLayerMass(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns active layer mass per NonCohesive fractions
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.FractionalPassiveLayerMass(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns passive layer mass per NonCohesive fractions
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.FractionalSurfaceDistribution(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns surface distribution per NonCohesive fractions
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.MassOnCatchment(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns mass of sediment fraction on catchment (per fraction)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.MassTransport(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns total sediment mass transport (per fraction)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.STQuantities.MassTransportAccumulated(DHI.Mike1D.Generic.IQuantity,System.String)">
            <summary>
            Returns total routed mass of sediment fraction in SWQ simulation (per fraction)
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.PriorityQueue`2">
            <summary>
            A priority queue. It will return the value with the hightest priority/key first.
            Multiple occurences of the same priority/key is allowed.
            <para>
            You can update the priority of an element in the priority queue, thereby reposition it in 
            the queue. Save the <see cref="T:DHI.Mike1D.Generic.PriorityQueue`2.Node"/> returned by <see cref="M:DHI.Mike1D.Generic.PriorityQueue`2.Enqueue(`0,`1)"/>, and updated the value 
            by setting the <see cref="P:DHI.Mike1D.Generic.PriorityQueue`2.Node.Key"/>.
            </para>
            <remarks>
            It is based on a balanced heap data structure (a list handled as a tree structure).
            <para>
            In cases where priority value equals, it does first-in-first-out.
            </para>
            <para>
            Performance: It has O(log(n)) enqueueing, dequeueing and updating of key.
            </para>
            </remarks>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`2.#ctor">
            <summary>
            Create a priority queue using the default comparer for the <typeparamref name="TKey"/>.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`2.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Create a priority queue and use the provided comparer for the keys.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.PriorityQueue`2.Count">
            <summary>
            Current number of elements in queue
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`2.Clear">
            <summary>
            Clears and empties queue.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`2.Enqueue(`0,`1)">
            <summary>
            Add a new element to the queue, with the given priority
            </summary>
            <returns>
            A <see cref="T:DHI.Mike1D.Generic.PriorityQueue`2.Node"/>. This can be used
            for updating the key.
            </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`2.Dequeue">
            <summary>
            Take the first element out of the queue and return it. the first
            element is the one with the largest key.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.PriorityQueue`2.First">
            <summary>
            Take a look at the first element in the queue, without dequeue'ing
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.PriorityQueue`2.FirstNode">
            <summary>
            Take a look at the first element in the queue, without dequeue'ing,
            returning the priority key node
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`2.Clone">
            <summary>
            Make a clone of the priority queue. It makes a full clone of
            the queue structure, but the values and keys in the queue are
            not cloned.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`2.ToArray(System.Boolean)">
            <summary>
            Copies the elements of the priority queue to a new array,
            sorts it and returns it in priority order. 
            <para>
            This is an O(n log(n)) operation
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`2.ToNodeArray(System.Boolean)">
            <summary>
            Copies the nodes of the priority queue to a new array,
            sorts it and returns it in priority order. 
            <para>
            This is an O(n log(n)) operation
            </para>
            </summary>
            <param name="highestFirst">Bool indicating if the highest priority should be the first value (true) or the last value (false)</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`2.FindFirstNodeAfter(`0)">
            <summary>
            Finds the first node in the priority queue which comes after any node having
            the provided key, i.e. the node with the largest key value less than the provided key value. 
            <para>
            It does a tree search, and should only be used to find key values 
            that are close to the root key, example
            <code>
            queue.FindeFirstNodeAfter(queue.FirstNode.Key)
            </code>
            </para>
            </summary>
            <param name="key">Key value</param>
            <returns>First node in priority queue with key less than, null if not existing</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`2.BubbleUp(System.Int32)">
            <summary>
            Bubble up the node at index i through the tree towards the
            root, until it is correctly sorted.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`2.Heapify(System.Int32)">
            <summary>
            Heapify puts the node at index i further down the tree
            making sure that it has the correct sorted position.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`2.Parent(System.Int32)">
            <summary>
            Parent index
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`2.Left(System.Int32)">
            <summary>
            Left child index
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`2.Right(System.Int32)">
            <summary>
            Right child index
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.PriorityQueue`2.Node">
            <summary>
            A node in the priority queue. It contains the key 
            and the value. Updating the key will reposition the
            node in the priority queue.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PriorityQueue`2.Node._key">
            The important use of the Node is to provide a pointer 
            to the position of the value in the internal list, the
            _index variable. 
            
            It also contains the _insertionOrder in order to maintain 
            first-in-first-out of equal-priority nodes.
        </member>
        <member name="P:DHI.Mike1D.Generic.PriorityQueue`2.Node.Key">
            <summary>
            Key/priority object for the value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.PriorityQueue`2.Node.Value">
            <summary>
            Value object in the heap
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`2.Node.Delete">
            <summary>
            Delete from queue
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`2.Node.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`2.Node.Invalidate">
            <summary>
            Invalidate this node, when it no longer belongs to the
            priority queue (when dequeued).
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.PropertyUpdater">
            <summary>
            Class for updating properties or fields of an object, based on a string representation of the propery/field.
            </summary>
            <example>
            To update the the Delh property of a Mike1DData object:
            <code>
              Mike1DData mike1DData = [...]
              PropertyUpdater updater = new PropertyUpdater(mike1DData);
              updater.ApplyPropertyValue("HDParameters.SolverSettings.Delh", "0.12", diagnostics);
            </code>
            </example>
        </member>
        <member name="T:DHI.Mike1D.Generic.PropertyUpdater.ObjectMemberData">
            <summary>
            Data for an object and the member of the object that is part of the property-string
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PropertyUpdater.ObjectMemberData.Info">
            <summary> Member info </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PropertyUpdater.ObjectMemberData.Obj">
            <summary> Object that member belongs to </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.PropertyUpdater.BaseFilePath">
            <summary>
            If a parameter is an <see cref="T:DHI.Mike1D.Generic.IFilePath"/>, then this is set as the <see cref="P:DHI.Mike1D.Generic.IFilePath.BaseFilePath"/>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.PropertyUpdater.BaseObject">
            <summary>
            Base object being modified
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PropertyUpdater.#ctor(System.Object)">
            <summary>
            Constructor, with base object.
            </summary>
            <param name="baseObject"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.PropertyUpdater.FindProperty(System.String,System.Collections.Generic.Stack{DHI.Mike1D.Generic.PropertyUpdater.ObjectMemberData}@,DHI.Mike1D.Generic.IDiagnostics,System.Char)">
            <summary>
            Find property with <paramref name="name"/> in base object.
            </summary>
            <param name="name">Name of property. Child properties can also be found, by adding a dot (<paramref name="splitChar"/>) in the name.</param>
            <param name="memberData">Stack with object and member of object where property is available. The first element of the stack is the object containing the actual value to be set.</param>
            <param name="diagnostics"></param>
            <param name="splitChar">Char used for splitting propertyname, in case child properties are applied.</param>
            <returns>True on success</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.PropertyUpdater.ApplyPropertyValue(System.String,System.Object,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Apply <paramref name="value"/> to property with name <paramref name="propertyName"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PropertyUpdater.ApplyPfsParameter(DHI.PFS.PFSKeyword,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Apply PFS paramter
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PropertyUpdater.UnBoxValueTypes(System.Collections.Generic.Stack{DHI.Mike1D.Generic.PropertyUpdater.ObjectMemberData})">
            <summary>
            Value types are copied when boxing, so they must be unboxed and set back to their parent object member
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PropertyUpdater.ApplyValue(System.Reflection.MemberInfo,System.Object,System.Object,System.String,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Apply <paramref name="value"/> to <paramref name="member"/> of <paramref name="memberObject"/>.
            </summary>
            <param name="member">Property/field to assign value to</param>
            <param name="memberObject">Object containing property/field</param>
            <param name="value">Value to apply</param>
            <param name="name">Name of property (for error reporting)</param>
            <param name="diagnostics">Error reporting object</param>
            <returns>True on success</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.PropertyUpdaterExtensions">
            <summary>
            Extension methods for <see cref="T:DHI.Mike1D.Generic.PropertyUpdater"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PropertyUpdaterExtensions.SetValue(System.Reflection.MemberInfo,System.Object,System.Object)">
            <summary>
            Set value for property or field
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ProxyExtensions">
            <summary>
            <para>
            Extension methods for easing handling of proxies.
            </para>
            <para>
            It provides some static convenience functions for proxies
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ProxyExtensions.Getter(DHI.Mike1D.Generic.IDoubleProxy,DHI.Mike1D.Generic.IQuantity)">
            <summary>
            <para>
            From the proxy, return an <see cref="T:System.Func`1"/> for the specified quantity.
            </para>
            <para>
            It returns the first quantity of that type that is offered,
            and null if the quantity is not offered.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ProxyExtensions.Getter(DHI.Mike1D.Generic.IDoubleTimeProxy,DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.IQuantity@)">
            <summary>
            <para>
            From the proxy, return an <see cref="T:System.Func`1"/> for the specified quantity.
            </para>
            <para>
            It returns the first quantity of that type that is offered,
            and null if the quantity is not offered.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ProxyExtensions.Getters(DHI.Mike1D.Generic.IDoubleProxy,DHI.Mike1D.Generic.IQuantity)">
            <summary>
            Returns a set of <see cref="T:System.Func`1"/> for the quantity.
            We can return several quantities with the same id (usually they will differ in their description).
            If the quantity is not offerent, an empty list is returned.
            </summary>
            <param name="proxy"></param>
            <param name="quantity"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ProxyExtensions.GettersFraction(DHI.Mike1D.Generic.IDoubleProxy,DHI.Mike1D.Generic.IQuantity)">
            <summary>
            Returns a set of <see cref="T:System.Func`2"/> for the quantity.
            We can return several quantities with the same id (usually they will differ in their description).
            If the quantity is not offerent, an empty list is returned.
            </summary>
            <param name="proxy"></param>
            <param name="quantity"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ProxyExtensions.GetterUnboxed(DHI.Mike1D.Generic.IDoubleProxy,DHI.Mike1D.Generic.IQuantity)">
            <summary>
            <para>
            From the proxy, return an <see cref="T:System.Func`1"/> for the specified quantity.
            </para>
            <para>
            It returns the first quantity of that type that is offered,
            and null if the quantity is not offered.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ProxyExtensions.Setter(DHI.Mike1D.Generic.IDoubleProxy,DHI.Mike1D.Generic.IQuantity)">
            <summary>
            <para>
            From the proxy, return an <see cref="T:DHI.Mike1D.Generic.IDoubleGetSet"/> for the specified quantity.
            </para>
            <para>
            It returns the first quantity of that type that is accepted,
            and null if the quantity is not accepted.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ProxyExtensions.Getter(DHI.Mike1D.Generic.IDoubleReachProxy,DHI.Mike1D.Generic.IQuantity,System.Int32[]@)">
            <summary>
            <para>
            From the proxy, return an <see cref="T:DHI.Mike1D.Generic.IVectorGetter`1"/> for the specified quantity.
            </para>
            <para>
            It returns the first quantity of that type that is offered,
            and null if the quantity is not offered.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ProxyExtensions.Getter(DHI.Mike1D.Generic.IDoubleReachProxy,DHI.Mike1D.Generic.IQuantity,System.Int32[]@,DHI.Mike1D.Generic.IQuantity@)">
            <summary>
            <para>
            From the proxy, return an <see cref="T:DHI.Mike1D.Generic.IVectorGetter`1"/> for the specified quantity.
            </para>
            <para>
            It returns the first quantity of that type that is offered,
            and null if the quantity is not offered.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ProxyExtensions.Setter(DHI.Mike1D.Generic.IDoubleReachProxy,DHI.Mike1D.Generic.IQuantity,System.Int32[]@)">
            <summary>
            <para>
            From the proxy, return an <see cref="T:DHI.Mike1D.Generic.IDoubleVectorGetSet"/> for the specified quantity.
            </para>
            <para>
            It returns the first quantity of that type that is accepted,
            and null if the quantity is not accepted.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ProxyExtensions.Getter(DHI.Mike1D.Generic.IDoubleElementSetProxy,DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.IElementSetDefinition@)">
            <summary>
            <para>
            From the proxy, return an <see cref="T:DHI.Mike1D.Generic.IDoubleVectorGetter"/> for the specified quantity.
            </para>
            <para>
            It returns the first quantity of that type that is offered,
            and null if the quantity is not offered.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ProxyExtensions.Setter(DHI.Mike1D.Generic.IDoubleElementSetProxy,DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.IElementSetDefinition@)">
            <summary>
            <para>
            From the proxy, return an <see cref="T:DHI.Mike1D.Generic.IDoubleVectorGetSet"/> for the specified quantity.
            </para>
            <para>
            It returns the first quantity of that type that is accepted,
            and null if the quantity is not accepted.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ProxyExtensions.TimeValueGetter(DHI.Mike1D.Generic.IDoubleTimeProxy,DHI.Mike1D.Generic.IQuantity)">
            <summary>
            <para>
            From the proxy, return an <see cref="T:System.Func`2"/> for the specified quantity.
            </para>
            <para>
            It returns the first quantity of that type that is offered,
            and null if the quantity is not offered.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ProxyExtensions.SetValues(DHI.Mike1D.Generic.IDoubleVectorSetter,System.Double[])">
            <summary>
            Set the current values, vals will be copied into current array and update that.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.QuantityProxySetWrapper`1">
            <summary>
            Class that wraps a number of quantity proxies in one proxy.
            </summary>
            <typeparam name="TQuantityProxy">Proxy type, derived from <see cref="T:DHI.Mike1D.Generic.IQuantityProxy"/></typeparam>
        </member>
        <member name="F:DHI.Mike1D.Generic.QuantityProxySetWrapper`1._proxies">
            <summary>
            Underlying quantity procies
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.QuantityProxySetWrapper`1._offers">
            <summary>
            List of offers, build by <see cref="M:DHI.Mike1D.Generic.QuantityProxySetWrapper`1.BuildOffers"/>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.QuantityProxySetWrapper`1._accepts">
            <summary>
            List of accepts, build by <see cref="M:DHI.Mike1D.Generic.QuantityProxySetWrapper`1.BuildAccepts"/>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.QuantityProxySetWrapper`1._offeredProxies">
            <summary>
            List of proxies and quantityIndex's for each IQuantity in the _offers
            i.e., this list is synchronized with the _offers
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.QuantityProxySetWrapper`1._acceptedProxies">
            <summary>
            List of proxies and quantityIndex's for each IQuantity in the _accepts
            i.e., this list is synchronized with the _accepts
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.QuantityProxySetWrapper`1.#ctor">
            <summary>
            Protected constructor. If using this, remember to initialize the <see cref="F:DHI.Mike1D.Generic.QuantityProxySetWrapper`1._proxies"/>
            member variable.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.QuantityProxySetWrapper`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Create a proxy set wrapper that wraps the provided set of proxies
            into one proxy
            </summary>
            <param name="proxies">Set of proxies to wrap</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.QuantityProxySetWrapper`1.Offers">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.QuantityProxySetWrapper`1.Accepts">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.QuantityProxySetWrapper`1.BuildOffers">
            <summary>
            Build _offers and _offeredProxies lists
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.QuantityProxySetWrapper`1.Initialize">
            <summary>
            Manually initialize offers and accepts data structures. Use this if AddToOffers() and AddToAccepts()
            is called manually instead of through BuildOffers() and BuildAccepts()
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.QuantityProxySetWrapper`1.AddToOffers(`0)">
            <summary>
            Add quantities to offers.
            </summary>
            <param name="proxy"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.QuantityProxySetWrapper`1.AddToOffers(`0,System.Collections.Generic.IList{DHI.Mike1D.Generic.IQuantity})">
            <summary>
            Add quantities to offers.
            </summary>
            <param name="proxy"></param>
            <param name="quantities"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.QuantityProxySetWrapper`1.AddToAccepts(`0,System.Collections.Generic.IList{DHI.Mike1D.Generic.IQuantity})">
            <summary>
            Add quantities to accept.
            </summary>
            <param name="proxy"></param>
            <param name="quantities"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.QuantityProxySetWrapper`1.BuildAccepts">
            <summary>
            Build _accepts and _acceptedProxies lists
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.DoubleProxySetWrapper">
            <summary>
            Class that wraps a number of double proxies in one double proxy.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DoubleProxySetWrapper.#ctor">
            <summary>
            Protected constructor. If using this, remember to initialize the 
            <see cref="F:DHI.Mike1D.Generic.QuantityProxySetWrapper`1._proxies"/>
            member variable.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DoubleProxySetWrapper.#ctor(System.Collections.Generic.IEnumerable{DHI.Mike1D.Generic.IDoubleProxy})">
            <summary>
            Create a proxy set wrapper that wraps the provided set of proxies
            into one proxy
            </summary>
            <param name="proxies">Set of proxies to wrap</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.DoubleProxySetWrapper.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.DoubleProxySetWrapper.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.DoubleProxySetWrapper.ValueSetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.DoubleVectorProxySetWrapper">
            <summary>
            Class that wraps a number of double-vector proxies in one double proxy.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DoubleVectorProxySetWrapper.#ctor">
            <summary>
            Protected constructor. If using this, remember to initialize the 
            <see cref="F:DHI.Mike1D.Generic.QuantityProxySetWrapper`1._proxies"/>
            member variable.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DoubleVectorProxySetWrapper.#ctor(System.Collections.Generic.IEnumerable{DHI.Mike1D.Generic.IDoubleVectorProxy})">
            <summary>
            Create a proxy set wrapper that wraps the provided set of proxies
            into one proxy
            </summary>
            <param name="proxies">Set of proxies to wrap</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.DoubleVectorProxySetWrapper.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.DoubleVectorProxySetWrapper.ValueSetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.DoubleReachProxySetWrapper">
            <summary>
            Class that wraps a number of double-reach proxies in one proxy.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DoubleReachProxySetWrapper.#ctor">
            <summary>
            Protected constructor. If using this, remember to initialize the 
            <see cref="F:DHI.Mike1D.Generic.QuantityProxySetWrapper`1._proxies"/>
            member variable.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DoubleReachProxySetWrapper.#ctor(System.Collections.Generic.IEnumerable{DHI.Mike1D.Generic.IDoubleReachProxy})">
            <summary>
            Create a proxy set wrapper that wraps the provided set of proxies
            into one proxy
            </summary>
            <param name="proxies">Set of proxies to wrap</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.DoubleReachProxySetWrapper.ValueGetter(System.Int32,System.Int32[]@)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.DoubleReachProxySetWrapper.ValueSetter(System.Int32,System.Int32[]@)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.DoubleElementSetProxySetWrapper">
            <summary>
            Class that wraps a number of double-reach proxies in one proxy.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DoubleElementSetProxySetWrapper.#ctor">
            <summary>
            Protected constructor. If using this, remember to initialize the 
            <see cref="F:DHI.Mike1D.Generic.QuantityProxySetWrapper`1._proxies"/>
            member variable.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DoubleElementSetProxySetWrapper.#ctor(System.Collections.Generic.IEnumerable{DHI.Mike1D.Generic.IDoubleElementSetProxy})">
            <summary>
            Create a proxy set wrapper that wraps the provided set of proxies
            into one proxy
            </summary>
            <param name="proxies">Set of proxies to wrap</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.DoubleElementSetProxySetWrapper.ValueGetter(System.Int32,DHI.Mike1D.Generic.IElementSetDefinition@)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.DoubleElementSetProxySetWrapper.ValueSetter(System.Int32,DHI.Mike1D.Generic.IElementSetDefinition@)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.QueueDateTimes">
            <summary>
            Class implementing the <see cref="T:DHI.Mike1D.Generic.IListDateTimes"/>
            storing data in a queue/circular array.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ReachSearcher`1">
            <summary>
            Class for searching reaches, generic such that several reach types
            can be entered.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:DHI.Mike1D.Generic.ReachSearcher`1.Values">
            <summary>
            Values corrently in the searcher
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ReachSearcher`1.Add(DHI.Mike1D.Generic.ILocationSpan,`0)">
            <summary>
            Add reach to searcher
            </summary>
            <param name="span">Span that reach covers</param>
            <param name="reach">Reach object</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.ReachSearcher`1.FindReaches(System.String)">
            <summary>
            Find all reaches with the provided id, sorted by chainage
            </summary>
            <param name="reachId"></param>
            <returns>A list of reaches with that id, an empty list if id was not found</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ReachSearcher`1.FindReach(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Find reach at the provided location.
            <para>
            In case two reaches cover the same location
            (when one reach has been split into two at exactly
            that location), the first one (smallest start-chainage) is returned
            </para>
            </summary>
            <param name="location">Location</param>
            <returns>Reach at location, null if not found.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ReachSearcher`1.FindReach(System.String,System.Double)">
            <summary>
            Find reach at the provided location.
            <para>
            In case two reaches cover the same location
            (when one reach has been split into two at exactly
            that location), the first one (smallest start-chainage) is returned
            </para>
            </summary>
            <param name="reachid">Id of reach </param>
            <param name="chainage">Chainage within reach </param>
            <returns>Reach at location, null if not found.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ReachSearcher`1.FindReach(DHI.Mike1D.Generic.ILocation,System.Boolean)">
            <summary>
            Find reach at the provided location.
            <para>
            In case two reaches cover the same location
            (when one reach has been split into two at exactly
            that location), you must select whether you want
            the upstream or the downstream reach.
            </para>
            </summary>
            <param name="location">Location</param>
            <param name="downstream">Bool indicating whether you want the upstream (false) or the downstream (true) one</param>
            <returns>Reach at location, null if not found.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ReachSearcher`1.FindReach(System.String,System.Double,System.Boolean)">
            <summary>
            Find reach at the provided location.
            <para>
            In case two reaches cover the same location
            (when one reach has been split into two at exactly
            that location), you must select whether you want
            the upstream or the downstream reach.
            </para>
            </summary>
            <param name="reachid">Id of reach </param>
            <param name="chainage">Chainage within reach </param>
            <param name="downstream">Bool indicating whether you want the upstream (false) or the downstream (true) one</param>
            <returns>Reach at location, null if not found.</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.ReachSearcher`1.SpanComparer">
            <summary>
            Helper class for getting sorting of location spans right,
            assuming they all have the same id.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.AffineTransform">
            <summary>
            An affine transformation in 2D space. It can be used for scaling, rotating, reflecting and translating
            one coordiante system into another.
            <code>
              x' = a11*x + a12*y + a13
              y' = b11*x + b12*y + b13
            </code>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.AffineTransform.a11">
            <summary>
            Coefficients for x transformation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.AffineTransform.a12">
            <summary>
            Coefficients for x transformation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.AffineTransform.a13">
            <summary>
            Coefficients for x transformation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.AffineTransform.b11">
            <summary>
            Coefficients for y transformation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.AffineTransform.b12">
            <summary>
            Coefficients for y transformation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.AffineTransform.b13">
            <summary>
            Coefficients for y transformation
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.AffineTransform.Transform(DHI.Mike1D.Generic.Spatial.Geometry.Coordinate)">
            <summary>
            Transform coordinate
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.AffineTransform.VectorToVectorTransform(DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Coordinate)">
            <summary>
            Create affine transformation mapping vector from <paramref name="c1"/>-<paramref name="c2"/> to
            vector <paramref name="d1"/>-<paramref name="d2"/>. Scaling, rotation and translation is included.
            <para>
            c1 and c2 cannot be identical, while d1 and d2 can (collapsing all transforms to that coordinate)
            </para>
            </summary>
            <param name="c1">First coordinate of first vector</param>
            <param name="c2">Second coordinate of first vector</param>
            <param name="d1">First coordinate of second vector</param>
            <param name="d2">Second coordinate of second vector</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.Algorithm.AreaTools">
            <summary>
            Class providing various utility methods for areas.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Algorithm.AreaTools.AreaSignedAboveXaxis(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculates the area between the x-axis and the line defined by
            the (x1,y1) and (x2,y2) coordinates, where the line is above the x-axis.
            Where the line is below the x-axis, the area is not considered. 
            <para>
            It is calculated with signed such that if x2 &gt; x1 then the area is negative.
            </para>
            </summary>
            <param name="x1">X coordinate of start point of line</param>
            <param name="y1">Y coordinate of start point of line</param>
            <param name="x2">X coordinate of end point of line</param>
            <param name="y2">Y coordinate of end point of line</param>
            <returns>Signed area above x-axis</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Algorithm.AreaTools.XlengthSignedAboveXaxis(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculates the length along the x-axis where the line defined by
            the (x1,y1) and (x2,y2) coordinates is above the x-axis.
            Where the line is below the x-axis, the length is not considered. 
            <para>
            It is calculated with signed such that if x2 &gt; x1 then the area is negative.
            </para>
            </summary>
            <param name="x1">X coordinate of start point of line</param>
            <param name="y1">Y coordinate of start point of line</param>
            <param name="x2">X coordinate of end point of line</param>
            <param name="y2">Y coordinate of end point of line</param>
            <returns>Signed area above x-axis</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.Algorithm.LineTools">
            <summary>
            Class providing various utility methods for lines.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Algorithm.LineTools.AreLineSegmentsParallel(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns true if two line segments are parallel. 
            </summary>
            <param name="x1">x-coordinate for first point in first line segment</param>
            <param name="y1">y-coordinate for first point in first line segment </param>
            <param name="x2">x-coordinate for second point in first line segment</param>
            <param name="y2">y-coordinate for second point in first line segment</param>
            <param name="x3">x-coordinate for the first point in second line segment</param>
            <param name="y3">y-coordinate for the first point in second line segment</param>
            <param name="x4">x-coordinate for the second point in the second line segment</param>
            <param name="y4">y-coordinate for the second point in the second line segment</param>
            <returns>True if the line segments are parallel otherwise false.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Algorithm.LineTools.AreLineSegmentsParallel(DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Coordinate)">
            <summary>
            OverLoad of AreLineSegmentsParallel(x1, y1, x2, y2, x3, y3, x4, y4)
            </summary>
            <param name="c1">First coordinate in first line</param> //marker 1 xs1
            <param name="c2">Second coordinate in first line</param> //marker 3 xs1
            <param name="c3">First coordinate in second line</param> //marker 1 xs2
            <param name="c4">Second coordinate in second line</param> //marker 3 xs2
            <returns>true if the line segments are parallel otherwise false</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Algorithm.LineTools.DoLineSegmentsIntersect(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns true if two line segments intersects. The lines are said to intersect if the lines
            axctually crosses and not if they only share a point. 
            </summary>
            <param name="x1">x-coordinate for first point in first line segment</param>
            <param name="y1">y-coordinate for first point in first line segment </param>
            <param name="x2">x-coordinate for second point in first line segment</param>
            <param name="y2">y-coordinate for second point in first line segment</param>
            <param name="x3">x-coordinate for the first point in second line segment</param>
            <param name="y3">y-coordinate for the first point in second line segment</param>
            <param name="x4">x-coordinate for the second point in the second line segment</param>
            <param name="y4">y-coordinate for the second point in the second line segment</param>
            <returns>True if the line segments intersects otherwise false.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Algorithm.LineTools.DoLineSegmentsIntersect(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            OverLoad of DoLineSegmentsIntersect(x1, y1, x2, y2, x3, y3, x4, y4)
            </summary>
            <param name="p1">First point in first line</param>
            <param name="p2">Second point in first line</param>
            <param name="p3">First point in second line</param>
            <param name="p4">Second point in second line</param>
            <returns>true if the line segmenst intersects otherwise false</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Algorithm.LineTools.DoLineSegmentsIntersect(DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Coordinate)">
            <summary>
            OverLoad of DoLineSegmentsIntersect(x1, y1, x2, y2, x3, y3, x4, y4)
            </summary>
            <param name="c1">First coordinate in first line</param> //marker 1 xs1
            <param name="c2">Second coordinate in first line</param> //marker 3 xs1
            <param name="c3">First coordinate in second line</param> //marker 1 xs2
            <param name="c4">Second coordinate in second line</param> //marker 3 xs2
            <returns>true if the line segmenst intersects otherwise false</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Algorithm.LineTools.CalculateIntersectionPoint(DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Coordinate)">
            <summary>
            Calculate intersection point between two line segments.
            </summary>
            <param name="c1">First point in first line</param>
            <param name="c2">Second point in first line</param>
            <param name="c3">First point in second line</param>
            <param name="c4">Second point in second line</param>
            <returns>Intersection point</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.CoordinateTransform">
            <summary>
            Static class, providing a set of simple coordinate transform methods
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.CoordinateTransform.ConvertToLocalSystem(DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Vector,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Converting the coordinate from the global coordinate system to the
            local one, with the provided origin and x-axis vector.
            <para>
            It is assumed that the y-axis is in counter-clockwise direction to x
            </para>
            </summary>
            <param name="origin">Origin of local coordinate system</param>
            <param name="xAxisUnitVector">X-axis vector of local coordinate system</param>
            <param name="coord">Global coordinate to convert</param>
            <returns>New coordinate in local coordinate system</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.CoordinateTransform.ConvertFromLocalSystem(DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Vector,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Converting the coordinate from the local coordinate system to the
            global one, where the local system is defined by the provided origin and x-axis vector.
            <para>
            It is assumed that the y-axis is in counter-clockwise direction to x
            </para>
            </summary>
            <param name="origin">Origin of local coordinate system</param>
            <param name="xAxisUnitVector">X-axis vector of local coordinate system</param>
            <param name="coord">Local coordinate to convert</param>
            <returns>New coordinate in global coordinate system</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.CoordinateTransform.ConvertToLocalSystem(DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Vector,System.Collections.Generic.IList{DHI.Mike1D.Generic.Spatial.Geometry.Coordinate},System.Collections.Generic.List{DHI.Mike1D.Generic.Spatial.Geometry.Coordinate}@)">
            <summary>
            Convert a list of coordinates to the local coordinate system. 
            </summary>
            <param name="origin">Origin of local coordinate system</param>
            <param name="xAxisUnitVector">X-axis vector of local coordinate system</param>
            <param name="coords">global coordinate to convert</param>
            <param name="localCoords">new local coordinates</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.CoordinateTransform.ConvertFromLocalSystem(DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Vector,System.Collections.Generic.IList{DHI.Mike1D.Generic.Spatial.Geometry.Coordinate},System.Collections.Generic.List{DHI.Mike1D.Generic.Spatial.Geometry.Coordinate}@)">
            <summary>
            Convert a list of coordinates from the local coordinate system to the global coordinate system. 
            </summary>
            <param name="origin">Origin of local coordinate system</param>
            <param name="xAxisUnitVector">X-axis vector of local coordinate system</param>
            <param name="localCoords">new local coordinates</param>
            <param name="coords">global coordinate to convert</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.Geometry.Extent">
            <summary>
            Extent is a rectangle in xy-space.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.Geometry.Extent.XMin">
            <summary>
            Minimum x coordinate of extent
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.Geometry.Extent.XMax">
            <summary>
            Maximum x coordinate of extent
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.Geometry.Extent.YMin">
            <summary>
            Minimum y coordinate of extent
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.Geometry.Extent.YMax">
            <summary>
            Maximum y coordinate of extent
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Extent.#ctor">
            <summary>
            Default constructor, creates an empty extent
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Extent.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor that ininitalizes the extent to a certain extent.
            </summary>
            <param name="xmin">Minimum x coordinate</param>
            <param name="xmax">Maximum x coordinate</param>
            <param name="ymin">Minimum y coordinate</param>
            <param name="ymax">Maximum y coordinate</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Extent.#ctor(DHI.Mike1D.Generic.Spatial.Geometry.Extent)">
            <summary>
            Copy constructor that ininitalizes the extent to a certain extent.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Extent.Include(DHI.Mike1D.Generic.Spatial.Geometry.Extent)">
            <summary>
            Make this extent include <paramref name="other"/>. This will
            grow this extent, if the <paramref name="other"/> point is outside
            this extent.
            </summary>
            <param name="other">Other extent to include</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Extent.Include(System.Double,System.Double)">
            <summary>
            Make this extent include the xy-point. This will
            grow this extent, if the xy-point is outside
            this extent.
            </summary>
            <param name="x">x coordinate of point to include</param>
            <param name="y">y coordinate of point to include</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Extent.Contains(System.Double,System.Double)">
            <summary>
            Checks if this extent contains the xy-point
            </summary>
            <param name="x">x coordinate of point to include</param>
            <param name="y">y coordinate of point to include</param>
            <returns>True if xy-point is inside (or on boundary of) this extent.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Extent.Overlaps(DHI.Mike1D.Generic.Spatial.Geometry.Extent)">
            <summary>
            Checks if this extent overlaps the other extent
            </summary>
            <param name="other">Extent to check overlap with</param>
            <returns>True if the two extends overlaps</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.Geometry.Quad">
            <summary>
            Represents a quadrilateral with the 4 corner coordinates. 
            It includes functionality for bilinear interpolation within the quadrilateral.
            <para>
            The line between c00 and c10 is considered the "x-axis" of the quad, while
            the line between c00 and c01 is considered the "y-axis" of the quad.
            </para>
            <para>
            The quad can either be a anti-clockwise/left quad or a clockwise/right quad. 
            Anti-clockwise means that the positive y-axis is in the anti-clockwise 
            direction from the positive x-axis, that the c01 point on the y-axis
            is "left of" the x-axis - the line between c00 and c01 
            </para>
            <para>
            For the mapping methods to work, the quad must be convex. The mapping methods
            also work for degenerate quads (triangles), though the mapping at the degenerate
            areas may not be unique.
            </para>
            <para>
            Two types of degenerate quads are handled by the mappings:
            1) Two consequtive points equal, e.g. c11 equals c01.
            2) c01 is on the line between c00 and c11, or c11 is on the line between c01 and c10
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Quad.#ctor(DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Coordinate)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.Geometry.Quad._solveForV">
            <summary>
            Flag specifying whether the mapping should solve for v or for u first.
            In cases where the quad is degenerate, the solver will fail if solving 
            in the wrong order.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.Quad.C00">
            <summary> Bottom left coordinate </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.Quad.C10">
            <summary> Bottom rightcoordinate </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.Quad.C11">
            <summary> Top right coordinate </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.Quad.C01">
            <summary> Top left coordinate </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.Quad.IsDegenerate">
            <summary>
            Is Quad Degenerate? Quad is Degenerate when it becomes a triangle 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Quad.CalculateExtent">
            <summary>
            Calculates the extent of the quad.
            </summary>
            <returns>The extent</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Quad.MapUv2Xy(System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Mapping from coordinate system u,v to X, Y geographic coordinates
            u normalized chainage [0;1] and v normalized distance from centre [-1; 1].
            Bilinear interpolation.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Quad.MapXy2Uv(System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Mapping from geographic coordinates (x,y) to local coordinate system (u,v),
            u normalized distance in base line direction, v normalized distance
            in height direction. Both in interval [0,1]
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Quad.CheckSolution(System.Double@,System.Double@)">
            <summary>
            Check Solution
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Quad.IsPointInQuad(System.Double,System.Double)">
            <summary>
            Is Point in Quad?
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Quad.MapXy2Uv1(System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Mapping from geographic coordinates X,Y to coordinate system u,v
            u normalized chainage [0;1] and v normalized distance from centre [-1; 1]
            Remember: Solved by u; The documentation solves it by v
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Quad.SolveQuadratic(System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Solve the quadratic a*x^2+b*x+c, return the number of solutions found
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Quad.Evaluation(System.Collections.Generic.List{System.Double},System.Double,System.Double)">
            <summary>
            Evaluation
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.Geometry.GeometryFactory">
            <summary>
            Factory class for creating geometries.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.GeometryFactory.CreateVector(System.Double,System.Double)">
            <summary>
             Create a vector
            </summary>
            <param name="dx"></param>
            <param name="dy"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.GeometryFactory.CreateVector(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
             Create a vector goint from <paramref name="c1"/> to <paramref name="c2"/>.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.Geometry.Vector">
            <summary>
            2D vector with an x and a y component.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Vector.#ctor(System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="x">X component of vector</param>
            <param name="y">Y component of vector</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.Vector.X">
            <summary>
            X component of the vector
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.Vector.Y">
            <summary>
            Y component of the vector
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Vector.Length">
            <summary>
             Vector length
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Vector.Normalize">
            <summary>
             Normalize vector to length 1.
            </summary>
            <exception cref="T:DHI.Mike1D.Generic.Mike1DException"></exception>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Vector.Dot(DHI.Mike1D.Generic.Spatial.Geometry.Vector)">
            <summary>
            Calculate the dot product of two vectors
            </summary>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Vector.Add(DHI.Mike1D.Generic.Spatial.Geometry.Vector)">
            <summary>
             Add vector, updating this vector
            </summary>
            <param name="vector"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Vector.op_Addition(DHI.Mike1D.Generic.Spatial.Geometry.Vector,DHI.Mike1D.Generic.Spatial.Geometry.Vector)">
            <summary>
            Add this vector and another vector, returning a new vector
            </summary>
            <param name="vector">Vector to add to</param>
            <param name="adder">Vector to add</param>
            <returns>New vector</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Vector.op_Multiply(DHI.Mike1D.Generic.Spatial.Geometry.Vector,System.Double)">
            <summary>
            Multiply the vector with the provided factor
            </summary>
            <param name="vector">Vector to multiply</param>
            <param name="factor">Factor to multiply with</param>
            <returns>New vector</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Vector.Angle">
            <summary>
            Mathematical angle, in radians, from positive x-axis and counter-clockwise.
            <para>
            Value is between <code>-pi &lt;= theta &lt;= pi</code>
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Vector.YAngle">
            <summary>
            Compass heading, in radians, from positive y-axis and clock-wise.
            <para>
            Value is between <code>-pi &lt;= theta &lt;= pi</code>
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Vector.Interpolate(System.Double,DHI.Mike1D.Generic.Spatial.Geometry.Vector,DHI.Mike1D.Generic.Spatial.Geometry.Vector)">
            <summary>
            Interpolate vector
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Vector.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Vector.Equals(DHI.Mike1D.Generic.Spatial.Geometry.Vector)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Vector.Equals(DHI.Mike1D.Generic.Spatial.Geometry.Vector,System.Double)">
            <summary>
            Equals with tolerance
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Vector.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.Geometry.Ordinates">
            <summary>
            Enum of ordinate axis
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.Geometry.Ordinates.M">
            <summary>
            M is a measure along a linestring, also referred to as chainage
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.Geometry.Ordinates.X">
            <summary>
            X
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.Geometry.Ordinates.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.Geometry.Ordinates.Z">
            <summary>
            Z
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType">
            <summary>
            Type of coordinate
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType.Unknown">
            <summary>
            Unknown, or to be set at a later stage
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType.XY">
            <summary>
            A coordinate that contains X and Y coordinates
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType.XYZ">
            <summary>
            A coordinate that contains X, Y and Z coordinates
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType.M">
            <summary>
            A coordinate that contains a parametrized coordinate, as e.g. chainage
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType.XYM">
            <summary>
            A coordinate that contains X and Y coordinates and a parametrized coordinate M
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType.XYZM">
            <summary>
            A coordinate that contains X, Y and Z coordinates and a parametrized coordinate M
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate">
            <summary>
            A coordinate of a vertex.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate.X">
            <summary>
            X coordinate. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate.Y">
            <summary>
            Y coordinate
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate.Z">
            <summary>
            Z coordinate
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate.M">
            <summary>
            Parametric coordinate, usually chainage.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate.UndefinedValue">
            <summary>
            Value of a undefined coordinate.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate.Clone">
            <summary>
            Clone this vertex coordiante
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence">
            <summary>
            Interface for a sequence of <see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate"/>'s
            
            Implementing many of the IList{T} methods without explicitly
            extending the IList{T} (for COM interop)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence.CoordinateType">
            <summary>
            Type of coordinate. All coordinates in the sequence must be of the same type
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence.Item(System.Int32)">
            <summary>
            Get or set the <see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate"/> at the specified index in the list
            </summary>
            <param name="index">Index in list</param>
            <returns><see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate"/> at the index</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence.Count">
            <summary>
            The number of <see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate"/>'s in the list
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence.IndexOf(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the entire List. 
            </summary>
            <param name="item">The object to locate in the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>The zero-based index of the first occurrence of item within the entire List, if found; otherwise, –1. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence.Find(System.Predicate{DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate})">
            <summary>
            Searches for an element that matches the conditions defined by 
            the specified predicate, and returns the first occurrence within 
            the entire List. 
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type ICoordinate. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence.Remove(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Removes the first occurrence of a specific object from the List. 
            </summary>
            <param name="item">The object to remove from the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not found in the List. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the List. 
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <remarks>This method is an O(n) operation</remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence.Clear">
            <summary>
            Removes all elements from the List.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence.ToArray">
            <summary>
            Copies all elements of the list to an array.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate">
            <summary>
            Default implementation of <see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate"/>
            
            Returns <see cref="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.UndefinedValue"/> if coordinate has not been set.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.X">
            <summary>
            X coordinate. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.Y">
            <summary>
            Y coordinate
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.Z">
            <summary>
            Z coordinate
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.M">
            <summary>
            Parametric coordinate, usually chainage.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.SUndefinedValue">
            <summary>
            The undefined value (static function)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.UndefinedValue">
            <summary>
            The undefined value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.Clone">
            <summary>
            Clone this vertex coordiante
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.DistanceXY(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Distance in XY coordinates.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.DistanceXYZ(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Distance in XYZ coordinates.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.DistanceSqXY(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Distance squared in XY coordinates. 
            (does not take the square root for - optimizations when eg. searching for smallest distance)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.DistanceSqXYZ(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Distance squared in XYZ coordinates.
            (does not take the square root - for optimizations when eg. searching for smallest distance)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.CompareTo(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Compares two <see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate"/>. The comparison order is M (chainage), X, Y, Z
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.op_Addition(DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Add two coordinates
            </summary>
            <param name="c0">first coordinate</param>
            <param name="c1">Second coordinate</param>
            <returns>A new coordinate having added ordinal values</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.op_Addition(DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Vector)">
            <summary>
            Add vector to coordinate and return a new coordinate.
            </summary>
            <param name="coor">Coordinate</param>
            <param name="vec">Vector to add</param>
            <returns>A new coordinate having added the vector to the coordinate</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.CompareTo(System.Object)">
            <summary>
            Compares to aother obj. If <see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate"/>, uses the comparison order M (chainage), X, Y, Z
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.Equals(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
            
            <param name="o">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.HasZ(DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType)">
            <summary>
            Returns true of the <paramref name="coordType"/> includes the <see cref="F:DHI.Mike1D.Generic.Spatial.Geometry.Ordinates.M"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.HasM(DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType)">
            <summary>
            Returns true of the <paramref name="coordType"/> includes the <see cref="F:DHI.Mike1D.Generic.Spatial.Geometry.Ordinates.M"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.Interpolate(System.Double,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
             Interpolate between two coordinates
            </summary>
            <param name="fraction">Fraction of 0 matches c0, fraction 1 matches c1</param>
            <param name="c0">First coordiante</param>
            <param name="c1">Second coordinate</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.InterpolateM(System.Double,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Interpolate a coordinate from the c1-c2 line, based on the
            m value. In case of m is outside the span of m values of c1 and c2,
            extrapolation is performed. In case c1 and c2 has the same m value,
            null is returned.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.CreateX(System.Double)">
            <summary>
            Create coordinate with the given values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.CreateXY(System.Double,System.Double)">
            <summary>
            Create coordinate with the given values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.CreateXYZ(System.Double,System.Double,System.Double)">
            <summary>
            Create coordinate with the given values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.CreateM(System.Double)">
            <summary>
            Create coordinate with the given values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.CreateXM(System.Double,System.Double)">
            <summary>
            Create coordinate with the given values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.CreateXYM(System.Double,System.Double,System.Double)">
            <summary>
            Create coordinate with the given values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.CreateXYZM(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create coordinate with the given values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.Create(DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType,System.Double[])">
            <summary>
            Create a coordinate of the given type. It must have a number of input
            argument matching the coordtype
            </summary>
            <param name="coordtype">Type of coordinate</param>
            <param name="coords">Coordinates for each axis type</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.Create(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Create a coordinate based on the incoming coordinate, making a copy.
            </summary>
            <param name="coor">Coordinate to copy</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.ToString">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList">
            <summary>
            A list implementation of a sequence of coordinates.
            
            If the coordinates has the M coordinate, they are assumed to be strictly increasing
            
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList.#ctor">
            <summary>
            Initializes a new instance of the List class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the List class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList.#ctor(System.Collections.Generic.IEnumerable{DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate})">
            <summary>
            Initializes a new instance of the List class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList.CoordinateType">
            <summary>
            Type of coordinate. All coordinates in the sequence must be of the same type
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList.SortByM">
            <summary>
            If true, keeps data sorted by their M value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList.Add(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Add a <see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate"/> to the list
            </summary>
            <param name="coordinate"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList.LocateAlong(System.Double)">
            <summary>
            Returns a derived ICoordinate value that matches the specified m coordinate value.
            If the specified m-coordinate is outside the span of m-values in the sequence, null
            is returned.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList.LocateAlong(System.Double,System.Boolean)">
            <summary>
            Returns a derived ICoordinate value that matches the specified m coordinate value
            </summary>
            <param name="m">m coordinate value</param>
            <param name="extrapolate">If m is outside the span of m-values in the sequence, 
            decides whether to return null (false) or the nearest coordinate (true)
            </param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList.Create(DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType)">
            <summary>
            Create a coordinate list of the specified type
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList.Create(DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType,System.Int32)">
            <summary>
            Create a coordinate list of the specified type and with the specified initial capacity
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList.Create(DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType,System.Collections.Generic.IEnumerable{DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate})">
            <summary>
            Creates a new CoordinateList of the specified type that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList.Create(DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType,System.Collections.Generic.IEnumerable{DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence})">
            <summary>
            Creates a new CoordinateList of the specified type that contains elements copied from the specified collections
            and has sufficient capacity to accommodate the number of elements copied.
            <para>
            It is assumed that the collections are in increasing M-values. The last coordinate of sequence n-1
            can equal the first coordinate of sequence n - the duplicated coordinate will be automatically removed.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList.MValueForSearch">
            <summary>
            Helper class for searching in M-values, when using 
            <see cref="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.Double,DHI.Mike1D.Generic.MathUtil.IDataForSearching,System.Double@,System.Int32)"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList.MValueForSearch.#ctor(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence)">
            <summary>
             Constructor
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList.MValueForSearch.Count">
            <summary>
             Length of vectors to interpolate in 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList.MValueForSearch.Item(System.Int32)">
            <summary>
             Returns values in which to find the indices to interpolate between 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList.SetSortByM(DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList)">
            <summary>
             Set the flag to sort coordinate list on chainage
            </summary>
            <param name="coordinateList"></param>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.QuadSearchTree`1">
            <summary>
            Simple 2D search tree based on a 2D quad tree.
            <para>
            The search tree structure is build up by adding a number of coordinates
            to the search tree, could be center coordinate of each element.
            </para>
            <para>
            When the search tree structure is build up, the elements can be added
            to the search tree.
            </para>
            <para>
            You can not add additional nodes to a search tree, after the first element
            has been added.
            </para>
            </summary>
            <typeparam name="T">Type of the element in the search tree</typeparam>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.QuadSearchTree`1._head">
            <summary>
            Head of the tree
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.QuadSearchTree`1._numNodes">
            <summary>
            Counts the number of unique nodes used for building up the tree
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.QuadSearchTree`1._numElmts">
            <summary>
            Counts the number of elements added to the tree
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.QuadSearchTree`1.HasElements">
            <summary>
            Returns true if elements has already been added to the tree
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.QuadSearchTree`1.Leaf`1">
            <summary>
            Leaf in the search tree
            </summary>
            <typeparam name="TT">Type of the element in the search tree</typeparam>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.QuadSearchTree`1.Leaf`1.Element">
            <summary>
            Element in the search tree
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Spatial.QuadSearchTree`1.Leaf`1.Extent">
            <summary>
            Extent of element in the search tree
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.QuadSearchTree`1.#ctor(DHI.Mike1D.Generic.Spatial.Geometry.Extent)">
            <summary>
            Create a new search tree that covers the provided <paramref name="extent"/>
            </summary>
            <param name="extent">Extent that the search tree should cover</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.QuadSearchTree`1.AddCoordinate(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Add point to the search tree, thereby building the tree.
            </summary>
            <param name="point">xy point to add</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.QuadSearchTree`1.AddElement(`0,DHI.Mike1D.Generic.Spatial.Geometry.Extent)">
            <summary>
            Add element to the search tree.
            </summary>
            <param name="element">Element to add</param>
            <param name="extent">Extent that contains the element</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.QuadSearchTree`1.FindElements(DHI.Mike1D.Generic.Spatial.Geometry.Extent)">
            <summary>
            Find elements with extends that overlaps the provided <paramref name="extent"/>
            </summary>
            <param name="extent">Extent to look for elements within</param>
            <returns>A list of elements with overlapping extents</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.QuadSearchTree`1.Depth">
            <summary>
            Returns the depth of the search tree
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.QuadSearchTree`1.MaxElementsInNode">
            <summary>
            Returns the maximum number of elements in one
            search tree node
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Spatial.QuadSearchTree`1.TreeNodes">
            <summary>
            Returns the total number of nodes in the search tree
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Spatial.SpatialExtensions">
            <summary>
            Extension methods and static for the Spatial namespace
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.AsCoordinate(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Return a Coordinate from an ICoordinate. If it is already an
            Coordinate, this is returned, i.e. it is not copied.
            </summary>
            <param name="coor">ICoordinate</param>
            <returns>Coordinate</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.Perpendicular(DHI.Mike1D.Generic.Spatial.Geometry.Vector)">
            <summary>
            Create the counter clockwice (CCW) perpendicular vector
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.Reverse(DHI.Mike1D.Generic.Spatial.Geometry.Vector)">
            <summary>
            Reverse vector
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.Reverse(DHI.Mike1D.Generic.Spatial.Geometry.Vector,System.Boolean)">
            <summary>
            Reverse vector if <paramref name="reverse"/> is set
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.DirectionUnitVector(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence,System.Double)">
            <summary>
            Finds the local reach direction as the direction from the locally surounding digi points. The 
            vector returned is a unit vector.
            </summary>
            <param name="coordinates"></param>
            <param name="chainage"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.DirectionUnitVectorSmooth(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence,System.Double)">
            <summary>
            Finds the local reach direction as the direction from the locally surrounding digi points. The 
            vector returned is a unit vector. 
            <para>
            This returns a smoothly varying unit vector:
            On the center of the line between two digipoints, the direction of the line is returned.
            On a digipoint, the average unit vector of the line before and after the digipoint is returned.
            From the digipoint and up till the center of the line between two digipoints, or atmost 10.000 meters
            from the digipoint, the direction varies linearly.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.DirectionUnitVectorSmooth(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence,System.Double,System.Double)">
            <summary>
            Finds the local reach direction as the direction from the locally surrounding digi points. The 
            vector returned is a unit vector. 
            <para>
            This returns a smoothly varying unit vector:
            On the center of the line between two digipoints, the direction of the line is returned.
            On a digipoint, the average unit vector of the line before and after the digipoint is returned.
            From the digipoint and up till the center of the line between two digipoints, or atmost <paramref name="maxSmoothingDist"/> meters
            from the digipoint, the direction varies linearly.
            </para>
            <para>
            The <paramref name="maxSmoothingDist"/> defines how far away from the digipoint that smoothing can happen.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.DirectionUnitVectorAverage(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence,System.Double,System.Double)">
            <summary>
            Finds the local reach direction as the direction from the locally surrounding digi points. The 
            vector returned is a unit vector. 
            <para>
            This returns a smoothly varying direction unit vector, being the average direction unit vector over <paramref name="averageDistance"/>
            around the <paramref name="chainage"/> point.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.DirectionUnitVectorWeighted(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence,System.Double,System.Double)">
            <summary>
            Finds the local reach direction as the direction from the locally surrounding digi points. The 
            vector returned is a unit vector. 
            <para>
            This returns a smoothly varying direction unit vector, being a weighted direction unit vector over <paramref name="weightingDistance"/>
            around the <paramref name="chainage"/> point, using a triangular weighting function around <paramref name="chainage"/>.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.CreateUnitVector(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Creates a unit vector pointing from p1 to p2
            </summary>
            <param name="p1">First point</param>
            <param name="p2">Second point</param>
            <returns>Unit vector pointing at second point</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.CastToList(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence)">
            <summary>
            Cast an <see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence"/> to an <see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList"/>,
            create a new if a cast is not possible
            </summary>
            <param name="seq"><see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence"/> to cast</param>
            <returns>A <see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateList"/> with the same <see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate"/>s as 
            the original list.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.CalculateLeftRightCoordinatesFromDistances(DHI.Mike1D.Generic.Spatial.Geometry.Coordinate,DHI.Mike1D.Generic.Spatial.Geometry.Vector,System.Double,System.Double,DHI.Mike1D.Generic.Spatial.Geometry.Coordinate@,DHI.Mike1D.Generic.Spatial.Geometry.Coordinate@)">
            <summary>
            From the point and using the direction unit vector, create
            two points left ad right of of the point in the given distance from the point.
            </summary>
            <param name="point">Point/origin to calculate new points from</param>
            <param name="directionVector">Direction</param>
            <param name="leftDistance">Distance to left coordinate</param>
            <param name="rightDistance">Distance to right coordinate</param>
            <param name="leftCoordinate">Left coordinate output</param>
            <param name="rightCoordinate">Right coordinate output</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.DistanceXY(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Distance in XY coordinates.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.DistanceSqXY(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Distance squared in XY coordinates.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.LocateAlong(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence,System.Double)">
            <summary>
            Locate a coordinate where the <paramref name="m"/> value
            is located in the <paramref name="coords"/>.
            </summary>
            <param name="coords"></param>
            <param name="m"></param>
            <returns>Coordinate, or null if m-value is outside m-span of coordinates</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.LocateAlong(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence,System.Double,DHI.Mike1D.Generic.ExtrapolationTypes)">
            <summary>
            Locate a coordinate where the <paramref name="m"/> value
            is located in the <paramref name="coords"/>.
            <para>
            If <paramref name="extrapolate"/> is true, the coordinates are
            extrapolated. If only one coordinate exist in coords, return that coordinate.
            </para>
            <para>
            Extrapoloation types 'Nearest' and 'Linear is supported'.
            </para>
            </summary>
            <returns>Coordinate, or null if m-value is outside m-span of coordinates</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.LocateAlong(DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence,System.Double,DHI.Mike1D.Generic.ExtrapolationTypes,System.Double)">
            <summary>
            Locate a coordinate where the <paramref name="m"/> value
            is located in the <paramref name="coords"/>.
            <para>
            If <paramref name="extrapolate"/> is true, the coordinates are
            extrapolated within the extrapolation distance. If only one coordinate exist in coords, return that coordinate.
            </para>
            <para>
            Extrapoloation types 'Nearest' and 'Linear is supported'.
            </para>
            </summary>
            <returns>Coordinate, or null if m-value is outside m-span of coordinates</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.Interpolate(System.Double,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinateSequence)">
             <summary>
             Interpolate two coordinate sequences.
             <para>
             The end-points of the sequences are interpolated similar to <see cref="M:DHI.Mike1D.Generic.Spatial.Geometry.Coordinate.Interpolate(System.Double,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)"/>.
             Internal points are included by inserting a similar internal point in the other sequence
             at matching relative m-value, and performing point interpolation on those points.
             </para>
             </summary>
            <param name="fraction">Fraction of 0 matches coords0, fraction 1 matches coords1</param>
             <param name="coords0">First sequence</param>
             <param name="coords1">Second sequence</param>
             <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Spatial.SpatialExtensions.ValidateIncreasingM(System.Collections.Generic.IList{DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate})">
            <summary>
            Validate that the M values are increasing. Returns -1 on success.
            <para>
            On failure, returns the index of the first coordinate that does not have increasing M.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.StringAlgorithms">
            <summary>
            Utility class with various string algorithms.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.StringAlgorithms.Count(System.String,System.Char)">
            <summary>
            Count the number of occurances of <paramref name="c"/> in the string <paramref name="source"/>.
            </summary>
            <param name="source">String to search</param>
            <param name="c">Character to find</param>
            <returns>Number of occurances of character</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.StringAlgorithms.CharactersInOrder(System.String,System.String)">
            <summary>
            Checks if the characters of one of the strings occur in order
            in the other string. Returns the number of characters in the two strings
            that match in order. The value will be between 0 and the size of the
            smallest string.
            <para>
            </para>
            <example>
            The following strings match, since the one fully contains the other in order
            <code>
            CharactersInOrder("BLUB","aBcLeUgBh") = 4
            CharactersInOrder("aBcLeUgBh","BLUB") = 4
            </code>
            The following strings differ by one, since the final B is missing in the long string
            <code>
            CharactersInOrder("BLUB","aBcLeUg") = 3
            CharactersInOrder("aBcLeUg","BLUB") = 3
            </code>
            </example>
            </summary>
            <param name="s1">String to search for</param>
            <param name="s2">String to search in</param>
            <returns>0 if full match, > 0 for partial match</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.StringAlgorithms.LevenshteinDistance(System.String,System.String)">
            <summary>
            Calculate the Levenshtein distance between two strings, i.e.
            the minimum number of edits in order to make the two strings equal
            </summary>
            <returns>0 if strings equals, a positive value if they differ</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.StringAlgorithms.LongestCommonSubsequence(System.String,System.String)">
            <summary>
            Calculate the Longest Common Subsequence.
            <para>
            It differs from problems of finding common substrings: unlike substrings, subsequences are 
            not required to occupy consecutive positions within the original sequences.
            </para>
            <example>
            The following strings match, since the one fully contains the other in order
            <code>
            LongestCommonSubsequence("BLUB","aBcLeUgBh") = 4
            LongestCommonSubsequence("aBcLeUgBh","BLUB") = 4
            </code>
            The following strings differ by one, since the final B is missing in the long string
            <code>
            LongestCommonSubsequence("BLUB","aBcLeUg") = 3
            LongestCommonSubsequence("aBcLeUg","BLUB") = 3
            </code>
            </example>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.StringAlgorithms.LevenshteinDistanceRef(System.String,System.String)">
            <summary>
            Calculate the Levenshtein distance between two strings, i.e.
            the minimum number of edits in order to make the two strings equal
            <para>
            Reference implementation that stores the entire distance matrix
            </para>
            </summary>
            <returns>0 if strings equals, a positive value if they differ</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.StringAlgorithms.SplitQuoted(System.String,System.Char,System.Char,System.StringSplitOptions)">
            <summary>
            Method to split a string that may contain quote characters for substrings.
            </summary>
            <param name="input">Input string</param>
            <param name="separator">Separator character</param>
            <param name="quotechar">String quote character</param>
            <param name="options">Flag to omit empty substrings</param>
            <returns>Array of substrings</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.StringAlgorithms.JoinQuoted(System.Char,System.Char,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Concatenates the members of a collection, using the specified separator between each member, and surrounding each non-null member by the specified quote char.
            </summary>
            <param name="separator">The string to use as a separator.separator is included in the returned string only if values has more than one element.</param>
            <param name="quotechar">The quote char is surrounding each non-null value. If a value is containing the quote char, it is escaped by a double quote char</param>
            <param name="values">Values to concatenate</param>
            <returns>A string that consists of the members of values surruonded by quotechar and delimited by the separator char. If values has no members, the method returns String.Empty.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.StringAlgorithms.JoinQuoted(System.Text.StringBuilder,System.Char,System.Char,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Concatenates the members of a collection, using the specified separator between each member, and surrounding each non-null member by the specified quote char,
            appending to StringBuilder
            </summary>
            <param name="separator">The string to use as a separator.separator is included in the returned string only if values has more than one element.</param>
            <param name="quotechar">The quote char is surrounding each non-null value. If a value is containing the quote char, it is escaped by a double quote char</param>
            <param name="values">Values to concatenate</param>
            <param name="builder">StringBuilder to use for concatenation</param>
            <returns>A string that consists of the members of values surruonded by quotechar and delimited by the separator char. If values has no members, the method returns String.Empty.</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.ITimeCheckPointSet">
            <summary>
            Interface for a check point set. It must be able to provide the next
            check point from some specified time.
            <para>
            A checkpoint is a point in time which the engine must hit exactly.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ITimeCheckPointSet.Prepare(System.DateTime,System.DateTime)">
            <summary>
            Prepare for simulation 
            </summary>
            <param name="simulationStart"></param>
            <param name="simulationEnd"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.ITimeCheckPointSet.GetCheckpoint(System.DateTime)">
            <summary>
            Get the first check point after the provided current time, or <see cref="F:System.DateTime.MaxValue"/>
            if no checkpoint exists after current time.
            </summary>
            <param name="currentTime">Time to find check point after</param>
            <returns>Check point after current time</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.EquidistantTimeCheckPointSet">
            <summary>
            Class implementing a check point set with equidistant time check points.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.EquidistantTimeCheckPointSet.#ctor(System.TimeSpan)">
            <summary>
             Create new object
            </summary>
            <param name="step">Step between check points</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.EquidistantTimeCheckPointSet.#ctor(System.DateTime,System.TimeSpan)">
            <summary>
             Create new object
            </summary>
            <param name="start">Start of check points</param>
            <param name="step">Step between check points</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.EquidistantTimeCheckPointSet.#ctor(System.DateTime,System.DateTime,System.TimeSpan)">
            <summary>
             Create new object
            </summary>
            <param name="start">Start of check points</param>
            <param name="end">End of check points</param>
            <param name="step">Step between check points</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.EquidistantTimeCheckPointSet.Prepare(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.EquidistantTimeCheckPointSet.GetCheckpoint(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeCheckPointController">
            <summary>
            The check point controller contains functionality for limiting the time
            step to a set of check points in time.
            <para>
            It contains itself a list of check points, where check points can be added, <see cref="P:DHI.Mike1D.Generic.TimeCheckPointController.CheckPoints"/>.
            </para>
            <para>
            It also contains a list of <see cref="T:DHI.Mike1D.Generic.ITimeCheckPointSet"/>, <see cref="P:DHI.Mike1D.Generic.TimeCheckPointController.CheckPointSets"/>, 
            in case a user implementation of a check point set is appropriate (e.g. constant equidistant check points)
            </para>
            <para>
            All check points within the list of check points and the list of check point sets will be considered as
            check points.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeCheckPointController._nLookAhead">
            <summary>
            Lookahead variables. dt is adjusted to hit checkpoints in _nLookAhead times steps.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeCheckPointController.LookAhead">
            <summary>
            Lookahead variables. dt is adjusted to hit checkpoints in _nLookAhead times steps.
            <para>
            Default is 2
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeCheckPointController.CheckPointSets">
            <summary>
            List of check point sets
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeCheckPointController.LimitToCheckPoint(System.DateTime,System.TimeSpan)">
            <summary>
            Make sure next timestep does not go past next CheckPoint. Assume checkpoints are 
            sorted increasingly.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeCheckPointController.LimitToCheckPoint(System.DateTime,System.TimeSpan,System.DateTime)">
            <summary>
            Make sure next timestep does not go past next CheckPoint.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeCheckPointController._timeCheckPoints">
            <summary>
            Checkpoint times. State variable
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeCheckPointController.CheckPoints">
            <summary>
            List of check points
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeCheckPointController.Prepare(System.DateTime,System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeCheckPointController.GetCheckpoint(System.DateTime)">
            <summary>
            Get the first check point after the provided current time, or <see cref="F:System.DateTime.MaxValue"/>
            if no checkpoint exists after current time.
            </summary>
            <param name="currentTime">Time to find check point after</param>
            <returns>Check point after current time</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeCheckPointController.SortCheckPoints">
            <summary>
            Sort check points. Must be called after all checkpoint have been added and before LimitToCheckPoint() is used
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeCheckPointController.AddCheckPoint(System.DateTime)">
            <summary>
            Add check point. Time series is written at each check point.
            </summary>
            <returns>True if added, false if already existing</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeCheckPointController.AddCheckPoints(System.Collections.Generic.List{System.DateTime})">
            <summary>
            Add check point. Time series is written at each check point.
            </summary>
            <returns>True if at least one check point was added, false if all of them already existed in the list</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.TargetData">
            <summary>
            Observed data for use in calibration Plot
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TargetData.GetTargetData(System.String,System.Int32,System.DateTime,System.DateTime,System.DateTime[]@,System.Double[]@)">
            <summary>
            Loads data from a time series (dfs0) file, only including
            data that are strictly within a start-end time interval
            <para>
            It also works for relative type time axis, in which case it 
            is assumed that the time series start at startTime.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.DataConverters.TsCheckDeleteValues">
            <summary>
            Convert unit and values to SI unit and values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.DataConverters.TsCheckDeleteValues.Convert(DHI.Mike1D.Generic.TimeSeries.TsItem,System.Array)">
            <summary>
            <para>
            Takes as input an array/ilist of values of some type and returns
            another array/ilist of some type.
            </para>
            <para>
            If the input object does not match the converter, it should return 
            the <paramref name="array"/> again.
            </para>
            <para>
            The input array may be modified in-place
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.DataConverters.TsCheckDeleteValues.Revert(DHI.Mike1D.Generic.TimeSeries.TsItem,System.Array)">
            <summary>
            <para>
            Takes as input an array/ilist of values of some type and returns
            another array/ilist of some type. Should produce the inverse 
            of the <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter.Convert(DHI.Mike1D.Generic.TimeSeries.TsItem,System.Array)"/> call
            </para>
            <para>
            If the input object does not match the converter, it should return 
            the <paramref name="array"/> again.
            <para>
            </para>
            The input array may be modified in-place
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.DataConverters.TsCheckDeleteValues.ConvertItem(DHI.Mike1D.Generic.TimeSeries.TsItem)">
            <summary>
            <para>
            Takes in one item and returns an item that matches the data conversion.
            </para>
            </summary>
            <example>
            If the <see cref="T:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter"/> converts from one unit to another, then
            this should convert the eumQuantity of the TsItem.
            </example>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.DataConverters.TsConvertMMToM">
            <summary>
            Converts units from millimeter to meter
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.DataConverters.TsConvertMMToM.Convert(DHI.Mike1D.Generic.TimeSeries.TsItem,System.Array)">
            <summary>
            <para>
            Takes as input an array/ilist of values of some type and returns
            another array/ilist of some type.
            </para>
            <para>
            If the input object does not match the converter, it should return 
            the <paramref name="array"/> again.
            </para>
            <para>
            The input array may be modified in-place
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.DataConverters.TsConvertMMToM.Revert(DHI.Mike1D.Generic.TimeSeries.TsItem,System.Array)">
            <summary>
            <para>
            Takes as input an array/ilist of values of some type and returns
            another array/ilist of some type. Should produce the inverse 
            of the <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter.Convert(DHI.Mike1D.Generic.TimeSeries.TsItem,System.Array)"/> call
            </para>
            <para>
            If the input object does not match the converter, it should return 
            the <paramref name="array"/> again.
            <para>
            </para>
            The input array may be modified in-place
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.DataConverters.TsConvertMMToM.ConvertItem(DHI.Mike1D.Generic.TimeSeries.TsItem)">
            <summary>
            <para>
            Takes in one item and returns an item that matches the data conversion.
            </para>
            </summary>
            <example>
            If the <see cref="T:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter"/> converts from one unit to another, then
            this should convert the eumQuantity of the TsItem.
            </example>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.DataConverters.TsConvertToSI">
            <summary>
            Convert unit and values to SI unit and values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.DataConverters.TsConvertToSI.Convert(DHI.Mike1D.Generic.TimeSeries.TsItem,System.Array)">
            <summary>
            <para>
            Takes as input an array/ilist of values of some type and returns
            another array/ilist of some type.
            </para>
            <para>
            If the input object does not match the converter, it should return 
            the <paramref name="array"/> again.
            </para>
            <para>
            The input array may be modified in-place
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.DataConverters.TsConvertToSI.Revert(DHI.Mike1D.Generic.TimeSeries.TsItem,System.Array)">
            <summary>
            <para>
            Takes as input an array/ilist of values of some type and returns
            another array/ilist of some type. Should produce the inverse 
            of the <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter.Convert(DHI.Mike1D.Generic.TimeSeries.TsItem,System.Array)"/> call
            </para>
            <para>
            If the input object does not match the converter, it should return 
            the <paramref name="array"/> again.
            <para>
            </para>
            The input array may be modified in-place
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.DataConverters.TsConvertToSI.ConvertItem(DHI.Mike1D.Generic.TimeSeries.TsItem)">
            <summary>
            <para>
            Takes in one item and returns an item that matches the data conversion.
            </para>
            </summary>
            <example>
            If the <see cref="T:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter"/> converts from one unit to another, then
            this should convert the eumQuantity of the TsItem.
            </example>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.DataConverters.TsConvertFloatToDouble">
            <summary>
             Class to convert a float times series to doubles and vice versa
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.DataConverters.TsConvertFloatToDouble.Convert(DHI.Mike1D.Generic.TimeSeries.TsItem,System.Array)">
            <summary>
            <para>
            Takes as input an array/ilist of values of floats and returns
            another array/ilist of doubles.
            </para>
            <para>
            If the input object does not match the converter, it should return 
            the <paramref name="array"/> again.
            </para>
            <para>
            The input array may be modified in-place
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.DataConverters.TsConvertFloatToDouble.Revert(DHI.Mike1D.Generic.TimeSeries.TsItem,System.Array)">
            <summary>
            <para>
            Takes as input an array/ilist of values of dobles and returns
            another array/ilist of floats. Should produce the inverse 
            of the <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter.Convert(DHI.Mike1D.Generic.TimeSeries.TsItem,System.Array)"/> call
            </para>
            <para>
            If the input object does not match the converter, it should return 
            the <paramref name="array"/> again.
            <para>
            </para>
            The input array may be modified in-place
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.DataConverters.TsConvertFloatToDouble.ConvertItem(DHI.Mike1D.Generic.TimeSeries.TsItem)">
            <summary>
            <para>
            Takes in one item and returns an item that matches the data conversion.
            </para>
            </summary>
            <example>
            If the <see cref="T:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter"/> converts from one unit to another, then
            this should convert the eumQuantity of the TsItem.
            </example>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.TsExtensions">
            <summary>
            Extension methods related to Time series
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsExtensions.IsAccumulated(DHI.Mike1D.Generic.TimeSeries.TsItemValueType)">
            <summary>
            Returns true if the <see cref="T:DHI.Mike1D.Generic.TimeSeries.TsItemValueType"/> is one of the accumulated
            ones - <see cref="F:DHI.Mike1D.Generic.TimeSeries.TsItemValueType.Accumulated"/> or <see cref="F:DHI.Mike1D.Generic.TimeSeries.TsItemValueType.StepAccumulated"/>.
            <para>
            For the other types, false is returned.
            </para>
            </summary>
            <param name="itemValueType">Item value type to check</param>
            <returns>True if an accumulated type</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsExtensions.GetNextTransitionTime(DHI.Mike1D.Generic.TimeSeries.TsItem,System.DateTime)">
            <summary>
            Returns the next transition time after the given dateTime for the time series item.
            A transition time is a time where the value of the time series item changes next.
            <para>
            If the specified time is equal to the latest time of the item, then the latest time is returned.
            </para>
            </summary>
            <param name="item">Time series item to get transition time for</param>
            <param name="dateTime">Date time to start search. It must be within the time series time.</param>
            <returns>Next time where time series item changes its value, or end time of time series</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsExtensions.GetNextTransitionTime(DHI.Mike1D.Generic.TimeSeries.TsItem,DHI.Mike1D.Generic.TimeSeries.TsTime,System.DateTime)">
            <summary>
            Returns the next transition time after the given dateTime for the time series item.
            A transition time is a time where the value of the time series item changes next.
            <para>
            If the specified time is equal to the latest time of the item, then the latest time is returned.
            </para>
            </summary>
            <param name="item">Time series item to get transition time for</param>
            <param name="dateTime">Date time to start search. It must be within the time series time.</param>
            <returns>Next time where time series item changes its value, or end time of time series</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.TsFactory">
            <summary>
             Factory class used to create time series objects
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsFactory.CreateEqCalendarAxis(System.DateTime,System.Double,System.Int32)">
            <summary>
             Create a time series with equidistant time steps
            </summary>
            <param name="startTime"></param>
            <param name="timestepInSeconds"></param>
            <param name="numberOfTimesteps"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsFactory.CreateEqRelativeAxis(System.Double,System.Int32,System.Double)">
            <summary>
             Create a time series with equidistant time steps
            </summary>
            <param name="timestepInSeconds"></param>
            <param name="numberOfTimesteps"></param>
            <param name="secondsInOneTimeUnit"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsFactory.CreateNonEqCalendarAxis(System.Collections.Generic.IList{System.DateTime})">
            <summary>
             Create a non-equidistant calendar axis
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsFactory.CreateNonEqRelativeAxis(System.Collections.Generic.IList{System.Double},System.Double)">
            <summary>
             Create a non-equidistant time axis
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsFactory.CreateItemData(DHI.Mike1D.Generic.TimeSeries.TsItemValueType,DHI.Mike1D.Generic.TimeSeries.ITsTime,System.Collections.Generic.IList{System.Double})">
            <summary>
             Create a time series from a list of doubles
            </summary>
            <param name="valueType"></param>
            <param name="time"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.ITsBridge">
            <summary>
            A bridge interface for loading a time series from file.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.ITsBridge.FilePath">
            <summary>
            Path to the file.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.ITsBridge.FileExists">
            <summary>
            Checks whether the file exists on the disc
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsBridge.Load(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Load the file. It includes loading the header and the data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsBridge.LoadHeader(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Load header information of the file. Data is not loaded
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsBridge.LoadData">
            <summary>
            Load data from the file. Header must already be loaded.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsBridge.LoadDataForItem(System.Int32)">
            <summary>
            Load data for the specified item number
            </summary>
            <param name="itemIndex">Number of item. Zero based.</param>
            TODO: Replace with some filter functionality
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.ITsBridge.Converters">
            <summary>
            Set of <see cref="T:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter"/> that should be applied to
            all data loaded by the bridge before data is passed on.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsBridge.Dispose">
            <summary>
            Dispose of internal data.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter">
            <summary>
            <para>
            An <see cref="T:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter"/> can be registered at an <see cref="T:DHI.Mike1D.Generic.TimeSeries.ITsBridge"/>.
            It converts the <see cref="P:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.Data"/> either to another type (ex. float to double), 
            or it can convert the actual numbers (ex. user unit to SI unit).
            </para>
            <para>
            The Converter should be applied to all data loaded by the bridge.
            </para>
            <para>
            The Reverter should be applied to all data stored by the bridge.
            </para>
            <para>
            <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter.ConvertItem(DHI.Mike1D.Generic.TimeSeries.TsItem)"/> should be called for an item before any of the
            <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter.Convert(DHI.Mike1D.Generic.TimeSeries.TsItem,System.Array)"/> or <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter.Revert(DHI.Mike1D.Generic.TimeSeries.TsItem,System.Array)"/> calls, in order to let the converter 
            do any required initialization.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter.Convert(DHI.Mike1D.Generic.TimeSeries.TsItem,System.Array)">
            <summary>
            <para>
            Takes as input an array/ilist of values of some type and returns
            another array/ilist of some type.
            </para>
            <para>
            If the input object does not match the converter, it should return 
            the <paramref name="array"/> again.
            </para>
            <para>
            The input array may be modified in-place
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter.Revert(DHI.Mike1D.Generic.TimeSeries.TsItem,System.Array)">
            <summary>
            <para>
            Takes as input an array/ilist of values of some type and returns
            another array/ilist of some type. Should produce the inverse 
            of the <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter.Convert(DHI.Mike1D.Generic.TimeSeries.TsItem,System.Array)"/> call
            </para>
            <para>
            If the input object does not match the converter, it should return 
            the <paramref name="array"/> again.
            <para>
            </para>
            The input array may be modified in-place
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter.ConvertItem(DHI.Mike1D.Generic.TimeSeries.TsItem)">
            <summary>
            <para>
            Takes in one item and returns an item that matches the data conversion.
            </para>
            </summary>
            <example>
            If the <see cref="T:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter"/> converts from one unit to another, then
            this should convert the eumQuantity of the TsItem.
            </example>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.ITsFilter">
            <summary>
            Interface defining core functionality for a filter.
            A filter defines which parts of the file that should be loaded.
            It can limit which items to load and which time-steps to load.
            TODO: Where to specify any conversions? type conversions (float to double). Unit conversions (user to SI).
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.ITsItemData">
            <summary>
            A generic item data interface.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.ITsItemData.DataArray">
            <summary>
            Data array of timeseries item data for each timestep. Its length matches the <see cref="P:DHI.Mike1D.Generic.TimeSeries.TsTime.NumberOfTimes"/>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1">
            <summary>
            An item data interface that supports interpolation in time.
            </summary>
            <typeparam name="T">Float, double, char or similar, that supports interpolation.</typeparam>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.Data">
            <summary>
            The time series item data (typed)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetData(System.Int32)">
            <summary>
            Get value for the given time step index.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetValue(System.DateTime)">
            <summary>
            Get value for the given DateTime.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetValue(System.DateTime,System.Int32@)">
            <summary>
            Get value for the given DateTime. Last interval is provided for 
            faster lookup.
            </summary>
            <param name="time"></param>
            <param name="lastInterval"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetAccumulatedValue(System.DateTime,System.DateTime)">
            <summary>
            <para>
            Get the accumulated value within the time interval. The accumulated value
            is the integral from start til end. 
            </para>
            <para>
            For the <see cref="F:DHI.Mike1D.Generic.TimeSeries.TsItemValueType.Accumulated"/>  it is the value difference 
            from start til end, and alike for for the <see cref="F:DHI.Mike1D.Generic.TimeSeries.TsItemValueType.StepAccumulated"/>, 
            </para>
            <para>
            If the item data does not fully cover the time interval, values outside the time interval
            are assumed to be zero.
            </para>
            </summary>
            <param name="start">Start of time interval</param>
            <param name="end">End of time interval</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetAccumulatedValue(System.DateTime,System.DateTime,System.Int32@)">
            <summary>
            <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetAccumulatedValue(System.DateTime,System.DateTime)"/>. This version
            provides a <paramref name="lastInterval"/> to look in first, for faster searching
            in the time series.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetMeanValue(System.DateTime,System.DateTime)">
            <summary>
            The mean value is the <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetAccumulatedValue(System.DateTime,System.DateTime)"/>
            divided by the time interval length (in seconds)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetMeanValue(System.DateTime,System.DateTime,System.Int32@)">
            <summary>
            <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetMeanValue(System.DateTime,System.DateTime,System.Int32@)"/>. This version
            provides a <paramref name="lastInterval"/> to look in first, for faster searching
            in the time series.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetMaxValue(System.DateTime,System.DateTime)">
            <summary>
            The maximum value within the time interval
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetMaxValue(System.DateTime,System.DateTime,System.Int32@)">
            <summary>
            <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetMaxValue(System.DateTime,System.DateTime)"/>. This version
            provides a <paramref name="lastInterval"/> to look in first, for faster searching
            in the time series.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetMinValue(System.DateTime,System.DateTime)">
            <summary>
            The minimum value within the time interval
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetMinValue(System.DateTime,System.DateTime,System.Int32@)">
            <summary>
            <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetMinValue(System.DateTime,System.DateTime)"/>. This version
            provides a <paramref name="lastInterval"/> to look in first, for faster searching
            in the time series.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.TsTimeType">
            <summary>
            Time axis type
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsTimeType.Undefined_Time">
            <summary>
            Undefined time axis.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsTimeType.Equidistant_Relative">
            <summary>
            Equidistant relative time axis. Times are seconds since start of time series.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsTimeType.Non_Equidistant_Relative">
            <summary>
            Non-equidistant relative time axis. Times are seconds since start of time series.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsTimeType.Equidistant_Calendar">
            <summary>
            Equidistant calendar axis. Times are DateTime
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsTimeType.Non_Equidistant_Calendar">
            <summary>
            Non-Equidistant calendar axis. Times are DateTime
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.ITsTime">
            <summary>
             Interface to the time information of a time series collection
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.ITsTime.TimeType">
            <summary>
            Type of time axis.
            </summary>
            <remarks>
            This can not be changed. If a new time axis is required, 
            then a new ITsTime object must be initialized.
            </remarks>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.ITsTime.NumberOfTimes">
            <summary>
            Number of time steps.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.ITsTime.SecondsPerTimeUnit">
            <summary>
            Factor to scale from relative time unit to seconds
            Ex: An hour_based relative time axis would have
            <code>
            SecondsPerTimeUnit = (60*60);
            </code>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.ITsTime.StartTime">
            <summary>
            Start time of time series. For a calendar axis <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsTime.IsCalendarAxis"/> this
            is retrieved from the time series. For a relative time axis this must be set before
            any call to any of the GetValue calls with a DateTime argument, as e.g. 
            <see cref="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetValue(System.DateTime)"/>. It is not required to be set
            if using the <see cref="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetValue(System.Double)"/> version.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.ITsTime.EndTime">
            <summary>
            End time of time series. For a calendar axis <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsTime.IsCalendarAxis"/> this
            is retrieved from the time series. For a relative time axis this is the <see cref="P:DHI.Mike1D.Generic.TimeSeries.ITsTime.StartTime"/>
            plus the time series span. The <see cref="P:DHI.Mike1D.Generic.TimeSeries.ITsTime.StartTime"/> must be set before
            this returns anything usefull.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsTime.GetTime(System.Int32)">
            <summary>
            Returns the relative time at the given index
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsTime.RelativeTime(System.DateTime)">
            <summary>
            Return the relative time value of the input time
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.ITsTime.RelativeTimes">
            <summary>
            Times in seconds from the start of the time series.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsTime.DateTime(System.Int32)">
            <summary>
            Date time for timestep. For non-calendar axis, the start time must be explicitly set.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsTime.IsCalendarAxis">
            <summary>
            Returns true if the time axis is a calendar axis
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsTime.IsEquidistantAxis">
            <summary>
            Returns true if the time axis is equidistant
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsTime.GetInterval(System.Double,System.Double@)">
            <summary>
            <para>
            Finds the interval in the time vector where the argument lays in between.
            </para>
            <para>
            If argument is below the first value, 0
            is returned. If argument is above last value, the length of the vector is returned.
            </para>
            <para>
            The result is the interval number, one based, meaning that the arg fullfills:
            <code>(vector[res-1] &lt; arg &amp;&amp; arg &lt;= vector[res])</code>
            </para>
            <para>
            Also the scale factor for interpolating is returned. For linear interpolation
            <code>arg = vector[res-1] + fraction*(vector[res]-vector[res-1])</code>
            or
            <code>arg = (1-fraction)*vector[res-1] + fraction*vector[res]</code>
            </para>
            <para>
            If arg exists in vector, the result is such that 
            <code>arg = vector[res]</code>
            i.e., fraction is one (except when arg = vector[0], then res = 1 and fraction = 0).
            </para>
            </summary>
            <param name="relativeTime">Time to look up, relative to start of time series</param>
            <param name="fraction">number with wich to scale the highest</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.ITsTime.GetInterval(System.Double,System.Double@,System.Int32)">
            <summary>
            Same as <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsTime.GetInterval(System.Double,System.Double@)"/>, apart from
            that the lastInterval is searched first. This is an optimized version
            when successive calls returns interval that are nearby.
            </summary>
            <param name="time">Time to look up</param>
            <param name="fraction">number with wich to scale the highest</param>
            <param name="lastInterval">Interval to look in first.</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.TsBuffer">
            <summary>
            <para>
            Class that contains a number of timeseries. In case of more than
            one component needing access to the same timeseries file, it should
            only be opened once (performance/ressource issues). Hence, each component using a 
            timeseries file should ask this timeseries buffer for the file
            and if it already exist in the buffer, that one will be used.
            </para>
            <para>
            It also registers which items are currently used.
            </para>
            <para>
            Each timeseries file is idenfitied by its full filepath name.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsBuffer._registeredCollections">
            <summary>
            Dictionary holding key lower case file names and value <see cref="T:DHI.Mike1D.Generic.TimeSeries.TsBuffer.TsRegisteredCollection"/>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsBuffer._tsLoadState">
            <summary>
            Flag specifying whether data has been loaded for all timeseries in the buffer (by e.g., <see cref="M:DHI.Mike1D.Generic.TimeSeries.TsBuffer.LoadAll(DHI.Mike1D.Generic.IDiagnostics)"/>)
            It returns <see cref="F:DHI.Mike1D.Generic.TimeSeries.TsLoadState.DataLoaded"/> if all data has been loaded, 
            or <see cref="F:DHI.Mike1D.Generic.TimeSeries.TsLoadState.HeaderLoaded"/> if only the header has been loaded.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsBuffer.RegisteredFilePaths">
            <summary>
             Return a list of all the filepaths registered in this buffer
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsBuffer.RegisterTS(DHI.Mike1D.Generic.IFilePath,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Register a timeseries file based on the filepath name. If file already
            exist in buffer, the existing will be returned, otherwise it will
            be added to the buffer and returned.
            </summary>
            <param name="filePath">Path name to time series file</param>
            <param name="diagnostics">Diagnostics item</param>
            <returns>A time series object holder</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsBuffer.RegisterTS(DHI.Mike1D.Generic.IFilePath,DHI.Mike1D.Generic.DiagnosticsValue,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Register a timeseries file based on the filepath name. If file already
            exist in buffer, the existing will be returned, otherwise it will
            be added to the buffer and returned.
            </summary>
            <param name="filePath">Path name to time series file</param>
            <param name="locationDiagnosticsValue">Location that is related to the time series. Use null if not relevant.</param>
            <param name="diagnostics">Diagnostics item</param>
            <returns>A time series object holder</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsBuffer.RegisterTS(DHI.Mike1D.Generic.IFilePath,System.Int32,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Register a timeseries file based on the filepath name. If file already
            exist in buffer, the existing will be returned, otherwise it will
            be added to the buffer and returned. The item is also registered for usage
            </summary>
            <param name="filePath">Path name to time series file</param>
            <param name="itemIndex">Index of item to register</param>
            <param name="diagnostics"></param>
            <returns>A time series object holder</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsBuffer.RegisterTS(DHI.Mike1D.Generic.IFilePath,System.Int32,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Register a timeseries file based on the filepath name. If file already
            exist in buffer, the existing will be returned, otherwise it will
            be added to the buffer and returned. The item is also registered for usage
            </summary>
            <param name="filePath">Path name to time series file</param>
            <param name="itemIndex">Index of item to register</param>
            <param name="convertToSI">Flag indicating whether to convert TS data to SI units </param>
            <param name="diagnostics"></param>
            <returns>A time series object holder</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsBuffer.RegisterTS(DHI.Mike1D.Generic.IFilePath,System.Int32,DHI.Generic.MikeZero.eumQuantity,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Register a timeseries file based on the filepath name. If file already
            exist in buffer, the existing will be returned, otherwise it will
            be added to the buffer and returned. The item is also registered for usage
            </summary>
            <param name="filePath">Path name to time series file</param>
            <param name="n">Register the n'th item of specified type</param>
            <param name="eumQuantity">Type of items to consider when searching in TsCollection</param>
            <param name="diagnostics"></param>
            <returns>A time series object holder</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsBuffer.FindOrCreateTsRegisteredCollection(DHI.Mike1D.Generic.IFilePath,DHI.Mike1D.Generic.DiagnosticsValue,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Registers a <see cref="T:DHI.Mike1D.Generic.TimeSeries.TsBuffer.TsRegisteredCollection"/> in the buffer.
            You should always also call <see cref="!:TsBuffer.RegisterItem(TsCollection,int)"/> to 
            register the use of individual items.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsBuffer.UnregisterCollection(DHI.Mike1D.Generic.TimeSeries.TsCollection)">
            <summary>
            Remove collection from TsBuffer
            </summary>
            <param name="tsCollection"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsBuffer.RegisterItem(DHI.Mike1D.Generic.TimeSeries.TsBuffer.TsRegisteredCollection,System.Int32,DHI.Mike1D.Generic.TimeSeries.TsItemProperties)">
            <summary>
            Increment the register count for the <paramref name="itemIndex"/>
            of the <see cref="T:DHI.Mike1D.Generic.TimeSeries.TsBuffer.TsRegisteredCollection"/>.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsBuffer.RegisterItem(DHI.Mike1D.Generic.TimeSeries.TsCollection,System.Int32,System.Boolean)">
            <summary>
            Register an item of an already registered <see cref="T:DHI.Mike1D.Generic.TimeSeries.TsCollection"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsBuffer.TryLoadItemData(DHI.Mike1D.Generic.TimeSeries.TsCollection,System.Int32)">
            <summary>
            Tries to load the <paramref name="itemIndex"/> item from the <paramref name="tsc"/>
            It will do nothing if the the header is not loaded, if data is already loaded, or if the
            item does not exist in the file.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsBuffer.TryLoadMissingHeaders(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Loads the header (tries to) for all <see cref="T:DHI.Mike1D.Generic.TimeSeries.TsCollection"/>s 
            in the buffer that has not yet loaded the header.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsBuffer.LoadAll(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Loads data for all registered items in buffer. Data is not reloaded.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsBuffer.Contains(DHI.Mike1D.Generic.IFilePath)">
            <summary>
            Checks if a file is already in the buffer.
            </summary>
            <param name="filePath">Path name of the file</param>
            <returns>True if in the buffer, false otherwise</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsBuffer.Count">
            <summary>
            Return the number of TimeSeriesObjects in the buffer.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsBuffer.DisposeAllBridges">
            <summary>
            Dispose of internal data for all bridges. It will perform tasks like close down files
            and database connections for all bridges.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsBuffer.TsBufferDataLoaded">
            <summary>
            Return TRUE is the TsBuffer has not been loaded yet
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.TsBuffer.TsRegisteredCollection">
            <summary>
            Helper class handling the number of times an item 
            is registered as used in the simulation.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsBuffer.TsRegisteredCollection._itemRegistererCount">
            <summary>
            Using a dictionary, since if the file is not found, then we can not
            know how many items are in the file.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.TsLoadState">
            <summary>
            Load state of a time series file
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsLoadState.NonLoaded">
            <summary>
            Nothing has been loaded yet.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsLoadState.HeaderLoaded">
            <summary>
            only the header data has been loaded
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsLoadState.DataLoaded">
            <summary>
            Data has been loaded. Not necessary data for all items.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.TsCollection">
            <summary>
            Contains a collection of time series, often matching
            the time series of one file.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsCollection.#ctor">
            <summary>
            Private constructor. Use one of the static <see cref="M:DHI.Mike1D.Generic.TimeSeries.TsCollection.Create(System.String)"/> 
            to create a new TsCollection
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsCollection.Bridge">
            <summary>
            Bridge to time series data. Handles loading and unloading
            of header and data
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsCollection.Time">
            <summary>
            Returns a <see cref="T:DHI.Mike1D.Generic.TimeSeries.TsTime"/> containing the temporal information of the time series.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsCollection.Count">
            <summary>
            Returns the number of items in the time series.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsCollection.LoadState">
            <summary>
            The load state of this <see cref="T:DHI.Mike1D.Generic.TimeSeries.TsCollection"/>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsCollection.DeleteValue">
            <summary>
            Delete value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsCollection.Add(DHI.Mike1D.Generic.TimeSeries.TsItem)">
            <summary>
            Add the TsItem to the collection
            </summary>
            <param name="tsItem"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsCollection.ItemCount">
            <summary>
            Number of items in collection
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsCollection.GetItem(System.Int32)">
            <summary>
            Return a <see cref="T:DHI.Mike1D.Generic.TimeSeries.TsItem"/> representing the specifed item number.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsCollection.GetItemIndex(System.Int32,DHI.Generic.MikeZero.eumQuantity)">
            <summary>
            Get the index of the n'th item of the specified quantity. If the TsCoollection has 2 water level items and 3 discharge items,
            then asking for the 0'th discharge item will return 2.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsCollection.Create(System.String)">
            <summary>
            Creates a new <see cref="T:DHI.Mike1D.Generic.TimeSeries.TsCollection"/> based on the file name. Header or data is not loaded.
            By default values are converted to SI units
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsCollection.Create(System.String,System.Collections.Generic.IList{DHI.Mike1D.Generic.TimeSeries.ITsDataConverter})">
            <summary>
            Creates a new <see cref="T:DHI.Mike1D.Generic.TimeSeries.TsCollection"/> based on the file name. Header or data is not loaded.
            Applies the <paramref name="converters"/> when loading the file.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsCollection.GetNextTransitionTime(System.Int32,System.DateTime)">
            <summary>
            Returns the next transition time after the given dateTime for the specified item index.
            If the specified time is equal to the latest time, then the latest time is returned.
            <para>
            A transition time is a time where the value changes.
            </para>
            </summary>
            <param name="itemIndex"></param>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble">
            <summary>
            Data for one <see cref="T:DHI.Mike1D.Generic.TimeSeries.TsItem"/>.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.DataArray">
            <summary>
            Data array of timeseries item data for each timestep. Its length matches the <see cref="P:DHI.Mike1D.Generic.TimeSeries.TsTime.NumberOfTimes"/>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.Data">
            <summary>
            The time series item data (typed)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.Item(System.Int32)">
            <summary>
            Get data value for the given time step index.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetData(System.Int32)">
            <summary>
            Get data value for the given time step index.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.StartTime">
            <summary>
            Time series start time
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.EndTime">
            <summary>
            Time series end time
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetData(System.DateTime)">
            <summary>
            Gets the raw data for the given time. It differs
            from the <see cref="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetValue(System.DateTime)"/> for
            the <see cref="F:DHI.Mike1D.Generic.TimeSeries.TsItemValueType.StepAccumulated"/> and
            the <see cref="F:DHI.Mike1D.Generic.TimeSeries.TsItemValueType.Accumulated"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetData(System.DateTime,System.Int32@)">
            <summary>
            Gets the raw data for the given time. It differs
            from the <see cref="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetValue(System.DateTime)"/> for
            the <see cref="F:DHI.Mike1D.Generic.TimeSeries.TsItemValueType.StepAccumulated"/> and
            the <see cref="F:DHI.Mike1D.Generic.TimeSeries.TsItemValueType.Accumulated"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetInterval(System.DateTime,System.Double@)">
            <summary>
            Get interval for time
            </summary>
            <param name="time"></param>
            <param name="fraction"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetData(System.Double,System.Int32@)">
            <summary>
            Gets the raw data for the given time since start of the time series. 
            It differs from the <see cref="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetValue(System.DateTime)"/> for
            the <see cref="F:DHI.Mike1D.Generic.TimeSeries.TsItemValueType.StepAccumulated"/> and
            the <see cref="F:DHI.Mike1D.Generic.TimeSeries.TsItemValueType.Accumulated"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetValue(System.DateTime)">
            <summary>
            Get value for the given Date_time.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetValue(System.DateTime,System.Int32@)">
            <summary>
            Get value for the given Date_time. Last interval is provided for 
            faster lookup.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetValue(System.Double)">
            <summary>
            Get value for the given relative time.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetValue(System.Double,System.Int32@)">
            <summary>
            Get value for the given relative time. Last interval is provided for 
            faster lookup.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetAccumulatedValue(System.DateTime,System.DateTime)">
            <summary>
            <para>
            Get the accumulated value within the time interval. The accumulated value
            is the integral from start til end. 
            </para>
            <para>
            For the <see cref="F:DHI.Mike1D.Generic.TimeSeries.TsItemValueType.Accumulated"/>  it is the value difference 
            from start til end, and alike for for the <see cref="F:DHI.Mike1D.Generic.TimeSeries.TsItemValueType.StepAccumulated"/>, 
            </para>
            <para>
            If the item data does not fully cover the time interval, values outside the time interval
            are assumed to be zero.
            </para>
            </summary>
            <param name="start">Start of time interval</param>
            <param name="end">End of time interval</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetAccumulatedValue(System.DateTime,System.DateTime,System.Int32@)">
            <summary>
            <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetAccumulatedValue(System.DateTime,System.DateTime)"/>. This version
            provides a <paramref name="lastInterval"/> to look in first, for faster searching
            in the time series.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetAccumulatedValue(System.Double,System.Double)">
            <summary>
            <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetAccumulatedValue(System.DateTime,System.DateTime)"/>. This version
            uses relative times.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetAccumulatedValue(System.Double,System.Double,System.Int32@)">
            <summary>
            <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetAccumulatedValue(System.DateTime,System.DateTime)"/>. This version
            uses relative times and provides a <paramref name="lastInterval"/> to look in first, 
            for faster searching in the time series.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetMeanValue(System.DateTime,System.DateTime)">
            <summary>
            The mean value is the <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetAccumulatedValue(System.DateTime,System.DateTime)"/>
            divided by the time interval length (in seconds). NOT IMPLEMENTED.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetMeanValue(System.DateTime,System.DateTime,System.Int32@)">
            <summary>
            <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetMeanValue(System.DateTime,System.DateTime,System.Int32@)"/>. This version
            provides a <paramref name="lastInterval"/> to look in first, for faster searching
            in the time series. NOT IMPLEMENTED.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetMaxValue(System.DateTime,System.DateTime)">
            <summary>
            The maximum value within the time interval. NOT IMPLEMENTED.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetMaxValue(System.DateTime,System.DateTime,System.Int32@)">
            <summary>
            <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetMaxValue(System.DateTime,System.DateTime)"/>. This version
            provides a <paramref name="lastInterval"/> to look in first, for faster searching
            in the time series. NOT IMPLEMENTED.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetMinValue(System.DateTime,System.DateTime)">
            <summary>
            The minimum value within the time interval. NOT IMPLEMENTED.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.GetMinValue(System.DateTime,System.DateTime,System.Int32@)">
            <summary>
            <see cref="M:DHI.Mike1D.Generic.TimeSeries.ITsItemData`1.GetMinValue(System.DateTime,System.DateTime)"/>. This version
            provides a <paramref name="lastInterval"/> to look in first, for faster searching
            in the time series. NOT IMPLEMENTED.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble.Create(DHI.Mike1D.Generic.TimeSeries.TsItem)">
            <summary>
             Create double data item for a time series
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.TsItemValueType">
            <summary>
            Enumeration defining the meaning of the value in the time series.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsItemValueType.Instantaneous">
            <summary>
            The values are representative at one precise instance of time.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsItemValueType.BackwardStep">
            <summary>
            The values are representative of the average value 
            over one time step, from the previous time step to this time step.
            </summary>
            <remarks>
            This is what is called Mean_Step_Accumulated in the DFS system
            </remarks>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsItemValueType.ForwardStep">
            <summary>
            The values are representative of the average value 
            over one time step, from the this time step to the next time step.
            </summary>
            <remarks>
            This is what is called Reverse_Mean_Step_Accumulated in the DFS system
            </remarks>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsItemValueType.Accumulated">
            <summary>
            The values are representative of successive accumulation of
            values since the start of the timeseries. First values in the 
            timeseries must be zero.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsItemValueType.StepAccumulated">
            <summary>
            The values are representative of accumulation over one time step.
            </summary>
            <example>
            For example, rainfall can be measured in a step-accumulated fashion. 
            We start measuring rainfall at 10:00:00 by setting up a recipient. 
            At 11:00:00 the value of 10 is registered and the recipient is emptied.
            At 12:00:00 the same process but with a value of 15 and so on. 
            In the timeseries we get the value 10 at Timestep 11:00:00 and the value 
            15 at Timestep 12:00:00 and so on.
            </example>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.TsItem">
            <summary>
            One time series item, containing one time series
            of a specified type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsItem.ValueType">
            <summary>
            Defining the meaning of the values in the time series.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItem.#ctor(DHI.Mike1D.Generic.TimeSeries.TsCollection)">
            <summary>
            Crate a TsItem that belongs to tsCollection
            </summary>
            <param name="tsCollection"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsItem.Collection">
            <summary>
            Collection that item is part of
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsItem.DataType">
            <summary>
            Type of data in the timeseries.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsItem.DataIsLoaded">
            <summary>
            Retruns true if data has been loaded. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsItem.Data">
            <summary>
            <para>
            Retrieves a <see cref="T:DHI.Mike1D.Generic.TimeSeries.TsItemDataDouble"/> object containing
            the actual data of the TSItem. 
            </para>
            <para>
            Data is only available if the TS has been populated with data. If data is not available
            <see cref="P:DHI.Mike1D.Generic.TimeSeries.TsItem.Data"/> will throw an exception
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsItem.EumQuantity">
            <summary>
            Retrieves the <see cref="P:DHI.Mike1D.Generic.TimeSeries.TsItem.EumQuantity"/> of the
            item.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsItem.Name">
            <summary>
            Name/description of the item.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsItem.Properties">
            <summary>
            Additional properties of item
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsItem.Create(System.Type,DHI.Mike1D.Generic.TimeSeries.TsItemValueType,DHI.Generic.MikeZero.eumQuantity)">
            <summary>
             Factory method to create a time series item with a specific type, value type and quantity
            </summary>
            <param name="dataType"></param>
            <param name="valueType"></param>
            <param name="eumquantity"></param>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.TSOBridge">
            <summary>
            Bridge for reading a time series file (dfs0)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TSOBridge.FilePath">
            <summary>
            Path to the file.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TSOBridge.FileExists">
            <summary>
            Checks whether the file exists on the disc
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TSOBridge.Load(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Load the file. It includes loading the header and the data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TSOBridge.LoadHeader(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Load header information of the file. Data is not loaded
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TSOBridge.LoadData">
            <summary>
            Load data from the file. Header must already be loaded.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TSOBridge.LoadDataForItem(System.Int32)">
            <summary>
            Load data for the specified item number
            </summary>
            <param name="itemIndex">Number of item. Zero based.</param>
            TODO: Replace with some filter functionality
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TSOBridge.Converters">
            <summary>
            Set of <see cref="T:DHI.Mike1D.Generic.TimeSeries.ITsDataConverter"/> that should be applied to
            all data loaded by the bridge before data is passed on.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TSOBridge.Dispose">
            <summary>
            Dispose of internal data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TSOBridge.Create(DHI.Mike1D.Generic.TimeSeries.TsCollection,System.Collections.Generic.IList{DHI.Mike1D.Generic.TimeSeries.ITsDataConverter},System.String)">
            <summary>
             Factory method to create a TSOBridge
            </summary>
            <param name="collection"></param>
            <param name="converters"></param>
            <param name="fileName"> </param>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeSeries.TsTime">
            <summary>
            Class handling non-equidistant calendar time time series.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsTime._startTime">
            <summary>
            For non-equidistant calendar axis this is set to the first time.
            For relative axis, this can be set by user.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsTime._secondsToRelativeFactor">
            <summary>
            Factor to scale number of seconds to get the relative time axis unit.
            Ex: An hour_based relative time axis would have
            <code>
            _secondsToRelativeFactor = 1 / (60*60);
            </code>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsTime._secondsPerTimeUnit">
            <summary>
            Factor to scale from relative time unit to seconds
            Ex: An hour_based relative time axis would have
            <code>
            _secondsPerTimeUnit = (60*60);
            </code>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsTime._relativeTimes">
            <summary>
            For both calendar and relative axis, this contains time 
            (usually seconds) since start of time series. 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsTime._timeSpanInSecs">
            <summary>
            Time span of file, in seconds
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsTime._timeDt">
            <summary>
            Time step in seconds for equidistant axis
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeSeries.TsTime._nTimes">
            <summary>
            Number of times for equidistant axis.
            </summary>
            <remarks>
            Remember to keep updated for non-equidistant axis
            </remarks>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsTime.TimeType">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsTime.StartTime">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsTime.EndTime">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsTime.TimeSpan">
            <summary>
            Time span in seconds of data in file.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsTime.Dt">
            <summary>
            Time step in seconds. Only valid when <see cref="M:DHI.Mike1D.Generic.TimeSeries.TsTime.IsEquidistantAxis"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsTime.RelativeTime(System.DateTime,System.DateTime)">
            <summary>
            Return the relative time value of the input <paramref name="time"/>, 
            having <paramref name="startTime"/> as zero for the relative axis
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsTime.RelativeTime(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsTime.ToDateTime(System.Double)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsTime.RelativeTimes">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsTime.DateTime(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsTime.IsCalendarAxis">
            <summary>
            Returns true if the time axis is a calendar time axis. It returns false for an <see cref="F:DHI.Mike1D.Generic.TimeSeries.TsTimeType.Undefined_Time"/>
            and any of the relative time axis.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsTime.IsEquidistantAxis">
            <summary>
            Returns true if the time axis is an equidistant time axis.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsTime.NumberOfTimes">
            <summary>
            Returns the number of times/values in the time series
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TimeSeries.TsTime.SecondsPerTimeUnit">
            <summary>
            Factor to scale from relative time unit to seconds
            Ex: An hour_based relative time axis would have
            <code>
            _secondsPerTimeUnit = (60*60);
            </code>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsTime.GetInterval(System.Double,System.Double@)">
            <summary>
            <para>
            Finds the interval in the time vector where the argument lays in between.
            </para>
            <para>
            If argument is below the first value, 0
            is returned. If argument is above last value, the length of the vector is returned.
            </para>
            <para>
            The result is the interval number, one based, meaning that the arg fullfills:
            <code>(vector[res-1] &lt; arg &amp;&amp; arg &lt;= vector[res])</code>
            </para>
            <para>
            Also the scale factor for interpolating is returned. For linear interpolation
            <code>arg = vector[res-1] + fraction*(vector[res]-vector[res-1])</code>
            or
            <code>arg = (1-fraction)*vector[res-1] + fraction*vector[res]</code>
            </para>
            <para>
            If arg exists in vector, the result is such that 
            <code>arg = vector[res]</code>
            i.e., fraction is one (except when arg = vector[0], then res = 1 and fraction = 0).
            </para>
            </summary>
            <param name="relativeTime">Time to look up, relative to start of time series</param>
            <param name="fraction">number with wich to scale the highest</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsTime.GetInterval(System.Double,System.Double@,System.Int32)">
            <summary>
            Same as <see cref="M:DHI.Mike1D.Generic.TimeSeries.TsTime.GetInterval(System.Double,System.Double@)"/>, apart from
            that the lastInterval is searched first. This is an optimized version
            when successive calls returns interval that are nearby.
            </summary>
            <param name="relativeTime">Time to look up</param>
            <param name="fraction">number with wich to scale the highest</param>
            <param name="lastInterval">Interval to look in first.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsTime.GetEquidistantInterval(System.Double,System.Double@)">
            <summary>
            Returns the same as <see cref="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.Double,System.Double[],System.Double@)"/>
            for an equidistant time axis, where only <see cref="F:DHI.Mike1D.Generic.TimeSeries.TsTime._timeDt"/> is required (start
            time is assumed to be zero)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsTime.IsCalendarAxis(DHI.Mike1D.Generic.TimeSeries.TsTimeType)">
            <summary>
            Returns true if the time axis is a calendar time axis. It returns false for an <see cref="F:DHI.Mike1D.Generic.TimeSeries.TsTimeType.Undefined_Time"/>
            and any of the relative time axis.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsTime.IsEquidistantAxis(DHI.Mike1D.Generic.TimeSeries.TsTimeType)">
            <summary>
            Returns true if the time axis is an equidistant time axis.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TimeSeries.TsTime.GetTime(System.Int32)">
            <summary>
            Returns the relative time at the given index
            </summary>
            <remarks>
            Implemented like this in order to make the time available
            </remarks>
        </member>
        <member name="T:DHI.Mike1D.Generic.MergeSort">
            <summary>
            Class performing a merge sort of an <see cref="T:System.Collections.Generic.IList`1"/>.
            <para>
            It contains methods for both the iterative and recursive algorithm. The recursive
            is provided for reference only, use the iterative when possible.
            </para>
            <para>
            As compared to <see cref="T:DHI.Mike1D.Generic.QuickSort`1"/>, merge sort is stable
            (preserves order of equal elements), but uses more memory (an extra
            array of the same size). Quick sort is un-stable, but performs in-place
            sorting.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MergeSort.Sort``1(System.Collections.Generic.IList{``0})">
            <summary>
            Sort the entire list
            </summary>
            <typeparam name="TT">Type of elements in the list</typeparam>
            <param name="list">List</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MergeSort.Sort``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Sort the entire list
            </summary>
            <typeparam name="TT">Type of elements in the list</typeparam>
            <param name="list">List</param>
            <param name="comparer">Comparer to use in sorting</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MergeSort.Sort``1(System.Collections.Generic.IList{``0},System.Comparison{``0})">
            <summary>
            Sort the entire list
            </summary>
            <typeparam name="TT">Type of elements in the list</typeparam>
            <param name="list">List</param>
            <param name="comparison">Comparer to use in sorting</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MergeSort.Merge``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32,System.Int32,System.Comparison{``0},System.Collections.Generic.IList{``0})">
            <summary>
            Merge two consequtive parts of an array, where the left part 
            starts at <paramref name="left"/> index, the right
            part starts at <paramref name="right"/> index
            and ends at <paramref name="last"/> index.
            </summary>
            <param name="a">Array to sort </param>
            <param name="left">Start index of left part</param>
            <param name="right">Start index of right part</param>
            <param name="last">End index of right part</param>
            <param name="comparer">Comparison object </param>
            <param name="b">Temporary array, size of a</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MergeSort.SortRecursive``1(System.Collections.Generic.IList{``0})">
            <summary>
            Sort the entire list, using recursive algorithm
            </summary>
            <typeparam name="TT">Type of elements in the list</typeparam>
            <param name="list">List</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MergeSort.SortRecursive``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Sort the entire list, using recursive algorithm
            </summary>
            <typeparam name="TT">Type of elements in the list</typeparam>
            <param name="list">List</param>
            <param name="comparer">Comparer to use in sorting</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MergeSort.SortRecursive``1(System.Collections.Generic.IList{``0},System.Comparison{``0})">
            <summary>
            Sort the entire list, using recursive algorithm
            </summary>
            <typeparam name="TT">Type of elements in the list</typeparam>
            <param name="list">List</param>
            <param name="comparer">Comparer to use in sorting</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.MergeSort`1">
            <summary>
            Class performing a merge sort of an <see cref="T:System.Collections.Generic.IList`1"/>
            <para>
            This class contains method for performing merge sort using the traditional recursive approach.
            This class is provided for reference, the iterative approach in <see cref="M:DHI.Mike1D.Generic.MergeSort.Sort``1(System.Collections.Generic.IList{``0})"/> is preferable.
            </para>
            <para>
            As compared to <see cref="T:DHI.Mike1D.Generic.QuickSort`1"/>, merge sort is stable
            (preserves order of equal elements), but uses more memory (an extra
            array of the same size). Quick sort is un-stable, but performs in-place
            sorting.
            </para>
            </summary>
            <typeparam name="T">Type of elements in the list</typeparam>
        </member>
        <member name="M:DHI.Mike1D.Generic.MergeSort`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Creates an instance for sorting
            </summary>
            <param name="list">List to sort</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MergeSort`1.#ctor(System.Collections.Generic.IList{`0},System.Collections.Generic.IComparer{`0})">
            <summary>
            Creates an instance for sorting
            </summary>
            <param name="list">List to sort</param>
            <param name="comparer">Comparer to use when sorting</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MergeSort`1.#ctor(System.Collections.Generic.IList{`0},System.Comparison{`0})">
            <summary>
            Creates an instance for sorting
            </summary>
            <param name="list">List to sort</param>
            <param name="comparer">Comparer to use when sorting</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MergeSort`1.Sort">
            <summary>
            Sort the entire list
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MergeSort`1.Sort(System.Int32,System.Int32)">
            <summary>
            Sort list within the provided indices (inclusive)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MergeSort`1.Merge``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32,System.Int32,System.Comparison{``0},System.Collections.Generic.IList{``0})">
            <summary>
            Merge two consequtive parts of an array, where the left part 
            starts at <paramref name="left"/> index, the right
            part starts at <paramref name="right"/> index
            and ends at <paramref name="last"/> index.
            </summary>
            <param name="a">Array to sort </param>
            <param name="left">Start index of left part</param>
            <param name="right">Start index of right part</param>
            <param name="last">End index of right part</param>
            <param name="comparer">Comparison object </param>
            <param name="b">Temporary array, size of a</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.ReachLocationValue`1">
            <summary>
            A value on a reach. If on a span, then both start and end chainage is set,
            if on a location only the start chainage is set.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ReachLocationValue`1.StartChainage">
            <summary>
            Start chainage of value
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ReachLocationValue`1.EndChainage">
            <summary>
            End chainage of value. Only used if <see cref="P:DHI.Mike1D.Generic.ReachLocationValue`1.IsSpan"/> is set.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ReachLocationValue`1.DirectionPositive">
            <summary>
            When two values are defined at the same point, this
            specifies if the value is valid from the positive side
            or from the negative side. When ordered, values from
            the negative side goes before values from the positive side.
            <para>
            Only used if <see cref="P:DHI.Mike1D.Generic.ReachLocationValue`1.IsSpan"/> is false, and there are two
            values at the same chainage point. It does not make a difference
            if there is only one value at the chainage point.
            </para>
            <para>
            Default value is false.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ReachLocationValue`1.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ReachLocationValue`1._value">
            <summary>
            Value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ReachLocationValue`1.#ctor(System.Double,`0)">
            <summary>
            Create new value at location
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ReachLocationValue`1.#ctor(System.Double,`0,System.Boolean)">
            <summary>
            Create new value at location
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ReachLocationValue`1.#ctor(System.Double,System.Double,`0)">
            <summary>
            Create new value at span.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ReachLocationValue`1.IsSpan">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.NetworkData`1">
            <summary>
             <para>
             A network value is a value that can vary in the network. A value
             can be specified as a:
              - global value
              - value on an entire reach with a given ID
              - value on a number of locationspans
              - value on a number of locations
              - value on a nodeId
             </para>
             <para>
             It is possible to specify two values on one location, one valid from 
             the negative side, and one valid from the positive side.
             </para>
             <para>
             If a value is given on the entire reach, then it can not be specified
             on locations.
             </para>
             <para>
             When searching for a value on a given location, the priority is as follows:
              - A value on the entire reach is used, if existing.
              - If the given location is in a span, the span value is used
              - If the given location is in between two value-locations/spans, the value is interpolated, if <see cref="P:DHI.Mike1D.Generic.NetworkData`1.CanInterpolate"/>
              - It the given location is within <see cref="P:DHI.Mike1D.Generic.NetworkData`1.ExtrapolationDistance"/> of a value location, the value is used.
              - If nothing else is found, false is returned, and a default or the global value should be used.
             </para>
             <para>
             If an entire network is to be populated with values, for performance reasons, you should work on 
             a reach-by-reach manner, using <see cref="M:DHI.Mike1D.Generic.NetworkData`1.GetReachData(System.String)"/>
             </para>
            </summary>
            <typeparam name="T">Value in the network.</typeparam>
        </member>
        <member name="F:DHI.Mike1D.Generic.NetworkData`1._interpolator">
            <summary>
            Interpolator used when <see cref="P:DHI.Mike1D.Generic.NetworkData`1.CanInterpolate"/> is set
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.NetworkData`1._reachValueMap">
            <summary>
            Mapping reach names to reach data set
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.NetworkData`1._nodeValueMap">
            <summary>
            Mapping node names to node values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.#ctor(DHI.Mike1D.Generic.IInterpolatable{`0})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkData`1.Quantity">
            <summary>
            Quantity stored in network data
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkData`1.CanInterpolate">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkData`1.ExtrapolationDistance">
            <summary>
            Distance from span/gridpoint where extrapolation takes place, i.e., if location chainage
            is outside the network value chainage span, but less than <see cref="P:DHI.Mike1D.Generic.NetworkData`1.ExtrapolationDistance"/> from the span,
            then the nearest value is extrapolated. Set to 0 to disable. Default is zero. Can not be negative.
            <para>
            When <see cref="P:DHI.Mike1D.Generic.NetworkData`1.CanInterpolate"/> is false, this specifies the distance to a chainage value/span 
            that will return the point/span value, a tolerance value.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkData`1.__reachValues">
            <summary>
            Serialization version of the <see cref="F:DHI.Mike1D.Generic.NetworkData`1._reachValueMap"/>, to handle
            the comparer of the dictionary.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkData`1.__nodeValues">
            <summary>
            Serialization version of the <see cref="F:DHI.Mike1D.Generic.NetworkData`1._nodeValueMap"/>, to handle
            the comparer of the dictionary.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkData`1.HasValues">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkData`1.GlobalValue">
            <summary>
             The global value. Used, if nothing better is found.
             Setting the global value automatically also sets 
             <see cref="P:DHI.Mike1D.Generic.NetworkData`1.HasGlobalValue"/> to true.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkData`1.HasGlobalValue">
            <summary>
            Defines whether there is a global value, or strictly
            speaking, whether to use the global value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkData`1.LocalCount">
            <summary>
            Returns the number of locally defined values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.Clear">
            <summary>
             Delete all localized values. The global value is not deleted.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.AddValue(DHI.Mike1D.Generic.ILocationSpan,`0)">
            <summary>
            Add a value defined within the given span. 
            This corresponds to adding the value at the start and end location of the span.
            </summary>
            <param name="span">Location span that value belongs to</param>
            <param name="value">Value to use inside span</param>
            <returns>True on success</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.AddValue(DHI.Mike1D.Generic.ILocation,`0)">
            <summary>
            Add a value on the given location. 
            </summary>
            <param name="location">Location of the value.</param>
            <param name="value">Value at location</param>
            <returns>True on success.</returns>
            <remarks> 
            Adding like this is generally an O(n) operation. If adding
            in chainage increasing order, it is fast.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.AddValue(DHI.Mike1D.Generic.ILocation,`0,System.Boolean)">
            <summary>
            Add a value on the given location. 
            </summary>
            <param name="location">Location of the value.</param>
            <param name="value">Value at location</param>
            <param name="directionPositive"> When two values are defined at the same point, this
            specifies if the value is valid from the positive side
            or from the negative side. When ordered, values from
            the negative side goes before values from the positive side.</param>
            <returns>True on success.</returns>
            <remarks> 
            Adding like this is generally an O(n) operation. If adding
            in chainage increasing order, it is fast.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.AddGlobalReachValue(System.String,`0)">
            <summary>
            Add a value defined for an entire reach. 
            
            This will fail if there is already defined values at locations or in spans of this reach.
            
            After successfull addition, values at locations or in spans can not be added.
            </summary>
            <param name="reachID">Id of reach to add value to</param>
            <param name="value">Value to add</param>
            <returns>True on success</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.AddValue(System.String,`0)">
            <summary>
            Add a value for the node identified by <paramref name="nodeId"/>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkData`1.NodeIdValuePairs">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkData`1.ReachData">
            <summary>
            Collection of reach data sets currently active
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.GetValue(DHI.Mike1D.Generic.ILocation,`0@)">
            <summary>
            Get value for the specified location. Returns false if no value is
            defined for the location.
            <para>
            If more than one value is to be retrieved for the same reach, use
            the <see cref="M:DHI.Mike1D.Generic.INetworkDataInterpolator`1.GetReachData(System.String)"/> first and use that one to 
            get the values (for performance).
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.GetValue(DHI.Mike1D.Generic.ILocation,`0@,System.Boolean)">
            <summary>
            Get value for the specified location. Returns false if no value is
            defined for the location.
            <para>
            If more than one value is to be retrieved for the same reach, use
            the <see cref="M:DHI.Mike1D.Generic.INetworkDataInterpolator`1.GetReachData(System.String)"/> first and use that one to 
            get the values (for performance).
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.ContainsValue(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Check if a local value is specified at the location. Returns false if no value is
            defined for the location.
            <para>
            If more than one value is to be retrieved for the same reach, use
            the <see cref="M:DHI.Mike1D.Generic.INetworkDataInterpolator`1.GetReachData(System.String)"/> first and use that one (for performance).
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.ContainsValue(DHI.Mike1D.Generic.ILocation,DHI.Mike1D.Generic.Direction)">
            <summary>
            Check if a local value is specified at the location. Returns false if no value is
            defined for the location.
            <para>
            If more than one value is to be retrieved for the same reach, use
            the <see cref="M:DHI.Mike1D.Generic.INetworkDataInterpolator`1.GetReachData(System.String)"/> first and use that one (for performance).
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.GetValue(System.String,`0@)">
            <summary>
            Get value for the specified node. Returns false if no value is
            defined for the node id.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.GetGlobalValue(`0@)">
            <summary>
            Get global value. Returns false if no global value is defined.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.GetGlobalValue(System.String,`0@)">
            <summary>
            Get value for the specified id. Returns false if no value is
            defined for the node id.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.GetValues(System.Int32,System.Collections.Generic.IEnumerator{DHI.Mike1D.Generic.ILocation})">
            <summary>
            Get value at the given locations. The locations must have same Location.ID and
            be ordred in the list by increasing chainages.
            </summary>
            <param name="locationCount">Number of locations in <paramref name="locations"/></param>
            <param name="locations">Locations to find value for</param>
            <returns>values at the given locations</returns>
            <remarks>
            This is a method that performs better than the ordinary GetValue call if
            many locations is to be considered.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.GetReachData(System.String)">
            <summary>
             Get a <see cref="T:DHI.Mike1D.Generic.NetworkReachDataSet`1"/> for the reach with the given ID
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.NetworkData`1.PointValueEnumerable">
            <summary>
            Helper class to iterate over all point values in the network value set.
            <para>
            It iterates first over all the nodes, and then over all the reaches.
            </para>
            <para>
            The order of the values are not sorted on node id or reach id, since
            the underlying dictionaries do not do that.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.NetworkData`1.PointValueEnumerator">
            <summary>
            Helper class to iterate over all point values in the network value set.
            <para>
            It iterates first over all the nodes, and then over all the reaches.
            </para>
            <para>
            The order of the values are not sorted on node id or reach id, since
            the underlying dictionaries do not do that.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkData`1.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)">
            <summary>
            When deserialized, the NetworkReachDataSet_networkData back-pointer 
            needs to be re-established as it was before serialization.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.NetworkReachDataSet`1">
            <summary>
            A set of values stored on reach. Contains values on locations or on spans. 
            Implements <see cref="T:DHI.Mike1D.Generic.IReachDataInterpolator`1"/> for interpolation
            </summary>
            <remarks>
            Implementation details:
            Each value is sorted by its chainage, for fast searching. For spans, the start 
            chainage is used for sorting.
            <para>
            when inserting a new value, it is checked that a new span does not overlap any
            existing locations/spans, or a new location is not contained by any existing spans.
            </para>
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkReachDataSet`1.ChainageCloseTo(System.Double,System.Int32)">
            <summary>
            Checks whether the chainage is "close" to the value at the given index,
            either in the span at the index, or within <see cref="P:DHI.Mike1D.Generic.NetworkReachDataSet`1.ExtrapolationDistance"/>
            of the location/span.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkReachDataSet`1.ReachId">
            <summary>
            Id of reach
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkReachDataSet`1.ChainageSortedValues">
            <summary>
            Values on reach, sorted by chainage
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkReachDataSet`1.Values">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkReachDataSet`1.IsGlobal">
            <summary>
            Returns true if this set holds only one value covering entire reach
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkReachDataSet`1.GlobalValue">
            <summary>
            Get/Set the value covering the entire reach
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkReachDataSet`1.Add(System.Double,System.Double,`0)">
            <summary>
            Add a value defined within the given span. 
            This corresponds to adding the value at the start and end location of the span.
            </summary>
            <param name="startChainage">Start chainage of span </param>
            <param name="endChainage">End chainage of span </param>
            <param name="value">Value to use inside span</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkReachDataSet`1.Add(System.Double,`0)">
            <summary>
            Add a value to the set on the current chainage location. This will fail if set is global.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkReachDataSet`1.Add(System.Double,`0,System.Boolean)">
            <summary>
            Add a value to the set on the current chainage location. This will fail if set is global.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkReachDataSet`1.ContainsValue(System.Double,DHI.Mike1D.Generic.Direction)">
            <summary>
            Check if a value already exists at the specified chainage, or if the specified
            chainage is included in a value span.
            <para>
            The <paramref name="direction"/> can specify if any value or if only
            a negative or positive direction value is searched for.
            </para>
            <para>
            For a reach with a global value, true is returned.
            </para>
            <para>
            Chainage value must be exact, i.e. there is no tolerance in the search.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkReachDataSet`1.ContainsValue(System.Double,System.Double)">
            <summary>
            Check if one ore more values are defined inside the chainage span. 
            <para>
            Values at start of span with negative direction and end of span
            with positive direction is not inside span, while 
            values at start of span with positive direction and end of span
            with negative direction is considered inside span.
            </para>
            <para>
            Values inside other spans can share start/end chainage without being inside.
            </para>
            </summary>
            <param name="startChainage">Start chainage of span </param>
            <param name="endChainage">End chainage of span </param>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkReachDataSet`1.GetValue(System.Double,`0@)">
            <summary>
            Get value at the given location.
            </summary>
            <param name="chainage">Location chainage to find value for</param>
            <param name="val">Value at chainage</param>
            <returns>True if value exists</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkReachDataSet`1.GetValue(System.Double,`0@,System.Boolean)">
             <summary>
             Get value at the given location.
             </summary>
             <param name="chainage">Location chainage to find value for</param>
             <param name="val">Value at chainage</param>
             <param name="directionPositive"> If two values are present at the same chainage, depending on the <paramref name="directionPositive"/>,
             if false, it will take the first (upstream value) and if true it will take the last (downstream) value.
            </param>
             <returns>True if value exists</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkReachDataSet`1.__chainageSortedValuesOld">
            <summary>
            De-serialization of old format values
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkReachDataSet`1.__chainageSortedValues">
            <summary>
            De-serialization of old format values
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.AbstractNetworkDataExtensions">
            <summary>
            Extensions to the <see cref="T:DHI.Mike1D.Generic.NetworkData`1"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.AbstractNetworkDataExtensions.PointValues``1(DHI.Mike1D.Generic.NetworkData{``0})">
            <summary>
            Gives an iterator that iterates over all point values in the network value set.
            <para>
            It will iterate first over all the nodes, and then over all the reaches and its locations.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.AbstractNetworkDataExtensions.NetworkValues``1(DHI.Mike1D.Generic.NetworkData{``0})">
            <summary>
            Gives an enumerable that iterates over all point values in the network value set.
            <para>
            It will iterate first over all the nodes, and then over all the reaches and its locations.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.CommandLineParser">
            <summary>
             Class to parse command line arguments and store it as key-value pairs.
             
             Each argument must be prepended with on of '-', '--', '/'
              -key
              --key
              /key
             If a value is included, it must be split with ":" or "="
              -key=value
              -key:value
             If spaces are needed in the value, use ' or " to incapsulate
              -key:"value with spaces"
             
             A key without a value will be given the value "true"
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.CommandLineParser.#ctor(System.String[])">
            <summary>
             Default constructor
            </summary>
            <param name="arguments"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.CommandLineParser.#ctor(System.String[],System.Int32)">
            <summary>
             Default constructor
            </summary>
            <param name="arguments"></param>
            <param name="firstArgument">First argument to parse. Zero based</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.CommandLineParser.Item(System.String)">
            <summary>
            Indexer to retrieve the parameters value if it exists
            </summary>
            <param name="param">parameter we want the value for</param>
            <returns>The parameter value, null if not found</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.CompareObjects">
            <summary>
            Class that allows comparison of two objects of the same type to each other.  Supports classes, lists, arrays, dictionaries, child comparison and more.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.CompareObjects.ElementsToIgnore">
            <summary>
            Ignore classes, properties, or fields by name during the comparison.
            Case sensitive.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.CompareObjects.TypesToIgnore">
            <summary>
            Ignore classes, properties, or fields by name during the comparison.
            Case sensitive.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.CompareObjects.ComparePrivateProperties">
            <summary>
            If true, private properties will be compared. The default is false.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.CompareObjects.ComparePrivateFields">
            <summary>
            If true, private fields will be compared. The default is false.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.CompareObjects.CompareChildren">
            <summary>
            If true, child objects will be compared. The default is true. 
            If false, and a list or array is compared list items will be compared but not their children.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.CompareObjects.CompareReadOnly">
            <summary>
            If true, compare read only properties (only the getter is implemented).
            The default is true.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.CompareObjects.CompareFields">
            <summary>
            If true, compare fields of a class (see also CompareProperties).
            The default is true.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.CompareObjects.CompareProperties">
            <summary>
            If true, compare properties of a class (see also CompareFields).
            The default is true.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.CompareObjects.MaxDifferences">
            <summary>
            The maximum number of differences to detect
            </summary>
            <remarks>
            Default is 1 for performance reasons.
            </remarks>
        </member>
        <member name="P:DHI.Mike1D.Generic.CompareObjects.Differences">
            <summary>
            The differences found during the compare
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.CompareObjects.MaxCrump">
            <summary>
            Longest crump string
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.CompareObjects.DifferencesString">
            <summary>
            The differences found in a string suitable for a textbox
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.CompareObjects.Compare(System.Object,System.Object)">
            <summary>
            Compare two objects of the same type to each other.
            </summary>
            <remarks>
            Check the Differences or DifferencesString Properties for the differences.
            Default MaxDifferences is 1 for performance
            </remarks>
            <param name="object1"></param>
            <param name="object2"></param>
            <returns>True if they are equal</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.CompareObjects.Compare(System.Object,System.Object,System.String)">
            <summary>
            Compare two objects
            </summary>
            <param name="object1"></param>
            <param name="object2"></param>
            <param name="breadCrumb">Where we are in the object hiearchy</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.CompareObjects.CompareTimespan(System.Object,System.Object,System.String)">
            <summary>
            Compare a timespan struct
            </summary>
            <param name="object1"></param>
            <param name="object2"></param>
            <param name="breadCrumb"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.CompareObjects.CompareEnum(System.Object,System.Object,System.String)">
            <summary>
            Compare an enumeration
            </summary>
            <param name="object1"></param>
            <param name="object2"></param>
            <param name="breadCrumb"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.CompareObjects.CompareSimpleType(System.Object,System.Object,System.String)">
            <summary>
            Compare a simple type
            </summary>
            <param name="object1"></param>
            <param name="object2"></param>
            <param name="breadCrumb"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.CompareObjects.CompareStruct(System.Object,System.Object,System.String)">
            <summary>
            Compare a struct
            </summary>
            <param name="object1"></param>
            <param name="object2"></param>
            <param name="breadCrumb"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.CompareObjects.CompareClass(System.Object,System.Object,System.String)">
            <summary>
            Compare the properties, fields of a class
            </summary>
            <param name="object1"></param>
            <param name="object2"></param>
            <param name="breadCrumb"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.CompareObjects.PerformCompareFields(System.Type,System.Object,System.Object,System.String)">
            <summary>
            Compare the fields of a class
            </summary>
            <param name="t1"></param>
            <param name="object1"></param>
            <param name="object2"></param>
            <param name="breadCrumb"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.CompareObjects.PerformCompareProperties(System.Type,System.Object,System.Object,System.String)">
            <summary>
            Compare the properties of a class
            </summary>
            <param name="t1"></param>
            <param name="object1"></param>
            <param name="object2"></param>
            <param name="breadCrumb"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.CompareObjects.CompareIDictionary(System.Object,System.Object,System.String)">
            <summary>
            Compare a dictionary
            </summary>
            <param name="object1"></param>
            <param name="object2"></param>
            <param name="breadCrumb"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.CompareObjects.cStr(System.Object)">
            <summary>
            Convert an object to a nicely formatted string
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.CompareObjects.CompareIList(System.Object,System.Object,System.String)">
            <summary>
            Compare an array or something that implements IList
            </summary>
            <param name="object1"></param>
            <param name="object2"></param>
            <param name="breadCrumb"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.CompareObjects.AddBreadCrumb(System.String,System.String,System.String,System.String)">
            <summary>
            Add a breadcrumb to an existing breadcrumb
            </summary>
            <param name="existing"></param>
            <param name="name"></param>
            <param name="extra"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.CompareObjects.AddBreadCrumb(System.String,System.String,System.String,System.Int32)">
            <summary>
            Add a breadcrumb to an existing breadcrumb
            </summary>
            <param name="existing"></param>
            <param name="name"></param>
            <param name="extra"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.GenericExtensions">
            <summary>
            Utility class, containing extension methods for classes
            in the generic namespace
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.Warning(DHI.Mike1D.Generic.IDiagnostics,System.String,System.Object[])">
            <summary>
             Add a warning message
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.Error(DHI.Mike1D.Generic.IDiagnostics,System.String,System.Object[])">
            <summary>
            Add an error to the diagnostics item.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.RuntimeError(DHI.Mike1D.Generic.IDiagnostics,System.String,System.Object[])">
            <summary>
             Add an error DiagnosticItem, and throw an exception
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.ExceptionToError(DHI.Mike1D.Generic.IDiagnostics,System.Exception)">
            <summary>
             Add an error DiagnosticItem, and throw an exception
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.ExceptionToString(System.Exception)">
            <summary>
             Create string from exception, including inner exceptions
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.ChainageEquals(DHI.Mike1D.Generic.ILocation,System.Double)">
            <summary>
            Returns true if the chainage equals, withing <see cref="F:DHI.Mike1D.Generic.Constants.LOCATION_EQUAL_TOLERANCE"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.ChainageEquals(DHI.Mike1D.Generic.ILocation,System.Double,System.Double)">
            <summary>
            Returns true if the chainage equals, withing tolerance
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.Swap``1(``0@,``0@)">
            <summary>
            Swapping two elements.
            </summary>
            <typeparam name="T">Type of element to swap</typeparam>
            <param name="e1">first element</param>
            <param name="e2">second element</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.FindIndex``1(System.Collections.Generic.IList{``0},System.Predicate{``0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the list.</summary>
            <param name="source">IList to search</param>
            <param name="match">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</param>
            <returns>The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.FindIndex``1(System.Collections.Generic.IList{``0},System.Int32,System.Predicate{``0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the specified index to the last element.</summary>
            <param name="source">IList to search</param>
            <param name="startIndex">The zero-based starting index of the search.</param>
            <param name="match">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</param>
            <returns>The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.IndexOf(System.Collections.Generic.IList{DHI.Mike1D.Generic.IQuantity},DHI.Mike1D.Generic.IQuantity,System.Collections.Generic.IList{System.String})">
            <summary>
            Search the list of <paramref name="quantities"/> for the given
            <paramref name="quantity"/>, allow the description to be
            also one listed in <paramref name="descriptions"/>.
            </summary>
            <param name="quantities">List to search in</param>
            <param name="quantity">Quantity to search for</param>
            <param name="descriptions">Alternative descriptions allowed</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.IndexOf(System.Collections.Generic.IList{DHI.Mike1D.Generic.IQuantity},DHI.Mike1D.Generic.IQuantity,System.Boolean)">
            <summary>
            Search the list of <paramref name="quantities"/> for the given <paramref name="quantity"/>
            </summary>
            <param name="quantities">List to search in</param>
            <param name="quantity">Quantity to search for</param>
            <param name="descriptionUnique">True if quantities are unique when description differs, or false if they are alike when description differs.</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.CopyToFloatArray(System.Double[])">
            <summary>
            Convert a double array to a float array.
            </summary>
            <param name="inArray">Double array to convert</param>
            <returns>Float array</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.CopyTo(System.Double[],System.Single[])">
            <summary>
            Convert a double array to a float array.
            </summary>
            <param name="inArray">Double array to convert</param>
            <param name="outArray">Float array to copy to, must be at least as long as inArray</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.GetValue``1(DHI.Mike1D.Generic.NetworkData{``0},DHI.Mike1D.Generic.ILocation)">
            <summary>
            Get a value from the <paramref name="networkData"/> at the given
            <paramref name="location"/>. If no value is found at location, the
            global value is used. If no global value is defined, an exception
            is thrown.
            </summary>
            <typeparam name="T">Type of value</typeparam>
            <param name="networkData">Network data to get data from</param>
            <param name="location">Location to get values at</param>
            <returns>Value at location</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.GetValue``1(DHI.Mike1D.Generic.NetworkData{``0},DHI.Mike1D.Generic.ILocation,``0)">
            <summary>
            Get a value from the <paramref name="networkData"/> at the given
            <paramref name="location"/>. If no value is found at location, the
            global value is used. If no global value is defined, the default value is returned.
            </summary>
            <typeparam name="T">Type of value</typeparam>
            <param name="networkData">Network data to get data from</param>
            <param name="location">Location to get values at</param>
            <param name="defaultValue">Default value</param>
            <returns>Value at location</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DHI.Mike1D.Generic.GenericExtensions.SortStable``1(System.Collections.Generic.IList{``0})" -->
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.SortStable``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Sorts the elements in the entire List{T} using the provided comparer.
            <para>
            A merge sort algorithm is used. merge sort is a stable sort algorithm
            i.e. if two elements are equal their order are preserved.
            </para>
            </summary>
            <typeparam name="T">Type of elements to sort</typeparam>
            <param name="comparer">Comparer to use while sorting</param>
            <param name="list">List to sort</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.SortStable``1(System.Collections.Generic.IList{``0},System.Comparison{``0})">
            <summary>
            Sorts the elements in the entire List{T} using the provided comparer.
            <para>
            A merge sort algorithm is used. merge sort is a stable sort algorithm
            i.e. if two elements are equal their order are preserved.
            </para>
            </summary>
            <typeparam name="T">Type of elements to sort</typeparam>
            <param name="comparer">Comparer to use while sorting</param>
            <param name="list">List to sort</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.Sort``1(System.Collections.Generic.IList{``0})">
            <summary>
            Sorts the elements in the entire List{T} using the default comparer.
            <para>
            A quick sort algorithm is used. Quick sort is a un-stable sort algorithm
            i.e. if two elements are equal their order may not be preserved.
            </para>
            <para>
            If the provided IList is either an array or a list, the build in sorting
            method is used (also quick sort).
            </para>
            </summary>
            <typeparam name="T">Type of elements to sort</typeparam>
            <param name="list">List to sort</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.Sort``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Sorts the elements in the entire List{T} using the provided comparer.
            <para>
            A quick sort algorithm is used. Quick sort is a un-stable sort algorithm
            i.e. if two elements are equal their order may not be preserved.
            </para>
            <para>
            If the provided IList is either an array or a list, the build in sorting
            method is used (also quick sort).
            </para>
            </summary>
            <typeparam name="T">Type of elements to sort</typeparam>
            <param name="comparer">Comparer to use while sorting</param>
            <param name="list">List to sort</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.BinarySearch``1(System.Collections.Generic.IList{``0},``0)">
            <summary>
            Searches the entire sorted <see cref="T:System.Collections.Generic.IList`1"/> for an element
            and returns the zero-based index of the element.
            <para>
            If the key is not found, a negative number is returned, 
            which can be intepreted as the bitwise complement
            of the interval of indices that the key is in between, i.e.
            <code>
            list[interval-1] &lt; key &lt; list[interval]
            </code>
            </para>
            </summary>
            <typeparam name="T">The type of the objects in the list</typeparam>
            <param name="list">List to search in</param>
            <param name="key">The key to locate. The value can be null for reference types.</param>
            <returns>The zero-based index of item in the sorted <see cref="T:System.Collections.Generic.IList`1"/>, if item is found; 
            otherwise, a negative number that is the bitwise complement 
            of the index of the next element that is larger than item or, 
            if there is no larger element, the bitwise complement of Count.
            </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.BinarySearch``1(System.Collections.Generic.IList{``0},``0,System.Collections.Generic.IComparer{``0})">
            <summary>
            Searches the entire sorted <see cref="T:System.Collections.Generic.IList`1"/> for an element using the provided 
            comparer and returns the zero-based index of the element.
            <para>
            If the key is not found, a negative number is returned, 
            which can be intepreted as the bitwise complement
            of the interval of indices that the key is in between, i.e.
            <code>
            list[interval-1] &lt; key &lt; list[interval]
            </code>
            </para>
            </summary>
            <typeparam name="T">The type of the objects in the list</typeparam>
            <param name="list">List to search in</param>
            <param name="key">The key to locate. The value can be null for reference types.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1"/> implementation to use when comparing elements.</param>
            <returns>The zero-based index of item in the sorted <see cref="T:System.Collections.Generic.IList`1"/>, if item is found; 
            otherwise, a negative number that is the bitwise complement 
            of the index of the next element that is larger than item or, 
            if there is no larger element, the bitwise complement of Count.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.BinarySearch``2(System.Collections.Generic.IList{``0},System.Func{``0,``1},``1)">
            <summary>
            Searches the entire sorted <see cref="T:System.Collections.Generic.IList`1"/> for an element 
            and returns the zero-based index of the element.
            <para>
            If the key is not found, a negative number is returned, 
            which can be intepreted as the bitwise complement
            of the interval of indices that the key is in between, i.e.
            <code>
            list[interval-1] &lt; key &lt; list[interval]
            </code>
            </para>
            <para>
            This differs from the "ordinary" binary search in allowing a <paramref name="keySelector"/>comparer 
            that knows how to compare a class with its key. Example, if the list contains classes of type T having 
            an id number and the class is sorted on that id, then the keySelector returns the id number for that class.
            </para>
            </summary>
            <typeparam name="T">The type of the objects in the list</typeparam>
            <typeparam name="TKey">The type of the argument to look for</typeparam>
            <param name="list">List to search in</param>
            <param name="keySelector">A function to extract a key from an element.</param>
            <param name="key">The key to locate. The value can be null for reference types.</param>
            <returns>The zero-based index of item in the sorted <see cref="T:System.Collections.Generic.IList`1"/>, if item is found; 
            otherwise, a negative number that is the bitwise complement 
            of the index of the next element that is larger than item or, 
            if there is no larger element, the bitwise complement of Count.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.BinarySearch``2(System.Collections.Generic.IList{``0},System.Func{``0,``1},``1,System.Collections.Generic.IComparer{``1})">
            <summary>
            Searches the entire sorted <see cref="T:System.Collections.Generic.IList`1"/> for an element using the provided 
            comparer and returns the zero-based index of the element.
            <para>
            If the key is not found, a negative number is returned, 
            which can be intepreted as the bitwise complement
            of the interval of indices that the key is in between, i.e.
            <code>
            list[interval-1] &lt; key &lt; list[interval]
            </code>
            </para>
            <para>
            This differs from the "ordinary" binary search in allowing a <paramref name="keySelector"/>comparer 
            that knows how to compare a class with its key. Example, if the list contains classes of type T having 
            an id number and the class is sorted on that id, then the keySelector returns the id number for that class.
            </para>
            </summary>
            <typeparam name="T">The type of the objects in the list</typeparam>
            <typeparam name="TKey">The type of the argument to look for</typeparam>
            <param name="list">List to search in</param>
            <param name="keySelector">A function to extract a key from an element.</param>
            <param name="key">The key to locate. The value can be null for reference types.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1"/> implementation to use when comparing elements.</param>
            <returns>The zero-based index of item in the sorted <see cref="T:System.Collections.Generic.IList`1"/>, if item is found; 
            otherwise, a negative number that is the bitwise complement 
            of the index of the next element that is larger than item or, 
            if there is no larger element, the bitwise complement of Count.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.BinarySearch``1(System.Collections.Generic.IList{``0},System.Func{``0,System.Int32})">
            <summary>
            Searches the entire sorted <see cref="T:System.Collections.Generic.IList`1"/> for an element using the provided 
            comparer and returns the zero-based index of the element.
            <para>
            This differs from the "ordinary" binary search in allowing a comparer delegate that defines
            whether an item is found (returning 0), whether the item in the list is before (&lt;0) or after (&gt;0)
            that knows how to compare a class with its key. Example, if the list contains classes of type T having 
            an id number and the class is sorted on that id, then the keySelector returns the id number for that class.
            </para>
            <example>
            If having a list of doubles, to find 4.5 in the list, use:
            <code>
            int index = list.BinarySearch(d => d.CompareTo(4.5))
            </code>
            </example>
            </summary>
            <typeparam name="T">The type of the objects in the list</typeparam>
            <param name="list">List to search in</param>
            <param name="comparer">A delegate/lambda expression specifying if a given item in the list is before (&lt;0), matches (0) or is after (&gt;0) the item to search for.</param>
            <returns>The zero-based index of item in the sorted <see cref="T:System.Collections.Generic.IList`1"/>, if item is found; 
            otherwise, a negative number that is the bitwise complement 
            of the index of the next element that is larger than item or, 
            if there is no larger element, the bitwise complement of Count.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.Multiply(System.TimeSpan,System.Double)">
            <summary>
             Multiply the timespane 'dt' by a double. If the double is larger than 1e6, then 1e6 is used in order to prevent overflow
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.LargestMultipleOf(System.TimeSpan,System.TimeSpan)">
            <summary>
             Make <paramref name="span"/> the largest multiple of the <paramref name="spanRef"/> that is smaller than <paramref name="span"/>
            </summary>
             <example>
             <code>
                   TimeSpan t7s = TimeSpan.FromSeconds(7);
                   TimeSpan t25s = TimeSpan.FromSeconds(25);
                   // returns TimeSpan.FromSeconds(21)
                   TimeSpan t21s = t25s.LargestMultipleOf(t7s);
             </code>
             </example>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.ChainageAsDiagnosticsValue(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Get chainage as DiagnosticsValue (includes unit)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.Min(System.DateTime,System.DateTime)">
            <summary>
            Returns the smallest of t1 and t2
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.FirstInMonth(System.DateTime)">
            <summary>
            Returns the first day in a month, at time 00:00:00.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.Set(DHI.Mike1D.Generic.IXYTable,System.Int32,DHI.Mike1D.Generic.IXYPair)">
            <summary>
            Set a value to the table
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.SortStable(DHI.Mike1D.Generic.IXYTable)">
            <summary>
            Sort table by x-value, using a stable sort
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.Sort(DHI.Mike1D.Generic.IXYTable)">
            <summary>
            Sort table by x-value, using a quick-sort algorithm
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.TryGetValue``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,``0)">
            <summary>
            Get additional data, based on key. If no data exist for value, return the <paramref name="defaultValue"/>
            </summary>
            <param name="dictionary">Dictionary to search in</param>
            <param name="key">Identifier/key string of additional data object</param>
            <param name="defaultValue">Default value, if key not found.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.TryGetValue``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,``0@)">
            <summary>
            Get additional data, based on key. If value is not of type {T}, false is returned.
            </summary>
            <param name="dictionary">Dictionary to search in</param>
            <param name="key">Identifier/key string of additional data object</param>
            <param name="value">Value of key, if found.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.GetValue``1(System.Collections.Generic.IDictionary{System.String,``0},System.String)">
            <summary>
            Get value, based on key. If no data exist for value, null is returned
            </summary>
            <param name="dictionary">Dictionary to search in</param>
            <param name="key">Identifier/key string of additional data object</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.GenericExtensions.KVPComparer">
            <summary>
            Helper class for sorting KeyValuePair
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericExtensions.KVPComparer.Compare(System.Collections.Generic.KeyValuePair{System.Double,System.Double},System.Collections.Generic.KeyValuePair{System.Double,System.Double})">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D">
            <summary>
            A class for finding minimum of a least squared problem on the form
            <code>
                f(x,y) = ||fv(x,y)||
            </code>
            where fv is a 2D function - returns a vector of length 2.
            <para>
            It is using a Levenberg-Marquardt method or a Newton-Raphson method, 
            according to <see cref="P:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.UseLm"/>.
            </para>
            Finding zeros of a nonlinear system of equations, i.e. 
            <code>
            fv(x,y) = [0,0]
            </code>
            is a special case of a least square minimization problem, 
            where the minimum is in the zero point and fv(x*,y*) = (0,0).
            <para>
            If the Jacobian is available, it can be provided, otherwise it
            works by numerically calculating the Jacobian.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.Function">
            <summary>
            Signature of function for which zeros is to be found
            </summary>
            <param name="x">The x value into the function</param>
            <param name="f">The f(x) value of the function</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.#ctor(DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.Function)">
            <summary>
            Constructor for minimizing/finding zeros of the <paramref name="function"/>
            </summary>
            <param name="function">Function to minimize/find zero of</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.#ctor(DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.Function,DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.Function)">
            <summary>
            Constructor for minimizing/finding zeros of the <paramref name="function"/>
            <para>
            The <paramref name="jacobian"/> must return a vector containing
            the coefficients [df1_dx1, df1_dx2, df2_dx1, df2_dx2].
            </para>
            </summary>
            <param name="function">Function to find zero of</param>
            <param name="jacobian">Jacobian of function</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.Init">
            <summary>
            Setting default values
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.UseLm">
            <summary>
            Flag whether a LM algorithm should be used. Default true. If set to false
            the Newton-Raphson method will be used. The Newton-Raphson method
            can only be used for finding zeros, not for minimizing.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.MaxIter">
            <summary>
            Maximum number of iterations. Default 100
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.Epsilon">
            <summary>
            Epsilon, used in stopping criteria
            <para>
            Default value is 1e-9
            </para>
            </summary>
            <remarks>
            Stopping criteria is on the form:
            <code>
            |x_new -x_old|^2 &lt; Epsilon^2*(|x_new|^2+|x_old|^2+1)
            </code>
            </remarks>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.LambdaScaling">
            <summary>
            Scaling factor in J^T*J+lambda*I, replacing
            the diagonal of I by those in <see cref="P:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.LambdaScaling"/>
            <para>
            By default they are [1,1]. They can not be negative.
            </para>
            </summary>
            <remarks>
            Not used by the Newton-Raphson method
            </remarks>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.UseLineSearch">
            <summary>
            Flag specifying whether a line search approach is to be used. Default false.
            </summary>
            <remarks>
            Using a line search approach for finding a better guess will usually
            decrease the number of iterations, but can increase the number of
            function evaluations. 
            <para>
            The line search approach should usually only be used if it also 
            decrease the number of function evaluations required for finding a 
            solution. It can speed up the process when the steepest descent
            is dominent, and step size is very small.
            </para>
            <para>
            When a search direction dx is found, the residual is calculated
            at x0, x1 = x0 + dx, x2 = x0 + 2*dx. Using a second order polynomial
            approximation through these, a guess on a new x with minimum residual
            is calculated.
            </para>
            </remarks>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.MaxLineSearchIter">
            <summary>
            Maximum number of line search iterations. Default 0.
            </summary>
            <remarks>
            Setting this to more than 0 means that the search direction
            is halfed/doubled recursively until a best possible value
            of the residual is found, though at most <see cref="P:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.MaxLineSearchIter"/>
            number of times.
            </remarks>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.NumIter">
            <summary>
            Hold the actual number of iterations for the last solve.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.NumFunctionEval">
            <summary>
            Hold the number of function evaluations.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.NumJacobianEval">
            <summary>
            Hold the number of Jacobian evaluations.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.Solve(System.Double[]@)">
            <summary>
            Minimize/Solves for zeros, using <paramref name="x"/> as starting point
            and updating the value of <paramref name="x"/> as a result.
            </summary>
            <param name="x">Starting point of the solver</param>
            <returns>True if solution has converged, false if the <see cref="P:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.MaxIter"/> was reached</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.NormSq(System.Double[],System.Double[])">
            <summary>
            Calculates the 2-norm squared, |x2-x1|^2
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.LengthSq(System.Double[])">
            <summary>
            Calculates the length squared, |x|^2
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.CalcJacobian(System.Double[],System.Double[],System.Double[])">
            <summary>
            Calculates numerically the Jacobian
            </summary>
            <param name="x">Point at which to calculate Jacobian</param>
            <param name="fx">Function value at x, f(x)</param>
            <param name="dfdx">Jacobian in vector form, [a00, a01, a10, a11]</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.CalcJacobian(DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.Function,System.Double[],System.Double[])">
            <summary>
            Calculates numerically the Jacobian
            </summary>
            <param name="function">Function to calculate Jacobian for</param>
            <param name="x">Point at which to calculate Jacobian</param>
            <param name="dfdx">Jacobian in vector form, [a00, a01, a10, a11]</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.JacobianTest(System.Double[],DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.Function,DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.Function)">
            <summary>
            Calculates the 2-norm difference between the exact and the numeric jacobian, 
            on an element-wise basis (not matrix norm, but element/vector norm)
            </summary>
            <param name="x">Point to evaluate jacobian at</param>
            <param name="function">Function to test</param>
            <param name="jacobian">Jacobian to test</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathAlgorithms.LevenbergMarquardt2D.Swap``1(``0@,``0@)">
            <summary>
            Swapping two elements.
            </summary>
            <typeparam name="T">Type of element to swap</typeparam>
            <param name="e1">first element</param>
            <param name="e2">second element</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson">
            <summary>
            A class for finding zeros of a method, using the Newton-Raphson method
            <para>
            If the derivative is available, it can be provided, otherwise it
            works by numerically calculating the derivative.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.Function">
            <summary>
            Signature of function for which zeros is to be found
            </summary>
            <param name="x">The x value into the function</param>
            <returns>The f(x) value of the function</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.NewValueFilter">
            <summary>
            Signature of function that based on a new and and old value modifies the new value.
            <para>
            This is invoked whenever a new value is calculated, and makes it possible for the
            user to add some extra information to improve stability
            </para>
            </summary>
            <param name="xnew">The x value into the function</param>
            <param name="xold">The x value into the function</param>
            <returns>The f(x) value of the function</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.#ctor(DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.Function)">
            <summary>
            Constructor for finding zeros of the <paramref name="function"/>
            </summary>
            <param name="function">Function to find zero of</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.#ctor(DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.Function,DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.Function)">
            <summary>
            Constructor for finding zeros of the <paramref name="function"/>
            </summary>
            <param name="function">Function to find zero of</param>
            <param name="derivative">Derivative of function</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.MaxIter">
            <summary>
            Maximum number of iterations. Default 100
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.Epsilon">
            <summary>
            Epsilon, used in stopping criteria in the Newton-Raphson method.
            <para>
            Default value is 1e-6
            </para>
            <para>
            Both the <see cref="P:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.Epsilon"/> and the <see cref="P:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.FEpsilon"/>
            criteria must be met before the method is stopped
            </para>
            </summary>
            <remarks>
            Stopping criteria:
            |x_new -x_old| less than Epsilon*(|x_new|+|x_old|+1)
            </remarks>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.FEpsilon">
            <summary>
            F-Epsilon, used in stopping criteria in the Newton-Raphson method.
            <para>
            Default value is 1 (in most cases that is the same as disabling the criteria)
            </para>
            <para>
            Both the <see cref="P:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.Epsilon"/> and the <see cref="P:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.FEpsilon"/>
            criteria must be met before the method is stopped
            </para>
            </summary>
            <remarks>
            Stopping criteria:
            |f(x_new)| less than F-Epsilon
            </remarks>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.NumIter">
            <summary>
            Hold the actual number of iterations for the last solve.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.Func">
            <summary>
            Function to solve
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.Derivative">
            <summary>
            Derivative of function to solve, if available, otherwise null.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.NewValueAction">
            <summary>
            Action to perform when a new value is calculated.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.Solve(System.Double@)">
            <summary>
            Solves for zeros, using <paramref name="x"/> as starting point
            and updating the value of <paramref name="x"/> as a result.
            </summary>
            <param name="x">Starting point of the solver</param>
            <returns>True if solution has converged, false if the <see cref="P:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.MaxIter"/> was reached</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson.CalcDerivative(System.Double)">
            <summary>
            Calculates the derivative of <see cref="F:DHI.Mike1D.Generic.MathAlgorithms.NewtonRaphson._function"/> numerically
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Mike1DRuntimeException">
            <summary>
            Exception derived from standard exception. This exception is thrown when
            errors occur that have already been included in the Diagnostics framework. 
            If SimLauncher encounters a Mike1DRuntimeException, then the exception 
            message is ignored - it is assumed that the error message is in the Diagnostics framework,
            and the diagnostics are reported to the user.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Mike1DRuntimeException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Mike1DRuntimeException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="T:DHI.Mike1D.Generic.DDateTimeGetter">
            <summary>
            A DateTime getter. Used to access simulation time from external pumps, among others things
            </summary>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.DiagnosticsValue">
            <summary>
             A diagnostics value class. A diagnostics value contains a value and a type
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsValue.#ctor(System.Double)">
            <summary>
            Construct a value with the specified double as value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsValue.#ctor(System.Double,DHI.Generic.MikeZero.eumItem)">
            <summary>
            Construct a value with the specified eum item type
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsValue.#ctor(System.Int32)">
            <summary>
            Construct a value with the specified integer as value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsValue.#ctor(System.String)">
            <summary>
            Construct a value with the specified string as value
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsValue.Token">
            <summary>
            Token to substitute out of diagnostics string when inserting this value.
            Default is {0}, {1} etc. 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsValue._stringValue">
            <summary> String value attached to a diagnostic value.  </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsValue._value">
            <summary> Numerical value attached to a diagnostic value.  </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsValue._valueInt">
            <summary>  Integer value attached to a diagnostic value.  </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsValue._itemType">
            <summary>
            Type of value attached to a diagnostic value. Mostly only relevant for double values.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticsValue.AsString">
            <summary>
            Return value as a string
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticsValue.AsStringWithUnit">
            <summary>
            Return value as a with unit
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticsValue.UserUnitAsString">
            <summary>
            User unit as a string
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticsValue.Description">
            <summary>
            Description of this value. Used as a headline for displaying values in a table
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsValue.EUMDescription">
            <summary>
             Get description of item type
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsValue._description">
            <summary>
            Description attached to a diagnostic value. Used as headline or brief summary of content.
            If null, then the eumItem header is used as a description
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsValue.ToString">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.INetworkDataSet`1">
            <summary>
            A set of network data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataSet`1.Offers">
            <summary>
            List of data types that is offered
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataSet`1.NetworkData(System.Int32)">
            <summary>
            Return an <see cref="T:DHI.Mike1D.Generic.INetworkData`1"/> for the specified quantity.
            </summary>
            <param name="quantityIndex">Index into <see cref="M:DHI.Mike1D.Generic.INetworkDataSet`1.Offers"/></param>
        </member>
        <member name="T:DHI.Mike1D.Generic.INetworkData`1">
            <summary>
            Network data. Data can be stored
            - On nodes
            - On entire links/reaches as link id
            - On locations using link/reachId + chainage
            <para>
            This interface provides the storing functionality, hence
            is used for building up a network data object and for 
            iterating through its values. To interpolate in values
            of a network data quantity, see <see cref="T:DHI.Mike1D.Generic.INetworkDataInterpolator`1"/>.
            A network data class need not implement the Interpolator interface.
            </para>
            </summary>
            <typeparam name="T">Any type</typeparam>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkData`1.Quantity">
            <summary>
            Quantity stored in network data
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkData`1.CanInterpolate">
            <summary>
            Flag specifying whether it makes sense to interpolate
            in values on a reach.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkData`1.HasValues">
            <summary>
            Flag specifying whether this data has values defined at all
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkData`1.GlobalValue">
            <summary>
            The global value
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkData`1.HasGlobalValue">
            <summary>
            Flag specifying whether this data has a global value defined
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkData`1.AddValue(DHI.Mike1D.Generic.ILocationSpan,`0)">
            <summary>
            Add value in a location span.
            <para>
            this corresponds to calling <see cref="M:DHI.Mike1D.Generic.INetworkData`1.AddValue(DHI.Mike1D.Generic.ILocation,`0)"/>
            for the start and end location of the span.
            </para>
            </summary>
            <remarks>
            If there has already been set a global reach value for the reach, 
            an exception is thrown.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkData`1.AddValue(DHI.Mike1D.Generic.ILocation,`0)">
            <summary>
            Add value at the given location
            </summary>
            <remarks>
            If there has already been set a global reach value for the reach, 
            an exception is thrown.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkData`1.AddGlobalReachValue(System.String,`0)">
            <summary>
            Add a value which is global for the reach, i.e. valid
            for the entire reach.
            </summary>
            <remarks>
            If there already exists value at locations in the reach, 
            an exception is thrown.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkData`1.AddValue(System.String,`0)">
            <summary>
            Add value at the given node
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkData`1.NodeIdValuePairs">
            <summary>
            The set of node id's and values defined.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkData`1.GetValue(System.String,`0@)">
            <summary>
            Get value for node
            </summary>
            <returns>False if no value is found</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkData`1.GetReachData(System.String)">
            <summary>
            Get a <see cref="T:DHI.Mike1D.Generic.INetworkReachData`1"/> for the specified link/reachId.
            Returns null if no valueset exist for the link/reachId.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkData`1.ReachData">
            <summary>
            Retrieves reaches which has data
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.INetworkReachData`1">
            <summary>
            Data defined on a reach.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkReachData`1.ReachId">
            <summary>
            Id of reach
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkReachData`1.IsGlobal">
            <summary>
            Flag defining whether there is one value defined for
            the entire reach, or whether there is a set of chainage-values.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkReachData`1.GlobalValue">
            <summary>
            Get the reach global value. Only valid if <see cref="!:HasGlobalValue"/>
            is true.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkReachData`1.Add(System.Double,`0)">
            <summary>
            Add a value at the chainage location on the reach
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkReachData`1.Add(System.Double,System.Double,`0)">
            <summary>
            Add a value at the span on the reach
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkReachData`1.Values">
            <summary>
            The set of chainages and values defined, in case <see cref="M:DHI.Mike1D.Generic.INetworkReachData`1.IsGlobal"/> is false.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IReachLocationValue`1">
            <summary>
            A value on a reach. If on a span, then both start and end chainage is set,
            if on a location only the start chainage is set.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IReachLocationValue`1.StartChainage">
            <summary>
            Start chainage of value
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IReachLocationValue`1.EndChainage">
            <summary>
            End chainage of value. Only used if <see cref="P:DHI.Mike1D.Generic.IReachLocationValue`1.IsSpan"/> is set.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IReachLocationValue`1.DirectionPositive">
            <summary>
            When two values are defined at the same point, this
            specifies if the value is valid from the positive side
            or from the negative side. When ordered, values from
            the negative side goes before values from the positive side.
            <para>
            Only used if <see cref="P:DHI.Mike1D.Generic.IReachLocationValue`1.IsSpan"/> is false, and there are two
            values at the same chainage point. It does not make a difference
            if there is only one value at the chainage point.
            </para>
            <para>
            Default value is false.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IReachLocationValue`1.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IReachLocationValue`1.IsSpan">
            <summary>
            Bool indicating if value is on a location or on a span.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.NetworkDataSet`1">
            <summary>
            Implementation of the <see cref="T:DHI.Mike1D.Generic.INetworkDataSet`1"/>.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkDataSet`1.Data">
            <summary>
            Network data stored in the NetworkDataSet
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkDataSet`1.Offers">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkDataSet`1.NetworkData(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkDataSet`1.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.INetworkDataSetDouble">
            <summary>
            An explicitly typed version of <see cref="T:DHI.Mike1D.Generic.INetworkDataSet`1"/>
            of type double.
            <para>
            Required for COM interop
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkDataSetDouble.Data">
            <summary>
            List of network data available.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataSetDouble.Offers">
            <summary>
            List of data types that is offered
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataSetDouble.NetworkData(System.Int32)">
            <summary>
            Return an <see cref="T:DHI.Mike1D.Generic.INetworkData`1"/> for the specified quantity.
            </summary>
            <param name="quantityIndex">Index into <see cref="M:DHI.Mike1D.Generic.INetworkDataSet`1.Offers"/></param>
        </member>
        <member name="T:DHI.Mike1D.Generic.INetworkDataDouble">
            <summary>
            An explicitly typed version of <see cref="T:DHI.Mike1D.Generic.INetworkData`1"/>
            of type double.
            <para>
            Required for COM interop, since COM can not handle generic types
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkDataDouble.Quantity">
            <summary>
            Quantity stored in network data
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkDataDouble.CanInterpolate">
            <summary>
            Flag specifying whether it makes sense to interpolate
            in values on a reach.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkDataDouble.GlobalValue">
            <summary>
            The global value
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkDataDouble.HasGlobalValue">
            <summary>
            Flag specifying whether this data has a global value defined
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataDouble.AddValue(DHI.Mike1D.Generic.ILocationSpan,System.Double)">
            <summary>
            Add value in a location span.
            <para>
            this corresponds to calling <see cref="M:DHI.Mike1D.Generic.INetworkDataDouble.AddValue(DHI.Mike1D.Generic.ILocation,System.Double)"/>
            for the start and end location of the span.
            </para>
            </summary>
            <remarks>
            If there has already been set a global reach value for the reach, 
            an exception is thrown.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataDouble.AddValue(DHI.Mike1D.Generic.ILocation,System.Double)">
            <summary>
            Add value at the given location
            </summary>
            <remarks>
            If there has already been set a global reach value for the reach, 
            an exception is thrown.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataDouble.AddGlobalReachValue(System.String,System.Double)">
            <summary>
            Add a value which is global for the reach, i.e. valid
            for the entire reach.
            </summary>
            <remarks>
            If there already exists value at locations in the reach, 
            an exception is thrown.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataDouble.AddValue(System.String,System.Double)">
            <summary>
            Add value at the given node
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkDataDouble.NodeIdValuePairs">
            <summary>
            The set of node id's and values defined.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataDouble.GetReachData(System.String)">
            <summary>
            Get a <see cref="T:DHI.Mike1D.Generic.INetworkReachData`1"/> for the specified link/reachId.
            Returns null if no valueset exist for the link/reachId.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkDataDouble.ReachData">
            <summary>
            Retrieves reaches which has data
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IReachLocationValueDouble">
            <summary>
            An explicitly typed version of <see cref="T:DHI.Mike1D.Generic.IReachLocationValue`1"/>
            of type double.
            <para>
            Required for COM interop, since COM can not handle generic types
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IReachLocationValueDouble.StartChainage">
            <summary>
            Start chainage of value
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IReachLocationValueDouble.EndChainage">
            <summary>
            End chainage of value. Only used if <see cref="P:DHI.Mike1D.Generic.IReachLocationValue`1.IsSpan"/> is set.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IReachLocationValueDouble.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.INetworkReachDataDouble">
            <summary>
            An explicitly typed version of <see cref="T:DHI.Mike1D.Generic.INetworkReachData`1"/>
            of type double.
            <para>
            Required for COM interop, since COM can not handle generic types
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkReachDataDouble.ReachId">
            <summary>
            Id of reach
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkReachDataDouble.IsGlobal">
            <summary>
            Flag defining whether there is one value defined for
            the entire reach, or whether there is a set of chainage-values.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkReachDataDouble.GlobalValue">
            <summary>
            Get the reach global value. Only valid if <see cref="M:DHI.Mike1D.Generic.INetworkReachDataDouble.IsGlobal"/>
            is true.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkReachDataDouble.Add(System.Double,System.Double)">
            <summary>
            Add a value at the chainage location on the reach
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkReachDataDouble.Add(System.Double,System.Double,System.Double)">
            <summary>
            Add a value at the span on the reach
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkReachDataDouble.Values">
            <summary>
            The reach location values, in case <see cref="M:DHI.Mike1D.Generic.INetworkReachDataDouble.IsGlobal"/> is false.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.INetworkLocation">
            <summary>
            A <see cref="T:DHI.Mike1D.Generic.INetworkLocation"/> is a location in the network which
            can either be specified by a node id, or an <see cref="T:DHI.Mike1D.Generic.ILocation"/>.
            <para>
             The <see cref="P:DHI.Mike1D.Generic.INetworkLocation.IsNodeBased"/> determines whether the <see cref="P:DHI.Mike1D.Generic.INetworkLocation.NodeId"/>
            or the <see cref="P:DHI.Mike1D.Generic.INetworkLocation.Location"/> is set.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkLocation.IsNodeBased">
            <summary>
            Bool defining whether the <see cref="P:DHI.Mike1D.Generic.INetworkLocation.NodeId"/> (true) or the <see cref="P:DHI.Mike1D.Generic.INetworkLocation.Location"/> (false)
            is set.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkLocation.NodeId">
            <summary>
            Id of node
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkLocation.Location">
            <summary>
            Location in reach.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.NetworkLocationNode">
            <summary>
            An <see cref="T:DHI.Mike1D.Generic.INetworkLocation"/> for a node
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkLocationNode.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="nodeId"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkLocationNode.IsNodeBased">
            <summary>
            Bool defining whether the <see cref="P:DHI.Mike1D.Generic.INetworkLocation.NodeId"/> (true) or the <see cref="P:DHI.Mike1D.Generic.INetworkLocation.Location"/> (false)
            is set.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkLocationNode.NodeId">
            <summary>
            Id of node
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkLocationNode.Location">
            <summary>
            Location in reach.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkLocationNode.ToString">
            <summary>
            Added for debug purposes
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.NetworkLocationReach">
            <summary>
            An <see cref="T:DHI.Mike1D.Generic.INetworkLocation"/> for a reach
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkLocationReach.#ctor(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkLocationReach.IsNodeBased">
            <summary>
            Bool defining whether the <see cref="P:DHI.Mike1D.Generic.INetworkLocation.NodeId"/> (true) or the <see cref="P:DHI.Mike1D.Generic.INetworkLocation.Location"/> (false)
            is set.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkLocationReach.NodeId">
            <summary>
            Id of node
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkLocationReach.Location">
            <summary>
            Location in reach.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkLocationReach.ToString">
            <summary>
            Added for debug purposes
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IniFile">
            <summary>
            Read .ini configuration files
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IniFile.IniFileParser.GetSections(System.String)">
            <summary>
            Get names of sections and their (key,value) pairs
            </summary>
            <param name="iniFileContents"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IniFile.IniFileParser.GetSectionNameValues(System.String)">
            <summary>
            Get (key,value) pairs in a section
            </summary>
            <param name="sectionData"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IniFile.#ctor(System.String)">
            <summary>
             Constructor. Throws an exception if the file with name fileName does not exist.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.IniFile.GetSection(System.String)">
            <summary>
             Get a section from an ini file. Throws an exception if the section doesn't exist.
            </summary>
            <param name="sectionName"></param>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.IniFileSection">
            <summary>
            Class to hold a named section of an ini file.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IniFileSection.#ctor">
            <summary>
            Default constructor. The object created here will be empty and always return the default value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IniFileSection.#ctor(DHI.Mike1D.Generic.IniFile.IniFileContents,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="iniFile"></param>
            <param name="sectionName">The section key.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.IniFileSection.GetIniFileSection(DHI.Mike1D.Generic.IniFile,System.String,DHI.Mike1D.Generic.IDiagnostics,System.String)">
            <summary>
            Return an IniFileSection. If an error occurs (file not found or section not found) a default
            IniFileSection will be returned that always returns the default value.
            </summary>
            <param name="iniFile"></param>
            <param name="sectionName"></param>
            <param name="diagnostics"></param>
            <param name="notFoundDiagnosticsItemID"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IniFileSection.GetInteger(System.String,System.Int32)">
            <summary>
            Return an integer value
            </summary>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IniFileSection.GetDouble(System.String,System.Double)">
            <summary>
            Return an double value
            </summary>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IniFileSection.GetString(System.String,System.String)">
            <summary>
            Return an string
            </summary>
            <param name="keyName">The name.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IniFileSection.GetBoolean(System.String,System.Boolean)">
            <summary>
            Return a boolean value
            </summary>
            <param name="keyName">The name.</param>
            <param name="defaultValue">if set to <c>true</c> [default value].</param>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.LicenseChecker">
            <summary>
            Provides access to the DHI license system
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.LicenseChecker.LRV">
            <summary> LRV </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LicenseChecker.SelectLicense(System.String)">
            <summary>
            Add a DHI license identifier to the list of license that will be requested.
            </summary>
            <param name="licenseType"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.LicenseChecker.RequestLicense(System.Int32)">
            <summary>
            Request licenses. Calls DHI.Generic.MikeZero.License.LicenseWrapper.RequestLicenseWin()
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LicenseChecker.ReleaseLicense">
            <summary>
            Release all licenses.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LicenseChecker.GetLicenseErrorDiagnosticsItem(System.Int32)">
            <summary>
            Convert a license error code to an error string
            </summary>
            <param name="rc"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LicenseChecker.GetLicenseErrorDiagnosticsItem(System.Int32,System.String)">
            <summary>
            Convert a license error code to an error string
            </summary>
            <param name="rc"></param>
            <param name="licenseModuleName"> </param>
            <returns></returns>
        </member>
        <member name="F:DHI.Mike1D.Generic.LicenseChecker.DEMOMODEM11">
            <summary> </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.LicenseChecker.DEMOMODEMU">
            <summary> </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.LicenseWrapperSimple">
            <summary>
            A wrapper for making procedure calls in the DHI license managment DLL.
            This file is based on DHI.Generic.MIKEZero.LicenseWrapper.cs.
            Compared to that file, the following has been changed:
            1) Thread safety has been removed.
            2) Chaching of license checkout has been removed 
            3) Access to maximum node count information has been added
            
            The changes have been implemented in order to be able to check the same license 
            multiple times (DHI.Generic.MIKEZero.LicenseWrapper.cs has a 1 minute window)
            and point 3 above.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LicenseWrapperSimple._ReleaseAllLicensesApp">
            <summary>
            Releases all licenses checked out by the process.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LicenseWrapperSimple._ReleaseAllLicensesApp(System.String,System.String)">
            <summary>
            Releases specific licenses checked out by the process.
            </summary>
            <param name="moduleName">Module name.</param>
            <param name="subModuleName">Submodule name.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.LicenseWrapperSimple._RequestLicenseApp(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Requests licenses for the specific module and submodule.
            </summary>
            <param name="rndNum">Random number used for scrambling of data.</param>
            <param name="moduleName">Module name.</param>
            <param name="subModuleName">Submodule name.</param>
            <param name="versionMajor">Major version number.</param>
            <param name="versionMinor">Minor version number.</param>
            <param name="maxNode1">Unspecified.</param>
            <param name="maxNode2">Unspecified.</param>
            <param name="maxNode3">Unspecified.</param>
            <param name="maxNode4">Unspecified.</param>
            <param name="startTimer">Non-zero, if wait-timer should be started.</param>
            <returns>0, if the function succeeded, otherwise number indicating error.</returns>        
        </member>
        <member name="M:DHI.Mike1D.Generic.LicenseWrapperSimple.ConfirmAllLicensesWin">
            <summary>
            Verifies, whether all requested licenses are still avialable.
            </summary>
            <returns>0, if all the licenses are still avialable, otherwise number indicating
            error.</returns>        
        </member>
        <member name="M:DHI.Mike1D.Generic.LicenseWrapperSimple.GetErrMsg(System.Int32,System.String@)">
            <summary>
            Returns error message corresponding to an error number.
            </summary>
            <param name="errNum">The error number.</param>
            <param name="errMsg">The error message.</param>
            <returns>0, if the function succeeded, otherwise number indicating error.</returns>
            <remarks>The method is thread safe.</remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.LicenseWrapperSimple.ReleaseAllLicensesWin">
            <summary>
            Releases all licenses checked out by the process.
            </summary>        
            <remarks>The method is thread safe.</remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.LicenseWrapperSimple.ReleaseLicenseWin(System.String,System.String)">
            <summary>
            Releases specific licenses checked out by the process.
            </summary>
            <param name="moduleName">Module name.</param>
            <param name="subModuleName">Submodule name.</param>   
            <remarks>The method is thread safe.</remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.LicenseWrapperSimple.RequestLicenseWin(System.Int32,System.String,System.String,System.Int64,System.Int64,System.Int64,System.Int64,System.String,System.String,System.Int32)">
            <summary>
            Requests licenses for the specific module and submodule.
            </summary>
            <param name="rndNum">Random number used for scrambling of data.</param>
            <param name="moduleName">Module name.</param>
            <param name="subModuleName">Submodule name.</param>
            <param name="versionMajor">Major version number.</param>
            <param name="versionMinor">Minor version number.</param>
            <param name="maxNode1">Unspecified.</param>
            <param name="maxNode2">Unspecified.</param>
            <param name="maxNode3">Unspecified.</param>
            <param name="maxNode4">Unspecified.</param>
            <param name="startTimer">Non-zero, if wait-timer should be started.</param>
            <returns>0, if the function succeeded, otherwise number indicating error.</returns>        
        </member>
        <member name="M:DHI.Mike1D.Generic.LicenseWrapperSimple.GetMaxNodesByModuleName(System.String,System.Int64@,System.Int64@,System.String@,System.String@)">
            <summary>
             Get maximum number of nodes for a specified license.
            </summary>
            <param name="moduleName"></param>
            <param name="maxNode1"></param>
            <param name="maxNode2"></param>
            <param name="maxNode3"></param>
            <param name="maxNode4"></param>
        </member>
        <member name="T:DHI.Mike1D.Generic.Polygon">
            <summary>
             A polygon is a set of 2-D points. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Polygon.Points">
            <summary>
            List of all points in polygon
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Polygon.CheckIfSimple">
            <summary>
            Check if polygon is simple.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Polygon.Contains(DHI.Mike1D.Generic.XYPair)">
            <summary>
            Check if polygon contains point.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.Polygon.XMax">
            <summary>
            Right edge of the polygon
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Polygon.XMin">
            <summary>
            Left edge of the polygon
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Polygon.YMax">
            <summary>
            Maximum y-value for the polygon (top level)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Polygon.YMin">
            <summary>
            Minimum y-value for the polygon (bottom level)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Polygon.AddPoint(System.Double,System.Double)">
            <summary>
             Add a point to the polygon
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Polygon.AddPoint(DHI.Mike1D.Generic.XYPair)">
            <summary>
             Add a point to the polygon
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.QuickSort">
            <summary>
            Class performing quicksort of an <see cref="T:System.Collections.Generic.IList`1"/>
            <para>
            As compared to <see cref="T:DHI.Mike1D.Generic.MergeSort`1"/>, merge sort is stable
            (preserves order of equal elements), but uses more memory (an extra
            array of the same size). Quick sort is un-stable, but performs in-place
            sorting.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.QuickSort.Sort``1(System.Collections.Generic.IList{``0})">
            <summary>
            Sort the entire list
            </summary>
            <typeparam name="T">Type of elements in the list</typeparam>
            <param name="list">List</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.QuickSort.Sort``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Sort the entire list
            </summary>
            <typeparam name="T">Type of elements in the list</typeparam>
            <param name="list">List</param>
            <param name="comparer">Comparer to use in sorting</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.QuickSort`1">
            <summary>
            Class performing quicksort of an <see cref="T:System.Collections.Generic.IList`1"/>
            <para>
            As compared to <see cref="T:DHI.Mike1D.Generic.MergeSort`1"/>, merge sort is stable
            (preserves order of equal elements), but uses more memory (an extra
            array of the same size). Quick sort is un-stable, but performs in-place
            sorting.
            </para>
            </summary>
            <typeparam name="T">Type of elements in the list</typeparam>
        </member>
        <member name="M:DHI.Mike1D.Generic.QuickSort`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Creates an instance for sorting
            </summary>
            <param name="list">List to sort</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.QuickSort`1.#ctor(System.Collections.Generic.IList{`0},System.Collections.Generic.IComparer{`0})">
            <summary>
            Creates an instance for sorting
            </summary>
            <param name="list">List to sort</param>
            <param name="comparer">Comparer to use when sorting</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.QuickSort`1.CompareCount">
            <summary>
            Number of compares during the sorting procedure
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.QuickSort`1.SwapCount">
            <summary>
            Number of swaps during the sorting procedure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.QuickSort`1.Sort">
            <summary>
            Sort entire list
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.QuickSort`1.Sort(System.Int32,System.Int32)">
            <summary>
            Sort list within the provided indices (inclusive)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.QuickSort`1.SortWpVersion">
            <summary>
            Sort entire list.
            <para>
            Version from Wikipedia, which is not optimal
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.QuickSort`1.SortWpVersion(System.Int32,System.Int32)">
            <summary>
            Sort list within the provided indices (inclusive)
            <para>
            Version from Wikipedia, which is not optimal
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IStringDoublePair">
            <summary>
            Interface for a pair of strings and doubles
            </summary>
            <remarks>
            Required for COM interop
            </remarks>
        </member>
        <member name="P:DHI.Mike1D.Generic.IStringDoublePair.String">
            <summary>
            String of pair
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IStringDoublePair.Double">
            <summary>
            Double of pair
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.StringDoublePair">
            <summary>
            Class for a pair of strings and doubles
            </summary>
            <remarks>
            Required for COM interop
            </remarks>
        </member>
        <member name="P:DHI.Mike1D.Generic.StringDoublePair.String">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.StringDoublePair.Double">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.StringDoubleKeyValuePair">
            <summary>
            Class for a pair of strings and doubles
            </summary>
            <remarks>
            Required for COM interop
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.StringDoubleKeyValuePair.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Double})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.StringDoubleKeyValuePair.String">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.StringDoubleKeyValuePair.Double">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.StringDoubleEnumerator">
            <summary>
            Helper class for wrapping an <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            of type <see cref="T:System.Collections.Generic.KeyValuePair`2"/> with string and double
            into one of type <see cref="T:DHI.Mike1D.Generic.IStringDoublePair"/>
            </summary>
            <remarks>
            Required for COM interop
            </remarks>
        </member>
        <member name="T:DHI.Mike1D.Generic.StringDoubleEnumerable">
            <summary>
            Helper class for wrapping an <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            of type <see cref="T:System.Collections.Generic.KeyValuePair`2"/> with string and double
            into one of type <see cref="T:DHI.Mike1D.Generic.IStringDoublePair"/>
            </summary>
            <remarks>
            Required for COM interop
            </remarks>
        </member>
        <member name="T:DHI.Mike1D.Generic.PriorityQueue`1">
            <summary>
            A priority queue. It will return the value with the highest priority/compare value first.
            Multiple occurences of the same object/compare value is allowed.
            <para>
            You can update an element in the priority queue, thereby reposition it in the queue. Save the 
            <see cref="T:DHI.Mike1D.Generic.PriorityQueue`1.Node"/> returned by <see cref="M:DHI.Mike1D.Generic.PriorityQueue`1.Enqueue(`0)"/>, and updated the value 
            by setting the <see cref="P:DHI.Mike1D.Generic.PriorityQueue`1.Node.Value"/>.
            </para>
            <remarks>
            It is based on a balanced heap data structure (a list handled as a tree structure).
            <para>
            In cases where priority value equals, it does first-in-first-out.
            </para>
            <para>
            Performance: It has O(log(n)) enqueueing, dequeueing and updating of key.
            </para>
            </remarks>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`1.#ctor">
            <summary>
            Create a priority queue using the default comparer for the <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Create a priority queue and use the provided comparer for the keys.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.PriorityQueue`1.Count">
            <summary>
            Current number of elements in queue
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`1.Clear">
            <summary>
            Clears and empties queue.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`1.Enqueue(`0)">
            <summary>
            Add a new element to the queue, with the given priority
            </summary>
            <returns>
            A <see cref="T:DHI.Mike1D.Generic.PriorityQueue`1.Node"/>. This can be used
            for updating the key.
            </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`1.Dequeue">
            <summary>
            Take the first element out of the queue and return it. the first
            element is the one with the largest key.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.PriorityQueue`1.First">
            <summary>
            Take a look at the first element in the queue, without dequeue'ing
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.PriorityQueue`1.FirstNode">
            <summary>
            Take a look at the first element in the queue, without dequeue'ing,
            returning the priority key node
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`1.ToArray">
            <summary>
            Copies the elements of the priority queue to a new array,
            sorts it and returns it in priority order. 
            <para>
            This is an O(n log(n)) operation
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`1.BubbleUp(System.Int32)">
            <summary>
            Bubble up the node at index i through the tree towards the
            root, until it is correctly sorted.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`1.Heapify(System.Int32)">
            <summary>
            Heapify puts the node at index i further down the tree
            making sure that it has the correct sorted position.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`1.Parent(System.Int32)">
            <summary>
            Parent index
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`1.Left(System.Int32)">
            <summary>
            Left child index
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`1.Right(System.Int32)">
            <summary>
            Right child index
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.PriorityQueue`1.Node">
            <summary>
            A node in the priority queue. Updating the value of the
            node will update the priority key value and reposition
            the node in the search tree.
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="F:DHI.Mike1D.Generic.PriorityQueue`1.Node._value">
            The important use of the Node is to provide a pointer 
            to the position of the value in the internal list, the
            _index variable. 
            
            It also contains the _insertionOrder in order to maintain 
            first-in-first-out of equal-priority nodes.
        </member>
        <member name="P:DHI.Mike1D.Generic.PriorityQueue`1.Node.Value">
            <summary>
            Value object in the heap
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`1.Node.Delete">
            <summary>
            Delete value from queue
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`1.Node.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:DHI.Mike1D.Generic.PriorityQueue`1.Node.Invalidate">
            <summary>
            Invalidate this node, when it no longer belongs to the
            priority queue (when dequeued).
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.VersionTool">
            <summary>
            Various tools for extracting versions etc.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.VersionTool.DHIMajorVersion">
            <summary>
            Major install version of DHI software
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.VersionTool.DHIMinorVersion">
            <summary>
            Minor install version of DHI software
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.AbstractLocationSpan">
            <summary>
            Abstract class implementing the base functionality for a location span
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.AbstractLocationSpan.StartChainage">
            <summary>
            Start chainage.
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.AbstractLocationSpan.EndChainage">
            <summary>
            End chainage.
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.AbstractLocationSpan._intID">
            <summary>
            Unique integer ID for this span
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.AbstractLocationSpan._id">
            <summary>
            Unique string ID for this span
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.AbstractLocationSpan.ID">
            <summary>
            Identification name
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.AbstractLocationSpan.ContainsChainage(System.Double)">
             <summary>
             Decides wheather a chainage value is contained inside the location span chainage values 
             or on the edge of the span.
            
             Comparison uses the Constants.LOCATION_EQUAL_TOLERANCE,
             i.e., the chainage can be tolerance outside the span and still be contained.
             </summary>
             <param name="chainage">Chainage value</param>
             <returns>True if contained</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.AbstractLocationSpan.StrictContainsChainage(System.Double)">
             <summary>
             Decides whether a chainage value is strictly contained inside the location span 
             chainage values.
            
             Comparison uses the Constants.LOCATION_EQUAL_TOLERANCE,
             i.e., the chainage must be tolerance inside the span before it is contained.
             </summary>
             <param name="chainage">Chainage argument</param>
             <returns>True if strictly contained</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.AbstractLocationSpan.ContainsChainage(System.Double,System.Double)">
             <summary>
             Decides whether a chainage value is contained inside the location span chainage values 
             or on the edge of the span.
            
             Comparison uses the <paramref name="tolerance"/>,
             i.e., the chainage can be tolerance outside the span and still be contained.
             Negative values for tolerance are allowed ("shortening" the span)
             </summary>
             <returns>True if contained</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.AbstractLocationSpan.Contains(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Decides wheather location is contained inside the location span or on the edge of the span.
            
            Location comparisons are case insensitive, and uses the Constants.LOCATION_EQUAL_TOLERANCE,
            i.e., the location can be tolerance outside the span and still be contained.
            </summary>
            <param name="location"></param>
            <returns>true if location has same branch name and chainage is inside interval</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.AbstractLocationSpan.StrictContains(DHI.Mike1D.Generic.ILocation)">
            <summary>
            <para>
            Decides whether location is contained inside the location span. Inside is understood as 
            startChainage > location.Chainage and location.Chainage > endLocation
            </para>
            <para>
            Location comparisons are case insensitive, and uses the Constants.LOCATION_EQUAL_TOLERANCE,
            i.e., location.Chainage must be tolerance inside the span to evaluate to true.
            </para>
            </summary>
            <param name="location">Location to check</param>
            <returns>true if location has same branch name and chainage is strictly inside interval</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.AbstractLocationSpan.Contains(DHI.Mike1D.Generic.ILocation,System.Double)">
            <summary>
            Decides wheather location is contained inside the location span or on the edge of the span.
            
            Location comparisons are case insensitive, and uses the <paramref name="tolerance"/>,
            i.e., the location can be tolerance outside the span and still be contained. <paramref name="tolerance"/> may
            be negative.
            </summary>
            <returns>true if location has same branch name and chainage is inside interval</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.AbstractLocationSpan.StrictContains(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Decides whether a location span is contained inside this location span. This is the case when both the start
            and end location is contained inside the location span
            </summary>
            <param name="locationSpan"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.AbstractLocationSpan.OverLaps(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Decides whether a location span overlaps the current locationSpan.
            
            There must be a strict overlap, i.e., the intersection must be larger than 
            <see cref="F:DHI.Mike1D.Generic.Constants.LOCATION_EQUAL_TOLERANCE"/>.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.AbstractLocationSpan.OverLaps(DHI.Mike1D.Generic.ILocationSpan,System.Double)">
            <summary>
            Decides whether a location span overlaps the current locationSpan. If overlap is less than
            minOverlap, false is returned.
            </summary>
            <param name="other">Location span to check</param>
            <param name="minOverlap">Positive or zero number specifying the minimum overlap required</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.AbstractLocationSpan.OverLaps(System.Double,System.Double,System.Double)">
            <summary>
            Decides whether a location span overlaps the chainages of another locationSpan. If overlap is less than
            minOverlap, false is returned.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.AbstractLocationSpan.Length">
            <summary>
            Length of the location span. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.AbstractLocationSpan.IDEquals(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Check if the ID equals the others ID, case ignored (culture invariant)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.AbstractLocationSpan.CompareTo(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="other" />. Zero This instance is equal to <paramref name="other" />. Greater than zero This instance is greater than <paramref name="other" />. 
            </returns>
            <param name="other">An object to compare with this instance. </param>
        </member>
        <member name="T:DHI.Mike1D.Generic.IXYZLocationSpan">
            <summary>
            A location span that is defined by a set of coordinates
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IXYZLocationSpan.Coordinates">
            <summary>
            Coordinates of the location
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYZLocationSpan.GetStartLocation">
            <summary>
            Gets the start location of the span. The span can not be edited by editing 
            this location.
            </summary>
            <returns>Start location of the span</returns>
            <remarks>
            Made as a method instead of a property get to avoid 
            users to think the start location of the span can be 
            manipulated through this method.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYZLocationSpan.GetEndLocation">
            <summary>
            Gets the end location of the span. The span can not be edited by editing 
            this location.
            </summary>
            <returns>End location of the span</returns>
            <remarks>
            Made as a method instead of a property get to avoid 
            users to think the end location of the span can be 
            manipulated through this method.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYZLocationSpan.CreateLocation(System.Double)">
            <summary>
            Creates a location at the specified chainage of the span. Derived
            data is automatically calculated at the location. 
            The chainage must lay within the span.
            </summary>
            <param name="chainage">Chainage to make location at</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYZLocationSpan.CreateSubLocationSpan(System.Double,System.Double)">
            <summary>
            Creates a sub-locationSpan defined within chainage interval. Derived
            data is automatically adjusted to match locationspan
            The chainages must lay within the span.
            </summary>
            <param name="startChainage">Start chainage for new locationSpan</param>
            <param name="endChainage">End chainage for new locationSpan</param>
            <returns>A derived location span defined at chainage interval</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYZLocationSpan.Intersection(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Returns the intersection of this and other. 
            
            There must be a strict overlap, i.e., the intersection must be larger than
            <see cref="F:DHI.Mike1D.Generic.Constants.LOCATION_EQUAL_TOLERANCE"/>.
            </summary>
            <param name="other"></param>
            <returns>The intersected span, or null if they are not overlapping</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYZLocationSpan.Intersection(DHI.Mike1D.Generic.ILocationSpan,System.Double)">
            <summary>
            Returns the intersection of this and other. 
            
            There must be a strict overlap, i.e., the intersection must be larger than
            minOverlap. Set to zero if very small overlaps is allowed.
            </summary>
            <param name="other"></param>
            <param name="minOverlap">positive or zero number specifying how big an overlap that is required.</param>
            <returns>The intersected span, or null if they are not overlapping</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYZLocationSpan.Intersection(System.Double,System.Double,System.Double)">
            <summary>
            Returns the intersection of this and chainages of another locationspan. 
            
            There must be a strict overlap, i.e., the intersection must be larger than
            minOverlap. Set to zero if very small overlaps is allowed.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYZLocationSpan.MidPoint">
            <summary>
            Returns location midway in the location span
            </summary>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.XYZLocationSpan">
            <summary>
            A location span that is defined by a set of coordinates
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZLocationSpan.#ctor(System.String)">
            <summary>
             Constructor. Creates a XYZLocationSpan with the given id
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYZLocationSpan.Coordinates">
            <summary>
            Coordinates that define the location span
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZLocationSpan.Equals(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYZLocationSpan.StartChainage">
            <summary>
            Start chainage.
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYZLocationSpan.EndChainage">
            <summary>
            End chainage.
            Unit: [m]
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZLocationSpan.GetStartLocation">
            <summary>
            Gets the start location of the span. The span can not be edited by editing 
            this location.
            </summary>
            <returns>Start location of the span</returns>
            <remarks>
            Made as a method instead of a property get to avoid 
            users to think the start location of tye span can be 
            manipulated through this method.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZLocationSpan.MidPoint">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZLocationSpan.GetEndLocation">
            <summary>
            Gets the end location of the span. The span can not be edited by editing 
            this location.
            </summary>
            <returns>End location of the span</returns>
            <remarks>
            Made as a method instead of a property get to avoid 
            users to think the end location of the span can be 
            manipulated through this method.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZLocationSpan.CreateLocation(System.Double)">
            <summary>
            Creates a location at the specified chainage of the span. Derived
            data is automatically calculated at the location. 
            The chainage must lay within the span.
            </summary>
            <param name="chainage">Chainage to make location at</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZLocationSpan.CreateSubLocationSpan(System.Double,System.Double)">
            <summary>
            Creates a sub-locationSpan defined within chainage interval. Derived
            data is automatically adjusted to match locationspan
            The chainages must lay within the span.
            <para>
            If an existing coordinate is inside but very close to one of the new 
            locationspan end points, that coordinate will not be part of the
            new span, hence you may not find all points of the existing span
            in the new span. It uses <see cref="F:DHI.Mike1D.Generic.Constants.LOCATION_EQUAL_TOLERANCE"/>
            on the M value.
            </para>
            </summary>
            <param name="startChainage">Start chainage for new locationSpan</param>
            <param name="endChainage">End chainage for new locationSpan</param>
            <returns>A derived location span defined at chainage interval</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZLocationSpan.Intersection(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Returns the intersection of this and other. 
            
            There must be a strict overlap, i.e., the intersection must be larger than
            <see cref="F:DHI.Mike1D.Generic.Constants.LOCATION_EQUAL_TOLERANCE"/>.
            </summary>
            <param name="other"></param>
            <returns>The intersected span, or null if they are not overlapping</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZLocationSpan.Intersection(DHI.Mike1D.Generic.ILocationSpan,System.Double)">
            <summary>
            Returns the intersection of this and other. 
            
            There must be a strict overlap, i.e., the intersection must be larger than
            minOverlap. Set to zero if very small overlaps is allowed.
            </summary>
            <param name="other"></param>
            <param name="minOverlap">positive or zero number specifying how big an overlap that is required.</param>
            <returns>The intersected span, or null if they are not overlapping</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZLocationSpan.Intersection(System.Double,System.Double,System.Double)">
            <summary>
            Returns the intersection of this and chainages of another locationspan. 
            
            There must be a strict overlap, i.e., the intersection must be larger than
            minOverlap. Set to zero if very small overlaps is allowed.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZLocationSpan.Clone">
            <summary>
            Clone the properties of the XYZLocationSpan.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZLocationSpan.ToString">
            <summary>
            Return string representation of XYZLocationSpan
            </summary>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.DHITracer">
            <summary>
            Wrapper around the microsoft TraceSwitch class
            Messages are prepended with "Level (DisplayName, DateTime.Now)::". To get the
            message itself, split the string on "::"
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DHITracer.#ctor(System.String,System.String)">
            <summary>
             Default constructor
            </summary>
            <param name="displayName"></param>
            <param name="description"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.DHITracer.Error(System.String)">
            <summary>
             Record an error trace message
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.DHITracer.Warning(System.String)">
            <summary>
             Record warning trace message
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.DHITracer.Info(System.String)">
            <summary>
             Record an info trace message
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.DHITracer.Verbose(System.String)">
            <summary>
            Record a verbose trace message
            </summary>
            <param name="s"></param>
        </member>
        <member name="T:DHI.Mike1D.Generic.INetworkDataInterpolatorTimeSet`1">
            <summary>
            A set of network values of different quantities
            </summary>
            TODO: Use or remove!
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkDataInterpolatorTimeSet`1.StartTime">
            <summary>
            First time in network value
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.INetworkDataInterpolatorTimeSet`1.EndTime">
            <summary>
            Last time in network value. Must be equal or after <see cref="P:DHI.Mike1D.Generic.INetworkDataInterpolatorTimeSet`1.StartTime"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataInterpolatorTimeSet`1.Offers">
            <summary>
            List of data types that is offered
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataInterpolatorTimeSet`1.NetworkData(System.DateTime,System.Int32)">
            <summary>
            Return an <see cref="T:DHI.Mike1D.Generic.INetworkDataInterpolator`1"/> for the specified time and quantity.
            An exception is thrown if <paramref name="time"/> is not within <see cref="P:DHI.Mike1D.Generic.INetworkDataInterpolatorTimeSet`1.StartTime"/>
            and <see cref="P:DHI.Mike1D.Generic.INetworkDataInterpolatorTimeSet`1.EndTime"/>. 
            </summary>
            <param name="time">Time</param>
            <param name="quantityIndex">Index into <see cref="M:DHI.Mike1D.Generic.INetworkDataInterpolatorTimeSet`1.Offers"/></param>
        </member>
        <member name="T:DHI.Mike1D.Generic.INetworkDataInterpolatorSet`1">
            <summary>
            Interface for a set of network values of different quantities
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataInterpolatorSet`1.Offers">
            <summary>
            List of data types that is offered
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataInterpolatorSet`1.NetworkData(System.Int32)">
            <summary>
            Return an <see cref="T:DHI.Mike1D.Generic.INetworkDataInterpolator`1"/> for the specified quantity.
            </summary>
            <param name="quantityIndex">Index into <see cref="M:DHI.Mike1D.Generic.INetworkDataInterpolatorSet`1.Offers"/></param>
        </member>
        <member name="T:DHI.Mike1D.Generic.INetworkDataInterpolator`1">
            <summary>
            Generic interface for getting a value defined on a network. Values can be retrieved
            - On nodes
            - On locations using link/reachId + chainage
            - for a global Id.
            <para>
            Values are interpolated, if possible
            </para>
            </summary>
            <remarks>
            The <see cref="T:DHI.Mike1D.Generic.INetworkDataInterpolator`1"/> are some times being implemented 
            using an <see cref="T:DHI.Mike1D.Generic.INetworkData`1"/> for storing the data, (if the data can be interpolated)
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataInterpolator`1.GetValue(DHI.Mike1D.Generic.ILocation,`0@)">
            <summary>
            Get value for the specified location. Returns false if no value is
            defined around the location.
            </summary>
            <remarks>
            If more than one value is to be retrieved for the same reach, use
            the <see cref="M:DHI.Mike1D.Generic.INetworkDataInterpolator`1.GetReachData(System.String)"/> first and use that one to 
            get the values (for performance).
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataInterpolator`1.GetValue(System.String,`0@)">
            <summary>
            Get value for the specified node. Returns false if no value is
            defined for the node id.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataInterpolator`1.GetGlobalValue(`0@)">
            <summary>
            Get global value. Returns false if no global value is defined.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataInterpolator`1.GetGlobalValue(System.String,`0@)">
            <summary>
            Get value for the specified id. Returns false if no value is
            defined for the node id.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.INetworkDataInterpolator`1.GetReachData(System.String)">
            <summary>
            Get a <see cref="T:DHI.Mike1D.Generic.IReachDataInterpolator`1"/> for the specified link/reachId.
            Returns null if no valueset exist for the link/reachId.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IReachDataInterpolator`1">
            <summary>
            Generic interface for getting an interpolated value defined on a link/reach of a network.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IReachDataInterpolator`1.GetValue(System.Double,`0@)">
            <summary>
            Get value at the specified chainage of the link/reach. Returns false if no value
            is defined around the chainage.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IReachDataInterpolator`1.GetValue(System.Double,`0@,System.Boolean)">
            <summary>
            Get value at the specified chainage of the link/reach. Returns false if no value
            is defined around the chainage.
            <para>
            If two values are present at the same chainage, depending on the <paramref name="directionPositive"/>,
            if false, it will take the first (upstream value) and if true it will take the last (downstream) value.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IXYZTriple">
            <summary>
            Defines data for a single row in a XY table. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IXYZTriple.X">
            <summary>
            x
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IXYZTriple.Y">
            <summary>
            y
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IXYZTriple.Z">
            <summary>
            z
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IXYZTable">
            <summary>
            Table of corresponding levels and widths.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYZTable.YFromX(System.Double)">
            <summary>
            Interpolates/extrapolates width using linear interpolation
            </summary>
            <param name="x">the lookup variable</param>
            <returns>the interpolated y</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYZTable.ZFromX(System.Double)">
            <summary>
            Interpolates/extrapolates width using linear interpolation
            </summary>
            <param name="x">the lookup variable</param>
            <returns>the interpolated y</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYZTable.Validate">
            <summary>
            Validates the data. The only constraint is that the x values after sorting must be monotonically increasing.
            </summary>
            <returns>String that descripes the problem.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYZTable.Add(DHI.Mike1D.Generic.IXYZTriple)">
            <summary>
            Mehtod added to support COM enabling
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.IXYZTable.XValues">
            <summary>
             Get x values
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IXYZTable.YValues">
            <summary>
             Get y values
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IXYZTable.ZValues">
            <summary>
             Get z values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYZTable.Sort">
            <summary>
            Mehtod added to support COM enabling 
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.DiagnosticsToConsole">
            <summary>
             Static functions which output diagnostics to the console
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsToConsole.ToConsole(DHI.Mike1D.Generic.DiagnosticsType,DHI.Mike1D.Generic.IDiagnostics,DHI.Mike1D.Generic.IDiagnosticItem)">
            <summary>
             Print one item of a Diagnostics to the console.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsToConsole.ToConsole(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Print all hints, warnings, and erros of one Diagnostics to the console.
            </summary>
            <param name="diagnostics"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsToConsole.ToConsoleRecursive(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Print the hints, warnings, and erros of a Diagnostics to the console.
             Calls all children recursively.
            </summary>
            <param name="diagnostics"></param>
        </member>
        <member name="T:DHI.Mike1D.Generic.XYZTable">
            <summary>
            Table of corresponding x and y values.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZTable.YFromX(System.Double)">
            <summary>
            Interpolates/extrapolates width using linear interpolation
            </summary>
            <param name="x">the lookup variable</param>
            <returns>the interpolated value</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZTable.ZFromX(System.Double)">
            <summary>
            Interpolates/extrapolates width using linear interpolation
            </summary>
            <param name="x">the lookup variable</param>
            <returns>the interpolated value</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYZTable.XValues">
            <summary>
            Gets all the x values of the collection.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYZTable.YValues">
            <summary>
            Gets all the y values of the collection.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYZTable.ZValues">
            <summary>
            Gets all the y values of the collection.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZTable.Validate">
            <summary>
            Validates the data. The only constraint is that the levels after sorting must be monotonically increasing.
            </summary>
            <returns>String that descripes the problem.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZTable.Clone">
            <summary>
            Creates a copy of an instance.
            </summary>
            <returns>copy of instance</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZTable.Add(DHI.Mike1D.Generic.IXYZTriple)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZTable.Sort">
            <summary>
            
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZTable.AdjustX(System.Double)">
            <summary>
            Subtract first X value from all X values so that X begins at delta.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.XYZTriple">
            <summary>
            Holds the level width data of a structure.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.XYZTriple._x">
            <summary>
            x
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.XYZTriple._y">
            <summary>
            y
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.XYZTriple._z">
            <summary>
            z
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZTriple.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYZTriple.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYZTriple.X">
            <summary>
            X
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYZTriple.Z">
            <summary>
            X
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZTriple.CompareTo(System.Object)">
            <summary>
            Allows LevelWidth objects to be sorted after first Level and secondly Width.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYZTriple.Clone">
            <summary>
            Returns copy of instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.DiagnosticItem">
            <summary>
            One single diagnostics item/issue, containing one message. 
            <para>
            A message can have a number of <see cref="T:DHI.Mike1D.Generic.DiagnosticsValue"/>
            attached, giving a number and a item type. The unit is always
            the default unit of the type (SI).
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticItem._messageId">
            <summary> ID of message </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticItem._message">
            <summary> Actual message </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticItem._values">
            <summary> Values associated with item </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticItem._location">
            <summary> Location where item was generated </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItem.#ctor(System.String)">
            <summary>
            Create diagnostic item without values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItem.#ctor(System.String,System.Collections.Generic.List{DHI.Mike1D.Generic.DiagnosticsValue})">
            <summary>
            Create diagnostic item with list of values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItem.#ctor(System.String,System.Object[])">
            <summary>
            Create diagnostic item with list of values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItem.#ctor">
            <summary>
            Constructor for derived classes
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItem.HandleValues(System.Object[])">
            <summary>
            Examine each arg and put it into an appropriate diagnostic value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItem.SetLocation(System.String,System.Double)">
            <summary>
            Location of error message
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItem.SetLocation(DHI.Mike1D.Generic.DiagnosticsLocationType,System.String)">
            <summary>
            Location of error message
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItem.SetLocation(System.String)">
            <summary>
            Location of error message
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticItem.MessageID">
            <summary>
            ID of error in item.
            <para>
            Each kind of error will have an id which does not change between computers.
            The Message change, if localized messages exist for the system language.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticItem.Diagnostics">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticItem.Location">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticItem.Tokens">
            <summary>
             Set tokens for each of the <see cref="P:DHI.Mike1D.Generic.DiagnosticItem.Values"/>. Defaults to {0}, {1}, {2} etc
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItem.NumberOfValues">
            <summary>
            Return the number of values that this item expects
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticItem._bracketFinderRegExp">
            <summary>
            \S+? means "smallest possible match" of the \S+ (non-white space characters)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItem.CheckNumberOfValues(System.Int32)">
            <summary>
            Check if number of diagnostic values matches number of brackets
            </summary>
            <param name="n"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticItem.MessageNoValues">
            <summary>
            Diagnostics message
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticItem.AdditionalInfo">
            <summary>
            Additional information about diagnostics item. Used to append time step 
            information to errors in HDModule.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticItem.Hint">
            <summary>
            Diagnostics hint
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItem.HasHint">
            <summary>
             Returns true if this item has an associated hint. The hint can be accessed throught the Hint property.
            </summary>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticItem.Message">
            <summary>
             Diagnostics message with value placeholders replaced by values.
             Value place holder can be modified by setting the <see cref="P:DHI.Mike1D.Generic.DiagnosticItem.Tokens"/>.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticItem.Values">
            <summary>
             Diagnostic values
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.DiagnosticItemID">
            <summary>
            One single diagnostics item/issue, containing one message, based on
            the MIKE 1D fixed set of messages (resource-based).
            <para>
            A message can have a number of <see cref="T:DHI.Mike1D.Generic.DiagnosticsValue"/>
            attached, giving a number and a item type. The unit is always
            the default unit of the type (SI).
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItemID.#ctor(System.String)">
            <summary>
            Create diagnostic item without values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItemID.#ctor(System.String,System.Collections.Generic.List{DHI.Mike1D.Generic.DiagnosticsValue})">
            <summary>
            Create diagnostic item with list of values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItemID.#ctor(System.String,System.Object[])">
            <summary>
            Create diagnostic item with list of values
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticItemID.MessageID">
            <summary>
            ID of error in item.
            <para>
            Each kind of error will have an id which does not change between computers.
            The Message change, if localized messages exist for the system language.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItemID.SetValueDescriptions">
            <summary>
            Get value description from resource.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticItemID.MessageNoValues">
            <summary>
            Diagnostics message
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticItemID.Hint">
            <summary>
            Diagnostics hint
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItemID.HasHint">
            <summary>
             Returns true if this item has an associated hint. The hint can be accessed throught the Hint property.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.ReachSide">
            <summary>
            Side of river.
            <para>
            Side of river is when walking in positive chainage direction.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ReachSide.Undefined">
            <summary>
            if no side is defined
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ReachSide.Left">
            <summary>
            left lateral link
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ReachSide.Right">
            <summary>
            right lateral link
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.CrossSectionType">
            <summary>
            the types of cross sections. Some are predefined geometries.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.CrossSectionType.Open">
            <summary>
            Open cross-section (standard M11)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.CrossSectionType.ClosedIrregular">
            <summary>
            Closed irregular/Polygon cross-section
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.CrossSectionType.ClosedCircular">
            <summary>
            Circular closed cross-section
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.CrossSectionType.ClosedRectangular">
            <summary>
            Rectangular closed cross-section
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.PreDefinedMarker">
            <summary>
            Predefined markers for cross section points.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PreDefinedMarker.NoMarker">
            <summary>
            no marker (= 0)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PreDefinedMarker.LeftLeveeBank">
            <summary>
            The left levee bank (marker 1)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PreDefinedMarker.LowestPoint">
            <summary>
            The lowest point in the channel (marker 2).
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PreDefinedMarker.RightLeveeBank">
            <summary>
            The right levee bank (marker 3).
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PreDefinedMarker.LeftLowFlowBank">
            <summary>
            The left low flow bank (marker 4).
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PreDefinedMarker.RightLowFlowBank">
            <summary>
            The right low flow bank (marker 5).
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PreDefinedMarker.LeftCoordinateMarker">
            <summary>
            The point corresponding to the left coordinate of the cross section (marker 6).
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PreDefinedMarker.RightCoordinateMarker">
            <summary>
            The point corresponding to the right coordinate of the cross section (marker 7).
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ResistanceZoneApproachType">
            <summary>
             Type of resistance zone approach.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceZoneApproachType.SingleZone">
            <summary>
            Single zone
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceZoneApproachType.MultiZone">
            <summary>
            Multizone
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.CrossSectionZone">
            <summary>
            Zone types for cross sections.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.CrossSectionZone.Normal">
            <summary>
            Normal (default)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.CrossSectionZone.DeadWater">
            <summary>
            Dead water zone
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.CrossSectionZone.Vegetation">
            <summary>
            Vegetation zone
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.CrossSectionZone.BankVegetation">
            <summary>
            Bank vegetation zone
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.CrossSectionZone.DeadWaterDueToVegetation">
            <summary>
            Dead water zone (due to vegetation)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.CrossSectionZone.VegetationLowDensity">
            <summary>
            Vegetation (low density)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.CrossSectionZone.BankVegetationLowDensity">
            <summary>
            Bank vegetation (low density)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.CrossSectionZone.DeadWaterDueToVegetationLowDensity">
            <summary>
            Dead Water due to Vegetation (low density)
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.RadiusType">
            <summary>
            formulation for radius
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.RadiusType.ResistanceRadius">
            <summary>
            resistance radius
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.RadiusType.HydraulicRadiusEffectiveArea">
            <summary>
            hydraulic radius, effective area
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.RadiusType.HydraulicRadiusTotalArea">
            <summary>
            hydraulic radius, total area
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ResistanceDepthDependence">
            <summary>
             Resistence dependence on water level.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceDepthDependence.Constant">
            <summary>
             Resistance is not waterlevel dependent
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceDepthDependence.Exponent">
            <summary>
             Resistance is Mbot + (Mtop-Mbot)(
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceDepthDependence.Tabulated">
            <summary>
             Resistence is tabulated and stored in the XsBase cross section.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ResistanceFormulation">
            <summary>
            The resistance formulation to apply for resistance calculations.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceFormulation.Relative">
            <summary>
            Relative factor. The factor is relative to the globally provided
            resistance formulation and number
            </summary>
            <remarks>
            Larger value gives higher friction
            </remarks>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceFormulation.Manning_n">
            <summary>
            Manning's n. 
            </summary>
            <remarks>
            Larger value gives higher friction
            </remarks>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceFormulation.Manning_M">
            <summary>
            Manning's m
            </summary>
            <remarks>
            Larger value gives lower friction. 
            </remarks>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceFormulation.Chezy">
            <summary>
            Chezy
            </summary>
            <remarks>
            Larger value gives lower friction
            </remarks>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceFormulation.DarcyWeisbach">
            <summary>
            Darcy-Weisbach resistance. 
            <para>
            Note that Darcy-Weisbach resistance values are converted to Chezy
            resistance numbers while processing, so for a Darcy-Weisbach formulation
            the raw resistance values are Darcy-Weisbach, while the processed ones
            are Chezy.
            </para>
            </summary>
            <remarks>
            Larger value gives lower friction
            </remarks>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceFormulation.ColebrookWhite">
            <summary>
            Colebrook White. Only used with circular CrossSections
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceFormulation.HazenWilliams">
            <summary>
            Hazen Williams.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceFormulation.Manning_MRelative">
            <summary>
            Manning's m, relative, meaning that raw/processed resistance numbers are
            relative to the local manning number.
            </summary>
            <remarks>
            Larger value gives lower friction. 
            </remarks>
        </member>
        <member name="T:DHI.Mike1D.Generic.ResistanceDistribution">
            <summary>
            transversal distribution of resistance values
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceDistribution.Uniform">
            <summary>
            Uniform within the regular channel and vegetation parts, resp. (ie, 2 values).
            Resistance values are part of processed data
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceDistribution.Zones">
            <summary>
            High/low flow zones along the cross section profile, defined by low flow markers 
            (4, <see cref="F:DHI.Mike1D.Generic.PreDefinedMarker.LeftLowFlowBank"/> and
             5, <see cref="F:DHI.Mike1D.Generic.PreDefinedMarker.RightLowFlowBank"/>).
            Resistance values are part of processed data
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceDistribution.Distributed">
            <summary>
            Fully user-distributed along cross section profile.
            Resistance values are part of processed data
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceDistribution.Constant">
            <summary>
            Resistance value is constant for all water depths.
            Processed resistance values are not used.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ResistanceDistribution.ExponentVarying">
            <summary>
            Resistance is depth dependent with an exponential variation
            between top and bottom. 
            Processed resistance values are not used.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ProcessingOption">
            <summary>
            How levels should be determined when calculating processed data from raw data.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ProcessingOption.AutomaticLevels">
            <summary>
            Use the built-in algorithm to find appropriate processed levels
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ProcessingOption.EquidistantLevels">
            <summary>
            Equidistant processed levels between a given min/max pair
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ProcessingOption.UserDefinedLevels">
            <summary>
            Processed levels are user-defined
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.TopExtensionType">
            <summary>
            Type of extension of processed data. 
            <para>
            The values ending with Flag are flags
            that can be combined with the other type values.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TopExtensionType.None">
            <summary>
            Processed data is not extended
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TopExtensionType.ClosedNarrowing">
            <summary>
            For a closed cross section the processed data is extended beyond the 
            geometry with a channel of decreasing width.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TopExtensionType.ClosedProcessedNarrowing">
            <summary>
            For a closed processed cross section (no raw data) the processed data 
            is extended beyond the geometry with a channel of decreasing width.
            This is a pre-processing extension that is computed when the simulation is starting.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TopExtensionType.ClosedNarrowingAreaConstant">
            <summary>
            For a closed cross section the processed data is extended beyond the 
            geometry with a channel of decreasing width. The area
            will be constant for all exteded levels, equalling the area of 
            the top of the un-extended cross section
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TopExtensionType.ClosedProcessedNarrowingAreaConstant">
            <summary>
            For a closed processed cross section (no raw data) the processed data 
            is extended beyond the geometry with a channel of decreasing width. 
            This is a pre-processing extension that is computed when the simulation is starting.
            The area will be constant for all exteded levels, equalling the area of 
            the top of the un-extended cross section. 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TopExtensionType.AreaConstantFlag">
            <summary>
            Flag specifying how to handle the area in the extended data. If the
            flag is not set, the area in the extended area will match the
            widths and will slowly increase. If the flag is set, the area will be constant
            all the way up the extension.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ProcessedDataStatus">
            <summary>
            the state that the processed levels and values are in
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ProcessedDataStatus.Updated">
            <summary>
            up to date
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ProcessedDataStatus.NotUpdated">
            <summary>
            not up to date
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ProcessedDataStatus.EditedByUser">
            <summary>
            currently being edited in GUI
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.StandardCrossSectionType">
            <summary>
             Stand cross section types
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.StandardCrossSectionType.CircularMU">
            <summary>
             Mike Urban circular cross section
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.StandardCrossSectionType.EggShaped">
            <summary>
             Egg shaped cross section
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.StandardCrossSectionType.OShaped">
            <summary>
             "O" shaped cross section
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.MorphologicalDivisionType">
            <summary>
             Types of morphological division
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.MorphologicalDivisionType.None">
            <summary>
             No morphological division is applied.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.MorphologicalDivisionType.Level">
            <summary>
             The level of morphological division is specified explicitly
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.MorphologicalDivisionType.LowFlowMarkers">
            <summary>
             The smallest level of left and right low flow marker (marker 4 and 5) are used as morphological division level
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ElementDefinition">
            <summary>
            Default implementation of <see cref="T:DHI.Mike1D.Generic.IElementDefinition"/>.
            </summary>
            <remarks>
            Does not implement 3D version yet.
            </remarks>
        </member>
        <member name="P:DHI.Mike1D.Generic.ElementDefinition.Id">
            <summary>
            Id of element.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ElementDefinition.Vertices">
            <summary>
             Return the vertex coordinates
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ElementDefinition.VertexCount">
            <summary>
            Number of vertices in this element. Can be zero, if element is IdBased only and has no
            geographical reference.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ElementDefinition.GetVertex(System.Int32)">
            <summary>
            Return a specific vertex
            </summary>
            <param name="vertexNumber"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ElementDefinition.FaceCount">
            <summary>
            Returns the number of faces in a 3D element. Zero when not a 3D element.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ElementDefinition.FaceVertices(System.Int32)">
            <summary>
            Returns the list of vertices that comprise a given face number.
            </summary>
            <param name="faceNumber">Number of face to get vertex list for. Must be between 0 and <see cref="M:DHI.Mike1D.Generic.IElementDefinition.FaceCount"/>-1</param>
            <returns>Array of integers in the range 0 to <see cref="M:DHI.Mike1D.Generic.IElementDefinition.VertexCount"/>-1</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.ElementDefinitions">
            <summary>
            Class implementing a list of IElementDefinition's
            Required for generic list COM interop
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ElementDefinitions.#ctor">
            <summary>
            Initializes a new instance of the List class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ElementDefinitions.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the List class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.ElementDefinitions.#ctor(System.Collections.Generic.IEnumerable{DHI.Mike1D.Generic.IElementDefinition})">
            <summary>
            Initializes a new instance of the List class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.ElementSetDefinition">
            <summary>
             Default implementation of <see cref="T:DHI.Mike1D.Generic.IElementSetDefinition"/>
             
             Defines a set of elements that share some common properties:
              - All elements must be of same <see cref="T:DHI.Mike1D.Generic.ElementGeometry"/>
              - All vertices of the elements must be of same <see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ElementSetDefinition.#ctor">
            <summary>
            Initializes a new instance of the List class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ElementSetDefinition.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the List class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.ElementSetDefinition.#ctor(System.Collections.Generic.IEnumerable{DHI.Mike1D.Generic.IElementDefinition})">
            <summary>
            Initializes a new instance of the List class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.ElementSetDefinition.ElmtGeometry">
            <summary>
            Type of all elements in the set
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ElementSetDefinition.CoorType">
            <summary>
            Type of coordinate for all vertices in elements in the set
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ElementSetDefinition.ElementVertexCount">
            <summary>
            Number of vertices in all element in the set list. If -1, then
            the elements have different number of vertices, and you need to check the <see cref="M:DHI.Mike1D.Generic.IElementDefinition.VertexCount"/>
            for each element individually.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ElementSetDefinition.CreatePointElementSet(DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType,System.Collections.Generic.IList{DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate})">
            <summary>
            Creates an elementset where each element is a point, i.e., contains one vertex. 
            Each member of the vertices list is added as a point-element with
            that vertex coordinate as point coordinate
            </summary>
            <param name="coordinateType">Type of coordinate</param>
            <param name="vertices">List of <see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate"/> to make into point elements</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.ElementSetDefinition.CreatePointElement(DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Creates an single point element.
            </summary>
            <param name="coordinateType">Type of coordinate</param>
            <param name="vertex"><see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate"/> to make into element</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.ElementSetDefinition.CreatePolygonElementSet(DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType,System.Collections.Generic.IEnumerable{DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate})">
            <summary>
            Creates an elementset with one element being a polygon
            </summary>
            <param name="coordinateType">Type of coordinate</param>
            <param name="vertices">List of <see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate"/> to make into point elements</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.ElementSetDefinition.CreatePointElementSet(DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType,DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate)">
            <summary>
            Creates an elementset with one element being one point, i.e., contains one vertex. 
            The <see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate"/> is added as a point-element with
            that vertex coordinate as point coordinate
            </summary>
            <param name="coordinateType">Type of coordinate</param>
            <param name="vertex"><see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.ICoordinate"/> to make into point element</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.ElementSetDefinition.CreateIdElementSet(System.String)">
            <summary>
            Creates an elementset with one element with an Id.
            </summary>
            <param name="id">Id of element in elementset</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.ElementSetDefinition.CreateIdElementSet(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates an elementset with a set of elements with the given Id's.
            </summary>
            <param name="ids">Id's of each element in elementset</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.ElementSetDefinition.SetElementVertexCount(DHI.Mike1D.Generic.ElementSetDefinition,System.Int32)">
            <summary>
            Builder-type method to set the <see cref="P:DHI.Mike1D.Generic.ElementSetDefinition.ElementVertexCount"/>.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IElementDefinition">
            <summary>
            Defines geometry of an element. An element can have an Id or/and a number of vertices
            defining it.
            TODO: finish summary
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IElementDefinition.Id">
            <summary>
            Id of element.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IElementDefinition.VertexCount">
            <summary>
            Number of vertices in this element. Can be zero, if element is IdBased only and has no
            geographical reference.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IElementDefinition.GetVertex(System.Int32)">
            <summary>
            Returns the coordinate for the given vertex number
            </summary>
            <param name="vertexNumber">Number of vertex to get coordinate for, must be between 0 and <see cref="M:DHI.Mike1D.Generic.IElementDefinition.VertexCount"/>-1</param>
            <returns>The coordinates for the given vertex</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IElementDefinition.FaceCount">
            <summary>
            Returns the number of faces in a 3D element. Zero when not a 3D element.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IElementDefinition.FaceVertices(System.Int32)">
            <summary>
            Returns the list of vertices that comprise a given face number.
            </summary>
            <param name="faceNumber">Number of face to get vertex list for. Must be between 0 and <see cref="M:DHI.Mike1D.Generic.IElementDefinition.FaceCount"/>-1</param>
            <returns>Array of integers in the range 0 to <see cref="M:DHI.Mike1D.Generic.IElementDefinition.VertexCount"/>-1</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.IElementDefinitions">
            <summary>
            Interface for a list of <see cref="T:DHI.Mike1D.Generic.IElementDefinition"/>'s
            Required for generic list COM interop
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IElementDefinitions.Add(DHI.Mike1D.Generic.IElementDefinition)">
            <summary>
            Add a <see cref="T:DHI.Mike1D.Generic.IElementDefinition"/> to the list
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.IElementDefinitions.Item(System.Int32)">
            <summary>
            Get or set the <see cref="T:DHI.Mike1D.Generic.IElementDefinition"/> at the specified index in the list
            </summary>
            <param name="index">Index in list</param>
            <returns><see cref="T:DHI.Mike1D.Generic.IElementDefinition"/> at the index</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.IElementDefinitions.Count">
            <summary>
            The number of <see cref="T:DHI.Mike1D.Generic.IElementDefinition"/>'s in the list
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IElementDefinitions.IndexOf(DHI.Mike1D.Generic.IElementDefinition)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the entire List. 
            </summary>
            <param name="item">The object to locate in the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>The zero-based index of the first occurrence of item within the entire List, if found; otherwise, –1. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IElementDefinitions.Find(System.Predicate{DHI.Mike1D.Generic.IElementDefinition})">
            <summary>
            Searches for an element that matches the conditions defined by 
            the specified predicate, and returns the first occurrence within 
            the entire List. 
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type IElementDefinition. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IElementDefinitions.Remove(DHI.Mike1D.Generic.IElementDefinition)">
            <summary>
            Removes the first occurrence of a specific object from the List. 
            </summary>
            <param name="item">The object to remove from the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not found in the List. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IElementDefinitions.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the List. 
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <remarks>This method is an O(n) operation</remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.IElementDefinitions.Clear">
            <summary>
            Removes all elements from the List.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IElementDefinitions.ToArray">
            <summary>
            Copies all elements of the list to an array.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ElementGeometry">
            <summary>
            Type of elements
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ElementGeometry.IdBased">
            <summary>
            Id based
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ElementGeometry.Point">
            <summary>
            A point element having one vertex coordinate
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ElementGeometry.LineString">
            <summary>
            A polyline, defined by several vertices, where a value on each vertex/in
            between each vertex is defined.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ElementGeometry.Polygon">
            <summary>
            A polygon, defined by several vertices. The polygon is finished by connecting the first and the last vertex.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ElementGeometry.PolyHedron">
            <summary>
            A polyhedron, defined by several faces, each defined by several vertices.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IElementSetDefinition">
            <summary>
            Defines a set of elements that share some common properties:
             - All elements must be of same <see cref="T:DHI.Mike1D.Generic.ElementGeometry"/>
             - All vertices of the elements must be of same <see cref="T:DHI.Mike1D.Generic.Spatial.Geometry.CoordinateType"/>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IElementSetDefinition.ElmtGeometry">
            <summary>
            Type of all elements in the set
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IElementSetDefinition.CoorType">
            <summary>
            Type of coordinate for all vertices in elements in the set
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IElementSetDefinition.ElementVertexCount">
            <summary>
            Number of vertices in all element in the set list. If -1, then
            the elements have different number of vertices, and you need to check the <see cref="M:DHI.Mike1D.Generic.IElementDefinition.VertexCount"/>
            for each element individually.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IQuantity">
            <summary>
            A data quantity is a combination of an ID and an EUM item and unit. 
            <para>
            The data item type is one of the EUM types
            </para>
            <para>
            For AD components, they will usually have the same datatype
            but different ID's.
            </para>
            <para>
            It is not allowed to edit an IQuantity. Create a new one, if required.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IQuantity.Id">
            <summary>
            ID of the quantity. The ID is unique for a specific type of quantity within MIKE 1D. 
            Two quantities with different Ids are not equal to each other.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IQuantity.Description">
            <summary>
            Name/Description of the quantity. The description is used to distinguish between the same type of quantity
            on different sources. 
            <para>
            For instance, the quantity with Id DischargeInStructure uses the
            description to identity the structure. This is necessary since several structures can occupy the same location
            (quantities are usually identified by their location in the result file).
            </para>
            <para>
            NOTE: Two quantities with different descriptions but equal Ids are equal when compared.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IQuantity.EumQuantity">
            <summary>
            EumQuantity (item type and unit)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IQuantity.Equals(DHI.Mike1D.Generic.IQuantity)">
            <summary>
            Compare quantities
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.IQuantity.TimeValueType">
            <summary>
            Type of value in time stored by the quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IQuantity.Create(DHI.Generic.MikeZero.eumItem,System.String,System.String)">
            <summary>
            Create a new quantity with the item and description provided. Factory method
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.GenericXmlBridge`1">
            <summary>
            A generic bridge that has read/write capabilities for accessing xml files
            using a DataContractSerializer.
            </summary>
            <typeparam name="TDataAccess">A DataAccess component</typeparam>
        </member>
        <member name="F:DHI.Mike1D.Generic.GenericXmlBridge`1.VersionStrConst">
            <summary>
            Major version change: Not    backwards compatible, not forwards compatible
            Minor version change: Mostly backwards compatible, not forwards compatible
            Build version change: Fully  backwards compatible  and forwards compatible
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.GenericXmlBridge`1.Data">
            <summary>
            DataAccess component being written to/from
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.GenericXmlBridge`1.Surrogate">
            <summary>
             Data contract surrogate to handle if certain types are to be serialized in special
             ways and when deserialized object needs to be connected in a way that the serializer
             can not do automatically. Per default this is set to a SerializerSurrogate object.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.GenericXmlBridge`1.FilePath">
            <summary>
            FilePath specifying the name of the persistance storage
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.GenericXmlBridge`1._filePath">
            <summary>
            FilePath specifying the name of the persistance storage
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericXmlBridge`1.Open(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Opens the file in FilePath and Read data from 
            xml file into the DataAccess component. 
            <para>
            The xml must inlude data access versioning info. 
            Input read using this method must be written 
            using one of the Save methods.
            </para>
            <para>
            The FilePath must have been set to a valid xml file.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericXmlBridge`1.Open(System.IO.Stream,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Open data stored in stream
            <para>
            The xml must inlude data access versioning info. 
            Input read using this method must be written 
            using one of the Save methods.
            </para>
            <para>
            The FilePath must still have been set to a valid folder, to get relative paths in the setup right.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericXmlBridge`1.Open(System.Xml.XmlReader,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Reads the DataAccess component from XmlReader. 
            <para>
            The xml must inlude data access versioning info. 
            Input read using this method must be written 
            using one of the Save methods.
            </para>
            </summary>
            <param name="reader"></param>
            <param name="diagnostics"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericXmlBridge`1.Save">
            <summary>
            Saves the DataAccess component to file, using its connection
            property.
            <para>
            The output inludes data access versioning info. 
            Output stored using this method can be read
            again using the Open method.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericXmlBridge`1.Save(System.IO.Stream)">
            <summary>
            Saves the DataAccess component to file, using its connection
            property.
            <para>
            The output inludes data access versioning info. 
            Output stored using this method can be read
            again using the Open method.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericXmlBridge`1.Save(System.Xml.XmlWriter)">
            <summary>
            Writes the DataAccess component to XmlWriter. 
            <para>
            The output inludes data access versioning info. 
            Output stored using this method can be read
            again using the Open method.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericXmlBridge`1.Read(System.Xml.XmlReader)">
            <summary>
            Read the DataAccess component from the XmlReader stream.
            <para>
            Input read using this method must be written 
            using the Write method.
            </para>
            </summary>
            <param name="reader">XmlReader stream to read xml from.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericXmlBridge`1.Write(System.Xml.XmlWriter,System.Collections.Generic.List{System.Type})">
            <summary>
            Write the DataAccess component data to the XmlWriter stream.
            <para>
            Output written using this method can be read
            again using the Write method.
            </para>
            </summary>
            <param name="writer">XmlWriter to write to</param>
            <param name="customTypes"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.GenericXmlBridge`1.KnownTypes">
            <summary>
            List of known types used for reading/writing
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.GenericXmlBridge`1.XmlWriterSettings">
            <summary>
            Get/Set XmlWriterSettings in case xml output needs custom formatting
            This does not affect xml content, only formatting of the xml.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.GenericXmlBridge`1._xmlWriterSettings">
            <summary>
            XmlWriterSettings in case xml output needs custom formatting
            This does not affect xml content, only formatting of the xml.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericXmlBridge`1.CreateSerializer(System.Collections.Generic.List{System.Type})">
            <summary>
            Create serializer
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.GenericXmlBridge`1.CreateSerializer(System.Runtime.Serialization.IDataContractSurrogate)">
            <summary>
            Create serializer
            </summary>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.Connection">
            <summary>
            Connection specifications for file access.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Connection.FilePath">
            <summary>
            FilePath including name for the file to store data in or read data from
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Connection.BridgeName">
            <summary>
            Name of the bridge to use for saving and/or reading
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Connection.Options">
            <summary>
            Options to the connection as key-value pairs. 
            Keys are case-sensitive (do always lowercase or similar).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Connection._optionsSerialized">
            <summary>
            Version of <see cref="F:DHI.Mike1D.Generic.Connection._options"/> used for (de)serialization, to handle user defined comparer.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Connection.Clone">
            <summary>
            Clone this object. It returns a deep copy of 
            the file path, but just transfers the dictionary.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Connection.Create(System.String)">
            <summary>
            Create a new connection based on the filename.
            The <see cref="P:DHI.Mike1D.Generic.Connection.BridgeName"/> will be the extension of the file (without the dot).
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Connection.Create(DHI.Mike1D.Generic.IFilePath)">
            <summary>
            Create a new connection based on the filename.
            The <see cref="P:DHI.Mike1D.Generic.Connection.BridgeName"/> will be the extension of the file (without the dot).
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Connection.BridgeFromExtension(DHI.Mike1D.Generic.IFilePath)">
            <summary>
            Get a bridge name by using the extension of the file (without the dot).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Connection.ExtensionData">
            <summary>
            Data from an extended DataContract not recognized here
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Constants">
            <summary>
            Constants used throughout Mike1D
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Constants.g">
            <summary>
            Gravity
            Unit: [m^2/s]
            Value: 9.81
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Constants.sqrt_g">
            <summary>
            Square root of gravity
            Unit: [m/sqrt(s)]
            Value: Sqrt(9.81)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Constants.sqrt_2">
            <summary>
            Square root of 2
            Unit: [1]
            Value: Sqrt(2)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Constants.MIN_DIVIDER">
            <summary>
            The smallest number that is allowed as divisor. 
            Unit: []
            Value: 1e-15
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Constants.PFS_DELETE_VALUE">
            <summary>
            Value used as delete value when writing/reading PFS files from Mike1D
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Constants.LOCATION_EQUAL_TOLERANCE">
            <summary>
            Tolerance used when comparing coordinate points
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Constants.DOUBLE_DELETE_VALUE">
            <summary>
            Value used as delete value for data values that has not been set
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Constants.STRING_DELETE_VALUE">
            <summary>
            Value used as delete value for values that hasn't been set
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Constants.ZERO_TOLERANCE">
            <summary>
            Value used to determine wheather a number is to be treated as a zero.
            Value is 1e-13.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.PredefinedQuantity">
            <summary>
            Enumeration of predefined quantities.
            </summary>
            <remarks>
            Remember to add an entry to the <see cref="T:DHI.Mike1D.Generic.PredefinedQuantityTable"/> whenever
            a new <see cref="T:DHI.Mike1D.Generic.PredefinedQuantity"/> is created.
            </remarks>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.Undefined">
            <summary>
            
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.WaterLevel">
            <summary>
            Level of water, from a fixed zero level.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.WaterLevelChange">
            <summary>
            Level of water, from a fixed zero level.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.WaterLevelCorrection">
            <summary>
            Correction of water level. Used in Data Assimilation context.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.WaterDepth">
            <summary>
            Depth of water, from lowest bottom point to surface.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.WaterVolume">
            <summary>
            Volume of water
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.WaterVolumeAboveGround">
            <summary>
            Volume of water in nodes above ground
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.WaterFlowRateAboveGround">
            <summary>
            Water flow rate to node volume above ground
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.WaterVolumeRetainedInMaxInflow">
            <summary>
            Volume of water retained in a reservoir due to a maximum inflow restriction
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.WaterVolumeM11">
            <summary>
            Volume of water, as calculated by M11
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.WaterVolumeChange">
            <summary>
            Change of volume of water
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.MassError">
            <summary>
            Mass Error
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.MassErrorM11Comp">
            <summary>
            Mass Error - M11 version
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.MassErrorAccumulated">
            <summary>
            Mass Error accumulated
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.MassErrorAbsAccumulated">
            <summary>
            Mass Error accumulated
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.MassErrorChecksum">
            <summary>
            Mass Error check sum
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.MassErrorAccumulatedChecksum">
            <summary>
            Mass Error check sum
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.FlowArea">
            <summary>
            Flow area
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.FlowAreaTsMean">
            <summary>
            Flow area, mean value over last time step
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.FlowAreaInStructure">
            <summary>
            Flow area in structure
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.FloodedArea">
            <summary>
            Flooded area, surface area
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.GateLevel">
            <summary>
            Gate level
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.Discharge">
            <summary>
            Discharge
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.DischargeCorrection">
            <summary>
            Correction of discharge. Used in Data Assimilation contexts
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.DischargePerLength">
            <summary>
            Discharge per length
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.DischargePerArea">
            <summary>
            Discharge per area
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.DischargeInStructure">
            <summary>
            Discharge in structure
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.DischargeFromSurface">
            <summary>
            Discharge with a maximum inflow (used on nodes, limited by geometry of node cover)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.DischargeOutflow">
            <summary>
            Discharge Outflow through open boundaries, in m^3/s. Inflow is negative.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.DischargeStepAveraged">
            <summary>
            Discharge Step Accumulated
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.LateralSources">
            <summary>
            Discharge in/out of network, in m^3/s
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.LateralInflow">
            <summary>
            Discharge into network, in m^3/s
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.LateralOutflow">
            <summary>
            Discharge into network, in m^3/s
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.LateralOutflowReduction">
            <summary>
            Discharge into network, in m^3/s
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.TimestepInflow">
            <summary>
            Discharge, inflow to model, in m^3
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.TimestepOutflow">
            <summary>
            Discharge, outflow from model, in m^3
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.TotalInflow">
            <summary>
            Discharge, inflow to model, total from start of simulation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.TotalOutflow">
            <summary>
            Discharge, outflow from model, total from start of simulation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.NodeInfiltration">
            <summary>
            Discharge that is multiplied by the maximum node surface area below current water level (used for MU node infiltration)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.DischargeHPoints">
            <summary>
            Discharge on H points
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.FlowVelocity">
            <summary>
            Flow velocity
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.FlowVelocityInStructure">
            <summary>
            Flow velocity in structure
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.WindVelocity">
            <summary>
            Wind velocity
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.WindDirection">
            <summary>
            Wind direction
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.FlowWidth">
            <summary>
            Storage width/flow width
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.FlowWidthTsMean">
            <summary>
            Storage width/flow width, mean value over last time step
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.Time">
            <summary>
            
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.TimeStep">
            <summary>
            
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.NumberOfTriesForTimeStep">
            <summary>
            
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.TotalRunOff">
            <summary>
            Total Runoff from RainfallRunoff model 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.HydraulicRadius">
            <summary>
            Hydraulic radius 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.ManningResistanceNumber">
            <summary>
            Resistance 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.ChezyResistanceNumber">
            <summary>
            Resistance 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.BedLevel">
            <summary>
            Bed shear stress
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.BedShearStress">
            <summary>
            Bed shear stress
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.CourantNumber">
            <summary>
            CourantNumber number 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.Froude">
            <summary>
            Froude number 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.WaterLevelSlope">
            <summary>
            Water Level Slope
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.EnergyLevelSlope">
            <summary>
            Energy Level Slope
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.EnergyLevel">
            <summary>
            Energy Level 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.Conveyance">
            <summary>
            Energy Level 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.NetRainfall">
            <summary>
            Net rainfall
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.CatchmentDischarge">
            <summary>
            Catchment Discharge
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.TotalLoad">
            <summary>
            Total Load
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.WeirDischarge">
            <summary>
            Discharge through a weir
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.PumpDischarge">
            <summary>
            Discharge through a pump
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.PumpIsActive">
            <summary>
            Pump is on
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.OverlandFlow">
            <summary>
            Overland Flow Routed From Second Reservoir (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.InterFlow">
            <summary>
            Inter Flow Routed From Second Reservoir (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.TotalBaseFlow">
            <summary>
            Total Base Flow (NAM) - BaseFlow and LowerBaseFlow
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.BaseFlow">
            <summary>
            Base Flow (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.LowerBaseFlow">
            <summary>
            Lower Base Flow (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.InterFlowAndBaseFlow">
            <summary>
            Inter Flow And Base Flow (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.OverlandAndInterflow">
            <summary>
            Overland and inter Flow Routed From Second Reservoir (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.ActualRainfall">
            <summary>
            Actual Rainfall
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.ActualEvaporation">
            <summary>
            Actual Evaporation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.RootZoneStorage">
            <summary>
            Lower Zone Storage (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.SurfaceStorage">
            <summary>
            Surface Storage (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.GroundWaterDepth">
            <summary>
            Ground Water Depth (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.InfiltrationToGroundWater">
            <summary>
            Infiltration To Ground Water (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.InfiltrationFlow">
            <summary>
            Infiltration To Ground Water (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.TotalInfiltration">
            <summary>
            Total Infiltration
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.OverlandFlowFirstReservoir">
            <summary>
            Overland Flow Routed From First Reservoir (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.InterFlowFirstReservoir">
            <summary>
            Inter Flow Routed From First Reservoir (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.CapillaryFlux">
            <summary>
            Capillary Flux (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.OverlandFirstReservoirStorage">
            <summary>
            Overland Flow First Reservoir Storage (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.OverlandSecondReservoirStorage">
            <summary>
            Overland Flow Second Reservoir Storage (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.IrrigationSupply">
            <summary>
            Irrigation Supply (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.SnowStorage">
            <summary>
            Snow Cover (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.Temperature">
            <summary>
            Temperature
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.ZoneTemperature">
            <summary>
            Zone Temperature (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.ZoneRainfall">
            <summary>
            Zone Rainfall (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.ZoneWaterRetention">
            <summary>
            Zone Water Retention (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.ZoneMeltingCoeff">
            <summary>
            Zone Snow Storage (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.ZoneSnowAreaCoverage">
            <summary>
            Zone Snow Area Coverage (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.ZoneMeltingWater">
            <summary>
            Zone Melting Water (NAM)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.ValveOpening">
            <summary>
            Valve opening
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.CrestLevel">
            <summary>
            Creste level
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.Force">
            <summary>
            Force, e.g. coming from wind shear stress
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.GroundWaterLeakage">
            <summary>
            Ground water leakage. Per second, multiplied on (wet perimenter)*(water depth)*(dx) on h-grid points
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.DamBreakBreachLevel">
            <summary>
            Dam break breach level [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.DamBreakBreachWidth">
            <summary>
            Dam break breach width [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.DamBreakBreachSlope">
            <summary>
            Dam break breach slope
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.DamBreakPipeTopLevel">
            <summary>
            Dam break pipe bottom level level [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.InfiltrationToGroundWaterMinusCapillaryFlux">
            <summary>
            NAM catchment recharge minus capillary flux
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.ControlStrategyId">
            <summary>
            ID of a control strategy applied to a controlled item (a clas that implements Generic.IControllable)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.Concentration">
            <summary>
            Concentration of AD component
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.CO1">
            <summary>
            CO1 coefficient on HDGridPoint. Used for M21 couplings
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.CO2">
            <summary>
            CO2 coefficient on HDGridPoint. Used for M21 couplings
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.CO3">
            <summary>
            CO2 coefficient on HDGridPoint. Used for M21 couplings
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.CO4">
            <summary>
            CO2 coefficient on HDGridPoint. Used for M21 couplings
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.WaterSpillDischarge">
            <summary>
            Water spill rate from spilling nodes 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.DamBreakBreachFlow">
            <summary>
            Dam break breach flow
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.DamBreakCrestFlow">
            <summary>
            Dam break crest flow
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.WaterSpillVolume">
            <summary>
            Water spill volume from spilling nodes 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.NodeSources">
            <summary>
            Discharge in/out of network, in m^3/s
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.NodeInflow">
            <summary>
            Discharge into network, in m^3/s
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.NodeOutflow">
            <summary>
            Discharge into network, in m^3/s
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.NodeInflowVolume">
            <summary>
            Discharge volume into network, in m^3
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.NodeOutflowVolume">
            <summary>
            Discharge volume out of network, in m^3
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.WaterSurcharge">
            <summary>
            Water surcharge from nodes
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.FullReachDischarge">
            <summary>
            Full reach discharge
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.SurfacePreciEvapoTranspiration">
            <summary>
            Discharge per area through surface interface
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantity.ControlVariables">
            <summary>
            All control module variables.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.PredefinedQuantityTable">
            <summary>
            A PredefinedQuantityTable for each <see cref="T:DHI.Mike1D.Generic.PredefinedQuantity"/> contains 
            its <see cref="T:DHI.Mike1D.Generic.Quantity"/>
            in order to get hold of <see cref="T:DHI.Mike1D.Generic.Quantity"/>.
            </summary>
            <remarks>
            Every time you add a new <see cref="T:DHI.Mike1D.Generic.PredefinedQuantity"/>, you should remember to also
            add a new <see cref="T:DHI.Mike1D.Generic.Quantity"/>.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.PredefinedQuantityTable.#ctor">
            <summary>
            Default constructor populating the table with data for all predefined
            data types.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.PredefinedQuantityData">
            <summary>
            Static class containing the <see cref="T:DHI.Mike1D.Generic.PredefinedQuantityTable"/>.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.PredefinedQuantityData.Init">
            <summary>
            Force initialize PredefinedQuantityData
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.PredefinedQuantityData.Table">
            <summary>
            DataTypeDataTable
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.DHI_Mike1D_Generic">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_ERR_ADLicenseNotAvail">
            <summary>
              Looks up a localized string similar to No AD license available. Cannot run AD in demo mode..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_ERR_BndCompIDNotFound">
            <summary>
              Looks up a localized string similar to Component Id not found: &apos;{0}&apos; on open boundary {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_ERR_BndCompIDNotFoundVD">
            <summary>
              Looks up a localized string similar to Component; Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_ERR_BndCompIndOutOfRange">
            <summary>
              Looks up a localized string similar to Component Index is out of range, component ({0}) on open boundary {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_ERR_BndCompIndOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Component; Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_ERR_BndIDNotDefined">
            <summary>
              Looks up a localized string similar to Boundary &apos;{0}&apos; component does not define component id for one of the components..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_ERR_BndIDNotDefinedVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_ERR_BndIDNotFound">
            <summary>
              Looks up a localized string similar to Boundary &apos;{0}&apos;, component Id is not matching any of the AD components for one of the components..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_ERR_BndIDNotFoundVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_ERR_BndTwoOnOne">
            <summary>
              Looks up a localized string similar to Two boundary values for same component ({0}) on node {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_ERR_BndTwoOnOneVD">
            <summary>
              Looks up a localized string similar to Component; Node.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_ERR_NodeNoVolume">
            <summary>
              Looks up a localized string similar to Node {0} geometry is erroneous. Zero (or close) volume close to bottom level. Solution may be incorrect..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_ERR_NodeNoVolumeVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_WAR_BndCompLoadTypeNotPossible">
            <summary>
              Looks up a localized string similar to Component load type boundary on open boundary node is not possible. Boundary component is ignored. Node &apos;{0}&apos;, Component &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_WAR_BndCompLoadTypeNotPossibleVD">
            <summary>
              Looks up a localized string similar to Node ID; Component ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_WAR_CourantViolated">
             <summary>
               Looks up a localized string similar to Courant criteria was violated in {0} time steps during the simulation.
            Maximum Courant number: {1} at simulation time {2} at {3}.
            In average the criteria was violated in {4}% of the points in the simulation. The engine used a more stable but less accurate method at these points..
             </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_WAR_CourantViolatedFirst">
             <summary>
               Looks up a localized string similar to Courant criteria was violated in time step {0}, simulation time {2}.
            Maximum Courant number: {1} at {3}. The criteria was was violated in {4}% of the points in this time step.
            The engine used a more stable but less accurate method at these points..
             </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_WAR_CourantViolatedFirstVD">
            <summary>
              Looks up a localized string similar to Timestep number; Maximum Courant number; Time; Location; Percentage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_WAR_CourantViolatedVD">
            <summary>
              Looks up a localized string similar to Number of timesteps; Maximum Courant number; Time; Location; Percentage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_WAR_RRADIgnoredForHDSimulation">
            <summary>
              Looks up a localized string similar to Catchment Componet Source Boundaries (RR-AD) are only applicable when running RR and HD simultaneously. Boundaries are ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_WAR_RRADNetRainfallForHDSimulation">
            <summary>
              Looks up a localized string similar to Catchment Componet Source Boundary (RR-AD) {0} is based on Net Rainfall. Application of concentrations on Net Rainfall is only applicable when running RR and HD simultaneously. Boundary is ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_WAR_RRADNetRainfallForHDSimulationVD">
            <summary>
              Looks up a localized string similar to BoundaryId.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_WAR_TooManyWaterAgeComp">
            <summary>
              Looks up a localized string similar to {0} water age components found. Only the first will be processed..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.AD_WAR_TooManyWaterAgeCompVD">
            <summary>
              Looks up a localized string similar to Number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_CatchmentItemDataMissingEnd">
            <summary>
              Looks up a localized string similar to Boundary data is not available in the end of the simulation period. Catchment boundary id: {0}, missing data from time: {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_CatchmentItemDataMissingMid">
            <summary>
              Looks up a localized string similar to Boundary data is not available for the entire simulation period. Catchment boundary id: {0}, missing data from time: {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_CatchmentItemDataMissingStart">
            <summary>
              Looks up a localized string similar to Boundary data is not available in the beginning of the simulation period. Catchment boundary id: {0}, first available data at time: {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_DailyPatternInvalidFirstTime">
            <summary>
              Looks up a localized string similar to The One day profile with Id {0} has invalid times: The first entry in the daily profile must be a Date/Time of a midnight, 00:00:00.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_GridFileDoesNotCoverSimulationTime">
            <summary>
              Looks up a localized string similar to For boundary type {0}, the grid file {1} does not cover the entire simulation period..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_GridFileInvalidSpatialDefinition">
            <summary>
              Looks up a localized string similar to For boundary type {0}, the grid file {1} has an invalid/unsupported grid definition..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_GridFileInvalidSpatialDefinitionHint">
            <summary>
              Looks up a localized string similar to The grid must be an equidistant orthogonal grid..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_GridFileNotFound">
            <summary>
              Looks up a localized string similar to For boundar type {0}, the grid file {1} could not be found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_GridIndicesOutOfRange">
            <summary>
              Looks up a localized string similar to For boundary type {0}, the gridded weight indices for catchment {1} is out of range for index ({2},{3}). Indices must be within ( [0;{4}] , [0;{5}] ).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_GridWeightCatchmentDuplicates">
            <summary>
              Looks up a localized string similar to For boundary type {0}, catchment {1} has multiple sets of weights defined..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_GridWeightOutOfRange">
            <summary>
              Looks up a localized string similar to For boundary type {0}, the gridded weight value for catchment {1} at index ({2},{3}) is out of range [0;1]: {4}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_GridWeightSumZero">
            <summary>
              Looks up a localized string similar to For boundary type {0}, the gridded weights for catchment {1} sum to zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_InvalidGeoLocatedItems">
            <summary>
              Looks up a localized string similar to There is an invalid geo point in a global source boundary of type {0}. When more than one global source is specified for the same quantity, all geo points have to be valid..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_InvalidGeoLocatedItemsVD">
            <summary>
              Looks up a localized string similar to Boundary type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_InvalidNoComponents">
            <summary>
              Looks up a localized string similar to Wrong number of components for wind boundary {0}. There must be two components in the boundary..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_InvalidNoComponentsVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_InvalidTimeSeriesItemQuantity">
            <summary>
              Looks up a localized string similar to Boundary {0} has an invalid item quantity. The quantity is {1}, but expected {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_InvalidTimeSeriesItemQuantityVD">
            <summary>
              Looks up a localized string similar to Boundary ID; Quantity; Expected quantity.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_InvalidTimeSeriesValueType">
            <summary>
              Looks up a localized string similar to {3} ({0} boundary) has invalid data type. The quantity is {1} and the value type is {2}. Make sure that the quantity matches the value type..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_InvalidTimeSeriesValueTypeHint">
            <summary>
              Looks up a localized string similar to The two most common boundaries, water level and discharge boundaries, must have instantaneous value type..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_InvalidTimeSeriesValueTypeMustBe">
            <summary>
              Looks up a localized string similar to {3} ({0} boundary) has invalid data type. The quantity is {1} and the value type is {2}. The value type must be {4}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_InvalidTimeSeriesValueTypeMustBeVD">
            <summary>
              Looks up a localized string similar to Boundary type; Quantity; Value type; Time series item; Expected value type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_InvalidTimeSeriesValueTypeRain">
            <summary>
              Looks up a localized string similar to {3} ({0} boundary) has invalid data type. The quantity is {1} and the value type is {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_InvalidTimeSeriesValueTypeRainHint">
            <summary>
              Looks up a localized string similar to Rainfall time series must be defined as either rainfall/rainfalldepth [m] with an accumulated value type, or rainfallintensity/rate [m/s] and an instantaneous or step value type..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_InvalidTimeSeriesValueTypeRainVD">
            <summary>
              Looks up a localized string similar to Boundary type; Quantity; Value type; Time series item.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_InvalidTimeSeriesValueTypeVD">
            <summary>
              Looks up a localized string similar to Boundary type; Quantity; Value type; Time series item.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_ItemDataMissingEnd">
            <summary>
              Looks up a localized string similar to Boundary data is not available in the end of the simulation period. Missing data from time: {0} ({1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_ItemDataMissingMid">
            <summary>
              Looks up a localized string similar to Boundary data is not available in the entire simulation period. Missing data from time: {0} {(1)}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_ItemDataMissingStart">
            <summary>
              Looks up a localized string similar to Boundary data is not available in the beginning of the simulation period. First available data at time: {0} ({1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_ItemNumberOutOfRange">
            <summary>
              Looks up a localized string similar to Item number {0} is out of range, file only has {1} items..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_ItemNumberOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Item number; Number of items.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_ItemPeriodicMissingPeriodicPattern">
            <summary>
              Looks up a localized string similar to No periodic pattern defined for the periodic item..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_MultipleOpenSourceBoundariesOnNode">
            <summary>
              Looks up a localized string similar to Multiple open source boundaries on node {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_MultipleOpenSourceBoundariesOnNodeVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_NotValidItemInTS">
            <summary>
              Looks up a localized string similar to Item number {0} does not exist in file {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_NotValidItemInTSVD">
            <summary>
              Looks up a localized string similar to Item number; Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_OneDayProfileEmpty">
            <summary>
              Looks up a localized string similar to One day profile with Id {0} is empty - the daily profile has not entries.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_OverLappingIntervalsInWaterLevelBoundary">
            <summary>
              Looks up a localized string similar to Overlapping application intervals in water level boundary..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_OverwritingExistingNodeScaleFactor">
            <summary>
              Looks up a localized string similar to The scale factor of boundary on node {0} of {1} was overwritten with {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_OverwritingExistingNodeScaleFactorVD">
            <summary>
              Looks up a localized string similar to Node ID; Scale factor; Scale factor.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_OverwritingExistingPointScaleFactor">
            <summary>
              Looks up a localized string similar to The scale factor of boundary on point {0} of {1} was overwritten with {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_OverwritingExistingPointScaleFactorVD">
            <summary>
              Looks up a localized string similar to Point; Scale factor; Scale factor.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_QHBoundaryMissingTable">
            <summary>
              Looks up a localized string similar to QH Boundary {0} is missing QH table.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_QHBoundaryTooFewValues">
            <summary>
              Looks up a localized string similar to QH Boundary {0} has zero or one value (level) in the table. At least two values (levels) must be defined..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_RRResultFileNotFound">
            <summary>
              Looks up a localized string similar to Rainfall runoff result file not found: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_RRResultFileNotFoundVD">
            <summary>
              Looks up a localized string similar to Rainfall runoff file name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_ScaleFactorNotAllowed">
            <summary>
              Looks up a localized string similar to The scale factor must be 1.0 for boundary item of type {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_ScaleFactorNotAllowedVD">
            <summary>
              Looks up a localized string similar to Boundary type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_TSFileDoesNotExist">
            <summary>
              Looks up a localized string similar to Time series file does not exist: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_TSFileDoesNotExistVD">
            <summary>
              Looks up a localized string similar to Time series file.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_TSFileNotLoaded">
            <summary>
              Looks up a localized string similar to File header has not been loaded, can not validate any further: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_TSFileNotLoadedVD">
            <summary>
              Looks up a localized string similar to Time series file.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_TSFileNotValid">
            <summary>
              Looks up a localized string similar to File is not a valid time series file: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_ERR_TSFileNotValidVD">
            <summary>
              Looks up a localized string similar to Time series file.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_EXP_CouldNotFindTSFile">
            <summary>
              Looks up a localized string similar to Could not find time series file {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_EXP_CouldNotFindTSFileVD">
            <summary>
              Looks up a localized string similar to Time series file name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_EXP_DailyPatternInvalidFirstTime">
            <summary>
              Looks up a localized string similar to First time value must be zero in daily pattern ({0})..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_EXP_DailyPatternInvalidFirstTimeVD">
            <summary>
              Looks up a localized string similar to Pattern ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_EXP_DailyPatternInvalidTimeOrder">
            <summary>
              Looks up a localized string similar to The order of the times is invalid for daily pattern {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_EXP_DailyPatternInvalidTimeOrderVD">
            <summary>
              Looks up a localized string similar to Pattern ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_EXP_DailyPatternTimeValueVectorSizeMismatch">
            <summary>
              Looks up a localized string similar to Time and value vector lengths disagree in daily profile {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_EXP_DailyPatternTimeValueVectorSizeMismatchVD">
            <summary>
              Looks up a localized string similar to Daily profile ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_EXP_InvalidInputSize">
            <summary>
              Looks up a localized string similar to The size of the input to a boundary data object is {0} which is invalid. The size should be {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_EXP_InvalidInputSizeVD">
            <summary>
              Looks up a localized string similar to Number of input; Expected number of input.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_EXP_InvalidPropertyValue">
            <summary>
              Looks up a localized string similar to Value {0} is not valid for this property..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_EXP_InvalidPropertyValueVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_EXP_NoFilenameSpecified">
            <summary>
              Looks up a localized string similar to No filename specified in bridge..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_EXP_NotValidTSFile">
            <summary>
              Looks up a localized string similar to File {0} is not a valid time series file..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_EXP_NotValidTSFileVD">
            <summary>
              Looks up a localized string similar to File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_EXP_NullInputNowAllowed">
            <summary>
              Looks up a localized string similar to One of the input arguments is null, this is not valid..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_STR_BoundaryItemConstant">
            <summary>
              Looks up a localized string similar to Constant boundary item {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_STR_BoundaryItemConstantVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_STR_BoundaryItemPeriodic">
            <summary>
              Looks up a localized string similar to Periodic boundary item {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_STR_BoundaryItemPeriodicVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_STR_BoundaryItemRRRes">
            <summary>
              Looks up a localized string similar to Rainfall runoff boundary {0}, item {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_STR_BoundaryItemTimeSeries">
            <summary>
              Looks up a localized string similar to Time series boundary &lt;{0}&gt;, item {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_STR_BoundaryItemTimeSeriesVD">
            <summary>
              Looks up a localized string similar to TimeSeriesFile; ItemNumber.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_STR_CatchmentSourceBoundary">
            <summary>
              Looks up a localized string similar to Catchment source boundary {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_STR_CatchmentSourceBoundaryVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_STR_DistributedSourceBoundary">
            <summary>
              Looks up a localized string similar to Distributed source boundary {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_STR_DistributedSourceBoundaryVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_STR_GlobalSourceBoundary">
            <summary>
              Looks up a localized string similar to Global source boundary {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_STR_GlobalSourceBoundaryVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_STR_PeriodicDailyPattern">
            <summary>
              Looks up a localized string similar to Periodic daily pattern {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_STR_PeriodicDailyPatternVD">
            <summary>
              Looks up a localized string similar to Pattern ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_STR_StructureSourceBoundary">
            <summary>
              Looks up a localized string similar to Structure source boundary {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_STR_StructureSourceBoundaryVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_BoundaryItemConstant">
            <summary>
              Looks up a localized string similar to Constant boundary, value: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_BoundaryItemConstantVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_BoundaryItemPeriodic">
            <summary>
              Looks up a localized string similar to Periodic boundary item: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_BoundaryItemPeriodicVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_BoundaryItemTimeSeries">
            <summary>
              Looks up a localized string similar to TimeSeries boundary item: {0}, item: {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_BoundaryItemTimeSeriesVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_CatchmentSourceBoundary">
            <summary>
              Looks up a localized string similar to Catchment source boundary: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_CatchmentSourceBoundaryVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_DistributedSourceBoundary">
            <summary>
              Looks up a localized string similar to Distributed source boundary: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_DistributedSourceBoundaryVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_GlobalSourceBoundary">
            <summary>
              Looks up a localized string similar to Global source boundary: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_GlobalSourceBoundaryVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_OpenSourceBoundary">
            <summary>
              Looks up a localized string similar to Open source boundary, ID: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_OpenSourceBoundaryLocation">
            <summary>
              Looks up a localized string similar to Open source boundary on reach {0}, chainage {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_OpenSourceBoundaryLocationVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_OpenSourceBoundaryNode">
            <summary>
              Looks up a localized string similar to Open source boundary, node: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_OpenSourceBoundaryNodeVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_OpenSourceBoundaryVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_PeriodicDailyPattern">
            <summary>
              Looks up a localized string similar to Periodic daily pattern: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_PeriodicDailyPatternVD">
            <summary>
              Looks up a localized string similar to Pattern ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_PointSourceBoundary">
            <summary>
              Looks up a localized string similar to Point source boundary, ID: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_PointSourceBoundaryLocation">
            <summary>
              Looks up a localized string similar to Point source boundary, location: ({0}, {1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_PointSourceBoundaryLocationVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_PointSourceBoundaryNode">
            <summary>
              Looks up a localized string similar to Point source boundary, node: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_PointSourceBoundaryNodeVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_PointSourceBoundaryVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_RRResultFile">
            <summary>
              Looks up a localized string similar to Rainfall runoff result file: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_TXT_RRResultFileVD">
            <summary>
              Looks up a localized string similar to FileName.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_ApplicationBeginBeforeResultBegin">
            <summary>
              Looks up a localized string similar to Rainfall Runoff boundary result file starts at time {0} which is after application begin at {1} for result file {2}, catchment {3}. Application begin time has been adjusted to results start time..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_ApplicationBeginBeforeResultBeginVD">
            <summary>
              Looks up a localized string similar to Time; Time; Filename; Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_ApplicationBeginLTTSStart">
            <summary>
              Looks up a localized string similar to Time series ApplicationBegin ({0}) is before time series start time ({1}) for time series {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_ApplicationBeginLTTSStartVD">
            <summary>
              Looks up a localized string similar to Application begin; Start time; file path.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_ApplicationEndAfterResultEnd">
            <summary>
              Looks up a localized string similar to Rainfall Runoff boundary result file ends at time {0} which is before application end at {1} for result file {2}, catchment {3}. Application end time has been adjusted to result file end time..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_ApplicationEndAfterResultEndVD">
            <summary>
              Looks up a localized string similar to Time; Time; Filename; Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_ApplicationEndGTTSEnd">
            <summary>
              Looks up a localized string similar to Time series ApplicationEnd ({0}) is after time series end time ({1}) for time series {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_ApplicationEndGTTSEndVD">
            <summary>
              Looks up a localized string similar to Application end; End time; file path.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_GridWeightRescale">
            <summary>
              Looks up a localized string similar to For boundary type {0}, the gridded weights for catchment {1} does not sum to 1 but to {2}. The weights will be rescaled to sum to 1..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_LocationScaleFactorNegative">
            <summary>
              Looks up a localized string similar to Scale factor is negative for location {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_LocationScaleFactorNegativeVD">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_LocationScaleFactorZero">
            <summary>
              Looks up a localized string similar to Scale factor is zero for location {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_LocationScaleFactorZeroVD">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_NoItemsForSource">
            <summary>
              Looks up a localized string similar to No items specified for boundary source..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_NoLinksForSource">
            <summary>
              Looks up a localized string similar to No locationspans/links specified for this source.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_NoLocationsForSource">
            <summary>
              Looks up a localized string similar to No locations specified for this source.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_PeriodicPatternEmptyMap">
            <summary>
              Looks up a localized string similar to The schedule pattern map is empty. The periodic pattern will always return zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_QValuesNotDecreasingForQHBoundary">
            <summary>
              Looks up a localized string similar to Q values in QH boundary not monotonically decreasing.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_QValuesNotIncreasingForQHBoundary">
            <summary>
              Looks up a localized string similar to Q values in QH boundary not monotonically increasing.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_RemovedBndItem">
            <summary>
              Looks up a localized string similar to An item was removed from boundary {0} because it failed the Prepare step..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_RemovedBndItemVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BD_WAR_TimeSeriesValueTypeNotInstantaneous">
            <summary>
              Looks up a localized string similar to {3} ({0} boundary) has unusual data type. The quantity is {1} and the value type is {2}. Value type for this type of time series is usually &apos;Instantaneous&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ADBndNegative">
            <summary>
              Looks up a localized string similar to The boundary {0} specifies a component number that is zero or negative..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ADBndNegativeVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ADBndNotFound">
            <summary>
              Looks up a localized string similar to The boundary {0} specifies a component number {1}, but there are only {2} AD components specified..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ADBndNotFoundVD">
            <summary>
              Looks up a localized string similar to Boundary ID; Component number; Total number of components.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ADComponentDoubleDecayValue">
            <summary>
              Looks up a localized string similar to Two different decay constants are specified for AD component {0} on river {1}, chainage {2}. The values are {3} and {4}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ADComponentDoubleDecayValueVD">
            <summary>
              Looks up a localized string similar to AD component; River name; Chainage; Decay constant; Decay constant.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ADComponentDoubleInitValue">
            <summary>
              Looks up a localized string similar to Two different inital values are specified for concentration of AD component {0} on river {1}, chainage {2}. The values are {3} and {4}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ADComponentDoubleInitValueVD">
            <summary>
              Looks up a localized string similar to AD component; River name; Chainage; Concentration; Concentration.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ADDispersionDoubleValue">
            <summary>
              Looks up a localized string similar to Two different dispersion values are specified on river {1}, chainage {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ADDispersionDoubleValueVD">
            <summary>
              Looks up a localized string similar to River name; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_AddOutAcumMassErrorTotalNotSupported">
            <summary>
              Looks up a localized string similar to Additional output: Total accumulated mass error is not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_AddOutBedShearStressNotSupported">
            <summary>
              Looks up a localized string similar to Additional output: Bed shear stress is not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_AddOutFloodAreaHPointsNotSupported">
            <summary>
              Looks up a localized string similar to Additional output: Flooded area in h-grid points is not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_AddOutFloodAreaTotalNotSupported">
            <summary>
              Looks up a localized string similar to Additional output: Total flooded area is not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_AddOutGroundwaterHeadNotSupported">
            <summary>
              Looks up a localized string similar to Additional output: Ground water head is not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_AddOutLateralInflowHPointsSupported">
            <summary>
              Looks up a localized string similar to Additional output: Lateral inflow to h-grid points is not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_AddOutMassErrorHPointsNotSupported">
            <summary>
              Looks up a localized string similar to Additional output: Mass error in h-grid points is not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_AddOutMassErrorTotalNotSupported">
            <summary>
              Looks up a localized string similar to Additional output: Total mass error is not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_AddOutTimeStepNotSupported">
            <summary>
              Looks up a localized string similar to Additional output: Time step information is not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_AddOutVolumeTotalNotSupported">
            <summary>
              Looks up a localized string similar to Additional output: Total volume is not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_AddToFileNotSupported">
            <summary>
              Looks up a localized string similar to Add to file not supported for HD hotstart based simulations.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_AddToRes11File">
            <summary>
              Looks up a localized string similar to Appending to a hot start file of type res11 is not possible. A res1d file is required..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ADSensorButADNotDefined">
            <summary>
              Looks up a localized string similar to The control module contains AD sensors, but AD is disabled..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ADSensorComponentNoOutOfRange">
            <summary>
              Looks up a localized string similar to In control structure {0}, for priority {1}, the control or target point component number is out of range..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ADSensorComponentNoOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Structure Id; Priority.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ADSensorLogicalConditionComponentNoOutOfRange">
            <summary>
              Looks up a localized string similar to In control structure {0}, for priority {1}, the logical operand number {2} component number is out of range.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ADSensorLogicalConditionComponentNoOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Structure Id; Priority; Logical operand number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_BndLoadFail">
            <summary>
              Looks up a localized string similar to Could not load boundary item..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_BndNoInflowsFound">
            <summary>
              Looks up a localized string similar to No inflows found in point source inflow boundary item..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_BndNoResFac">
            <summary>
              Looks up a localized string similar to No resistance factors found in point source resistance boundary item..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_BoundaryNoSelectedItem">
            <summary>
              Looks up a localized string similar to Boundary {0} does not have a selected item from time series..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_BoundaryNoSelectedItemVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_BranchNotFound">
            <summary>
              Looks up a localized string similar to Could not find branch in network, skipping {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_BranchNotFoundVD">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_BridgeNotKnown">
            <summary>
              Looks up a localized string similar to Bridge not known {0}. Bridge must be one of : &apos;sim11&apos;, &apos;mhydro&apos;, &apos;m1dx&apos;, &apos;mdb&apos;, &apos;gdb&apos;.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_BridgeNotKnownVD">
            <summary>
              Looks up a localized string similar to Bridge name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_BrNotKnown">
            <summary>
              Looks up a localized string similar to Bridge not known..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_BRToolsNotSupported">
            <summary>
              Looks up a localized string similar to Bed resistance toolbox is not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotLoadCatchment">
            <summary>
              Looks up a localized string similar to Cannot load rainfall runoff model type {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotLoadCatchmentVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotReadBnd11File">
            <summary>
              Looks up a localized string similar to Unexpected error occurred when reading boundary data from bnd11 file {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotReadBnd11FileVD">
            <summary>
              Looks up a localized string similar to File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotReadControlLimitsFile">
            <summary>
              Looks up a localized string similar to Error reading control limits from file {0}. Last line read was {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotReadControlLimitsFileVD">
            <summary>
              Looks up a localized string similar to Filename; Line.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotReadFile">
            <summary>
              Looks up a localized string similar to Unexpected error occured when reading data from setup file {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotReadFileFormat">
            <summary>
              Looks up a localized string similar to Error reading setup file {0}, invalid (old) format ({1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotReadNodeIDs">
            <summary>
              Looks up a localized string similar to Error reading node IDs from Res1D file {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotReadNodeIDsVD">
            <summary>
              Looks up a localized string similar to Res1D file name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotUseBothRRModelAndRRResults">
            <summary>
              Looks up a localized string similar to Cannot use both rainfall runoff models and rainfall runoff results at the same time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotUseHDDemoLicenseBND">
            <summary>
              Looks up a localized string similar to Cannot run in DEMO mode since the number of inflow boundaries is {0}. The DEMO limit 1..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotUseHDDemoLicenseBNDVD">
            <summary>
              Looks up a localized string similar to Number of inflow boundaries.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotUseHDDemoLicenseCTR">
            <summary>
              Looks up a localized string similar to Cannot run in DEMO mode since the setup uses the control module..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotUseHDDemoLicenseDamBreak">
            <summary>
              Looks up a localized string similar to Cannot run in DEMO mode since the setup includes a Dam Break structure..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotUseHDDemoLicenseHGP">
            <summary>
              Looks up a localized string similar to Cannot run in DEMO mode since the number of h-grid points is {0}. The DEMO limit is 100..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotUseHDDemoLicenseHGPVD">
            <summary>
              Looks up a localized string similar to Number of h-grid points.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotUseHDDemoLicenseReaches">
            <summary>
              Looks up a localized string similar to Cannot run in DEMO mode since the number of reaches is {0}. The DEMO limit is 3..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotUseHDDemoLicenseReachesVD">
            <summary>
              Looks up a localized string similar to Number of reaches.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotUseHDDemoLicenseStr">
            <summary>
              Looks up a localized string similar to Cannot run in DEMO mode since the number of structures is {0}. The DEMO limit is 1..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotUseHDDemoLicenseStrVD">
            <summary>
              Looks up a localized string similar to Number of structures.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotUseRRDemoLicense">
            <summary>
              Looks up a localized string similar to Cannot run in DEMO mode since the number of catchments is {0}. The DEMO limit is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CannotUseRRDemoLicenseVD">
            <summary>
              Looks up a localized string similar to Number of catchments; Limit.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CatchmentConnectionArea">
            <summary>
              Looks up a localized string similar to Rainfall runoff link area is negative: Catchment {0} connected to Branch {1} between {2} and {3}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CatchmentConnectionAreaVD">
            <summary>
              Looks up a localized string similar to chment Name; Branch Name; Start Chainage; End Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ChainageCouldNotBeParsed">
            <summary>
              Looks up a localized string similar to Could not parse chainage for structure item, skipping {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ChainageCouldNotBeParsedVD">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ConStrLongPhase">
            <summary>
              Looks up a localized string similar to Control structure {0} has a phase shift of more than 1000 years..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ConStrLongPhaseVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ControlLogicalConditionPriorityConflict">
            <summary>
              Looks up a localized string similar to There are two control definitions with priority {0} in control structure {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ControlLogicalConditionPriorityConflictVD">
            <summary>
              Looks up a localized string similar to Priority; Control ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CouldNotCreateFile">
            <summary>
              Looks up a localized string similar to Could not create file: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CouldNotCreateFileVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CouldNotFindChainage">
            <summary>
              Looks up a localized string similar to Could not find chainage of gridpoint at chainage {0}, reach {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_CouldNotFindChainageVD">
            <summary>
              Looks up a localized string similar to Chainage; Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DABndNotFound">
            <summary>
              Looks up a localized string similar to DataAssimilation Boundary &apos;{0}&apos; not found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DABndNotFoundVD">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DABndTypeForceNotSupp">
            <summary>
              Looks up a localized string similar to Mike1D Data Assimilation on input to catchment does not support boundary type {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DABndTypeForceNotSuppVD">
            <summary>
              Looks up a localized string similar to Boundary type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DABndTypeNotSupp">
            <summary>
              Looks up a localized string similar to DataAssimilation Boundary type {0} is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DABndTypeNotSuppVD">
            <summary>
              Looks up a localized string similar to Boundary type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DACatchConnNotFound">
            <summary>
              Looks up a localized string similar to DataAssimilation No Catchment connection found for catchment &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DACatchConnNotFoundVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DACompIndNotFound">
            <summary>
              Looks up a localized string similar to DataAssimilation Boundary uses ComponentIndex: {0}, which is not present..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DACompIndNotFoundVD">
            <summary>
              Looks up a localized string similar to AD Component index.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DACompTypeDouble">
            <summary>
              Looks up a localized string similar to DataAssimilation Boundary uses Component of type: {0}, which is identical to the type of component: {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DACompTypeDoubleVD">
            <summary>
              Looks up a localized string similar to EUM Type; AD component index.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DAInvalidADcomp">
            <summary>
              Looks up a localized string similar to DA equation parameter at location {0} specifies an AD component number {1} that is invalid..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DAInvalidADcompVD">
            <summary>
              Looks up a localized string similar to Location; AD component number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DAM1DBndNotFound">
            <summary>
              Looks up a localized string similar to Mike1D Data Assimilation boundary {0} not found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DAM1DBndNotFoundVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DAM1DBndWithForceNotFound">
            <summary>
              Looks up a localized string similar to Mike1D Data Assimilation boundary {0} with forcing {1} not found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DAM1DBndWithForceNotFoundVD">
            <summary>
              Looks up a localized string similar to Boundary ID; Component ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DANotSupported">
            <summary>
              Looks up a localized string similar to Data assimilation simulations are not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DARequiresMeasurements">
            <summary>
              Looks up a localized string similar to Mike1D Data Assimilation requires observation measurements..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DAStdDefTypeNotFound">
            <summary>
              Looks up a localized string similar to DataAssimilation Standard deviation definition EUM type not found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DAStdNotFound">
            <summary>
              Looks up a localized string similar to DataAssimilation Standard deviation definition &apos;{0}&apos; not found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DAStdNotFoundVD">
            <summary>
              Looks up a localized string similar to ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DayOfMonthOutOfRange">
            <summary>
              Looks up a localized string similar to Value {0} for day of month is out of range on control structure {1}, control definition priority{2}, logical operand number {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DayOfMonthOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Value; Structure ID; Control priority; Operand number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DayOfWeekOutOfRange">
            <summary>
              Looks up a localized string similar to Value {0} for day of week is out of range on control structure {1}, control definition priority{2}, logical operand number {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DayOfWeekOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Value; Structure ID; Control priority; Operand number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DayOfYearOutOfRange">
            <summary>
              Looks up a localized string similar to Value {0} for day of year is out of range on control structure {1}, control definition priority{2}, logical operand number {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DayOfYearOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Value; Structure ID; Control priority; Operand number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DidNotFindStaticItem">
            <summary>
              Looks up a localized string similar to Did not find static item {0} in Res1D file.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DidNotFindStaticItemVD">
            <summary>
              Looks up a localized string similar to Item name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DigipointNotFound">
            <summary>
              Looks up a localized string similar to Could not find digipoint with ID {0} for reach {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DigipointNotFoundVD">
            <summary>
              Looks up a localized string similar to Digipoint ID; Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DirectoryNotFound">
            <summary>
              Looks up a localized string similar to Can not find directory for file {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DynamicCouldNotBeParsed">
            <summary>
              Looks up a localized string similar to Could not parse name of dynamic item, skipping: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_DynamicCouldNotBeParsedVD">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ECOLabIDUnknown">
            <summary>
              Looks up a localized string similar to ID of constant ({1}) entered in local constant value (number {0}) is unknown..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ECOLabIDUnknownVD">
            <summary>
              Looks up a localized string similar to Index; ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ECOLabIntMethodInvalid">
            <summary>
              Looks up a localized string similar to Integration_Method integer value is invalid..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ELWithoutAD">
            <summary>
              Looks up a localized string similar to WQ/EcoLab enabled, but AD not enabled: This is not a valid combination.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_EncroachmentNotSupported">
            <summary>
              Looks up a localized string similar to Encroachment simulations are not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_EnergyEquationSupported">
            <summary>
              Looks up a localized string similar to Over bank reach lengths are not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ErrorsInReading">
            <summary>
              Looks up a localized string similar to Errors found while reading: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ErrorsInReadingVD">
            <summary>
              Looks up a localized string similar to File path.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_FFNotSupported">
            <summary>
              Looks up a localized string similar to Flood Forecast simulations are not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_FileFormatOld">
            <summary>
              Looks up a localized string similar to The file format is an old format (version {0} found, requires version {1}). {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_FileFormatOldVD">
            <summary>
              Looks up a localized string similar to Version found; Used version; File path.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_FileIsReadOnly">
            <summary>
              Looks up a localized string similar to File {0} is readonly and can not be overwritten/edited..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_FileIsReadOnlyVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_FileNotFound">
            <summary>
              Looks up a localized string similar to File not found: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_FileNotFoundVD">
            <summary>
              Looks up a localized string similar to File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_FilePathNotDefined">
            <summary>
              Looks up a localized string similar to FilePath not defined in {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_FilePathNotDefinedVD">
            <summary>
              Looks up a localized string similar to Module.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_FileVersionWrong">
            <summary>
              Looks up a localized string similar to File is a newer version and cannot be read. File version {0}, reader version {1}. File: {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_FileVersionWrongVD">
            <summary>
              Looks up a localized string similar to File version; Reader version; File path.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_FullyDynamicWaveApproxNotSupported">
            <summary>
              Looks up a localized string similar to Fully dynamic wave approximation is not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_GroundWaterHeadSpatialNotSupported">
            <summary>
              Looks up a localized string similar to Ground water head of type &apos;spatially distributed&apos; is not supported, boundary id: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_HeatBalanceNotSupported">
            <summary>
              Looks up a localized string similar to Heat balance calculations are not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_HourOfDayOutOfRange">
            <summary>
              Looks up a localized string similar to Value {0} for hour of day is out of range on control structure {1}, control definition priority {2}, logical operand number {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_HourOfDayOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Value; Structure ID; Control priority; Operand number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ICENotSupported">
            <summary>
              Looks up a localized string similar to ICE simulations are not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_InvalidItemsFoundInGroundWaterHeadBoundary">
            <summary>
              Looks up a localized string similar to Invalid number of items for ground water head boundary: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_InvalidItemsInWindBoundary">
            <summary>
              Looks up a localized string similar to A wind boundary must have one wind velocity item and one wind direction item. Boundary ID: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_InvalidItemsInWindBoundaryVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_ItemNotHandled">
            <summary>
              Looks up a localized string similar to Item type not handled in res1d format: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelAddStor">
            <summary>
              Looks up a localized string similar to Link channel &apos;{0}&apos; additional storage cross section in {1]stream end could not be found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelAddStorAddProcData">
            <summary>
              Looks up a localized string similar to Link channel &apos;{0}&apos; additional storage cross section in {1}stream end does not have any processed additional storage  data..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelAddStorAddProcDataVD">
            <summary>
              Looks up a localized string similar to Link channel ID; Up/down stream.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelAddStorageAndConnection">
            <summary>
              Looks up a localized string similar to Link Channel &apos;{0}&apos; has additional storage AND a connection in {1}stream end. That is not supported. Please move storage to connecting point or reverse connection..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelAddStorageAndConnectionVD">
            <summary>
              Looks up a localized string similar to Link channel ID; Up/down stream.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelAddStorProcData">
            <summary>
              Looks up a localized string similar to Link channel &apos;{0}&apos; additional storage cross section in {1}stream end does not have any processed data..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelAddStorProcDataVD">
            <summary>
              Looks up a localized string similar to Link channel ID; Up/down stream.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelAddStorVD">
            <summary>
              Looks up a localized string similar to Link channel ID; Up/down stream.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelAddStorZeroDownstream">
            <summary>
              Looks up a localized string similar to Link channel {0} additional storage is zero for one or more levels cross section in downstream end..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelAddStorZeroUpstream">
            <summary>
              Looks up a localized string similar to Link channel &apos;{0}&apos; additional storage is zero for one or more levels cross section in upstream end..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelBedLevelBelowBLDownstream">
            <summary>
              Looks up a localized string similar to Link channel {0} bed level {1} is below additional storage bottom level {2} in downstream end..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelBedLevelBelowBLUpstream">
            <summary>
              Looks up a localized string similar to Link channel {0} bed level {1} is below additional storage bottom level {2} in upstream end..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelClosedBnd">
            <summary>
              Looks up a localized string similar to Link Channel &apos;{0}&apos; has closed boundary in {1}stream end. This is invalid without additional storage. A &apos;WaterLevel&apos; or &apos;Outlet&apos; boundary is valid..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelClosedBndVD">
            <summary>
              Looks up a localized string similar to Link channel ID; Up/down stream.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelNoGeometry">
            <summary>
              Looks up a localized string similar to Link channel {0} geometry is not defined. There must be at leat two levels in the geometry definition..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelNoQh">
            <summary>
              Looks up a localized string similar to Link channel {0} geometry is not defined, and Q-h relation table is empty. There must be at leat two levels in the geometry definition in order to automatically calculate Q-h relations..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelOpenBnd">
            <summary>
              Looks up a localized string similar to Link Channel &apos;{0}&apos; has additional storage AND an open boundary in {1}stream end. This is invalid..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelOpenBndTypeNotValid">
            <summary>
              Looks up a localized string similar to Link Channel &apos;{0}&apos; has open boundary in {1}stream end of type {2}. This is invalid, only type &apos;WaterLevel&apos; and &apos;Outlet&apos; is valid..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelOpenBndTypeNotValidVD">
            <summary>
              Looks up a localized string similar to Link channel ID; Up/down stream; Boundary type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LinkChannelOpenBndVD">
            <summary>
              Looks up a localized string similar to Link channel ID; Up/down stream.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LocationNotFound">
            <summary>
              Looks up a localized string similar to Could not find location for structure item, skipping {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_LocationNotFoundVD">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_M11BoundaryNotValue">
            <summary>
              Looks up a localized string similar to Boundary descriptor value {0} is not a valid bnd11 value..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_M11BoundaryNotValueVD">
            <summary>
              Looks up a localized string similar to Value ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_M1daNotFound">
            <summary>
              Looks up a localized string similar to Could not find .m1da file: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_M1DAPropNotFound">
            <summary>
              Looks up a localized string similar to Could not find property {0} {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_M1DAPropNotFoundVD">
            <summary>
              Looks up a localized string similar to Name; Extra.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_M1DAPropTypeNoMatch">
            <summary>
              Looks up a localized string similar to Property type and parameter type does not match, {0}. {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_M1DAPropTypeNoMatchVD">
            <summary>
              Looks up a localized string similar to Name; Extra.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_M1DAValueNotRecognized">
            <summary>
              Looks up a localized string similar to Value &apos;{0}&apos; for {1} is not recognized. Allowed values are {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_M1DAValueNotRecognizedVD">
            <summary>
              Looks up a localized string similar to Name; Property; Names.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_MapOutputNotSupported">
            <summary>
              Looks up a localized string similar to Generation of maps is not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_MarkerNotDefined">
            <summary>
              Looks up a localized string similar to Bridge {0} does not have marker {1} defined.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_MarkerNotDefinedVD">
            <summary>
              Looks up a localized string similar to Bridge ID; Marker ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_MHStrucNotDefined">
            <summary>
              Looks up a localized string similar to Sensor {0} uses structure that is not defined..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_MHStrucNotDefinedForControlRule">
            <summary>
              Looks up a localized string similar to Control rule {0} uses structure that is not defined..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_MHStrucNotDefinedForControlRuleVD">
            <summary>
              Looks up a localized string similar to Control rule ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_MHStrucNotDefinedVD">
            <summary>
              Looks up a localized string similar to Sensor ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_MinuteOfHourOutOfRange">
            <summary>
              Looks up a localized string similar to Value {0} for minute of hour is out of range on control structure {1}, control definition priority {2}, logical operand number {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_MinuteOfHourOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Value; Structure ID; Control priority; Operand number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_MonthOfYearOutOfRange">
            <summary>
              Looks up a localized string similar to Value {0} for month of year is out of range on control structure {1}, control definition priority {2}, logical operand number {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_MonthOfYearOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Value; Structure ID; Control priority; Operand number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_NegativeFlowFactor">
            <summary>
              Looks up a localized string similar to Negative flow factor for structure {0} is used..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_NegativeFlowFactorVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_NoBranchDataInPFSFile">
            <summary>
              Looks up a localized string similar to Could not find [BRANCHES] section of nwk11 file {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_NoBranchDataInPFSFileVD">
            <summary>
              Looks up a localized string similar to File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_NoDataAreaDataInPFSFile">
            <summary>
              Looks up a localized string similar to Could not find [DATA_AREA] section of nwk11 file {0}. Can not read projection information..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_NoDataAreaDataInPFSFileVD">
            <summary>
              Looks up a localized string similar to File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_NoDataInXMLFile">
            <summary>
              Looks up a localized string similar to Xml file does not contain Mike1D DataAccess data: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_NoDataInXMLFileVD">
            <summary>
              Looks up a localized string similar to File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_NoInflowItemsFound">
            <summary>
              Looks up a localized string similar to No inflows found in inflow boundary {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_NoInflowItemsFoundVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_NoItems">
            <summary>
              Looks up a localized string similar to Tried to write a result file without dynamic items.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_NoItemsFoundInWaterLevelOpenSourceBoundary">
            <summary>
              Looks up a localized string similar to No items found in open source water level boundary.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_NoNetworkDataInPFSFile">
            <summary>
              Looks up a localized string similar to Could not find [MIKE_11_Network_editor] section of nwk11 file {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_NoNetworkDataInPFSFileVD">
            <summary>
              Looks up a localized string similar to File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_NoPointDataInPFSFile">
            <summary>
              Looks up a localized string similar to Could not find [POINTS] section of nwk11 file.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_NoPointDataInPFSFileVD">
            <summary>
              Looks up a localized string similar to File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_NotStructureSection">
            <summary>
              Looks up a localized string similar to No structure section found in nwk11 file.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_OnlyFloatsSupp">
            <summary>
              Looks up a localized string similar to Only float data supported, skipping {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_OnlyFloatsSuppVD">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_OnlyNormalADTypeSupported">
            <summary>
              Looks up a localized string similar to AD component {0} is of type {1} which is not supported. Only type NORMAL is supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_OnlyNormalADTypeSupportedVD">
            <summary>
              Looks up a localized string similar to AD component name; Type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_OnlyRegularReaches">
            <summary>
              Looks up a localized string similar to Reach type {0} is not supported. Only regular reaches are currently supported. Location: {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_OnlyRegularReachesVD">
            <summary>
              Looks up a localized string similar to Reach type; Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_OpenInflowWithouthHD">
            <summary>
              Looks up a localized string similar to An open inflow boundary cannot exclude HD, but it is excluded for boundary number {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_OpenInflowWithouthHDVD">
            <summary>
              Looks up a localized string similar to Boundary Number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_OpenLinkChannelBCNotSupportedDS">
            <summary>
              Looks up a localized string similar to Link channel {0} has an open boundary of type {1} at the downstream end. This is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_OpenLinkChannelBCNotSupportedUS">
            <summary>
              Looks up a localized string similar to Link channel {0} has an open boundary of type {1} at the upstream end. This is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_OpenLinkChannelsNotSupportedDS">
            <summary>
              Looks up a localized string similar to Link channel {0} has an open boundary at the downstream end. This is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_OpenLinkChannelsNotSupportedDSVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_OpenLinkChannelsNotSupportedUS">
            <summary>
              Looks up a localized string similar to Link channel {0} has an open boundary at the upstream end. This is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_OpenLinkChannelsNotSupportedUSVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_OpenSourceTypeNotImplemented">
            <summary>
              Looks up a localized string similar to Open Source boundaries of type {0} are not implemented..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_OpenSourceTypeNotImplementedVD">
            <summary>
              Looks up a localized string similar to Boundary type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_PointSourceTypeNotImplemented">
            <summary>
              Looks up a localized string similar to Point Source boundaries of type {0} are not implemented..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_PointSourceTypeNotImplementedVD">
            <summary>
              Looks up a localized string similar to Boundary type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_QuasiSteadySimulationModeNotSupported">
            <summary>
              Looks up a localized string similar to Quasi steady simulation mode not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_RegulatingStructuresNotSupported">
            <summary>
              Looks up a localized string similar to Regulating structures are not supported. {0} regulating structures were found in the NWK file..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_RegulatingStructuresNotSupportedVD">
            <summary>
              Looks up a localized string similar to Number of Regulating structures.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_RoutingNotSupported">
            <summary>
              Looks up a localized string similar to Routing channels are not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_RRHotstartFilename">
            <summary>
              Looks up a localized string similar to Hotstart enabled, but no hotstart file was specified..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_RRResultFilenameMissing">
            <summary>
              Looks up a localized string similar to Rainfall Runoff input filename is missing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_SaveAllGridPointsNotSupported">
            <summary>
              Looks up a localized string similar to Saving results on only a subset of grid points is not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_SteadyStateInit">
            <summary>
              Looks up a localized string similar to Steady state HD initial condition not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_SteadyStatePlusParInit">
            <summary>
              Looks up a localized string similar to Steady state plus parameter file HD initial condition not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_STNotSupported">
            <summary>
              Looks up a localized string similar to Sediment transport simulations are not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_StorageTableIsEmpty">
            <summary>
              Looks up a localized string similar to Storage {0} table does not contain any entries..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_StorageTableIsEmptyVD">
            <summary>
              Looks up a localized string similar to Storage ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_StrActionNotCreated">
            <summary>
              Looks up a localized string similar to Control structure {0}: Action for priority {1} could not be created: {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_StrActionNotCreatedVD">
            <summary>
              Looks up a localized string similar to Structure ID; Condition number; Error message.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_StrLogicNotCreated">
            <summary>
              Looks up a localized string similar to Control structure {0}: Logical condition for priority {1} could not be created: {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_StrLogicNotCreatedVD">
            <summary>
              Looks up a localized string similar to Structure ID; Condition number; Error message.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_StructureBoundaryNotSupported">
            <summary>
              Looks up a localized string similar to Structure boundary of type {0} is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_StructureBoundaryNotSupportedVD">
            <summary>
              Looks up a localized string similar to Structure boundary type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_TextOutputNotSupported">
            <summary>
              Looks up a localized string similar to Time series output is not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_TimeSeriesOutputNotSupp">
            <summary>
              Looks up a localized string similar to Time Series Output Format not supported: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_TimeSeriesOutputNotSuppVD">
            <summary>
              Looks up a localized string similar to Format.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_TSNoPath">
            <summary>
              Looks up a localized string similar to Time series file path not defined for boundary {0}, time series item..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_TSNoPathVD">
            <summary>
              Looks up a localized string similar to Boundary Number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_UnableToCreateGlobalSourceBoundaryOftype">
            <summary>
              Looks up a localized string similar to Unable to find global source boundary of type {0}. Boundary {1} ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_UnableToCreateGlobalSourceBoundaryOftypeVD">
            <summary>
              Looks up a localized string similar to Boundary type; Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_UnitTypeNotSupportedForInitCond">
            <summary>
              Looks up a localized string similar to Unit type {0} is not supported for AD component {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_UnitTypeNotSupportedForInitCondVD">
            <summary>
              Looks up a localized string similar to Unit type; AD Component.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_UnknownBridgeTypeInResultData">
            <summary>
              Looks up a localized string similar to Unknown bridge type {0} for result data.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_UnknownBridgeTypeInResultDataVD">
            <summary>
              Looks up a localized string similar to Bridge type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_UnknownComponentIndexInADDecay">
            <summary>
              Looks up a localized string similar to AD component index {0} is used in the decay parameters. This component index does not exist..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_UnknownComponentIndexInADDecayVD">
            <summary>
              Looks up a localized string similar to Component index.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_UnknownComponentIndexInADInit">
            <summary>
              Looks up a localized string similar to AD component index {0} is used in the initial conditions. This component index does not exist..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_UnknownComponentIndexInADInitVD">
            <summary>
              Looks up a localized string similar to Component index.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_UnsupportedGridPointType">
            <summary>
              Looks up a localized string similar to Unsupported grid point type. Only H and Q points are supported, not {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_UnsupportedGridPointTypeVD">
            <summary>
              Looks up a localized string similar to Grid point type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_UnsupportedMajorVersion">
            <summary>
              Looks up a localized string similar to Unsupported Res1D major version: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_UnsupportedMajorVersionVD">
            <summary>
              Looks up a localized string similar to Version.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_UnsupportedXSType">
            <summary>
              Looks up a localized string similar to Unsupported cross section type: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_UnsupportedXSTypeVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WindNotSupported">
            <summary>
              Looks up a localized string similar to Wind is not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WQNotSupported">
            <summary>
              Looks up a localized string similar to Water quality simulations are not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongApplicationTitle">
            <summary>
              Looks up a localized string similar to Wrong application title. Should be &apos;MIKE1D&apos;, was {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongApplicationTitleVD">
            <summary>
              Looks up a localized string similar to Application title.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongBoundaryForDambreak">
            <summary>
              Looks up a localized string similar to Boundary {0} for dambreak structure {1} must have three components. It has {2} components..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongBoundaryForDambreakNWS">
            <summary>
              Looks up a localized string similar to Boundary {0} for NWS dambreak structure {1} must have four components. It has {2} components..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongBoundaryForDambreakNWSVD">
            <summary>
              Looks up a localized string similar to Dambreak structure ID; Boundary ID; Number of components.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongBoundaryForDambreakVD">
            <summary>
              Looks up a localized string similar to Dambreak structure ID; Boundary ID; Number of components.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongFileTitle">
            <summary>
              Looks up a localized string similar to Wrong file title. Should be &apos;MIKE1D result file&apos;, was {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongFileTitleVD">
            <summary>
              Looks up a localized string similar to Result file title.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongFileType">
            <summary>
              Looks up a localized string similar to Wrong file type. Should be FileType.NeqtimeFixedspaceAllitems, was {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongFileTypeVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongSpatialAxis">
            <summary>
              Looks up a localized string similar to Unsupported spatial axis type: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongSpatialAxisVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongStaticItemName">
            <summary>
              Looks up a localized string similar to Wrong static item name read. Expected {0} but read {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongStaticItemNameVD">
            <summary>
              Looks up a localized string similar to Expected static item name; Static item name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongTimeAxisType">
            <summary>
              Looks up a localized string similar to Wrong time axis type. Should be TimeAxisType.CalendarNonEquidistant, was {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongTimeAxisType2">
            <summary>
              Looks up a localized string similar to Wrong time axis type. Should be IDFSNonEqCalendarAxis, was {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongTimeUnit">
            <summary>
              Looks up a localized string similar to Wrong time unit. Should be seconds, was {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongTimeUnitInRes11">
            <summary>
              Looks up a localized string similar to File {0} has wrong time unit in axis. The time unit must be hours..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongTimeUnitInRes11VD">
            <summary>
              Looks up a localized string similar to File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_WrongTimeUnitVD">
            <summary>
              Looks up a localized string similar to Unit.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_YearOutOfRange">
            <summary>
              Looks up a localized string similar to Value {0} for year is out of range on control structure {1}, control definition priority {2}, logical operand number {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_ERR_YearOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Value; Structure ID; Operand number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_ADAddOutputNotSupp">
            <summary>
              Looks up a localized string similar to AD additional output not supported and ignored: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_ADAddOutputNotSuppVD">
            <summary>
              Looks up a localized string similar to Quantity.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_AdditionalFloodedM11GIS">
            <summary>
              Looks up a localized string similar to Not supported: Map additional flooded areas using help grid from MIKE 11 GIS.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_ADResSpecMissing">
            <summary>
              Looks up a localized string similar to No AD result specification. AD results will not be saved..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_ADWithoutHDDefect">
            <summary>
              Looks up a localized string similar to AD without HD for temperature component is defective. Boundary: &apos;{0}&apos;, component &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_ADWithoutHDDefectVD">
            <summary>
              Looks up a localized string similar to Boundary ID; Component number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_AppendHotNotSupp">
            <summary>
              Looks up a localized string similar to Appending to AD hot start file is not supported. Disabling appending flag..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_BndKmixNegative">
            <summary>
              Looks up a localized string similar to Kmix time constant is zero or negative for boundary &apos;{0}&apos;, Kmix is disabled..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_BndKmixNegativeVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_BoundaryIdNotUnique">
            <summary>
              Looks up a localized string similar to Boundary ID {0} is not unique..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_BoundaryIdNotUniqueVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_ChangingRes1DExtension">
            <summary>
              Looks up a localized string similar to Changing {0} extension to res1d for file: {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_ChangingRes1DExtensionVD">
            <summary>
              Looks up a localized string similar to File extension; File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_DAEnsembleTooSmall">
            <summary>
              Looks up a localized string similar to DataAssimilation - An ensemble size of {0} is too small for a confidence of {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_DAEnsembleTooSmallVD">
            <summary>
              Looks up a localized string similar to Ensemble size; Confidence percent.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_DANoPerturbation">
            <summary>
              Looks up a localized string similar to DataAssimilation - No perturbation of {0} selected for boundary/catchment {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_DANoPerturbationVD">
            <summary>
              Looks up a localized string similar to Component; Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_DAwithADwihtoutAD">
            <summary>
              Looks up a localized string similar to DA measurement for AD components are specified, but AD is not enabled. Measurements are also disabled..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_DistributedSourceBoundaryNotImplemented">
            <summary>
              Looks up a localized string similar to Distributed source boundary of type {0} is not implemented..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_DistributedSourceBoundaryNotImplementedVD">
            <summary>
              Looks up a localized string similar to Distributed source boundary type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_DuplicateDigipoints">
            <summary>
              Looks up a localized string similar to Found duplicate digipoints, or digipoints very close to each other. Removing &apos;duplicate&apos; digipoint, reach {0}, chainage {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_DuplicateDigipointsVD">
            <summary>
              Looks up a localized string similar to Reach; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_DynamicParsedWrong">
            <summary>
              Looks up a localized string similar to Could not correctly parse name of dynamic item: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_DynamicParsedWrongVD">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_EmptyStructureIDRenamed">
            <summary>
              Looks up a localized string similar to The setup contains a structure without an ID. Structure IDs must be unique. The structure ID was set to {0} based on the location of the structure..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_EmptyStructureIDRenamedVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_EndChainageNotDigiPoint">
            <summary>
              Looks up a localized string similar to End chainage in reach {0} does not match chainage of last digipoint..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_EndChainageNotDigiPointVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_FileDoesNotExistCreatingDirectory">
            <summary>
              Looks up a localized string similar to File directory does not exist for file: {0}. The directory will be created..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_FileDoesNotExistCreatingDirectoryVD">
            <summary>
              Looks up a localized string similar to File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_FileFormatNew">
            <summary>
              Looks up a localized string similar to The .m1dx file is from a newer version of MIKE 1D. Data cannot be read correctly (version in file {0}, current m1dx version {1}). {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_FileFormatNewVD">
            <summary>
              Looks up a localized string similar to Version found; Current version; File path.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_FileFormatOldDataLoss">
            <summary>
              Looks up a localized string similar to The .m1dx file is from a previous version. Some data may not be read correctly. Re-export the setup to .m1dx to assure full compatibility. Version in file {0}, current m1dx version {1}. {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_FileFormatOldDataLossVD">
            <summary>
              Looks up a localized string similar to Version found; Current version; File path.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_FlowFactorControlRuleIgnored">
            <summary>
              Looks up a localized string similar to Use of flow factor is disabled for structure {0}. Control rule on flow factor for this structure is ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_FlowFactorControlRuleIgnoredVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_GlobalSourceBoundaryNotImplemented">
            <summary>
              Looks up a localized string similar to Global source boundary of type {0} is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_GlobalSourceBoundaryNotImplementedVD">
            <summary>
              Looks up a localized string similar to Global source boundary type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_HeatBalanceBoundaryNotSupported">
            <summary>
              Looks up a localized string similar to Heat balance boundary type not supported on distributed boundary {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_HeatBalanceBoundaryNotSupportedVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_HeatBalanceGlobalBoundaryNotSupported">
            <summary>
              Looks up a localized string similar to Heat balance boundary type not supported on global boundary {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_HeatBalanceGlobalBoundaryNotSupportedVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_LinkChannelAddStorageClosedBnd">
            <summary>
              Looks up a localized string similar to Link Channel &apos;{0}&apos; has additional storage and a closed boundary in {1}stream end. This is replaced by a reservoir..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_LinkChannelAddStorageClosedBndVD">
            <summary>
              Looks up a localized string similar to Link channel ID; Up/down stream.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_LinkChannelNameAlsoSTID">
            <summary>
              Looks up a localized string similar to Link channel name {0} is also a structure id. The link channel structure is renamed to {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_LinkChannelNameAlsoSTIDVD">
            <summary>
              Looks up a localized string similar to Link channel ID; Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_M1DAParNotSet">
            <summary>
              Looks up a localized string similar to Parameter from m1da not set: Property {0} of {1} was null (feature not enabled?)..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_M1DAParNotSetVD">
            <summary>
              Looks up a localized string similar to Property; Parameter.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_MaxAllowedInMisnamedReach">
            <summary>
              Looks up a localized string similar to The structure {0} of type $MaxAllowed$ (as identified byt the structure ID) is located in reach {1} which does not have the $MaxAllowed$ prefix (first letters of the reach ID). This means that the target reach location cannot be verified..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_MaxAllowedInMisnamedReachVD">
            <summary>
              Looks up a localized string similar to Structure ID; Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_MinAllowedInMisnamedReach">
            <summary>
              Looks up a localized string similar to The structure {0} of type $MinAllowed$ (as identified byt the structure ID) is located in reach {1} which does not have the $MinAllowed$ prefix (first letters of the reach ID). This means that the target reach location cannot be verified..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_MinAllowedInMisnamedReachVD">
            <summary>
              Looks up a localized string similar to Structure ID; Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_NoCatchmentSectionFound">
            <summary>
              Looks up a localized string similar to No catchment section found in nwk file..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_NoInflowsInGlobalEvapBoundary">
            <summary>
              Looks up a localized string similar to No inflows found in global evaporation boundary {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_NoInflowsInGlobalEvapBoundaryVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_NoInflowsInGlobalRRBoundary">
            <summary>
              Looks up a localized string similar to No inflows found in global source rainfall runoff boundary {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_NoInflowsInGlobalRRBoundaryVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_NoResultFileName">
            <summary>
              Looks up a localized string similar to No file name has been specified for the result file.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_NoRoutingReaches">
            <summary>
              Looks up a localized string similar to No routing reaches in the network. All routing elements are ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_OldXns11File">
            <summary>
              Looks up a localized string similar to The cross section (xns11) file is an old format (version {0}). Data may be loaded incorrectly; please update the file (load in cross section editor and recalculate all processed data) : {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_PRFDuplicateItem">
            <summary>
              Looks up a localized string similar to When reading PRF file: Duplicate item description neglected: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_PRFDuplicateItemVD">
            <summary>
              Looks up a localized string similar to Data type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_ReservoirVolumeFirstNotZero">
            <summary>
              Looks up a localized string similar to Reservoir/storage {0} has a non-zero value at first level. The volume at the first level is assumed to be zero, and the value will be ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_ResistanceBoundaryNotSupported">
            <summary>
              Looks up a localized string similar to Resistance factor boundary is not supported on boundary {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_ResistanceBoundaryNotSupportedVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_RoutingElementWithNoReach">
            <summary>
              Looks up a localized string similar to Routing element {0} at location {1} has not matching routing reach. Element is ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_RoutingElementWithNoReachVD">
            <summary>
              Looks up a localized string similar to Routing Element Id; Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_RoutingMethodMuskingumCunge">
            <summary>
              Looks up a localized string similar to Routing method is Muskingum-Cunge for element {0} at location {1}. Support for Muskingum-Cunge is experimental. Please use Muskingum routing instead..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_RoutingMethodMuskingumCungeElevation">
            <summary>
              Looks up a localized string similar to Routing method Muskingum-Cunge only works when cross sections are defined and elevation is calculated with a resistance formulation. This is not the case for element{0} at location {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_RoutingMethodMuskingumCungeElevationVD">
            <summary>
              Looks up a localized string similar to Routing Element Id; Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_RoutingMethodMuskingumCungeVD">
            <summary>
              Looks up a localized string similar to Routing Element Id; Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_RRHotstartFileNameChanged">
            <summary>
              Looks up a localized string similar to Hot start file name renamed, {0} was appended to the file: {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_RunningInHDDemoMode">
            <summary>
              Looks up a localized string similar to MIKE 11 setup has less than or 101 h-grid points, less than 4 branches, less than 2 structures and less than 2 boundaries. Loading setup in DEMO mode..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_RunningInRRDemoMode">
            <summary>
              Looks up a localized string similar to MIKE 11 Rainfall Runoff has only 1 catchment. Loading setup in DEMO mode..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_SkippedStaticItem">
            <summary>
              Looks up a localized string similar to Skipped static item {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_SkippedStaticItemVD">
            <summary>
              Looks up a localized string similar to Static item name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_StartChainageNotDigiPoint">
            <summary>
              Looks up a localized string similar to Start chainage in reach {0} does not match chainage of first digipoint..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_StartChainageNotDigiPointVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_StructureRenamed">
            <summary>
              Looks up a localized string similar to A structure with ID {0} already exists. Structure IDs must be unique to ensure correct reporting of result data. The structure was renamed to {1}. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_StructureRenamedVD">
            <summary>
              Looks up a localized string similar to Old structure ID; New structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_TimeStepControlNotSupported">
            <summary>
              Looks up a localized string similar to Dam Break {0} uses time step control which has been deprecated (multiplication factor is {1}, set to 1 to disable this warning). Consider using adaptive time step control or tabulated time steps instead..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_TimeStepControlNotSupportedVD">
            <summary>
              Looks up a localized string similar to Dam Break ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_UnableToFindHDSimulationSection">
            <summary>
              Looks up a localized string similar to Unable to find HD_SIMULATION section in ini file. Ignored ini file..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_UnableToReadIniFile">
            <summary>
              Looks up a localized string similar to Unable to find Mike11.ini. Looked in {0} and {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_UnableToReadIniFileVD">
            <summary>
              Looks up a localized string similar to Path to ini file; Path to ini file.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_UserDefinedMarkerMissingMarkTitles">
            <summary>
              Looks up a localized string similar to User defined markers: No mark titles are defined, mark locations are ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_UserMarkerInAsciiOutputIgnored">
            <summary>
              Looks up a localized string similar to User markers in time series output is ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_XSHasRelativeResistanceWithGroundWaterLeakage">
            <summary>
              Looks up a localized string similar to leakage uses the wet perimeter calculated as flow area divided by hydralic radius. Therefore, care is needed when using relative resistance..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_XSHasRelativeResistanceWithGroundWaterLeakageVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_ZoneLevelOnlyOne">
            <summary>
              Looks up a localized string similar to Only one of the zone level &apos;ZONE1-2&apos; and &apos;ZONE2-3&apos; is defined at location {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.BR_WAR_ZoneLevelOnlyOneVD">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CO_ERR_LongTermStatisticsNotSupported">
            <summary>
              Looks up a localized string similar to Generation of long term statistics is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CO_ERR_Mike1DDataNotCreated">
            <summary>
              Looks up a localized string similar to Mike1DData is not available..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CO_ERR_NoMike1DDataCreated">
            <summary>
              Looks up a localized string similar to The MIKE1D data access module does not exist..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CO_WAR_NoDefaultHDResultSpec">
            <summary>
              Looks up a localized string similar to No default HD result specification exists..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CO_WAR_NoDefaultRRResultSpec">
            <summary>
              Looks up a localized string similar to No default rainfall runoff result specification exists..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CO_WAR_NoHDResultSpecification">
            <summary>
              Looks up a localized string similar to No HD result specification. HD results will not be saved..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CP_ERR_InitializationError">
            <summary>
              Looks up a localized string similar to Coupling simulation experienced an error at initialization stage. Stopping the simulation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CP_ERR_RunTimeError">
            <summary>
              Looks up a localized string similar to Coupling simulation experienced a run time error. Stopping the simulation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CS_ERR_CrossSectionWithoutLocation">
            <summary>
              Looks up a localized string similar to Found a cross section without a location..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActHasNoExp">
            <summary>
              Looks up a localized string similar to PID action &apos;{0}&apos; has no {1} expression..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActHasNoExpVD">
            <summary>
              Looks up a localized string similar to ID; Type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActionExpHasErrors">
            <summary>
              Looks up a localized string similar to Action &apos;{0}&apos; {1} expression has errors: {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActionExpHasErrorsVD">
            <summary>
              Looks up a localized string similar to ID; Type; Errors.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActionHasNoInputExpression">
            <summary>
              Looks up a localized string similar to Control action {0} does not have an input expression..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActionHasNoInputExpression2">
            <summary>
              Looks up a localized string similar to Control module action {0} with two input expressions does not have a second input expression..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActionHasNoInputExpression2VD">
            <summary>
              Looks up a localized string similar to Action ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActionHasNoInputExpressionVD">
            <summary>
              Looks up a localized string similar to Action ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActionHasNoSetter">
            <summary>
              Looks up a localized string similar to Control module action {0} as has no value setter..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActionHasNoSetter2">
            <summary>
              Looks up a localized string similar to Control module action {0} with two setters has no second value setter..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActionHasNoSetter2VD">
            <summary>
              Looks up a localized string similar to Action ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActionHasNoSetterVD">
            <summary>
              Looks up a localized string similar to Action ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActionNotFound">
            <summary>
              Looks up a localized string similar to Sensor on action failed, could not find action &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActionNotFoundVD">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActionPIDHasNoCurrentValueGetter">
            <summary>
              Looks up a localized string similar to Control module PID action {0} has no getter for the current value of the control..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActionPIDHasNoCurrentValueGetterVD">
            <summary>
              Looks up a localized string similar to Action ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActionValueExpHasErrors">
            <summary>
              Looks up a localized string similar to Action &apos;{0}&apos; value expression 2 has errors: {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActionValueExpHasErrorsVD">
            <summary>
              Looks up a localized string similar to Action ID; Errors.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActLogicalCond">
            <summary>
              Looks up a localized string similar to Error in action &apos;{0}&apos;, logical condition &apos;{1}&apos;: {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActLogicalCondVD">
            <summary>
              Looks up a localized string similar to ID; Logical cond.; Error.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActReturnTypeWrong">
            <summary>
              Looks up a localized string similar to Error in action &apos;{0}&apos;, {1} &apos;{2}&apos;: {3}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ActReturnTypeWrongVD">
            <summary>
              Looks up a localized string similar to ID; Type; Expression; Error.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_CannotReadPhaseLagFile">
            <summary>
              Looks up a localized string similar to Cannot read phase lag information in complex phase lag control. The file {0} contains line {1} which cannot be interpreted as phase lag information..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_CannotReadPhaseLagFileVD">
            <summary>
              Looks up a localized string similar to Filename; Line.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_CannotReadQLocation">
            <summary>
              Looks up a localized string similar to Cannot read location of control discharge in complex phase lag control. The first line in file {0} reads {1} which is not a valid location..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_CannotReadQLocationVD">
            <summary>
              Looks up a localized string similar to Filename; Line.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_CannotUseHDDemoLicense">
            <summary>
              Looks up a localized string similar to Cannot run in DEMO mode since the control module does not support DEMO mode..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_CircularReference">
            <summary>
              Looks up a localized string similar to Variable {0} contains a circular reference..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_CircularReferenceVD">
            <summary>
              Looks up a localized string similar to Variable ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ControllableStructureNotFound">
            <summary>
              Looks up a localized string similar to Controllable structure {0} could not be found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ControllableStructureNotFoundVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_CouldNotFindTimeSeriesItem">
            <summary>
              Looks up a localized string similar to Control sensor could not find time series item {1} in file {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_DuplicateVariable">
            <summary>
              Looks up a localized string similar to Duplicate definition of variable {0} found with expression {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_DuplicateVariableVD">
            <summary>
              Looks up a localized string similar to Variable ID; Expression.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_ErrorSim">
            <summary>
              Looks up a localized string similar to Errors in setting up control module, simulation failed..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_GridPointDoesNotSupportUseHDQFlag">
            <summary>
              Looks up a localized string similar to Grid point in reach {0}, chainage {1} does not support use of the momenentum equations instead of a structure. The grid point is probably not a structure grid point..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_GridPointDoesNotSupportUseHDQFlagVD">
            <summary>
              Looks up a localized string similar to Chainage; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_LocQuantNotFound">
            <summary>
              Looks up a localized string similar to Sensor &apos;{0}&apos; error: Cannot find quantity &apos;{1}&apos; {2} of location {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_LocQuantNotFoundNear">
            <summary>
              Looks up a localized string similar to Sensor &apos;{0}&apos; error: Can not find quantity &apos;{1}&apos; at or near location {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_LocQuantNotFoundNearVD">
            <summary>
              Looks up a localized string similar to Sensor ID; Quantity; Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_LocQuantNotFoundVD">
            <summary>
              Looks up a localized string similar to Sensor ID; Quantity; Up/downstream; Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_MissingTargetDescription">
            <summary>
              Looks up a localized string similar to Control action {0} does not have a target description..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_MissingTargetDescriptionVD">
            <summary>
              Looks up a localized string similar to Action ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_NoActionTargetDescription">
            <summary>
              Looks up a localized string similar to Action {0} does not have an action target description..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_NoActionTargetDescriptionVD">
            <summary>
              Looks up a localized string similar to Action ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_OnlyRes1DSupported">
            <summary>
              Looks up a localized string similar to The Rainfall Runoff input file format of {0} is not supported. Only res1d or res11/dfs0 Rainfall Runoff input files are supported. Please use a file with .res1d, res11 or dfs0 extension.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_OnlyRes1DSupportedVD">
            <summary>
              Looks up a localized string similar to File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_PhaseLagFileDoesNotExist">
            <summary>
              Looks up a localized string similar to Phase lag file {0} needed in discharge dependent phase lag control sensor {1} does not exists..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_PhaseLagFileDoesNotExists">
            <summary>
              Looks up a localized string similar to The phase lag file {0} does not exist. This file is needed in a complex phase lag control..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_PhaseLagFileDoesNotExistsVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_PhaseLagFileDoesNotExistVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_PhaseLagFileUndefined">
            <summary>
              Looks up a localized string similar to Phase lag filename is not defined in discharge dependent phase lag control sensor {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_PIDControlAttachedToNonVarSpeedPump">
            <summary>
              Looks up a localized string similar to The PID control {0} is attached to pump {1} which does not support variable speed operation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_PIDControlAttachedToNonVarSpeedPumpVD">
            <summary>
              Looks up a localized string similar to Control ID; Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_PumpOnNoPump">
            <summary>
              Looks up a localized string similar to Sensor &apos;{0}&apos; is a &apos;pump-on&apos; sensor, but structure &apos;{1}&apos; is not a pump..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_PumpOnNoPumpVD">
            <summary>
              Looks up a localized string similar to Sensor ID; Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_QuantityNotFoundOnQGridPoint">
            <summary>
              Looks up a localized string similar to Sensor {0} requires quantity {1} which is not available on reach {2}, chainage {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_QuantityNotFoundOnQGridPointVD">
            <summary>
              Looks up a localized string similar to Sensor ID; Quantity; Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_QuantityNotOfferedByStructure">
            <summary>
              Looks up a localized string similar to Cannot set up control sensor on structure {0}. The structure does not offer quantity {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_QuantityNotOfferedByStructureVD">
            <summary>
              Looks up a localized string similar to Structure ID; Quantity.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_QuantNotSpecified">
            <summary>
              Looks up a localized string similar to Sensor &apos;{0}&apos;, quantity is not specified..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_QuantNotSpecifiedVD">
            <summary>
              Looks up a localized string similar to Sensor ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SameNameSensor">
            <summary>
              Looks up a localized string similar to Two sensors has the same name: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SameNameSensorVariable">
            <summary>
              Looks up a localized string similar to A sensor and a variable has the same name: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SameNameVariable">
            <summary>
              Looks up a localized string similar to Two variables has the same name: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorDescriptionHasNoLocationID">
            <summary>
              Looks up a localized string similar to Control sensor {0} has no location where it should attach to..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorDescriptionHasNoLocationIDVD">
            <summary>
              Looks up a localized string similar to Sensor ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorDescriptionHasNoQuantity">
            <summary>
              Looks up a localized string similar to Control sensor {0} has no quantity to connect to..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorDescriptionHasNoQuantityVD">
            <summary>
              Looks up a localized string similar to Sensor ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorDescriptionHasNoReachLocation">
            <summary>
              Looks up a localized string similar to Control sensor {0} has no reach ID to connect to..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorDescriptionHasNoReachLocationVD">
            <summary>
              Looks up a localized string similar to Sensor ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorHasNoDescription">
            <summary>
              Looks up a localized string similar to Control sensor {0} has no description of where it should connect to..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorHasNoDescriptionVD">
            <summary>
              Looks up a localized string similar to Sensor ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorLocationNotFound">
            <summary>
              Looks up a localized string similar to Location for sensor {0} not found: {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorLocationNotFoundVD">
            <summary>
              Looks up a localized string similar to Sensor ID; Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorNodeNotFound">
            <summary>
              Looks up a localized string similar to Sensor &apos;{0}&apos;, node id &apos;{1}&apos; not found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorNodeNotFoundVD">
            <summary>
              Looks up a localized string similar to Sensor ID; Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorPrefixNotSupported">
            <summary>
              Looks up a localized string similar to Sensor prefix {0} is not supported. The full sensor name is {1} and it is locaton on structure {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorPrefixNotSupportedVD">
            <summary>
              Looks up a localized string similar to Sensor prefix; Sensor location; Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorStartTimeLTEndTime">
            <summary>
              Looks up a localized string similar to Sensor active time interval is invalid: The start time is {0} which is less than the sensor end time {1}. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorStartTimeLTEndTimeVD">
            <summary>
              Looks up a localized string similar to Start time; End time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorStrDownstreamNotFound">
            <summary>
              Looks up a localized string similar to Sensor downstream of structure {0} could not be created. the quantity {1} is not available..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_SensorStrUpstreamNotFound">
            <summary>
              Looks up a localized string similar to Sensor upstream of structure {0} could not be created. the quantity {1} is not available..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_StateWithoutAction">
            <summary>
              Looks up a localized string similar to Found control without action..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_StateWithoutTransitionTable">
            <summary>
              Looks up a localized string similar to Found control without transition table..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_StrNotFound">
            <summary>
              Looks up a localized string similar to Structure at &apos;{0}&apos; could not be found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_StrNotFoundForSensor">
            <summary>
              Looks up a localized string similar to Structure at location &apos;{0}&apos; could not be found for sensor &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_StrNotFoundForSensorVD">
            <summary>
              Looks up a localized string similar to Location; Sensor ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_StrNotFoundVD">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_StrQuantNotFound">
            <summary>
              Looks up a localized string similar to Sensor &apos;{0}&apos; error: Cannot find quantity &apos;{1}&apos; {2} of structure {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_StrQuantNotFoundVD">
            <summary>
              Looks up a localized string similar to Sensor ID; Quantity; Up/downstream; Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_TooManyItemsReq">
            <summary>
              Looks up a localized string similar to Control sensor time series item number {0} requested, but only {1} items are available in file, {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_TooManyItemsReqVD">
            <summary>
              Looks up a localized string similar to Number; Number; File path.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_TsUnitconversionFailed">
            <summary>
              Looks up a localized string similar to Failed converting unit from {2} to {3} for time series {1}, item number {0}. Units are not equivalent. No unit conversion will take place.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_TypeNoMatch">
            <summary>
              Looks up a localized string similar to Action type does not match engine action type for action {0} (type {1})..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_TypeNoMatchVD">
            <summary>
              Looks up a localized string similar to Action ID; Target control.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_ERR_VarExprErr">
            <summary>
              Looks up a localized string similar to Error in variable &apos;{0}&apos;, &apos;{1}&apos;: {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_WAR_ActionNotAtDesiredChainage">
            <summary>
              Looks up a localized string similar to Action {0} is connected to reach {1}  at chainage {2} instead of requested chainage {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_WAR_ActionNotAtDesiredChainageVD">
            <summary>
              Looks up a localized string similar to Action ID; Reach ID; Chainage; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_WAR_ControlledStructureNotAtTargetLocation">
            <summary>
              Looks up a localized string similar to Control {0} is set up to control structure {1} located on reach {2}, chainage {3}. However, the structure {1} is on reach {4}, chainage {5}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_WAR_ControlledStructureNotAtTargetLocationVD">
            <summary>
              Looks up a localized string similar to Control ID; Structure ID; Reach ID; Chainage; Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_WAR_DischargeAtDiffLoc">
            <summary>
              Looks up a localized string similar to Discharge Demand lookup, location of controlled discharge is at chainage {0} instead of requested chainage {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_WAR_DischargeAtDiffLocVD">
            <summary>
              Looks up a localized string similar to Chainage; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_WAR_MultipleStructures">
            <summary>
              Looks up a localized string similar to Found more than one structure at location &apos;{0}&apos; for sensor &apos;{1}&apos;, using one arbitrarily..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_WAR_MultipleStructuresVD">
            <summary>
              Looks up a localized string similar to Location; Sensor ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_WAR_SensorNotAtDesiredChainage">
            <summary>
              Looks up a localized string similar to Requested discharge sensor {0} is at chainage {1} instead of requested chainage {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_WAR_SensorNotAtDesiredChainageVD">
            <summary>
              Looks up a localized string similar to Sensor ID; Chainage; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_WAR_StructureIdMustBeUnique">
            <summary>
              Looks up a localized string similar to Structure ID {0} is not unique. If a control is attached to one of the structures with ID {0}, then the simulation will fail..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_WAR_StructureIdMustBeUniqueVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_WAR_TimeSeriesEndsLate">
            <summary>
              Looks up a localized string similar to Time series in sensor {0} ends before simulation end time. Time series ends at {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_WAR_TimeSeriesEndsLateVD">
            <summary>
              Looks up a localized string similar to Sensor ID; Date.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_WAR_TimeSeriesStartsLate">
            <summary>
              Looks up a localized string similar to Time series in sensor {0} starts later than simulation start time. Time series starts at {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.CT_WAR_TimeSeriesStartsLateVD">
            <summary>
              Looks up a localized string similar to Sensor ID; Date.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_AdComponentDataMissing">
            <summary>
              Looks up a localized string similar to AD Component data is missing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_BoundaryDataMissing">
            <summary>
              Looks up a localized string similar to Boundary data is missing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_ControlDataMissing">
            <summary>
              Looks up a localized string similar to Control data is missing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_ElDataMissing">
            <summary>
              Looks up a localized string similar to ECO Lab data is missing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_EndtimeLTStarttime">
            <summary>
              Looks up a localized string similar to Start time ({0}) for simulation is later than end time ({1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_EndtimeLTStarttimeVD">
            <summary>
              Looks up a localized string similar to Start time; End time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_HdParamDataMissing">
            <summary>
              Looks up a localized string similar to HD Parameter data is missing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_InvalidProjString">
            <summary>
              Looks up a localized string similar to Projection string is not a valid WKT projection string: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_InvalidProjStringGeo">
            <summary>
              Looks up a localized string similar to Projection is geographic (LAT/LON coordinates), which is not supported: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_LeapingWeirLengthIsZero">
            <summary>
              Looks up a localized string similar to Leaping weir {0} length is zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_LeapingWeirLengthIsZeroVD">
            <summary>
              Looks up a localized string similar to Leaping weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_LeapingWeirWidthIsZero">
            <summary>
              Looks up a localized string similar to Leaping weir {0} width is zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_LeapingWeirWidthIsZeroVD">
            <summary>
              Looks up a localized string similar to Leaping weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_ManholeDiameterIsZero">
            <summary>
              Looks up a localized string similar to Diameter of manhole {0} is zero.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_ManholeDiameterIsZeroVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_NetworkDataMissing">
            <summary>
              Looks up a localized string similar to Network data is missing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_OnlyFixedTimeStepSupported">
            <summary>
              Looks up a localized string similar to Only fixed time stepping supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_OutfileNameEqualHotstartFileName">
            <summary>
              Looks up a localized string similar to Output filename matches hotstart filename (HD parameters): {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_OutfileNameEqualHotstartFileNameVD">
            <summary>
              Looks up a localized string similar to File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_OutfileNameReused">
            <summary>
              Looks up a localized string similar to Output filename {0} is used for both the {1} and the {2} output specifications.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_OutfileNameReusedVD">
            <summary>
              Looks up a localized string similar to Output file name; Specification; Specification.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_RrDataMissing">
            <summary>
              Looks up a localized string similar to Catchment / Rainfall Runoff data is missing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_ERR_XsDataMissing">
            <summary>
              Looks up a localized string similar to Cross section data is missing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_WAR_HyperThreading">
            <summary>
              Looks up a localized string similar to Hyper Threading is enabled, or system is highly utilized. Setting number of threads to half of maximum ({0} of {1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_WAR_HyperThreadingHint">
            <summary>
              Looks up a localized string similar to You may try to disable Hyper Threading on you system. You can disable this check by setting additional parameter HyperThreadingTest to false (-par:HyperThreadingTest=false).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_WAR_LeapingWeirLengthTooSmall">
            <summary>
              Looks up a localized string similar to Leaping weir {0} length of invert opening is less than 0.5m..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_WAR_LeapingWeirLengthTooSmallVD">
            <summary>
              Looks up a localized string similar to Leaping weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_WAR_NoObservations">
            <summary>
              Looks up a localized string similar to DataAssimilation module does not contain any observations, DataAssimilation is turned off..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_WAR_RRTimeOutsideSimulation">
            <summary>
              Looks up a localized string similar to The time span of the Rainfall Runoff Result file is outside the time span of the simulation. The Rainfall Runoff Result file will be ignored. File: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_WAR_RRTimeOutsideSimulationVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_WAR_RRTimePartlyOutsideSimulation">
            <summary>
              Looks up a localized string similar to The time span of the Rainfall Runoff Result file is only partly covering the time span of the simulation. Outside the time span of the Rainfall Runoff Result file, no runoff will occur from the file. File: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.DA_WAR_RRTimePartlyOutsideSimulationVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EL_ERR_ADForcingDuplicate">
            <summary>
              Looks up a localized string similar to For ECO Lab forcing {0} of build in type {1}, more than one AD component of this type was found. Using the first component found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EL_ERR_ECOLabLicenseNotAvail">
            <summary>
              Looks up a localized string similar to No EcoLab license available. Cannot run EcoLab in demo mode..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EL_ERR_NoTemplate">
            <summary>
              Looks up a localized string similar to ECOLab template file not specified.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EL_ERR_TemplateNotFound">
            <summary>
              Looks up a localized string similar to ECOLab template file could not be found: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EL_ERR_TimeSeriesMissing">
            <summary>
              Looks up a localized string similar to No valid timeseries/item found for parameter ECOLabID {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EL_ERR_UnknownBuildinConstantId">
            <summary>
              Looks up a localized string similar to EcoLab constant with id {0} has a build-in ID {1} that is not supported. Its value must be user specified.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EL_ERR_UnknownBuildinForcingId">
            <summary>
              Looks up a localized string similar to EcoLab forcing with id {0} has a build-in ID {1} that is not supported. Its value must be user specified.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EL_MSG">
            <summary>
              Looks up a localized string similar to ECOLab {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EL_WAR_ADForcingNotFound">
            <summary>
              Looks up a localized string similar to Forcing {0} is defined as build in forcing of type {1}. No AD component of this type was found. The user specified values are used for this forcing instead.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_BoundaryNotInNetwork">
            <summary>
              Looks up a localized string similar to Boundary {0} at location {1} is not in network..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_BoundaryNotInNetworkVD">
            <summary>
              Looks up a localized string similar to Boundary ID; Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CannotAssignOpenBoundaryToNodeWithVolume">
            <summary>
              Looks up a localized string similar to Cannot assign open boundary {0} to node with volume at location {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CannotAssignOpenBoundaryToNodeWithVolumeVD">
            <summary>
              Looks up a localized string similar to Boundary ID; Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CannotConnectReachToItself">
            <summary>
              Looks up a localized string similar to Tried to connect reach to itself, reach {0} ({1}-{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CannotConnectReachToItselfVD">
            <summary>
              Looks up a localized string similar to Reach ID, Reach start chainage, Reach end chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CannotFindConnectingReachLocation">
            <summary>
              Looks up a localized string similar to Cannot find reach connection location {0} for reach {1} ({2}-{3}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CannotFindConnectingReachLocationVD">
            <summary>
              Looks up a localized string similar to Connection, Reach ID, Reach upstream chainage, Reach downstream chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CannotUseHDDemoLicenseBND">
            <summary>
              Looks up a localized string similar to Cannot run in DEMO mode since the number of inflow boundaries is {0}. The DEMO limit 1..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CannotUseHDDemoLicenseBNDVD">
            <summary>
              Looks up a localized string similar to Number of inflow boundaries.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CannotUseHDDemoLicenseHGP">
            <summary>
              Looks up a localized string similar to Cannot run in DEMO mode since the number of h-grid points is {0}. The DEMO limit is 100..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CannotUseHDDemoLicenseHGPVD">
            <summary>
              Looks up a localized string similar to Number of h-grid points.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CannotUseHDDemoLicenseReaches">
            <summary>
              Looks up a localized string similar to Cannot run in DEMO mode since the number of reaches is {0}. The DEMO limit is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CannotUseHDDemoLicenseReachesVD">
            <summary>
              Looks up a localized string similar to Number of reaches; Limit.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CannotUseHDDemoLicenseStr">
            <summary>
              Looks up a localized string similar to Cannot run in DEMO mode since the number of structures is {0}. The DEMO limit is 1..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CannotUseHDDemoLicenseStrVD">
            <summary>
              Looks up a localized string similar to Number of structures.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CatchQuantNotFound">
            <summary>
              Looks up a localized string similar to Could not find catchment quantity &apos;{0}&apos; for catchment {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CatchQuantNotFoundVD">
            <summary>
              Looks up a localized string similar to Quantity; Catchment.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CatchSeveralBndComp">
            <summary>
              Looks up a localized string similar to Catchment {0}, runoff of type &apos;{1}&apos; has more than one component boundary.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CatchSeveralBndCompVD">
            <summary>
              Looks up a localized string similar to Catchment; Runoff type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CouldNotFindRes1DCDResults">
            <summary>
              Looks up a localized string similar to Catchment discharge result data not available. Could not find file {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CouldNotFindRes1DCDResultsVD">
            <summary>
              Looks up a localized string similar to Catchment discharge result file.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CouldNotFindRes1DResults">
            <summary>
              Looks up a localized string similar to Rainfall Runoff result data not available. Could not find file {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_CouldNotFindRes1DResultsVD">
            <summary>
              Looks up a localized string similar to Rainfall Runoff result file.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_DistBndLinkNotFound">
            <summary>
              Looks up a localized string similar to Link ID &apos;{0}&apos; not found when adding distributed source boundary..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_DistBndLinkNotFoundVD">
            <summary>
              Looks up a localized string similar to Link ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_DistBndSpanNotFound">
            <summary>
              Looks up a localized string similar to Location span &apos;{0}&apos; not found when adding distributed source boundary.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_DistBndSpanNotFoundVD">
            <summary>
              Looks up a localized string similar to Span.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_DownstreamXSTooFarFromStructureLocation">
            <summary>
              Looks up a localized string similar to Cross section downstream of structure {0} on reach {1}, chainage {2} is {3} away from the structure, which is larger than maximum dx ({4})..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_DownstreamXSTooFarFromStructureLocationVD">
            <summary>
              Looks up a localized string similar to Structure ID; Location; Distance; Maximum dx.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_EngineXSZeroHeight">
            <summary>
              Looks up a localized string similar to Cross section at location {0}, chainage {1} has zero height.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_EngineXSZeroHeightVD">
            <summary>
              Looks up a localized string similar to Location; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_FoundMultipleTailNodesInPressurizedSection">
            <summary>
              Looks up a localized string similar to Found at least one pressurized section with multiple tail nodes.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_FoundMultipleTailNodesInPressurizedSectionHint">
            <summary>
              Looks up a localized string similar to Put tail nodes such that each pressurized sections is connected to one node only. This error can be converted to a warning by adding a AllowPMMultipleTailNodes=true parameter.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_HDDecoupledGridPointMismatch">
            <summary>
              Looks up a localized string similar to Result file does not match network. Grid point layout differs for reach {0}, {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_HDDecoupledMismatch">
            <summary>
              Looks up a localized string similar to Stopping due to mismatch between HD decoupled file and network..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_HDDecoupledNodeIDMismatch">
            <summary>
              Looks up a localized string similar to Result file does not match network. Id of node number {0} differs: {1}, {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_HDDecoupledNodeIDMismatches">
            <summary>
              Looks up a localized string similar to Result file does not match network. Id of nodes differ for {0} nodes.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_HDDecoupledNoDischarge">
            <summary>
              Looks up a localized string similar to Quantities do not match. File must contain discharge or discharge step averaged..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_HDDecoupledNoNodeMismatch">
            <summary>
              Looks up a localized string similar to Result file does not match network. Number of nodes differ..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_HDDecoupledNoReachMismatch">
            <summary>
              Looks up a localized string similar to Result file does not match network. Number of reaches differs..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_HDDecoupledQuantMismatchNode">
            <summary>
              Looks up a localized string similar to Result file does not contain correct quantities on node {0}, {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_HDDecoupledQuantMismatchReach">
            <summary>
              Looks up a localized string similar to Result file does not contain correct quantities on reach {0}, {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_HDDecoupledReachIDMismatch">
            <summary>
              Looks up a localized string similar to Result file does not match network. Id/name of reach, or chainage span of reach differs for reach {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_HDDecoupledReachMismatches">
            <summary>
              Looks up a localized string similar to Result file does not match network. Layout differs for {0} reaches.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_KinematicWaveBottomLevelSlopeSign">
            <summary>
              Looks up a localized string similar to In reach {0}, kinematic wave approximation is applied, and the bottom slope changes between uphill and downhill. The slope must increase or decrease monotonically within the kinematic wave approximation regime..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_KinematicWaveBottomLevelSlopeSignHint">
            <summary>
              Looks up a localized string similar to Use a dynamic scheme on the flat parts of the network..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_KinematicWaveConveyanceSlopeSign">
            <summary>
              Looks up a localized string similar to Kinematic wave approximation at {0}. The reach slope and the conveyance slope has different signs. The signs must equal for Kinematic Wave approach to work..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_KinematicWaveConveyanceSlopeSignHint">
            <summary>
              Looks up a localized string similar to The conveyance is higher downstream than upstream for some water levels. Most likely the slope is too small for the use of a Kinematic wave approach. Use a dynamic formulation instead..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseCapacityExceededM11">
            <summary>
              Looks up a localized string similar to The number of h-grid points in the setup is {0}. This is larger than {1} which is the number of h-grid points supported by the license..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseCapacityExceededM11VD">
            <summary>
              Looks up a localized string similar to Number of h-grid points; Number of h-grid points supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseCapacityExceededM1D">
            <summary>
              Looks up a localized string similar to The number of h-grid points in the setup is {0}. This is larger than {1} which is the number of h-grid points supported by the MIKE1D license..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseCapacityExceededM1DVD">
            <summary>
              Looks up a localized string similar to Number of h-grid points; Number of h-grid points supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseCapacityExceededMU">
            <summary>
              Looks up a localized string similar to The number of reaches in the setup is {0}. This is larger than {1} which is the number of reaches supported by the license..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseCapacityExceededMUControl">
            <summary>
              Looks up a localized string similar to The number of control structures in the setup is {0}. This is larger than {1} which is the number of control structures supported by the license..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseCapacityExceededMUControlVD">
            <summary>
              Looks up a localized string similar to Number of control structures; Number of control structures supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseCapacityExceededMUVD">
            <summary>
              Looks up a localized string similar to Number of reaches; Number of reaches supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseConfirmationError">
            <summary>
              Looks up a localized string similar to Cannot confirm license. {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseConfirmationErrorVD">
            <summary>
              Looks up a localized string similar to License error.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseContentError">
            <summary>
              Looks up a localized string similar to License file does not match license password..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseDongleError">
            <summary>
              Looks up a localized string similar to Error in license dongle operation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseDongleNumber">
            <summary>
              Looks up a localized string similar to The ID of the attached dongle does not match the license file..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseExpired">
            <summary>
              Looks up a localized string similar to Expiration date of license module {0} is exceeded.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseExpiredVD">
            <summary>
              Looks up a localized string similar to Module.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseFileError">
            <summary>
              Looks up a localized string similar to Error in license file operation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseInUse">
            <summary>
              Looks up a localized string similar to All available license for {0} are already in use..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseInUseVD">
            <summary>
              Looks up a localized string similar to License name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseInvalidDll">
            <summary>
              Looks up a localized string similar to License control DLL not valid..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseInvalidReleaseNumber">
            <summary>
              Looks up a localized string similar to Release number in license file not valid..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseInvalidServiceReleaseNumber">
            <summary>
              Looks up a localized string similar to Service Release number in license file not valid..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseLimitsExceeded">
            <summary>
              Looks up a localized string similar to License limits exceeded on license {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseLimitsExceededVD">
            <summary>
              Looks up a localized string similar to License name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseModuleNotFound">
            <summary>
              Looks up a localized string similar to License module {0} not found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseModuleNotFoundVD">
            <summary>
              Looks up a localized string similar to License module name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseNoSelection">
            <summary>
              Looks up a localized string similar to No license selected..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseReadError">
            <summary>
              Looks up a localized string similar to Error reading license file content..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseUnknownType">
            <summary>
              Looks up a localized string similar to Unknown license error..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_LicenseWrongKeyNumber">
            <summary>
              Looks up a localized string similar to Wrong key number or wrong key type in license system..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_MultipleTailNodesInPressurizedSection">
            <summary>
              Looks up a localized string similar to There is a pressurized reach section with {0} tail nodes. The tail nodes are {1}. The pressurized section contains reaches {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_MultipleTailNodesInPressurizedSectionVD">
            <summary>
              Looks up a localized string similar to Number of tail nodes; Tail nodes; Reaches in section.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoCatchmentDischarge">
            <summary>
              Looks up a localized string similar to Unable to find Catchment Discharge in catchment {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoCatchmentDischargeVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoConnectignReachesInNode">
            <summary>
              Looks up a localized string similar to Can not set bottom level for node {0}. It does not have any connecting reaches..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoConnectignReachesInNodeVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoCrossSection">
            <summary>
              Looks up a localized string similar to Unable to find cross section at reach {0}, chainage {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoCrossSectionAtLocTopo">
            <summary>
              Looks up a localized string similar to Unable to find cross section at reach &apos;{0}&apos;, chainage {1}, with topoID &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoCrossSectionAtLocTopoVD">
            <summary>
              Looks up a localized string similar to Reach name; Chainage; Topo ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoCrossSectionAtStartMuskingumCunge">
            <summary>
              Looks up a localized string similar to Cross section at start of Muskingum-Cunge routing element {0} could not be found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoCrossSectionAtStartMuskingumCungeVD">
            <summary>
              Looks up a localized string similar to Routing Element Id.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoCrossSectionMuskingumCunge">
            <summary>
              Looks up a localized string similar to Cross section at Muskingum-Cunge routing element {0} could not be found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoCrossSectionMuskingumCungeVD">
            <summary>
              Looks up a localized string similar to Routing Element Id.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoCrossSectionVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoDownstreamXSAtStructureLocation">
            <summary>
              Looks up a localized string similar to No cross section was found downstream of structure {0} on reach {1}, chainage {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoDownstreamXSAtStructureLocationVD">
            <summary>
              Looks up a localized string similar to Structure ID; Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoNetRainfall">
            <summary>
              Looks up a localized string similar to Unable to find Net Rainfall in catchment {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoNetRainfallVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoReachAtStructureLocation">
            <summary>
              Looks up a localized string similar to No reach was found for structure {0} in reach {1} at chainage {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoReachAtStructureLocationVD">
            <summary>
              Looks up a localized string similar to Structure ID; Rach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoStructureDefined">
            <summary>
              Looks up a localized string similar to No structure defined for structure reach: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoStructureDefinedVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoTotalRunoff">
            <summary>
              Looks up a localized string similar to Unable to find Total Runoff in catchment {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoTotalRunoffVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoUpstreamXSAtStructureLocation">
            <summary>
              Looks up a localized string similar to No cross section was found upstream of structure {0} on reach {1} at chainage {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_NoUpstreamXSAtStructureLocationVD">
            <summary>
              Looks up a localized string similar to Structure ID; Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_OpenBndMissing">
            <summary>
              Looks up a localized string similar to {0} is defined as an open boundary in the model, however no open boundary is defined..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_OpenBndMissingVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_OpenBndNodeInternal">
            <summary>
              Looks up a localized string similar to Open boundary at node {0} cannot be assigned: Node is internal and not an open boundary node..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_OpenBndNodeInternalLoc">
            <summary>
              Looks up a localized string similar to Open boundary at location {0} cannot be assigned: Location is an internal node and not an open boundary node.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_OpenBndNodeInternalLocVD">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_OpenBndNodeInternalVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_OpenBoundaryAlreadyAssignedToNode">
            <summary>
              Looks up a localized string similar to An open boundary is already assigned to node {0}. Only one open boundary can be assigned to one node. Cannot assign boundary {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_OpenBoundaryAlreadyAssignedToNodeVD">
            <summary>
              Looks up a localized string similar to Node ID; Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_OrificeTopLevelNotSet">
            <summary>
              Looks up a localized string similar to Orifice {0} is connected to a junction node {1}, and {2} Top Level is not set..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_OrificeTopLevelNotSetVD">
            <summary>
              Looks up a localized string similar to Orifice ID; Node ID; Upstream/downstream.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_PressureReachConnectedToNonPressureNode">
            <summary>
              Looks up a localized string similar to Node {0} is not part of a pressurized section of the network but connects to pressure reach {1}. Should node {0} be a pressure reach tail node?.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_PressureReachConnectedToNonPressureNodeVD">
            <summary>
              Looks up a localized string similar to Node ID; Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_PressureReachInternalNodeHasNormalReach">
            <summary>
              Looks up a localized string similar to Node {0} is internal to a pressure reach section but is connected to non-pressure reach {1}. This is not allowed. Only pressure reach tail nodes can connect to both pressure reaches and exactly one non-pressure reach..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_PressureReachInternalNodeHasNormalReachVD">
            <summary>
              Looks up a localized string similar to Node ID; Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_PressureReachTailNodesRequireNormalReaches">
            <summary>
              Looks up a localized string similar to Pressure reach tail node {0} is not connected to any non-pressure reaches. This is not allowed..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_PressureReachTailNodesRequireNormalReachesVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_PressureReachTailNodesRequirePressureReaches">
            <summary>
              Looks up a localized string similar to Pressure reach tail node {0} is not connected to any pressure reaches. This is not allowed..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_PressureReachTailNodesRequirePressureReachesVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_RoutingElementMethodAtStartChainage">
            <summary>
              Looks up a localized string similar to Routing method defined at start of reach is not valid. Set to &quot;direct&quot;/&quot;no discharge transformation&quot;. Location: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_RoutingModuleCyclicConnection">
            <summary>
              Looks up a localized string similar to A cyclic connection in the routing module was discovered..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_RoutingReachAtStructureLocation">
            <summary>
              Looks up a localized string similar to Structure {0} cannot be created on reach {1}, chainage {2} since the reach is a routing reach..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_RRResultsFileDoesNotContainAnyCatchments">
            <summary>
              Looks up a localized string similar to Rainfall Runoff results file {0} does not contain any Rainfall Runoff data..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_RRResultsFileDoesNotContainAnyCatchmentsVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_StructureAndHGridPointAtLocation">
            <summary>
              Looks up a localized string similar to The structure {0} is located at the same point as a H grid point. Location is {1}, {2}. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_StructureAndHGridPointAtLocationHint">
            <summary>
              Looks up a localized string similar to The structure is located incorrectly, i.e. at the end of the branch, or at a branch connection point. Move the structure to a location inside the branch..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_StructureGridPointNeighbours">
            <summary>
              Looks up a localized string similar to Two structures found without a cross section in between, at reach {0}, chainage {1} and {2}, structure {4} ({3}) and {6} ({5}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_StructureGridPointNeighboursHint">
            <summary>
              Looks up a localized string similar to Add cross section between the two structures.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_StructureGridPointNeighboursVD">
            <summary>
              Looks up a localized string similar to Reach name; Chainage 1; Chainage 2; Structure type 1; Structure Id 1; Structure type 2; Structure Id 2.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_UnsuccessfulLicenseCheckInBridge">
            <summary>
              Looks up a localized string similar to A unsuccessful HD license check was performed when the setup was loaded. This error should have been caught in the bridge. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_UpstreamXSTooFarFromStructureLocation">
            <summary>
              Looks up a localized string similar to Cross section upstream of structure {0} on reach {1}, chainage {2} is {3} away from the structure, which is larger than maximum dx ({4})..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_ERR_UpstreamXSTooFarFromStructureLocationVD">
            <summary>
              Looks up a localized string similar to Structure ID; Reach ID; Chainage; Distance; Maximum dx.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_TXT_HotstartFile">
            <summary>
              Looks up a localized string similar to Hotstart file: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_TXT_HotstartFileVD">
            <summary>
              Looks up a localized string similar to FileName.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_AdaptiveTimeStepMinReached">
            <summary>
              Looks up a localized string similar to Smallest allowed time step reached, timeStep could not be decreased any further. Simulation time: {0}. This warning will be issued only once..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_AdaptiveTimeStepMinReachedVD">
            <summary>
              Looks up a localized string similar to Simulation time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CatchAreaZero">
            <summary>
              Looks up a localized string similar to Catchment {0} area is zero and connection to HD is ignored.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CatchAreaZeroVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CatchConnDuplicateLoc">
            <summary>
              Looks up a localized string similar to &quot;Catchment connection for catchment {0} to location {1} has duplicate entries.&quot;.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CatchConnDuplicateLocVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CatchConnDuplicateNode">
            <summary>
              Looks up a localized string similar to Catchment connection for catchment {0} to node {1} has duplicate entries..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CatchConnDuplicateNodeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CatchConnNotFound">
            <summary>
              Looks up a localized string similar to Catchment connection for catchment {0} could not find link {1} in network..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CatchConnNotFoundVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Link ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CatchConnSpanNotFound">
            <summary>
              Looks up a localized string similar to Catchment connection for catchment {0} could not find span {1} in network..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CatchConnSpanNotFoundVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Span.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CircularReach">
            <summary>
              Looks up a localized string similar to Reach is connected to the same node in both ends: {0}, ({1}-{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CircularReachVD">
            <summary>
              Looks up a localized string similar to Span; Start chainage; End chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CouldNotFindCatchment">
            <summary>
              Looks up a localized string similar to Could not find catchment {0}. Connection to catchment ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CouldNotFindCatchmentVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CoultNotFindRes1DCatchment">
            <summary>
              Looks up a localized string similar to Could not find catchment {0} in result data. Connection to catchment ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CoultNotFindRes1DCatchmentVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CSAtSplitLocation">
            <summary>
              Looks up a localized string similar to Connection to reach {0} at chainage {2} is {1} from the nearest cross section. Connection point has been moved to the cross section chainage..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_CSAtSplitLocationVD">
            <summary>
              Looks up a localized string similar to Reach ID; Distance; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_DistanceBetweenXSsLessThanLengthOfStructure">
            <summary>
              Looks up a localized string similar to Structure {0} is longer than the disctance between the up- and downstream cross sections. The culvert is {4} long while the distance between cross sections is {3}. The structures is on reach {1} at chainage {2}. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_DistanceBetweenXSsLessThanLengthOfStructureVD">
            <summary>
              Looks up a localized string similar to Structure ID; Reach ID; Chainage; Distance; Length of structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_DistBndNotFound">
            <summary>
              Looks up a localized string similar to Distributed boundary {0} could not find link {1} in network..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_DistBndNotFoundVD">
            <summary>
              Looks up a localized string similar to Boundary ID; Link ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_DistBndSpanNotFound">
            <summary>
              Looks up a localized string similar to Distributed boundary {0} could not find span {1} in network..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_DistBndSpanNotFoundVD">
            <summary>
              Looks up a localized string similar to Boundary ID; Span.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ExtrapolatingXSEnd">
            <summary>
              Looks up a localized string similar to End of reach {0}, {1} is {2} outside span of cross sections. Using nearest cross section at chainage {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ExtrapolatingXSEndVD">
            <summary>
              Looks up a localized string similar to Reach ID; Reach chainage; Distance; Cross section chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ExtrapolatingXSStart">
            <summary>
              Looks up a localized string similar to Start of reach {0}, {1} is {2} outside span of cross sections. Using nearest cross section at chainage {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ExtrapolatingXSStartVD">
            <summary>
              Looks up a localized string similar to Reach ID; Reach chainage; Distance; Cross section chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_HPointsVeryClose">
            <summary>
              Looks up a localized string similar to Distance between two h-points is only {0}, Reach {1} chainage {2} - {3}. Results may be inaccurate..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_HPointsVeryCloseVD">
            <summary>
              Looks up a localized string similar to Distance; Reach ID; Start chainage; End chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_KinematicWaveBottomLevelSlopeSmall">
            <summary>
              Looks up a localized string similar to Kinematic wave approximation is used in branch {0}. The slope is small, smallest slope of {2}% at chainage {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_KinematicWaveBottomLevelSlopeSmallHint">
            <summary>
              Looks up a localized string similar to Kinematic wave approximation is designed for steep reaches. Results on flat parts are incorrect. It is recommended to switch to a dynamic scheme on flat part..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_LeapingWeirNegativeSlope">
            <summary>
              Looks up a localized string similar to Leaping weir {0} main connections both have negative slope into the node. This is outside design conditions of a leaping weir..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_LeapingWeirNegativeSlopeVD">
            <summary>
              Looks up a localized string similar to Leaping weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_LeapingWeirPositiveSlope">
            <summary>
              Looks up a localized string similar to Leaping weir {0} main connections both have positive slope into the node. This is outside design conditions of a leaping weir..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_LeapingWeirPositiveSlopeVD">
            <summary>
              Looks up a localized string similar to Leaping weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ManholeDiameterSmall">
            <summary>
              Looks up a localized string similar to The diameter of manhole {0} is {1} which is less than the width of connecting reach {2}. The width of reach {2} is {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ManholeDiameterSmallVD">
            <summary>
              Looks up a localized string similar to Node ID; Node diameter; Reach ID; Reach width.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_PressureReachTailNodesCrestLevelNotSet">
            <summary>
              Looks up a localized string similar to Pressure reach tail node {0} does not have a pressure reach level set. The pressure reach level was set to the top of the connecting pressure reaches, which is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_PressureReachTailNodesCrestLevelNotSetVD">
            <summary>
              Looks up a localized string similar to Node ID; Crest Level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_PressureReachTailNodesCrestLevelReset">
            <summary>
              Looks up a localized string similar to Pressure reach tail node {0} has crest level set to {1} which is lower than top of the connecting pressure reaches. The crest level was reset to {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_PressureReachTailNodesCrestLevelResetVD">
            <summary>
              Looks up a localized string similar to Node ID; Old Crest Level; New Crest Level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_PressureSectionHasStructure">
            <summary>
              Looks up a localized string similar to Reach {0} is internal to a pressure reach section but is a structure reach with structure {1}. This is not recommended..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_PressureSectionHasStructureVD">
            <summary>
              Looks up a localized string similar to Reach ID; Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ResultfileAndNetworkMismatchNodeCoordinates">
            <summary>
              Looks up a localized string similar to Resultfile and network do not match: {0} nodes have different coordinates..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ResultfileAndNetworkMismatchNodeCoordinatesVD">
            <summary>
              Looks up a localized string similar to Number of nodes.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ResultfileAndNetworkMismatchNodes">
            <summary>
              Looks up a localized string similar to Resultfile and network do not match: {0} nodes in network were not found in resultfile..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ResultfileAndNetworkMismatchNodesVD">
            <summary>
              Looks up a localized string similar to Number of nodes.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ResultfileAndNetworkMismatchNodeTypes">
            <summary>
              Looks up a localized string similar to Resultfile and network do not match: {0} nodes have different type..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ResultfileAndNetworkMismatchNodeTypesVD">
            <summary>
              Looks up a localized string similar to Number of nodes.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ResultfileAndNetworkMismatchReachesGPMismatch">
            <summary>
              Looks up a localized string similar to Resultfile and network do not match: {0} reaches have different gridpoint setup..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ResultfileAndNetworkMismatchReachesGPMismatchVD">
            <summary>
              Looks up a localized string similar to Number of reaches.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ResultfileAndNetworkMismatchReachesMissing">
            <summary>
              Looks up a localized string similar to Resultfile and network do not match: {0} reaches in network were not found in resultfile..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ResultfileAndNetworkMismatchReachesMissingVD">
            <summary>
              Looks up a localized string similar to Number of reaches.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ResultfileAndNetworkMismatchReachesNodeIdMismatch">
            <summary>
              Looks up a localized string similar to Resultfile and network do not match: {0} reaches connects to different nodes..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ResultfileAndNetworkMismatchReachesNodeIdMismatchVD">
            <summary>
              Looks up a localized string similar to Number of reaches.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ResultfileAndNetworkMismatchReachesOverlap">
            <summary>
              Looks up a localized string similar to Resultfile and network do not match: {0} reaches do not span the same chainages..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_ResultfileAndNetworkMismatchReachesOverlapVD">
            <summary>
              Looks up a localized string similar to Number of reaches.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_RoutingQHReusedAtDividePoint">
            <summary>
              Looks up a localized string similar to The routing reach {0} has a connection at chainage {1}, but no Routing Element at the connection point. Downstream QH relation at chainage {2} is also used at this location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_RoutingQHReusedAtDividePointVD">
            <summary>
              Looks up a localized string similar to Reach ID; Connection chainage; Routing Element chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_RRRCatchAreaZero">
            <summary>
              Looks up a localized string similar to RR Result file Catchment {0} area is zero and is ignored.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_RRRCatchAreaZeroVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_RRResultsCatchmentNotFound">
            <summary>
              Looks up a localized string similar to Catchment {0} was not found when trying to connect Rainfall Runoff results. Connection to catchment {0} was ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_RRResultsCatchmentNotFoundVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_RunningInHDDemoMode">
            <summary>
              Looks up a localized string similar to HD module license check failed. HD module has less than or 101 h-grid points, less than 4 branches, less than 2 structures and less than 2 boundaries. Running in DEMO mode..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_SrcBndLocNotFound">
            <summary>
              Looks up a localized string similar to Location &apos;{0}&apos; not found when adding point source boundary &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_SrcBndLocNotFoundVD">
            <summary>
              Looks up a localized string similar to Location; Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_SrcBndNodeNotFound">
            <summary>
              Looks up a localized string similar to Node with id &apos;{0}&apos; not found when adding point source boundary &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_SrcBndNodeNotFoundVD">
            <summary>
              Looks up a localized string similar to Node ID; Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_SrcNotAdded">
            <summary>
              Looks up a localized string similar to {0} {1} not added - no node/point location defined/found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.EN_WAR_SrcNotAddedVD">
            <summary>
              Looks up a localized string similar to Type; Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ExceptionPrinter">
            <summary>
              Looks up a localized string similar to Exception: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_CompilerFileError">
            <summary>
              Looks up a localized string similar to Error compiling script: {0}. Total errors: {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_Generic">
            <summary>
              Looks up a localized string similar to {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_GenericVD">
            <summary>
              Looks up a localized string similar to Message.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_MissingSelectionFile">
            <summary>
              Looks up a localized string similar to Selection file {0} does not exist..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_MissingSelectionFileVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_MissingSelectionFileWithLocation">
            <summary>
              Looks up a localized string similar to Selection file {0} specified in {1} does not exist..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_MissingSelectionFileWithLocationVD">
            <summary>
              Looks up a localized string similar to Filename; Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_NonMonotonicDataInXYTable">
            <summary>
              Looks up a localized string similar to Non-monotonic data in XYTable..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_SelectionFileExistsButCannotBeRead">
            <summary>
              Looks up a localized string similar to MOUSE selection file {0} exists but cannot be read..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_SelectionFileExistsButCannotBeReadVD">
            <summary>
              Looks up a localized string similar to File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_Stop">
            <summary>
              Looks up a localized string similar to Stopping due to errors.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_TimeSeriesFileInvalidTimeAxis">
            <summary>
              Looks up a localized string similar to The time series file has an invalid time definition: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_TimeSeriesFileNotFound">
            <summary>
              Looks up a localized string similar to Time series file {0} was not found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_TimeSeriesFileNotFoundVD">
            <summary>
              Looks up a localized string similar to Time series filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_TimeSeriesFileNotFoundWithLocation">
            <summary>
              Looks up a localized string similar to Time series file {0} was not found. The file is specified in {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_TimeSeriesFileNotFoundWithLocationVD">
            <summary>
              Looks up a localized string similar to Time series filename; Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_UknownSelectionFileType">
            <summary>
              Looks up a localized string similar to The MOUSE selection file {0} has unknown extension {1}. Extensions .mus, .lse, and .nse are supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_ERR_UknownSelectionFileTypeVD">
            <summary>
              Looks up a localized string similar to File name; Extension.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_EXP_ArgumentForDerivativeOutsideValidInterval">
            <summary>
              Looks up a localized string similar to Argument for derivation routine is outside valid interval.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_EXP_ArgumentForInterpolationOutsideValidInterval">
            <summary>
              Looks up a localized string similar to Argument for interpolation routine is outside valid interval.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_EXP_ArgumentForSqrtDerivationOutsideValidInterval">
            <summary>
              Looks up a localized string similar to Derivation of sqrt extrapolated values not allowed when argument is lower than lowest value in vector.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_EXP_LocationFromStringFailure">
            <summary>
              Looks up a localized string similar to Translation of string to location failed..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_EXP_NoDerivationInVectorsWithDifferentLength">
            <summary>
              Looks up a localized string similar to No derivation between vectors of different length.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_EXP_NoDerivationWhenVectorLengthLessThanTwo">
            <summary>
              Looks up a localized string similar to Derivative calculation for vectors with less than 2 elements not possible.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_EXP_NoDerivationWithVectorNotBeingMonoton">
            <summary>
              Looks up a localized string similar to No derivation using a vector not being monoton.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_EXP_NoInterpolationInEmptyVectors">
            <summary>
              Looks up a localized string similar to Interpolation is not possible in empty vectors.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_EXP_NoInterpolationInVectorsWithDifferentLength">
            <summary>
              Looks up a localized string similar to No interpolation between vectors of different length.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_EXP_ValueGetterOutOfRange">
            <summary>
              Looks up a localized string similar to Index is out of range, should match interval [0,{0}].
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_EXP_ValueGetterOutOfRangeVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_EXP_ValueSetterOutOfRange">
            <summary>
              Looks up a localized string similar to Index is out of range, should match interval [0,{0}].
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_EXP_ValueSetterOutOfRangeVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.GE_WAR_Generic">
            <summary>
              Looks up a localized string similar to {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_DynamicFloodMapVariableTimeStep">
            <summary>
              Looks up a localized string similar to Dynamic flood maps can not be produced when variable time stepping is defined. To create dynamic flood maps, a fixed time step must be defined..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_FloodMapDirectoryNotFound">
            <summary>
              Looks up a localized string similar to Directory for flood map file {0} not found: {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_HDDecoupledNoFile">
            <summary>
              Looks up a localized string similar to HD Decoupling is enabled, but not HD Decoupling file was specified.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_HotstartFileNotFound">
            <summary>
              Looks up a localized string similar to HD hotstart file not found: &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_HotStartFileTypeNotSupported">
            <summary>
              Looks up a localized string similar to Can not handle hot start file: {0}. File type is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_HotStartFileTypeNotSupportedVD">
            <summary>
              Looks up a localized string similar to Hot start file name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_HotstartTimeMismatch">
            <summary>
              Looks up a localized string similar to HD Hostart time {0} not within time interval of hotstart file {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_LeapingWeirBelowOutletReach">
            <summary>
              Looks up a localized string similar to Leaping Weir {0} connecting reach {1} bottom level is below outlet reach bottom level, {2} &lt; {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_LeapingWeirBelowOutletReachVD">
            <summary>
              Looks up a localized string similar to Leaping weir ID; Reach ID; Level 1; Level 2.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_LeapingWeirStructureReachNotAllowed">
            <summary>
              Looks up a localized string similar to Leaping weir {0} has a structure reach connection {1}. This is not allowed..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_LeapingWeirStructureReachNotAllowedVD">
            <summary>
              Looks up a localized string similar to Leaping weir ID; Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_NegativeMinNodeWaterDepthNotSupported">
            <summary>
              Looks up a localized string similar to Negative water depth in node &apos;{0}&apos; not supported. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_NegativeMinNodeWaterDepthNotSupportedHint">
            <summary>
              Looks up a localized string similar to Remove slot from surrounding reaches..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_NegativeMinNodeWaterDepthNotSupportedVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_NoHDLicense">
            <summary>
              Looks up a localized string similar to License does not support HD simulations.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_TimeStepInvalid">
            <summary>
              Looks up a localized string similar to Invalid time step value: Initial time step is zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_TimeStepZero">
            <summary>
              Looks up a localized string similar to Invalid time step value: Fixed time step is zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_WaterLevelAboveBanks">
            <summary>
              Looks up a localized string similar to Water level ({0}) exceeded bank levels on open cross section at branch {1}, chainage {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_WaterLevelAboveBanksVD">
            <summary>
              Looks up a localized string similar to Water level; Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_WaterLevelAboveGroundLevel">
            <summary>
              Looks up a localized string similar to Water level in node {0} is {1} which is {2} above ground level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_WaterLevelAboveGroundLevelVD">
            <summary>
              Looks up a localized string similar to Node ID; Water Level; Water level above ground.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_WaterLevelAboveQHTable">
            <summary>
              Looks up a localized string similar to Water level is {0} which is above water levels in QH table at location {1}. Highest water level in QH table is {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_WaterLevelAboveQHTableVD">
            <summary>
              Looks up a localized string similar to Water level; Location; Water level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_WaterLevelAboveXS">
            <summary>
              Looks up a localized string similar to Water level above top of cross section.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_WatLevNotOffered">
            <summary>
              Looks up a localized string similar to Mike1D does not supply water level for branch {0}, chainage {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_WatLevNotOfferedVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_WLAboveMaxOnXS">
            <summary>
              Looks up a localized string similar to Water level exceeded maximum on {5} grid point(s). Largest exceedance on reach {0}, chainage: {1}. Water depth is {2} which is more than {3} times the cross section height. Water level is {4}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_ERR_WLAboveMaxOnXSVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage; Water depth; Water level exceedance factor; Water level; Number of grid points.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_GlobalBoundaryTypeImplemented">
            <summary>
              Looks up a localized string similar to Global boundary of type {0} is not implemented..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_GlobalBoundaryTypeImplementedVD">
            <summary>
              Looks up a localized string similar to Boundary type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_HotstartFileMissingDischarge">
            <summary>
              Looks up a localized string similar to Hotstart file is missing a discharge quantity: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_HotstartFileMissingDischargeVD">
            <summary>
              Looks up a localized string similar to Hotstart file name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_HotstartFileMissingWaterLevel">
            <summary>
              Looks up a localized string similar to Hotstart file is missing a water level quantity: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_HotstartFileMissingWaterLevelVD">
            <summary>
              Looks up a localized string similar to Hotstart file name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_LeapingWeirBackWater">
            <summary>
              Looks up a localized string similar to Back water from outflow reach in leaping weir {0}. This means that leaping weir operates outside the design conditions. This warning will be issued only once..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_LeapingWeirBackWaterOverFlow">
            <summary>
              Looks up a localized string similar to Back water from overflow reach in leaping weir {0}.  This means that leaping weir operates outside the design conditions. This warning will be issued only once..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_LeapingWeirBackWaterOverFlowVD">
            <summary>
              Looks up a localized string similar to Leaping weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_LeapingWeirBackWaterVD">
            <summary>
              Looks up a localized string similar to Leaping weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_LeapingWeirBottomLevelMismatch">
            <summary>
              Looks up a localized string similar to Leaping weir {0} bottom levels of incoming and overflowing link does not have matching bottom levels. This may give unexpected results..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_LeapingWeirBottomLevelMismatchVD">
            <summary>
              Looks up a localized string similar to Leaping weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_LeapingWeirInflowPipeTooShort">
            <summary>
              Looks up a localized string similar to For proper design, leaping weir {0} inflow pipe length has to be at least 20*diameter. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_LeapingWeirInflowPipeTooShortVD">
            <summary>
              Looks up a localized string similar to Leaping weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_NoResistanceValuesInHDParameters">
            <summary>
              Looks up a localized string similar to Bed resistance is not present in HD parameters. Assuming a uniform resistance value of 1.0..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_NoWatLev4Reach">
            <summary>
              Looks up a localized string similar to Mike1D does not supply water level for branch {0}, between chainagea {1}, and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_NoWatLev4ReachVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HD_WAR_NumberOfThreadsVD">
            <summary>
              Looks up a localized string similar to Number of threads.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_AddedInflow">
            <summary>
              Looks up a localized string similar to Added inflow.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_ADResultSummaryHeading">
            <summary>
              Looks up a localized string similar to AD Results Summary.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_ADSummaryHeading">
            <summary>
              Looks up a localized string similar to AD Summary.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_BoundaryConnectionsHeading">
            <summary>
              Looks up a localized string similar to Boundary Connections.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_BoundaryID">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_BoundaryItems">
            <summary>
              Looks up a localized string similar to Items.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_BoundaryLocations">
            <summary>
              Looks up a localized string similar to Locations.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_BoundaryScaleFactor">
            <summary>
              Looks up a localized string similar to Scale factor.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_BoundaryType">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_CatchmentDischarge">
            <summary>
              Looks up a localized string similar to Catchment Discharge.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_ContinuityBalance">
            <summary>
              Looks up a localized string similar to Continuity Balance.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_Errors">
            <summary>
              Looks up a localized string similar to Errors.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_FileOverviewHeading">
            <summary>
              Looks up a localized string similar to File Overview.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_GlobalSourceBoundaries">
            <summary>
              Looks up a localized string similar to Global Source Boundaries.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_HDContinuityHeading">
            <summary>
              Looks up a localized string similar to HD Continuity.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_HDResultSummaryHeading">
            <summary>
              Looks up a localized string similar to HD Results Summary.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_HDSummaryHeading">
            <summary>
              Looks up a localized string similar to HD Summary.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_Hint">
            <summary>
              Looks up a localized string similar to Hint.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_Index">
            <summary>
              Looks up a localized string similar to Index.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_InfiltrationLoss">
            <summary>
              Looks up a localized string similar to Total loss.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_InitialLoss">
            <summary>
              Looks up a localized string similar to Initial loss.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_LocatedBoundaries">
            <summary>
              Looks up a localized string similar to Located Boundaries.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_Loss">
            <summary>
              Looks up a localized string similar to Loss.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_MaxValue">
            <summary>
              Looks up a localized string similar to Max value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_MinValue">
            <summary>
              Looks up a localized string similar to Min value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_NetRainfall">
            <summary>
              Looks up a localized string similar to Net rainfall.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_NoErrors">
            <summary>
              Looks up a localized string similar to No errors.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_NoGlobalSourceBoundaries">
            <summary>
              Looks up a localized string similar to No global source boundaries in network.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_NoLocalSourceBoundaries">
            <summary>
              Looks up a localized string similar to No located boundaries in network.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_NotAvailable">
            <summary>
              Looks up a localized string similar to Not available.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_NoWarnings">
            <summary>
              Looks up a localized string similar to No warnings.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_RRCDResultSummaryHeading">
            <summary>
              Looks up a localized string similar to Catchment Discharge Summary.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_RRContinuityHeading">
            <summary>
              Looks up a localized string similar to Rainfall Runoff Continuity.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_RREndVolume">
            <summary>
              Looks up a localized string similar to End volume.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_RRNameWarning">
            <summary>
              Looks up a localized string similar to NOTE: If combined catchments or Catchment Discharge are used, then MIKE 1D creates several catchments based on the name of the combined catchment. The names of these extra catchments will be the name of the combined catchment with the type of the component appended. For example, if a combined catchment with a Time Area component is named &quot;Catchment1&quot; then the time area component will be named &quot;Catchment1 - Time-Area&quot;. Catchment Discharge components will the the name &quot;Catchment1CatchmentDischarge&quot;.&lt;p&gt;Errors  [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_RRResultSummaryHeading">
            <summary>
              Looks up a localized string similar to Rainfall Runoff Results Summary.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_RRStartVolume">
            <summary>
              Looks up a localized string similar to Start volume.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_RRSummaryHeading">
            <summary>
              Looks up a localized string similar to Rainfall Runoff Summary.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_RunoffDischarge">
            <summary>
              Looks up a localized string similar to Runoff discharge.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_SimulationTypeHeading">
            <summary>
              Looks up a localized string similar to Simulation Type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_TimeOverviewHeading">
            <summary>
              Looks up a localized string similar to Time Overview.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_TotalInflow">
            <summary>
              Looks up a localized string similar to Total inflow.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_Volume">
            <summary>
              Looks up a localized string similar to Volume.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.HTML_Warnings">
            <summary>
              Looks up a localized string similar to Warnings.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LA_ERR_ExceptionOnAcquiringLicense">
            <summary>
              Looks up a localized string similar to License request exception: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LA_ERR_ExceptionOnAcquiringLicenseVD">
            <summary>
              Looks up a localized string similar to Exception message.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LA_ERR_SimlauncherException">
            <summary>
              Looks up a localized string similar to Unexpected simulation launcher exception. Please see log file for exception stack trace. Exception message: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LA_ERR_SimlauncherExceptionVD">
            <summary>
              Looks up a localized string similar to Simulation launcher exception..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LA_EXC_UnexpectedException">
            <summary>
              Looks up a localized string similar to Unexpected exception occurred. Please see log file for details. Exception message:.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_HotStartFileNotSet">
            <summary>
              Looks up a localized string similar to In Long Term Statistics there is a hot start initial condition without a file name. The initial condition is valid for the inflow interval {0} to {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_HotStartFileNotSetVD">
            <summary>
              Looks up a localized string similar to Inflow start value; Inflow end value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_JobListFileNotFound">
            <summary>
              Looks up a localized string similar to Job list file {0} was not found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_JoblistFilePathNotSet">
            <summary>
              Looks up a localized string similar to The job list file path is not set in Long Term Statistics..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_LiveRRSimulationNotSupported">
            <summary>
              Looks up a localized string similar to The simulation is configured to simulate Rainfall Runoff simulatenously with the HD simulation. Long Term Statistics only supports input from a Rainfall Runoff result file. Please run the Rainfal Runoff simulation first and configure the HD simulation to use the result from the Rainfall Runoff calculation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_MaxHNodesStatisticsNoNodes">
            <summary>
              Looks up a localized string similar to Found a Long Term Statistics maximum water level node statistics specification without nodes..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_NodeNotFoundJobStartCondition">
            <summary>
              Looks up a localized string similar to In Long Term Statistics, node {0} was not found in the network. It is listed in job start condition {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_NodeNotFoundJobStartConditionVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_NodeNotFoundRuntimeStopCondition">
            <summary>
              Looks up a localized string similar to In Long Term Statistics, node {0} was not found in the network. It is listed in runtime stop condition {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_NodeNotFoundRuntimeStopConditionVD">
            <summary>
              Looks up a localized string similar to Node ID; Stop condition ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_NodeNotFoundStatSpec">
            <summary>
              Looks up a localized string similar to In Long Term Statistics, node {0} was not found in the network. It is listed in the node statistics selection specification either as a single node or in a node selection file..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_NodeNotFoundStatSpecVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_OverlappingInitialConditions">
            <summary>
              Looks up a localized string similar to In Long Term Statistics there are two overlapping hot start initial conditions. The first condition ends at inflow {0} while the second condition starts at inflow {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_OverlappingInitialConditionsVD">
            <summary>
              Looks up a localized string similar to Inflow start value; Inflow end value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_ReachNotFoundRuntimeStopCondition">
            <summary>
              Looks up a localized string similar to In Long Term Statistics, reach {0} was not found in the network. It is listed in runtime stop condition {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_ReachNotFoundRuntimeStopConditionVD">
            <summary>
              Looks up a localized string similar to Node ID; Stop condition ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_ReachNotFoundStatSpec">
            <summary>
              Looks up a localized string similar to In Long Term Statistics, reach {0} was not found in the network. It is listed in the reach statistics selection specification either as a single reach or in a reach selection file..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_ReachNotFoundStatSpecVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_ResMaxConcNotSupp">
            <summary>
              Looks up a localized string similar to LTS Result Type &apos;Maximum Concentration&apos; is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_ResultFilePathNotSet">
            <summary>
              Looks up a localized string similar to The result file path is not set in Long Term Statistics..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_RuntimeStopConditionContainsNoNodes">
            <summary>
              Looks up a localized string similar to Long Term Statistics runtime stop condition {0} does not contain any nodes..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_RuntimeStopConditionContainsNoNodesOrReaches">
            <summary>
              Looks up a localized string similar to Long Term Statistics runtime stop condition {0} does not contain any nodes or reaches..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_RuntimeStopConditionContainsNoNodesOrReachesVD">
            <summary>
              Looks up a localized string similar to Stop condition ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_RuntimeStopConditionContainsNoNodesVD">
            <summary>
              Looks up a localized string similar to Stop condition ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_StartConditionContainsNoNodes">
            <summary>
              Looks up a localized string similar to Long Term Statistics job start criterion {0} does not contain any nodes..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_StartConditionContainsNoNodesVD">
            <summary>
              Looks up a localized string similar to Job start condition ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_StartLEQEndInflow">
            <summary>
              Looks up a localized string similar to In Long Term Statistics there is a hot start initial condition with start inflow larger than or equal to end inflow. The start inflow is {0} and the end inflow is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_ERR_StartLEQEndInflowVD">
            <summary>
              Looks up a localized string similar to Inflow start value; Inflow end value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_WAR_JobEndTimeBeforeSimStart">
            <summary>
              Looks up a localized string similar to Long Term Statistic jobs were skipped with end time earlier than simulation start time {0}. Number of skipped jobs: {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_WAR_JobEndTimeBeforeSimStartVD">
            <summary>
              Looks up a localized string similar to Simulation start time; Number of skipped jobs.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_WAR_JobSkipped">
            <summary>
              Looks up a localized string similar to Long Term Statistics job with start time {0} and end time {1} was skipped since the previous job ended after that job. Previous job end time was {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_WAR_JobSkippedVD">
            <summary>
              Looks up a localized string similar to Job start time; Job end time; End time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_WAR_JobStartTimeAfterSimEnd">
            <summary>
              Looks up a localized string similar to Long Term Statistic jobs were skipped with start time later than simulation end time {0}. Number of skipped jobs: {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_WAR_JobStartTimeAfterSimEndVD">
            <summary>
              Looks up a localized string similar to Simulation end time; Number of skipped jobs.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_WAR_NoADModule">
            <summary>
              Looks up a localized string similar to AD Module is not enabled. Skipping AD result specification for Long Term Statistics simulation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_WAR_NotResultQuantity">
            <summary>
              Looks up a localized string similar to Quantity with ID {0} in LTS result specification is not a LTSResultQuantity..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_WAR_NotResultQuantityVD">
            <summary>
              Looks up a localized string similar to Quantity ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_WAR_ResNotSupp">
            <summary>
              Looks up a localized string similar to LTS Result {0} is not supported, and output is ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_WAR_ResNotSuppVD">
            <summary>
              Looks up a localized string similar to Result item ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_WAR_StartTimeMoved">
            <summary>
              Looks up a localized string similar to The start time of Long Term Statistics job with original start time {0} was moved forward to {1} since the previous job ended at that time..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_WAR_StartTimeMovedSimStart">
            <summary>
              Looks up a localized string similar to The start time of Long Term Statistics job with original start time {0} was moved forward to simulation start time {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_WAR_StartTimeMovedSimStartVD">
            <summary>
              Looks up a localized string similar to Job start time; Simulation start time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.LT_WAR_StartTimeMovedVD">
            <summary>
              Looks up a localized string similar to Job start time; End time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_CouldNotLoadXMLFile">
            <summary>
              Looks up a localized string similar to Could not load XML configuration file {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_CouldNotLoadXMLFileVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_2DOverlandNotSupported">
            <summary>
              Looks up a localized string similar to 2D overland calculations are not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ActionTypeNotSet">
            <summary>
              Looks up a localized string similar to Action Type not set for function {0} on device {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ActionTypeNotSetVD">
            <summary>
              Looks up a localized string similar to Function ID; Device ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ADCompNotDefined">
            <summary>
              Looks up a localized string similar to Local initial condition &apos;{0}&apos; has no AD component defined..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ADCompNotDefinedVD">
            <summary>
              Looks up a localized string similar to MU ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ADCompNotFound">
            <summary>
              Looks up a localized string similar to Local initial condition &apos;{0}&apos; refers to AD component &apos;{1}&apos;, which cannot be found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ADCompNotFoundVD">
            <summary>
              Looks up a localized string similar to MU ID; AD Component ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ADComponentDoubleInitValue">
            <summary>
              Looks up a localized string similar to Two different inital values are specified for concentration of AD component {0} on node {1}. The values are {2} and {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ADComponentDoubleInitValueVD">
            <summary>
              Looks up a localized string similar to Component ID; Node ID; New value; Old value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ADDispersionDoubleInitValue">
            <summary>
              Looks up a localized string similar to Two different values are specified for the dispersion parameters on reach {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ADDispersionDoubleInitValueVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ADLoadTypeNotSupp">
            <summary>
              Looks up a localized string similar to AD component is not supported for loads of type {0}. Boundary {1}, item {2} ({3})..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ADLoadTypeNotSuppVD">
            <summary>
              Looks up a localized string similar to Boundary type; Boundary ID; Item description; MU ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ADNotSupported">
            <summary>
              Looks up a localized string similar to Advection Dispersion calculations are not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ADPFileNotFound">
            <summary>
              Looks up a localized string similar to ADP file not found: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ADPFileNotFoundVD">
            <summary>
              Looks up a localized string similar to File path.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ADPNetworkNotSupported">
            <summary>
              Looks up a localized string similar to ADP file not supported for the network HD calculation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ADPRunoffNotSupported">
            <summary>
              Looks up a localized string similar to ADP file not supported for the rainfall runoff calculation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ADResultFileExists">
            <summary>
              Looks up a localized string similar to AD result file {0} already exists..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_BndCatchmentNotFound">
            <summary>
              Looks up a localized string similar to Catchment not found for catchment connection {0} in boundary..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_BndCatchmentNotFoundVD">
            <summary>
              Looks up a localized string similar to Catchment connection.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_BndDiffLoadType">
            <summary>
              Looks up a localized string similar to Global boundary &apos;{0}&apos; has items with different load types (value/per area/per person). All items in one boundary must be of the same type..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_BndDiffLoadTypeVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_BndModeNotDefined">
            <summary>
              Looks up a localized string similar to Boundary item for boundary Id &apos;{0}&apos; on pollutant &apos;{1}&apos; does not define mode (concentration/load)..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_BndModeNotDefinedVD">
            <summary>
              Looks up a localized string similar to Boundary ID; Pollutant ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_BoundaryIDDuplicate">
            <summary>
              Looks up a localized string similar to Boundary ID {0} already exists. This means that there are duplicate entries in the msm_BBoundary table..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_BoundaryIDDuplicateVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_BoundaryItemNameNotDefined">
            <summary>
              Looks up a localized string similar to Item name or type not defined for boundary item {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_BoundaryItemNameNotDefinedVD">
            <summary>
              Looks up a localized string similar to Boundary item ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_BoundaryItemTypeUnknown">
            <summary>
              Looks up a localized string similar to Boundary item type {0} unknown..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_BoundaryItemTypeUnknownVD">
            <summary>
              Looks up a localized string similar to Boundary item type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_BoundarySourceTypeNotHandled">
            <summary>
              Looks up a localized string similar to Boundary type {0} is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_BoundarySourceTypeNotHandledVD">
            <summary>
              Looks up a localized string similar to Boundary type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_BoundaryWithoutID">
            <summary>
              Looks up a localized string similar to Found a boundary source without an ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CannotMixStormRunoff">
            <summary>
              Looks up a localized string similar to Cannot mix items with Load Type &apos;Storm Runoff&apos; with other Load Type items. Boundary {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CannotMixStormRunoffVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CannotReadCatchmentArea">
            <summary>
              Looks up a localized string similar to Cannot read the area of catchment {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CannotReadCatchmentAreaVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CannotUseBothRRModelAndRRCDResults">
            <summary>
              Looks up a localized string similar to Cannot use both rainfall runoff models and catchment discharge results at the same time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CannotUseHDDemoLicense">
            <summary>
              Looks up a localized string similar to Cannot run in DEMO mode since the number of reaches is {0}. The DEMO limit is 10..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CannotUseHDDemoLicenseVD">
            <summary>
              Looks up a localized string similar to Number of reaches.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CannotUseRRDemoLicense">
            <summary>
              Looks up a localized string similar to Cannot run in DEMO mode since the number of rainfall runoff catchments is {0}. The DEMO limit is 5..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CannotUseRRDemoLicenseVD">
            <summary>
              Looks up a localized string similar to Number of RR catchments.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CatchADBndNotSupp">
            <summary>
              Looks up a localized string similar to Catchment based AD type boundary item not supported (sediments/water blend/water age)..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CatchBndDiffLoadType">
            <summary>
              Looks up a localized string similar to Catchment source boundary &apos;{0}&apos; has items with different load types (value/per area/per person). All items in one boundary must be of the same type..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CatchBndDiffLoadTypeVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CatchmentConnectionTypeNotDefined">
            <summary>
              Looks up a localized string similar to Catchment connection type not defined for catchment connection {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CatchmentConnectionTypeNotDefinedVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ComponentTypeNotSupported">
            <summary>
              Looks up a localized string similar to Advection Dispersion component type number {0} is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ComponentTypeNotSupportedVD">
            <summary>
              Looks up a localized string similar to Component type number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ConditionFuncActiveNotFound">
            <summary>
              Looks up a localized string similar to Condition {1} has a &quot;Function Active&quot; component referring to an action with function id {0}. No controllable device utilizes this action, hence it cannot be used in a control condition. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ConditionFuncActiveNotUnique">
            <summary>
              Looks up a localized string similar to Condition {1} has a &quot;Function Active&quot; component referring to an action with function id {0}. More than one controllable device utilize this action, hence it cannot be used in a control condition..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ConditionFuncActiveNotUniqueHint">
            <summary>
              Looks up a localized string similar to Create and use one action per controllable device..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ConditionOperatorUndefined">
            <summary>
              Looks up a localized string similar to Condition {0} component number {1} has an undefined threshold operator/value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ConnectionTypeNoDefined">
            <summary>
              Looks up a localized string similar to Connection type not defined for catchment connection from catchment {0} to node {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ConnectionTypeNoDefinedVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CouldNotFindBoundaryItem">
            <summary>
              Looks up a localized string similar to Could not find boundary item {0} of type {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CouldNotFindBoundaryItemVD">
            <summary>
              Looks up a localized string similar to Boundary item; Boundary item.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CouldNotFindGDBDirectory">
            <summary>
              Looks up a localized string similar to Could not find gdb directory {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CouldNotFindGDBDirectoryVD">
            <summary>
              Looks up a localized string similar to Directory name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CouldNotFindMDBFile">
            <summary>
              Looks up a localized string similar to Could not find mdb file {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CouldNotFindMDBFileDV">
            <summary>
              Looks up a localized string similar to File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CouldNotFindValveEndNode">
            <summary>
              Looks up a localized string similar to Could not find end node with ID {0} in valve {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CouldNotFindValveEndNodeVD">
            <summary>
              Looks up a localized string similar to Node ID; Valve ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CouldNotFindValveStartNode">
            <summary>
              Looks up a localized string similar to Could not find start node with id {0} in valve {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CouldNotFindValveStartNodeVD">
            <summary>
              Looks up a localized string similar to Node ID; Valve ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CouldNotFindXS">
            <summary>
              Looks up a localized string similar to Could not find a cross section in reach with ID {0} and topo-ID {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CouldNotFindXSVD">
            <summary>
              Looks up a localized string similar to Reach ID; Topo ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CouldNotReachXSForLink">
            <summary>
              Looks up a localized string similar to Could not read cross section data for reach {0}. Error encountered while adding cross section: {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CouldNotReachXSForLinkVD">
            <summary>
              Looks up a localized string similar to Reach ID; Error message.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CRSHWNonIncreasingH">
            <summary>
              Looks up a localized string similar to CRS of type H-W has H values that are not increasing, CRS ID: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CRSHWNonIncreasingHVD">
            <summary>
              Looks up a localized string similar to CRS ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CRSHWToFewPoints">
            <summary>
              Looks up a localized string similar to CRS of type H-W has too few points defined, CRS ID: {0}. At least two points are required..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_CRSHWToFewPointsVD">
            <summary>
              Looks up a localized string similar to CRS ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_DailyPatternDataWithoutID">
            <summary>
              Looks up a localized string similar to Found periodic daily pattern data (ms_DPPatternD) without pattern ID..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_DailyPatternWithoutID">
            <summary>
              Looks up a localized string similar to Found periodic daily pattern (ms_DPPattern) without MUID..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_DailyPatternWithoutValue">
            <summary>
              Looks up a localized string similar to Periodic daily pattern {0} does not have a value..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_DailyPatternWithoutValueVD">
            <summary>
              Looks up a localized string similar to Daily pattern ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_DischargeSensorNotUnique">
            <summary>
              Looks up a localized string similar to Discharge sensor on a node is not unique. Create a sensor on one of the connecting links. Sensor id: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_DischargeSensorNotUniqueVD">
            <summary>
              Looks up a localized string similar to Sensor ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_DispersionFactorNotSet">
            <summary>
              Looks up a localized string similar to Global dispersion parameters not set in the Advection Dispersion data..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabADCompNotDefined">
            <summary>
              Looks up a localized string similar to ECO Lab state variable ID &apos;{0}&apos; is not associated with any AD Component..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabADCompNotDefinedVD">
            <summary>
              Looks up a localized string similar to MU ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabADCompNotFound">
            <summary>
              Looks up a localized string similar to ECO Lab state variable ID &apos;{0}&apos; is associated with AD component &apos;{1}&apos;, which cannot be found.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabADCompNotFoundVD">
            <summary>
              Looks up a localized string similar to MU ID; AD Component ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabCompIDNotFound">
            <summary>
              Looks up a localized string similar to ECO Lab component Id &apos;{0}&apos; as defined template id &apos;{1}&apos;, which cannot be found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabCompIDNotFoundVD">
            <summary>
              Looks up a localized string similar to MU ID; Template ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabConstNotFound">
            <summary>
              Looks up a localized string similar to ECO Lab constant &apos;{1}&apos; ({0}) not found in MIKE URBAN setup.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabConstNotFoundVD">
            <summary>
              Looks up a localized string similar to ID; Symbol.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabConstUnknown">
            <summary>
              Looks up a localized string similar to Local ECO Lab constant value &apos;{0}&apos; is referring to an unknown ECO constant &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabConstUnknownVD">
            <summary>
              Looks up a localized string similar to MU ID; Constant ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabFileNotFound">
            <summary>
              Looks up a localized string similar to ECO Lab template &apos;{0}&apos; file could not be found &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabFileNotFoundVD">
            <summary>
              Looks up a localized string similar to EL ID; File path.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabForcingNotFound">
            <summary>
              Looks up a localized string similar to ECO Lab Forcing &apos;{1}&apos; ({0}) not found in MIKE URBAN setup..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabForcingNotFoundVD">
            <summary>
              Looks up a localized string similar to ID; Symbol.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabIntMethodInvalid">
            <summary>
              Looks up a localized string similar to Integration Method integer value is invalid.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabMultipleTemp">
            <summary>
              Looks up a localized string similar to More than one ECO Lab template is defined as having connection type &apos;All&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabTemp">
            <summary>
              Looks up a localized string similar to Error reading ECO Lab Template &apos;{0}&apos; file &apos;{1}&apos;. ({2})..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabTempNotDefined">
            <summary>
              Looks up a localized string similar to ECO Lab forcing/constant &apos;{0}&apos; has no ECO Lab template defined..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabTempNotDefinedVD">
            <summary>
              Looks up a localized string similar to MU ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabTempUnknown">
            <summary>
              Looks up a localized string similar to ECO Lab forcing/constant &apos;{0}&apos; refers to an unknown ECO Lab template ID &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabTempUnknownVD">
            <summary>
              Looks up a localized string similar to MU ID; EL ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ECOLabTempVD">
            <summary>
              Looks up a localized string similar to ID: File path; Error message.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_EnableToOpenESRIWorkspace">
            <summary>
              Looks up a localized string similar to Unable to open ESRI workspace from file..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ESRILicenseError">
            <summary>
              Looks up a localized string similar to ESRI License error: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ESRILicenseErrorVD">
            <summary>
              Looks up a localized string similar to ESRI License error.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ESRILicenseNotAvailable">
            <summary>
              Looks up a localized string similar to ESRI license is not available..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_FunctionNotFound">
            <summary>
              Looks up a localized string similar to Function with id {0} not found in database..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_FunctionNotFoundVD">
            <summary>
              Looks up a localized string similar to Function ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_GeoCompNotSupp">
            <summary>
              Looks up a localized string similar to Geo coded based component loads are not supported, Boundary ID: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_GeoCompNotSuppVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_GlobalCrossSectionAlreadyDefined">
            <summary>
              Looks up a localized string similar to A global cross section for reach {0} is already defined. The cross section for reach {1} cannot be created. Note that reach IDs are case insensitive in MIKE1D..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_GlobalCrossSectionAlreadyDefinedVD">
            <summary>
              Looks up a localized string similar to Cross section ID; Cross section ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_HDResultFileExists">
            <summary>
              Looks up a localized string similar to HD result file {0} already exists..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_HDResultFileExistsHint">
            <summary>
              Looks up a localized string similar to Change file name or set flag to allow file to be overwritten..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_HDResultFileExistsVD">
            <summary>
              Looks up a localized string similar to HD result file name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_InternalQHWeir">
            <summary>
              Looks up a localized string similar to Structure {0} is a QH weir that is internal to the network. It connects nodes {1} and {2}. QH weirs can only be used et the edges of the network..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_InternalQHWeirVD">
            <summary>
              Looks up a localized string similar to Weir ID; Start node ID; End node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_InvalidTAMethodNumber">
            <summary>
              Looks up a localized string similar to In catchment {0}, the Time Area catchment method number is invalid. The method number is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_InvalidTAMethodNumberVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Method number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ItemNameNotDefined">
            <summary>
              Looks up a localized string similar to Item name not defined for boundary item {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ItemNameNotDefinedVD">
            <summary>
              Looks up a localized string similar to Boundary item.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ItemTypeNotDefined">
            <summary>
              Looks up a localized string similar to Data type for time series {0} is not defined for boundary item {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ItemTypeNotDefinedVD">
            <summary>
              Looks up a localized string similar to Boundary item.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_JobListGenerationNotSupported">
            <summary>
              Looks up a localized string similar to Job list generation is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_LCDoesNotExist">
            <summary>
              Looks up a localized string similar to Logical condition {0} does not exists in device {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_LCDoesNotExistVD">
            <summary>
              Looks up a localized string similar to Logical codition ID; Device ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_LicenseCapacityExceededRRMU">
            <summary>
              Looks up a localized string similar to The number of catchments in the setup is {0}. This is larger than {1} which is the number of catchments supported by the license..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_LicenseCapacityExceededRRMUVD">
            <summary>
              Looks up a localized string similar to Number of catchments; License maximum.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_LoadCategoryNotFound">
            <summary>
              Looks up a localized string similar to Could not find Location Load category with number {0} for boundary {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_LoadCategoryNotFoundVD">
            <summary>
              Looks up a localized string similar to Category number; Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ManholeDiameterZero">
            <summary>
              Looks up a localized string similar to The diameter of manhole {0} is zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ManholeDiameterZeroVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MaterialNotFound">
            <summary>
              Looks up a localized string similar to In reach {0}, the material with ID {1} could not be found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MaterialNotFoundVD">
            <summary>
              Looks up a localized string similar to Reach ID; Material ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MissingMusFile">
            <summary>
              Looks up a localized string similar to MU selection file is missing: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MissingMusFileVD">
            <summary>
              Looks up a localized string similar to File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MissingRunoffBParameters">
            <summary>
              Looks up a localized string similar to Kinematic Wave catchment {0} does not have parameters defined (missing entry in the msm_HModB table)..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MissingRunoffBParametersHint">
            <summary>
              Looks up a localized string similar to In MIKE URBAN, default parameters can be generated for all catchments by going to the Catchments dialog and pressing &apos;Advanced…&apos;, then &apos;Generate model records&apos;, and then &apos;Model B&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MissingRunoffBParametersVD">
            <summary>
              Looks up a localized string similar to CatchmentID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MissingRunoffCParameters">
            <summary>
              Looks up a localized string similar to Linear Reservoir catchment {0} does not have parameters defined (missing entry in the msm_HModC table)..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MissingRunoffCParametersHint">
            <summary>
              Looks up a localized string similar to In MIKE URBAN, default parameters can be generated for all catchments by going to the Catchments dialog and pressing &apos;Advanced…&apos;, then &apos;Generate model records&apos;, and then &apos;Model C&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MissingRunoffCParametersVD">
            <summary>
              Looks up a localized string similar to CatchmentID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MissingTAParameters">
            <summary>
              Looks up a localized string similar to Time Area catchment {0} does not have parameters defined (missing entry in the msm_HModA table)..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MissingTAParametersHint">
            <summary>
              Looks up a localized string similar to In MIKE URBAN, default parameters can be generated for all catchments by going to the Catchments dialog and pressing &apos;Advanced…&apos;, then &apos;Generate model records&apos;, and then &apos;Model A&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MissingTAParametersVD">
            <summary>
              Looks up a localized string similar to CatchmentID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MUDMFilenameEmpty">
            <summary>
              Looks up a localized string similar to Filename {1} from {2} is null or empty in {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MUDMFilenameNotValid">
            <summary>
              Looks up a localized string similar to Filename {1} from {2} is not valid in {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MUDMFilenameNotValidVD">
            <summary>
              Looks up a localized string similar to Info.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MUDMValueNotDefined">
            <summary>
              Looks up a localized string similar to Value is not defined for parameter {1} in {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_MUDMValueNotDefinedVD">
            <summary>
              Looks up a localized string similar to Description; Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoCapacityCurve">
            <summary>
              Looks up a localized string similar to No capacity curve specified for pump {0}. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoCapacityCurveData">
            <summary>
              Looks up a localized string similar to No capacity curve data found for pump {0}. Looked for data with ID {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoCapacityCurveDataVD">
            <summary>
              Looks up a localized string similar to Pump ID; Data ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoCapacityCurveVD">
            <summary>
              Looks up a localized string similar to Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoConstantFlowValue">
            <summary>
              Looks up a localized string similar to Missing flow value for pump {1} which is of constant flow type..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoConstantFlowValueVD">
            <summary>
              Looks up a localized string similar to Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoDiurnalPattern">
            <summary>
              Looks up a localized string similar to Diurnal pattern with ID {0} for cyclic profile {1} does not exist or does not contain any data values.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoDiurnalPatternVD">
            <summary>
              Looks up a localized string similar to Diurnal pattern ID; Cyclic profile ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoDownstreamNodeIDForWeir">
            <summary>
              Looks up a localized string similar to In weir {0}: Downstream node {1} not found.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoDownstreamNodeIDForWeirVD">
            <summary>
              Looks up a localized string similar to Weir ID; Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoECOLabComponent">
            <summary>
              Looks up a localized string similar to There is no ECOLab state variable for the AD component {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoECOLabTemplate">
            <summary>
              Looks up a localized string similar to ECO Lab template file not defined for template id &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoGeometryForBasin">
            <summary>
              Looks up a localized string similar to No geometry is defined for basin {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoGeometryForBasinVD">
            <summary>
              Looks up a localized string similar to Basin ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoHeadlossDefined">
            <summary>
              Looks up a localized string similar to No headloss defined for sewer node {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoHeadlossDefinedDV">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoHotStartFile">
            <summary>
              Looks up a localized string similar to Hot start is enabled, but no hot start file name is supplied..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoLogicalConditions">
            <summary>
              Looks up a localized string similar to No logical conditions defined for device {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoLogicalConditionsVD">
            <summary>
              Looks up a localized string similar to Device ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoMinCapacityCurve">
            <summary>
              Looks up a localized string similar to No minimum pump capacity curve specified for variable speed pump {0}. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoMinCapacityCurveVD">
            <summary>
              Looks up a localized string similar to Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoProjectInDB">
            <summary>
              Looks up a localized string similar to No project in database..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoQHTableForWeir">
            <summary>
              Looks up a localized string similar to Unable to find QH table {0} for weir {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoQHTableForWeirVD">
            <summary>
              Looks up a localized string similar to QH table ID; Weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoSewerNodeUpstreamOfExternalStructure">
            <summary>
              Looks up a localized string similar to External structure reach {0} does not have a sewer node upstream. External structure reach can only be attached to nodes with a volume (manholes)..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoSewerNodeUpstreamOfExternalStructureVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NotDischargeBoundaryType">
            <summary>
              Looks up a localized string similar to Boundary {0} is not a discharge boundary.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NotDischargeBoundaryTypeVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoUpstreamNodeIDForWeir">
            <summary>
              Looks up a localized string similar to In weir {0}: Upstream node {1} not found.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoUpstreamNodeIDForWeirVD">
            <summary>
              Looks up a localized string similar to Weir ID; Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoUpstreamNodeInPump">
            <summary>
              Looks up a localized string similar to Upstream node {0} not found for pump {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoUpstreamNodeInPumpVD">
            <summary>
              Looks up a localized string similar to Node ID; Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoXSDefinedOnLink">
            <summary>
              Looks up a localized string similar to No cross sections defined on reach {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_NoXSDefinedOnLinkVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OneDayProfileDataDuplicateEntry">
            <summary>
              Looks up a localized string similar to Diurnal pattern with ID {0} has multiple intervals that start at {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OneDayProfileDataDuplicateEntryVD">
            <summary>
              Looks up a localized string similar to Pattern ID; Interval start time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OnlyDynamicWaveSupported">
            <summary>
              Looks up a localized string similar to Only dynamic wave model type supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OnlyInflowTypeForSource">
            <summary>
              Looks up a localized string similar to Can only handle location loads of inflow type for source: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OnlyInflowTypeForSourceVD">
            <summary>
              Looks up a localized string similar to Boundary source ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OnlyOneTargetPerSource">
            <summary>
              Looks up a localized string similar to Can not handle two different LocationTargetTypes for one source: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OnlyOneTargetPerSourceVD">
            <summary>
              Looks up a localized string similar to Boundary source ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OnlyXZClosedInOrifice">
            <summary>
              Looks up a localized string similar to Only XZ Closed cross sections can be used to define orifice geometry. Cross section {0} is not of type XZ Closed..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OnlyXZClosedInOrificeVD">
            <summary>
              Looks up a localized string similar to Cross section ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OpenSourceBoundaryOnNonOutlet">
            <summary>
              Looks up a localized string similar to Water level boundary {0} is attached to node {1} which is not an outlet.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OpenSourceBoundaryOnNonOutletVD">
            <summary>
              Looks up a localized string similar to Boundary ID; Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OpenXSReversed">
            <summary>
              Looks up a localized string similar to Open XZ cross section {0} is reversed (the first X-value is {1} and the last X-value is {2}). In open XZ cross sections, the first value must be the left bank and the last value must be the right bank..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OpenXSReversedVD">
            <summary>
              Looks up a localized string similar to Cross section ID; First X-value; Last X-value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OptionNotSupported">
            <summary>
              Looks up a localized string similar to Values in msm_Option table are not supported. Please delete all values in table..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OrificeGateButNonGateControl">
            <summary>
              Looks up a localized string similar to Orifice {0} with gate is controlled by function {1} which is not a gate-control..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OrificeGateButNonGateControlVD">
            <summary>
              Looks up a localized string similar to Orifice ID; Function ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OrificeNoUpstreamNodeID">
            <summary>
              Looks up a localized string similar to Could not find node {0} upstream of orifice {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OrificeNoUpstreamNodeIDVD">
            <summary>
              Looks up a localized string similar to Node ID; Orifice ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OrificeWeirButNonWeirControl">
            <summary>
              Looks up a localized string similar to Orifice {0} with weir is controlled by function {1} which is not a weir-control..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_OrificeWeirButNonWeirControlVD">
            <summary>
              Looks up a localized string similar to Orifice ID; Function ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_PeriodicPatternNotFound">
            <summary>
              Looks up a localized string similar to Could not find periodic pattern with ID {0} for BoundaryItem {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_PeriodicPatternNotFoundVD">
            <summary>
              Looks up a localized string similar to Periodic pattern ID; Boundary item ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_PointSourceMissingLocation">
            <summary>
              Looks up a localized string similar to Warning: Boundary condition {0} has no location defined, either LinkID or Distance is undefined).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_PointSourceMissingLocationVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_PointSourceMissingNodeID">
            <summary>
              Looks up a localized string similar to Warning: Boundary condition {0} has no node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_PointSourceMissingNodeIDVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_PorosityOutOfRange">
            <summary>
              Looks up a localized string similar to Porosity for basin &apos;{0}&apos; is out of range. Must be in range ]0;1], but is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_PorosityOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Basin ID; Porosity.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ProjNotFound">
            <summary>
              Looks up a localized string similar to Could not find user specified project with Simulation ID: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ProjNotFoundVD">
            <summary>
              Looks up a localized string similar to Simulation ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_PumpButNonPumpControl">
            <summary>
              Looks up a localized string similar to Pump {0} is controlled by function {1} which is not a pump-control..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_PumpButNonPumpControlVD">
            <summary>
              Looks up a localized string similar to Pump ID; Function ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_PumpNoDownstreamNodeID">
            <summary>
              Looks up a localized string similar to Could not find node {0} downstream of pump {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_PumpNoDownstreamNodeIDVD">
            <summary>
              Looks up a localized string similar to Node ID; Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_PumpNoUpstreamNodeID">
            <summary>
              Looks up a localized string similar to Could not find node {0} upstream of pump {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_PumpNoUpstreamNodeIDVD">
            <summary>
              Looks up a localized string similar to Node ID; Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_PumpWithoutId">
            <summary>
              Looks up a localized string similar to Found pump without ID..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_QdHPumpNotExternal">
            <summary>
              Looks up a localized string similar to Q-deltaH pump {0} cannot be assigned as external pump..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_QdHPumpNotExternalVD">
            <summary>
              Looks up a localized string similar to Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_QHRelationNotSpecified">
            <summary>
              Looks up a localized string similar to Q-H relation for node {0} not specified.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_QHRelationNotSpecifiedVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_QHWeirNotInternalVD">
            <summary>
              Looks up a localized string similar to Weir ID; Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_RDIParNotFound">
            <summary>
              Looks up a localized string similar to RDI parameters not found for catchment {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_RDIParNotFoundVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_RDIParSetNotFound">
            <summary>
              Looks up a localized string similar to RDI Parameter set with id {1} for catchment {0} could not be found. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_RDIParSetNotFoundVD">
            <summary>
              Looks up a localized string similar to Catchment ID; RDI Parameter Set ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ReachWithoutID">
            <summary>
              Looks up a localized string similar to Found a reach without and ID..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_RRCDResultFilenameMissing">
            <summary>
              Looks up a localized string similar to Catchment discharge input filename is missing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_RRResultFileExists">
            <summary>
              Looks up a localized string similar to Rainfall runoff result file {0} already exists..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_RRResultFileExistsHint">
            <summary>
              Looks up a localized string similar to Change file name or set flag to allow file to be overwritten..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_RRResultFileExistsVD">
            <summary>
              Looks up a localized string similar to Rainfall runoff result file name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_RRResultFileNotFound">
            <summary>
              Looks up a localized string similar to Rainfall Runoff file {0} in boundary item {1} does not exist..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_RRResultFileNotFoundVD">
            <summary>
              Looks up a localized string similar to File name; Boundary item ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_RTCNotSupported">
            <summary>
              Looks up a localized string similar to Real Time Control is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_RunoffFollowedByNetworkCalcNotSupported">
            <summary>
              Looks up a localized string similar to Running rainfall runoff calculations and then HD simulation is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_SensorNotFound">
            <summary>
              Looks up a localized string similar to Sensor with id {0} not found in database..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_SensorNotFoundVD">
            <summary>
              Looks up a localized string similar to Sensor ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_SensorNotUnique">
            <summary>
              Looks up a localized string similar to Mass flux sensor on a node is not unique. Create a sensor on one of the connecting links. Sensor id: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_SensorNotUniqueVD">
            <summary>
              Looks up a localized string similar to Sensor ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_SensorOnStructureNotUnique">
            <summary>
              Looks up a localized string similar to Concentration sensor on a structure is not unique. Create a sensor on the Location node (upstream) or the To node (downstream). Sensor id: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_SensorOnStructureNotUniqueVD">
            <summary>
              Looks up a localized string similar to Sensor ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ShortReachWithMultipleDigipoints">
            <summary>
              Looks up a localized string similar to The length of reach {0} is {1} which is longer than the minimum length of {2}. However, the reach has more than two digipoints and can therefore not be extended..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ShortReachWithMultipleDigipointsVD">
            <summary>
              Looks up a localized string similar to Reach ID; Length; Minimum length.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_SRQNotSupported">
            <summary>
              Looks up a localized string similar to Surface Runoff Quality is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_STNotSupported">
            <summary>
              Looks up a localized string similar to Sediment Transport is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_StorageNodesNotSupported">
            <summary>
              Looks up a localized string similar to Node {0} is a storage node. Storage nodes are not supported yet..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_StorageNodesNotSupportedVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_StormwaterInletHasNoDQRelation">
            <summary>
              Looks up a localized string similar to Stormwater inlet {0} is of the SAG type but does not have any depth-discharge relation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_StormwaterInletHasNoDQRelationVD">
            <summary>
              Looks up a localized string similar to Stormwater inlet ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_StormwaterInletHasNoQQRelations">
            <summary>
              Looks up a localized string similar to Stormwater inlet {0} is of the OnGrade type but does not have any discharge-discharge relations..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_StormwaterInletHasNoQQRelationsVD">
            <summary>
              Looks up a localized string similar to Stormwater inlet ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_StormwaterInletNoDownstreamNodeID">
            <summary>
              Looks up a localized string similar to Could not find node {0} downstream of stormwater inlet {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_StormwaterInletNoDownstreamNodeIDVD">
            <summary>
              Looks up a localized string similar to Node ID; Stormwater inlet ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_StormwaterInletNoUpstreamNodeID">
            <summary>
              Looks up a localized string similar to Could not find node {0} upstream of stormwater inlet {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_StormwaterInletNoUpstreamNodeIDVD">
            <summary>
              Looks up a localized string similar to Node ID; Stormwater inlet ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_StormwaterInletWithoutId">
            <summary>
              Looks up a localized string similar to Found stormwater inlet without ID..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_StructureControlNotSupported">
            <summary>
              Looks up a localized string similar to Structure {0} uses real time control. Real time control of structures is not supported. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_StructureControlNotSupportedVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_SurfaceAreaOfBasinMustBePositive">
            <summary>
              Looks up a localized string similar to Surface area of basin must be larger than zero. Geometry ID {0} has at least one surface area that is zero or negative..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_SurfaceAreaOfBasinMustBePositiveVD">
            <summary>
              Looks up a localized string similar to Geometry ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_SurRunCatchNotFound">
            <summary>
              Looks up a localized string similar to Surface Runoff Pollutant on catchment &apos;{0}&apos;, component &apos;{1}&apos;: Catchment could not be found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_SurRunCatchNotFoundVD">
            <summary>
              Looks up a localized string similar to Catchment ID; SWQ Component.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UHMModelCurveNumberNotIntegral">
            <summary>
              Looks up a localized string similar to In UHM catchment {0}, the curve number ({1}) must be set to an integer value..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UHMModelCurveNumberNotIntegralVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Curve number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnableToFindMouseHDSection">
            <summary>
              Looks up a localized string similar to Unable to find MouseHD section in ini file. Ignored ini file..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnableToFindMouseRunoffSection">
            <summary>
              Looks up a localized string similar to Unable to find MouseRunoff section in ini file. Ignored ini file..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnableToFindRRType">
            <summary>
              Looks up a localized string similar to Unable to find rainfall runoff type of active project because there is no active project..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnableToFindTimeStepControlSection">
            <summary>
              Looks up a localized string similar to Unable to find TimeStepControl section in the dhiapp.ini file..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnableToSeResistanceForReach">
            <summary>
              Looks up a localized string similar to Unable to set resistance for reach {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnableToSeResistanceForReachVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnknownDeviceType">
            <summary>
              Looks up a localized string similar to Device {0} has unknown device type {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnknownDeviceTypeVD">
            <summary>
              Looks up a localized string similar to Device ID; Device type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnknownExtension">
            <summary>
              Looks up a localized string similar to File {0} has unknown extension..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnknownExtensionVD">
            <summary>
              Looks up a localized string similar to File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnknownFrictionType">
            <summary>
              Looks up a localized string similar to Unknown friction type {0} on reach {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnknownFrictionTypeVD">
            <summary>
              Looks up a localized string similar to Friction type; Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnknownInfiltrationType">
            <summary>
              Looks up a localized string similar to Unknown infiltration type on soakaway: {0} .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnknownInfiltrationTypeVD">
            <summary>
              Looks up a localized string similar to Infiltration type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnknownLicenseError">
            <summary>
              Looks up a localized string similar to Unknown ESRI License error..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnknownRRExtensionInBndItem">
            <summary>
              Looks up a localized string similar to Rainfall Runoff input file {0} has unknown extension. Extensions .res1d and .res11 are supported. The file is included in boundary item {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnknownRRExtensionInBndItemVD">
            <summary>
              Looks up a localized string similar to File name; Bondary item ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnknownRRModelNumber">
            <summary>
              Looks up a localized string similar to Unknown rainfall runoff model number {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnknownRRModelNumberVD">
            <summary>
              Looks up a localized string similar to Model number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnknownRRModelType">
            <summary>
              Looks up a localized string similar to Rainfall Runoff model type {0} is not implemented..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UnknownRRModelTypeVD">
            <summary>
              Looks up a localized string similar to Model type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_UserSpecifiedResultsNotSupported">
            <summary>
              Looks up a localized string similar to User specified results is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ValveButNonValveControl">
            <summary>
              Looks up a localized string similar to Valve {0} is controlled by function {1} which is not a valve-control..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ValveButNonValveControlVD">
            <summary>
              Looks up a localized string similar to Valve ID; Function ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ValveWithoutId">
            <summary>
              Looks up a localized string similar to Found a valve with no Id.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ValveWithoutRatingCurve">
            <summary>
              Looks up a localized string similar to Valve {0} does not have rating curve data.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_ValveWithoutRatingCurveVD">
            <summary>
              Looks up a localized string similar to Valve ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_WaterLevelBndWithLoadItem">
            <summary>
              Looks up a localized string similar to Open source water level boundary {0} is contains boundary item {1} which is an AD load component. Water level boundaries can only contain AD concentration components..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_WaterLevelBndWithLoadItemVD">
            <summary>
              Looks up a localized string similar to Buondary ID; Boundary item ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_WeirButNonWeirControl">
            <summary>
              Looks up a localized string similar to Weir {0} is controlled by function {1} which is not a weir-control..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_WeirButNonWeirControlVD">
            <summary>
              Looks up a localized string similar to Weir ID; Function ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_WeirCrestTypeNotSupported">
            <summary>
              Looks up a localized string similar to Weirs with weir crest type number {0} are not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_WeirCrestTypeNotSupportedVD">
            <summary>
              Looks up a localized string similar to Weir crest type number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_WeirHasNoRatingCurve">
            <summary>
              Looks up a localized string similar to QH weir {0} does not have rating curve data..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_WeirHasNoRatingCurveVD">
            <summary>
              Looks up a localized string similar to Weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_WeirLossCoefficientNotFoundInNode">
            <summary>
              Looks up a localized string similar to Weir {0} has no discharge coefficient and headloss coefficient not found in data for node {1} upstream of weir..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_WeirLossCoefficientNotFoundInNodeVD">
            <summary>
              Looks up a localized string similar to Weir ID; Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_WeirTypeNotSupported">
            <summary>
              Looks up a localized string similar to Weir {0} is of type {1} which is not supported. Weir was ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_WeirTypeNotSupportedVD">
            <summary>
              Looks up a localized string similar to Weir ID; Weir type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_WeirWithoutID">
            <summary>
              Looks up a localized string similar to Found a weir without ID. The weir was ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_WidthOfHWXSMustBePositive">
            <summary>
              Looks up a localized string similar to The width of HW cross section {0} is negative, which is not allowed..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_WidthOfHWXSMustBePositiveVD">
            <summary>
              Looks up a localized string similar to Cross section ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_WQNotSupported">
            <summary>
              Looks up a localized string similar to Water Quality calculations are not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_XSDuplicateID">
            <summary>
              Looks up a localized string similar to CRS ID {0} is duplicated.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_XSDuplicateIDVD">
            <summary>
              Looks up a localized string similar to CRS ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_XSMinLEXSMax">
            <summary>
              Looks up a localized string similar to Bottom level ({0}) of cross section is larger or equal to top level ({1}) for cross section {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_XSMinLEXSMaxVD">
            <summary>
              Looks up a localized string similar to Bottom level; Top level; Cross section ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_XSTypeNotImplemented">
            <summary>
              Looks up a localized string similar to Cross section type {0} is not implemented..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_XSTypeNotImplementedVD">
            <summary>
              Looks up a localized string similar to Cross section type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_XSWithoutID">
            <summary>
              Looks up a localized string similar to Found a cross section without an ID..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_XSWithoutMaterialID">
            <summary>
              Looks up a localized string similar to Reach {0} does not have a material ID..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_XSWithoutMaterialIDVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_XSZeroDiameter">
            <summary>
              Looks up a localized string similar to Reach {0} has zero diameter..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_XSZeroDiameterVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_XSZeroHeight">
            <summary>
              Looks up a localized string similar to Rectangular reach {0} has zero height..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_XSZeroHeightVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_XSZeroWidth">
            <summary>
              Looks up a localized string similar to Rectangular reach {0} has zero width..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERR_XSZeroWidthVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERROR_EndNodeNotFound">
            <summary>
              Looks up a localized string similar to Reach {0} has end node {1} which doesn&apos;t exist.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERROR_EndNodeNotFoundVD">
            <summary>
              Looks up a localized string similar to Reach ID; Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERROR_StartNodeNotFound">
            <summary>
              Looks up a localized string similar to Reach {0} has start node {1} which doesn&apos;t exist.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_ERROR_StartNodeNotFoundVD">
            <summary>
              Looks up a localized string similar to Reach ID; Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_INF_ScenarioId">
            <summary>
              Looks up a localized string similar to Scenario ID is: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_INF_SimulationId">
            <summary>
              Looks up a localized string similar to Loading simulation ID: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_LSEFileDoesNotExist">
            <summary>
              Looks up a localized string similar to The pipe design LSE file {0} does not exist..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_LSEFileDoesNotExistVD">
            <summary>
              Looks up a localized string similar to Pipe design LSE filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_LSEFileExistsButCannotBeRead">
            <summary>
              Looks up a localized string similar to The pipe design LSE file {0} exists but there was an error while reading it..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_LSEFileExistsButCannotBeReadVD">
            <summary>
              Looks up a localized string similar to Pipe design LSE filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_PipeDesignUSUnitsNotSupported">
            <summary>
              Looks up a localized string similar to Pipe design input file {0} uses US units which is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_PipeDesignUSUnitsNotSupportedVD">
            <summary>
              Looks up a localized string similar to Pipe design ADP filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_UnableToReadADPFile">
            <summary>
              Looks up a localized string similar to The pipe design ADP file {0} does not exist..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_UnableToReadADPFileVD">
            <summary>
              Looks up a localized string similar to Pipe design ADP filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_ADHotWithoutHDHot">
            <summary>
              Looks up a localized string similar to AD hotstart enabled, while HD hotstart was not. AD hotstart ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_ADPNodeDoesNotExist">
            <summary>
              Looks up a localized string similar to Initial water level is not applied. Node {0} specified in ADP file {1} does not exist in the network..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_ADPNodeDoesNotExistVD">
            <summary>
              Looks up a localized string similar to Node ID; File path.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_BoundaryDeleted">
            <summary>
              Looks up a localized string similar to Boundary {0} does not contain any locations. The boundary was removed..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_BoundaryDeletedVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_BoundaryHasNoItems">
            <summary>
              Looks up a localized string similar to Boundary source {0} has no items. Boundary ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_BoundaryHasNoItemsVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_BoundaryLocationDeleted">
            <summary>
              Looks up a localized string similar to Boundary location {0} in boundary {1} does not exist. The location was removed from the boundary..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_BoundaryLocationDeletedVD">
            <summary>
              Looks up a localized string similar to Boundary location; Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_CannotExtractFromDB">
            <summary>
              Looks up a localized string similar to Cannot extract spatial reference/projection information from database..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_CatchmentLoadNoNotSupported">
            <summary>
              Looks up a localized string similar to The network load boundary {0} is referring to a catchment load. Catchment loads are not supported in the network simulation and will be included in the runoff output. This boundary is ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_CatchmentLoadNoNotSupportedVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_CatchmentNotActive">
            <summary>
              Looks up a localized string similar to Rainfall Runoff catchment {0} is not active for simulation type {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_CatchmentNotActiveVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Catchment type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_ChangingCRFtoRes1d">
            <summary>
              Looks up a localized string similar to The name of the rainfall runoff input result file was changed from {0} to {1}. CRF files are not supported by MIKE1D..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_ChangingCRFtoRes1dHint">
            <summary>
              Looks up a localized string similar to If the specified rainfall runoff result file does not exists, then run the rainfall runoff calculation with MIKE1D..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_ChangingCRFtoRes1dVD">
            <summary>
              Looks up a localized string similar to RR result file name in database; RR result file name used.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_ComponentNotFoundForInitalCondition">
            <summary>
              Looks up a localized string similar to There is an Advection Dispersion local initial condition for AD component {0}. This component does not exist..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_ComponentNotFoundForInitalConditionVD">
            <summary>
              Looks up a localized string similar to AD component ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_CrestLevelNotQHStart">
            <summary>
              Looks up a localized string similar to Crest level not equal to first level in QH table ({0}) for weir {1}. Discharge will be zero below crest level, which is {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_CrestLevelNotQHStartVD">
            <summary>
              Looks up a localized string similar to First QH level; Weir ID; Crest level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_DailyPatternDataWithoutPattern">
            <summary>
              Looks up a localized string similar to There are daily pattern data (ms_DPPatternD) referring to a daily pattern ID that is not defined (in ms_DPPattern): {0}. Those daily pattern data are ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_DuplicateID">
            <summary>
              Looks up a localized string similar to Duplicate id &apos;{0}&apos; in module &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_DuplicateIDVD">
            <summary>
              Looks up a localized string similar to ID; Module.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_HotstartFileTypeChangedToRes1d">
            <summary>
              Looks up a localized string similar to The extension of the hotstart file is PRF. PRF files are not supported. The extension was changed to res1d. The new hotstart file is {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_HotstartFileTypeChangedToRes1dVD">
            <summary>
              Looks up a localized string similar to New hotstart file name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_HotstartTimeNotSpecified">
            <summary>
              Looks up a localized string similar to Hotstart time is not specified. Using simulation start time as hotstart time..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_InvalidDailyPatternValue">
            <summary>
              Looks up a localized string similar to Daily pattern {0} has value {1} at time {2} which is non-positive..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_InvalidDailyPatternValueVD">
            <summary>
              Looks up a localized string similar to Pattern ID; Value; Time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_KmixNegative">
            <summary>
              Looks up a localized string similar to Kmix time constant is zero or negative for boundary &apos;{0}&apos;, Kmix is disabled..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_KmixNegativeVD">
            <summary>
              Looks up a localized string similar to Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_KWSlopeMinimum">
            <summary>
              Looks up a localized string similar to Slope of model B catchment {0} is less than 0.001, setting minimum value of 0.001.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_LeveeEndPointsNotAtSameHeight">
            <summary>
              Looks up a localized string similar to In cross section {0}, the levee end points are not at the same height..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_LeveeEndPointsNotAtSameHeightVD">
            <summary>
              Looks up a localized string similar to Cross section ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_LTSNoRuntimeStopConditions">
            <summary>
              Looks up a localized string similar to Long Term Statistics simulation does not have any runtime stop conditions..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_LTSNoRuntimeStopConditionsVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_MissingDataForPeriodicScheduler">
            <summary>
              Looks up a localized string similar to Could not find any data for PeriodicScheduler with id {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_MissingDataForPeriodicSchedulerVD">
            <summary>
              Looks up a localized string similar to Scheduler ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_MoreThanOneActiveHDProject">
            <summary>
              Looks up a localized string similar to More than one active HD project. Using {0} which is the first active project..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_MoreThanOneActiveHDProjectVD">
            <summary>
              Looks up a localized string similar to Project ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_MoreThanOneActiveProject">
            <summary>
              Looks up a localized string similar to More than one active project. Using rainfall runoff model of active project with ID {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_MoreThanOneActiveProjectVD">
            <summary>
              Looks up a localized string similar to Project ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_MUDMValueNotDefinedSkipped">
            <summary>
              Looks up a localized string similar to Value is not defined for parameter {1} in {0}. Data is ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_NAMInitialRootZoneStorageIsOutOfRange">
            <summary>
              Looks up a localized string similar to The initial relative root zone storage for the catchment {0} is out of range. The initial root zone storage is {1} while the maximim is {2}. The inital root zone storage has been reduced to {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_NAMInitialRootZoneStorageIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_NoActiveProject">
            <summary>
              Looks up a localized string similar to No active project in database. Using first non-active project..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_NoMinCapacityCurve">
            <summary>
              Looks up a localized string similar to Min. capacity curve for the pump {0} is not specified. Zero capacity applied as minimum.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_NoMinCapacityCurveVD">
            <summary>
              Looks up a localized string similar to Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_NoXSAtEnd">
            <summary>
              Looks up a localized string similar to The reach with ID {0} has no cross section at end chainage. The cross section with the highest chainage wil be used for the last section of the reach..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_NoXSAtEndVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_NoXSAtStart">
            <summary>
              Looks up a localized string similar to The reach with ID {0} has no cross section at start chainage. The cross section with the lowest chainage wil be used for the first section of the reach..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_NoXSAtStartVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_OnlyRectangularWeir">
            <summary>
              Looks up a localized string similar to Weir {0} has crest type {1}. This crest type was changed to Rectangular since the two are equivalent..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_OnlyRectangularWeirVD">
            <summary>
              Looks up a localized string similar to Weir ID; Crest type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_PeriodicPatternIdNotDefined">
            <summary>
              Looks up a localized string similar to PeriodicPatternId is not defined for periodic boundary item {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_PeriodicPatternIdNotDefinedVD">
            <summary>
              Looks up a localized string similar to Boundary item ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_PorosityZero">
            <summary>
              Looks up a localized string similar to Porosity for basin &apos;{0}&apos; is zero. Using default value of 1..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_PorosityZeroVD">
            <summary>
              Looks up a localized string similar to Basin ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_PumpQdHRelationNotIncreasing">
            <summary>
              Looks up a localized string similar to Water levels in Q-deltaH relation are not increasing for pump {0}. Data will be sorted, so that water levels are increasing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_PumpQdHRelationNotIncreasingVD">
            <summary>
              Looks up a localized string similar to Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_PumpQHRelationNotIncreasing">
            <summary>
              Looks up a localized string similar to Water levels in Q-H relation are not increasing for pump {0}. Data will be sorted, so that water levels are increasing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_PumpQHRelationNotIncreasingVD">
            <summary>
              Looks up a localized string similar to Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_QHBoundaryWaterLevelNotIncreasing">
            <summary>
              Looks up a localized string similar to Water levels in Q-H boundary {0} are not increasing. Boundary data will be sorted, so that water levels are increasing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_QHBoundaryWaterLevelNotIncreasingVD">
            <summary>
              Looks up a localized string similar to Q-H boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_RRConnectionsButNoData">
            <summary>
              Looks up a localized string similar to There are rainfall runoff connections in the network, but rainfall runoff model is not active and there are no rainfall runoff result data.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_RunningInHDDemoMode">
            <summary>
              Looks up a localized string similar to MIKE URBAN setup has less than 11 reaches. Loading setup in DEMO mode..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_RunningInRRDemoMode">
            <summary>
              Looks up a localized string similar to MIKE URBAN setup has less than 6 rainfall runoff catchments. Loading setup in DEMO mode..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_ShortReach">
            <summary>
              Looks up a localized string similar to The length of reach {0} is only {1}. The minimum reach length is {2}. The length of reach {0} has been set to {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_ShortReachVD">
            <summary>
              Looks up a localized string similar to Reach ID; Old length; New length.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_SoftStartIgnored">
            <summary>
              Looks up a localized string similar to Softstart was ignored on {0} since MIKE URBAN only supports softstart for constant boundary items..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_SoftStartIgnoredVD">
            <summary>
              Looks up a localized string similar to Boundary type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_SqnOverlapInCRS">
            <summary>
              Looks up a localized string similar to Natural cross section {0} has overlapping values at Sqn = {1}. The values used are X = {2} and H/W = {3}. The setup will run, but the result may be incorrect. Please fix the error in the database..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_SqnOverlapInCRSVD">
            <summary>
              Looks up a localized string similar to Cross section ID; Sqn; X value; H/W value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_TimesNotIncreasingInTACurve">
            <summary>
              Looks up a localized string similar to Times in TA-curve {0} are not increasing. Data will be sorted, so that times are increasing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_TimesNotIncreasingInTACurveVD">
            <summary>
              Looks up a localized string similar to Time area curve ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_UnableToFindIniFile">
            <summary>
              Looks up a localized string similar to Unable to find dhiapp.ini. Looked in {0}, {1}, and {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_UnableToFindIniFileVD">
            <summary>
              Looks up a localized string similar to File path; File path.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_UnableToSeUnitProvider">
            <summary>
              Looks up a localized string similar to Unable to initialize unit provider. The reason given by the unit provider was: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_ValveRatingCurveRatingNotIncreasing">
            <summary>
              Looks up a localized string similar to Percent-open values in rating curve {0} are not increasing for valve {1}. Data will be sorted, so that percent values are increasing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_ValveRatingCurveRatingNotIncreasingVD">
            <summary>
              Looks up a localized string similar to Rating curve ID; Valve ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_WaterLevelOfBasinMustBeIncreasing">
            <summary>
              Looks up a localized string similar to Water levels in basin geometry data are not increasing for basin {0}. Geometry data will be sorted, so that water levels are increasing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_WaterLevelOfBasinMustBeIncreasingVD">
            <summary>
              Looks up a localized string similar to Basin ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_WeirQHRelationHNotIncreasing">
            <summary>
              Looks up a localized string similar to Water levels in Q-H relation {0} are not increasing for weir {1}. Data will be sorted, so that water levels are increasing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_WeirQHRelationHNotIncreasingVD">
            <summary>
              Looks up a localized string similar to Q-H relation ID; Weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_XSAtEndInterpolated">
            <summary>
              Looks up a localized string similar to The reach with ID {0} has no cross section at end chainage. An interpolated cross section will be used at the end chainage..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_XSAtEndInterpolatedVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_XSAtStartInterpolated">
            <summary>
              Looks up a localized string similar to The reach with ID {0} has no cross section at start chainage. An interpolated cross section will be used at the start chainage..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.MU_WAR_XSAtStartInterpolatedVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_BasinFlowAreaNegative">
            <summary>
              Looks up a localized string similar to In basin {0}, flow areas are negative..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_BasinFlowAreaNegativeVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_BasinLevelsNotIncreasing">
            <summary>
              Looks up a localized string similar to In basin {0}, levels are not increasing monotonically..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_BasinLevelsNotIncreasingVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_BasinPorosityWrong">
            <summary>
              Looks up a localized string similar to In basin {0}, porosity at level {1} is outside valid range of ]0;1]..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_BasinPorosityWrongVD">
            <summary>
              Looks up a localized string similar to Node ID; Level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_BasinSurfaceAreaIsNotMonotonouslyIncreasing">
            <summary>
              Looks up a localized string similar to Surface area of basin {0} is not monotonically increasing.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_BasinSurfaceAreaIsNotMonotonouslyIncreasingVD">
            <summary>
              Looks up a localized string similar to Node Id.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_BasinSurfAreaWrong">
            <summary>
              Looks up a localized string similar to In basin {0}, surface area at level {1} is zero or negative..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_BasinSurfAreaWrongVD">
            <summary>
              Looks up a localized string similar to Node ID; Level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_BasinXSAreaIsNotMonotonouslyIncreasing">
            <summary>
              Looks up a localized string similar to Cross section area of basin {0} is not monotonically increasing.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_BasinXSAreaIsNotMonotonouslyIncreasingVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_BottomLevelAboveGroundLevel">
            <summary>
              Looks up a localized string similar to Bottomlevel of node {0} is equal to or above ground level. Ground level is {1} and bottom level is {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_BottomLevelAboveGroundLevelVD">
            <summary>
              Looks up a localized string similar to Node ID; Bottom level; Ground level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_CatchConnNodeNotFound">
            <summary>
              Looks up a localized string similar to The connection from catchmen {0} to node {1} is not valid; a node with that Id was not found.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_CatchConnNodeNotFoundVD">
            <summary>
              Looks up a localized string similar to Catchment Id; Node Id.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_CatchConnNodeWithoutVolume">
            <summary>
              Looks up a localized string similar to The connection from catchmen {0} to node {1} is not valid; the node must be a volume node (manhole, basin or similar)..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_CatchConnNodeWithoutVolumeVD">
            <summary>
              Looks up a localized string similar to Catchment Id; Node Id.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_CatchConnReachNotFound">
            <summary>
              Looks up a localized string similar to The connection from catchmen {0} to reach {1} is not valid; no reach/link with that name/Id was not found.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_CatchConnReachNotFoundVD">
            <summary>
              Looks up a localized string similar to Catchment Id; Reach name or link Id.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_DigiNotIncreasing">
            <summary>
              Looks up a localized string similar to Digipoint chainages are not increasing, reach {0}, chainage {1} - {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_DigiNotIncreasingVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage 1; Chainage 2.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_DigipointsMissing">
            <summary>
              Looks up a localized string similar to The reach starting at ({0}{1}) has zero or one digipoint defined. At least two digipoints are required.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_DigipointsMissingVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_DigipointsTooClose">
            <summary>
              Looks up a localized string similar to At reach ({0},{1}), vertex point number {2}, another digipoint is too close..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_DigipointsTooCloseVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_DigiReversDirection">
            <summary>
              Looks up a localized string similar to Digipoint direction is reversed, changing direction almost 180 degrees, at {0} chainage {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_EndNodeNotInNetwork">
            <summary>
              Looks up a localized string similar to End node {0} in reach {1} not found in network.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_EndNodeNotInNetworkVD">
            <summary>
              Looks up a localized string similar to Node ID; Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_LeapingWeirNoOutletReach">
            <summary>
              Looks up a localized string similar to Leaping Weir {0} has no OutletReach defined..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_LeapingWeirNoOutletReachId">
            <summary>
              Looks up a localized string similar to Leaping Weir {0} OutletReachId {1} was not found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_LeapingWeirNoOutletReachIdVD">
            <summary>
              Looks up a localized string similar to Leaping weir ID; Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_LeapingWeirNoOutletReachVD">
            <summary>
              Looks up a localized string similar to Leaping weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_LeapingWeirOutletReachNotConnected">
            <summary>
              Looks up a localized string similar to Leaping Weir {0} OutletReach {1} is not connected to Leaping Weir..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_LeapingWeirOutletReachNotConnectedVD">
            <summary>
              Looks up a localized string similar to Leaping weir ID; Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_LeapingWeirOutletReachTooMany">
            <summary>
              Looks up a localized string similar to Leaping Weir {0} OutletReach {1} has found {2} connections to Leaping Weir. There can be only one connection..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_LeapingWeirOutletReachTooManyVD">
            <summary>
              Looks up a localized string similar to Leaping weir ID; Reach ID; Reach connections.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_LeapingWeirWrongReachCount">
            <summary>
              Looks up a localized string similar to Leaping Weir {0} has {1} reach connections. A leaping weir must have exactly 3 reaches connected..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_LeapingWeirWrongReachCountVD">
            <summary>
              Looks up a localized string similar to Leaping weir ID; Reach connections.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_MaximumDxIsZero">
            <summary>
              Looks up a localized string similar to Maximum dx is zero for reach {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_MaximumDxIsZeroVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_MuskingumShapeParameterBadValue">
            <summary>
              Looks up a localized string similar to Routing element {0} has Muskingum shape parameter value {1}, which is outside the method validity range. For stability reasons the shape parameter has to be between 0 and 0.5..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_MuskingumShapeParameterBadValueVD">
            <summary>
              Looks up a localized string similar to Routing Element Id; Shape parameter.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_NodeIdDuplicate">
            <summary>
              Looks up a localized string similar to Node ID {0} used more than once.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_NodeIdDuplicateVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_NoReaches">
            <summary>
              Looks up a localized string similar to No reaches in network.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_OverlappingReaches">
            <summary>
              Looks up a localized string similar to Reaches {0} and {1} are overlapping..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_OverlappingReachesVD">
            <summary>
              Looks up a localized string similar to Reach ID; Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_ReachConnecedToItself">
            <summary>
              Looks up a localized string similar to Reach is connected to the same location in both ends: {0}, ({1}-{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_ReachConnecedToItselfVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage 1; Chainage 2.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_ReachForStructureNotFound">
            <summary>
              Looks up a localized string similar to Location {0}, {1} of structure {2} not found in network. The structure is a {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_ReachForStructureNotFoundVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage; Structure ID; Structure type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_ReachNonReturnStructure">
            <summary>
              Looks up a localized string similar to Reach {0} is defined as non-return and is a structure reach. This is not possible..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_ReachNonReturnStructureVD">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_ReachReverseKineNotSupp">
            <summary>
              Looks up a localized string similar to Reach with kinematic routing and reverse direction is not supported. Reach name: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_ReachReverseKineNotSuppVD">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_StartNodeNotInNetwork">
            <summary>
              Looks up a localized string similar to Start node {0} in reach {1} not found in network.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_StartNodeNotInNetworkVD">
            <summary>
              Looks up a localized string similar to Node ID; Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_StructureAtEndOfReach">
            <summary>
              Looks up a localized string similar to The structure {2} ({3}) is located at the end of reach {0}, at chainage {1}. A structure must be located inside the reach and not at its start/end location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_ERR_StructureAtStartOfReach">
            <summary>
              Looks up a localized string similar to The structure {2} ({3}) is located at the start of reach {0}, at chainage {1}. A structure must be located inside the reach and not at its start/end location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_TXT_Basin">
            <summary>
              Looks up a localized string similar to Basin, ID: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_TXT_BasinVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_TXT_LeapingWeir">
            <summary>
              Looks up a localized string similar to Leaping weir, ID: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_TXT_LeapingWeirVD">
            <summary>
              Looks up a localized string similar to Leaping weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_TXT_Manhole">
            <summary>
              Looks up a localized string similar to Manhole, ID: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_TXT_ManholeVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_TXT_Node">
            <summary>
              Looks up a localized string similar to Node, ID: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_TXT_NodeVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_TXT_SewerNode">
            <summary>
              Looks up a localized string similar to Sewer node, ID: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_TXT_SewerNodeVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_WAR_NoReachesConnected">
            <summary>
              Looks up a localized string similar to Node {0} has no reaches connected..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_WAR_NoReachesConnectedVD">
            <summary>
              Looks up a localized string similar to Node ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_WAR_ReachConnectedToItself">
            <summary>
              Looks up a localized string similar to Reach is connected to the same location in both ends: {0}, ({1}-{2})..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_WAR_ReachConnectedToItselfVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage 1; Chainage 2.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ND_WAR_RoutingElementsWillBeSorted">
            <summary>
              Looks up a localized string similar to The order of the routing elements in routing reach {0} is not increasing in chainage. The elements will be sorted..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_ERR_CrossSectionNotFound">
            <summary>
              Looks up a localized string similar to In Pipe Design, the cross section for reach {0} could not be found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_ERR_CrossSectionNotFoundVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_ERR_InvalidElementInPDResultFile">
            <summary>
              Looks up a localized string similar to Invalid ELEMENT line found in Pipe Design result file {0}. The line line reads {1}. It must have at least five comma separated items..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_ERR_InvalidElementInPDResultFileVD">
            <summary>
              Looks up a localized string similar to Filename; Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_ERR_OnlyManningsMSupported">
            <summary>
              Looks up a localized string similar to Reach {0} has flow resistance type {1}. Only ManningM flow resistance type is supported in Pipe Design..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_ERR_OnlyManningsMSupportedVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_ERR_ReachIdNotSet">
            <summary>
              Looks up a localized string similar to There is a reach in Pipe Design which does not have an ID..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_ERR_ReachIsNotCircular">
            <summary>
              Looks up a localized string similar to In Pipe Design, reach {0} is not circular. Only circular reaches can be used in Pipe Design..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_ERR_ReachIsNotCircularVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_ERR_ReachNotFoundInPDResultLoad">
            <summary>
              Looks up a localized string similar to The Pipe Design result file {0} contains results for reach {1}. This reach was not found in the network..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_ERR_ReachNotFoundInPDResultLoadVD">
            <summary>
              Looks up a localized string similar to Filename; Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_ERR_TabulatedFlowresistanceCannotBeUsedInPipeDesign">
            <summary>
              Looks up a localized string similar to Reach {0} in Pipe Design has tabulated flow resistance, which is not supported by Pipe Design..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_ERR_TabulatedFlowresistanceCannotBeUsedInPipeDesignVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_ERR_UnableToReadPDResultFile">
            <summary>
              Looks up a localized string similar to Unable to read Pipe Design result file {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_ERR_UnableToReadPDResultFileVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_ERR_UnableToWritePDResultFile">
            <summary>
              Looks up a localized string similar to Unable to write Pipe Design result data file to {0}. The reason is: {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_ERR_UnableToWritePDResultFileVD">
            <summary>
              Looks up a localized string similar to Filename; Exception message.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_WAR_InvertLevelsNotAdjust">
            <summary>
              Looks up a localized string similar to In Pipe Design, the design criteria of reach {0} is to modify pipe invert levels with the pipe diameter. However, in order to modify invert levels both upstream and downstream nodes need to be manholes. This is not the case for reach {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_WAR_InvertLevelsNotAdjustVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_WAR_ReachNotFound">
            <summary>
              Looks up a localized string similar to Reach {0} which is part of Pipe Design was not found in the network..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.PD_WAR_ReachNotFoundVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RD_ERR_FileNotFound">
            <summary>
              Looks up a localized string similar to File {0} was not found when trying to load result data..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RD_ERR_FileNotFoundVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RD_ERR_NoConnection">
            <summary>
              Looks up a localized string similar to No connection or FilePath defined before loading result data. Cannot load file..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RD_ERR_PRFMissingNetworkData">
            <summary>
              Looks up a localized string similar to File is missing network data and can not be loaded as a primary file. Load the file by adding instead..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RD_WAR_CouldNotDetermineRes1dBridgeVersion">
            <summary>
              Looks up a localized string similar to Could not determine bridge version to use for file {0}. Using newest bridge version..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RD_WAR_CouldNotDetermineRes1dBridgeVersionVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RD_WAR_NoDataItemsInResultFile">
            <summary>
              Looks up a localized string similar to Result file {0} does not contain any data items. The data quantities associated with this file were not available. The data file will not be written..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RD_WAR_NoDataItemsInResultFileVD">
            <summary>
              Looks up a localized string similar to File name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RD_WAR_NotAReadBridge">
            <summary>
              Looks up a localized string similar to The read bridge for result data file {0} was specified as {1}. However, {1} is not a read bridge..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RD_WAR_NotAReadBridgeVD">
            <summary>
              Looks up a localized string similar to Filename; Bridge name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RD_WAR_UsingOldRes1DBridge">
            <summary>
              Looks up a localized string similar to Using old res1d bridge to load file {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RD_WAR_UsingOldRes1DBridgeVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_AppendFileItemMisMatch">
            <summary>
              Looks up a localized string similar to Can not append to file {0}. File and setup does not match (number of items differ). Setup has changed, or append file belongs to another setup..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_AppendFileItemMisMatchVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_AppendFileNotExist">
            <summary>
              Looks up a localized string similar to File {0} does not exist. Can not append to it..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_AppendFileNotExistVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_AppendFileStartTime">
            <summary>
              Looks up a localized string similar to Can not append to file that starts later than the start time of the current simulation, file &apos;{0}, or append file belongs to another setup..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_AppendFileStartTimeVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_AppendFileVersionMismatch">
            <summary>
              Looks up a localized string similar to Result file to append to is not the most recent version. Appending is not possible. File version: {0}, version required: {1}. File: {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_AppendNodeQuantitySizeMismatch">
            <summary>
              Looks up a localized string similar to Can not append to file {0}. Number of nodes for quantity {1} in file and in setup differ. Setup has been changed, or append file belongs to another setup..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_AppendNodeQuantitySizeMismatchVD">
            <summary>
              Looks up a localized string similar to Filename; Quantity.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_AppendQuantityMismatch">
            <summary>
              Looks up a localized string similar to Can not append to file {0}, mismatching quantities in file and in setup. Setup has been changed, or append file belongs to another setup..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_AppendQuantityMismatchVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_AppendQuantitySizeMismatch">
            <summary>
              Looks up a localized string similar to Can not append to file {0}, size of item for quantity {1} in file and in setup differs. Setup has been changed, or append file belongs to another setup..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_AppendQuantitySizeMismatchVD">
            <summary>
              Looks up a localized string similar to Filename; Quantity.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_AppendReachQuantitySizeMismatch">
            <summary>
              Looks up a localized string similar to Can not append to file {0}, Reach {1} number of grid points for quantity {2} in file and in setup differs. Setup has been changed, or append file belongs to another setup..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_AppendReachQuantitySizeMismatchVD">
            <summary>
              Looks up a localized string similar to Filename; Reach name; Quantity.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_CatchmentNotFound">
            <summary>
              Looks up a localized string similar to Catchment {0} not found in rainfall runoff result file {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_CatchmentNotFoundVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Result file.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_QuantityNotFound">
            <summary>
              Looks up a localized string similar to Quantity {0} not found in catchment {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_QuantityNotFoundInFile">
            <summary>
              Looks up a localized string similar to File {2} does not contain quantity {0} for catchment {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_QuantityNotFoundInFileVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Catchment ID; Result file.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_QuantityNotFoundVD">
            <summary>
              Looks up a localized string similar to Quantity; Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_Res11BridgeOpenFailed">
            <summary>
              Looks up a localized string similar to Error opening Res11 file - possibly old unsupported res11 file format: {0}. File version: {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_Res11BridgeOpenFailedVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_RRRestulFileNotFound">
            <summary>
              Looks up a localized string similar to Rainfall runoff result file {0} not found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_ERR_RRRestulFileNotFoundVD">
            <summary>
              Looks up a localized string similar to Result file.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_TXT_ResultDataFilePath">
            <summary>
              Looks up a localized string similar to Result data file: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_TXT_ResultDataFilePathVD">
            <summary>
              Looks up a localized string similar to FileName.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_WAR_QuantityNotFound">
            <summary>
              Looks up a localized string similar to Quantity {0} not found in catchment {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RES_WAR_QuantityNotFoundVD">
            <summary>
              Looks up a localized string similar to Quantity; Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_AreaBeZeroInLinearReservoir">
            <summary>
              Looks up a localized string similar to Area cannot be zero in linear reservoir {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_AreaBeZeroInLinearReservoirVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_AreaFracNegative">
            <summary>
              Looks up a localized string similar to Area fraction of surface &apos;{0}&apos; on catchment &apos;{1}&apos; is negative..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_AreaFracNegativeVD">
            <summary>
              Looks up a localized string similar to Surface type; Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_AutoCalibratioNotSupported">
            <summary>
              Looks up a localized string similar to Auto calibration of NAM catchment {0} is not supported.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_AutoCalibratioNotSupportedVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_AutoCalObsFileMissing">
            <summary>
              Looks up a localized string similar to Catchment {0} has auto-calibration enabled, but not observed data file path has been specified..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_AutoCalObsFileNotFound">
            <summary>
              Looks up a localized string similar to The auto-calibration observed data file {1} could not be found. Catchment {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_BndSourceItemMissing">
            <summary>
              Looks up a localized string similar to Could not apply global boundary &apos;{0}&apos; on catchment &apos;{1}&apos;, global source is missing a source item..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_BndSourceItemMissingVD">
            <summary>
              Looks up a localized string similar to Boundary type; Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_BoundaryDataTypeNotSupported">
            <summary>
              Looks up a localized string similar to Unable to add catchment boundary item {0}. The data type is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_BoundaryDataTypeNotSupportedVD">
            <summary>
              Looks up a localized string similar to Catchment boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_BoundarySourceScaleFactorOnCatchment">
            <summary>
              Looks up a localized string similar to Boundary source {0} has conflicting scalefactors (unit types) on catchment {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_BoundarySourceScaleFactorOnCatchmentHint">
            <summary>
              Looks up a localized string similar to Create different boundaries for items with different unit types (per area, per person etc)..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_BoundarySourceScaleFactorOnCatchmentVD">
            <summary>
              Looks up a localized string similar to Boundary ID; Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CalculateLagtime">
            <summary>
              Looks up a localized string similar to Unable to calculate the lagtime using SCS Formula method because the curve number is null..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CalibrationPlotNotSupported">
            <summary>
              Looks up a localized string similar to Calibration plot is not supported (catchment {0}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CalibrationPlotNotSupportedVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CalibrationPlotObservedDataMissing">
            <summary>
              Looks up a localized string similar to Catchment {0} has calibration plot enabled, but no observed data specified.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CalibrationPlotObservedDataMissingVD">
            <summary>
              Looks up a localized string similar to Catchment Name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CannotUseRRDemoLicense">
            <summary>
              Looks up a localized string similar to Cannot run on DEMO mode since the number of catchments is {0}. The DEMO limit is 1..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CannotUseRRDemoLicenseVD">
            <summary>
              Looks up a localized string similar to Number of catchments.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CantFindSubCatchment">
            <summary>
              Looks up a localized string similar to Cannot find sub-catchment {0} in combined catchment {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CantFindSubCatchmentVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CatchmentAreaLTZero">
            <summary>
              Looks up a localized string similar to Area of catchment {0} is {1} which is less than 0..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CatchmentAreaLTZeroVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Area.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CatchmentDischargeBoundary">
            <summary>
              Looks up a localized string similar to Error in catchment discharge boundary for catchment with ID {0}. Two different units for items has been specified..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CatchmentDischargeBoundaryVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CatchmentForBoundaryNotFound">
            <summary>
              Looks up a localized string similar to Boundary {0} is attached to catchment {1} which does not exist..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CatchmentForBoundaryNotFoundVD">
            <summary>
              Looks up a localized string similar to Boundary ID; Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CatchmentSourceBoundaryType">
            <summary>
              Looks up a localized string similar to Catchment source boundary type is not valid: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CatchmentSourceBoundaryTypeVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CollAreaLessLID">
            <summary>
              Looks up a localized string similar to Total Collecting area is less than the lid unit area for the lid &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CollAreaLessLIDVD">
            <summary>
              Looks up a localized string similar to LID ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CombinaisonHydrographLagtime">
            <summary>
              Looks up a localized string similar to {0} hydrograph type cannot be combined with {1} lag time type..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_CombinaisonHydrographLagtimeVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_EndInfiltrationNoSet">
            <summary>
              Looks up a localized string similar to End infiltration rate is not properly set..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_EndtimeLTStarttime">
            <summary>
              Looks up a localized string similar to Start time ({1}) for catchment {0} is earlier than end time ({2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_EndtimeLTStarttimeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Start time; End time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorKinematicWaveCalculations">
            <summary>
              Looks up a localized string similar to An error occurred during Kinematic wave rainfall-runoff calculations. Check the input parameters for catchment: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorKinematicWaveCalculationsVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorLinearReservoirCoefficientCalculation">
            <summary>
              Looks up a localized string similar to Unable to calculate Linear Reservoir Coefficient.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorReservoirTimeConstantCalculation">
            <summary>
              Looks up a localized string similar to Unable to calculate reservoir time constant.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorSetAreaFraction">
            <summary>
              Looks up a localized string similar to Unable to set the area fraction for the following surface type: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorSetAreaFractionVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorSetDryHortonExponent">
            <summary>
              Looks up a localized string similar to Unable to set the dry Horton exponent for the following surface type: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorSetDryHortonExponentVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorSetFinalInfiltration">
            <summary>
              Looks up a localized string similar to Unable to set the Final Infiltration for the following surface type: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorSetFinalInfiltrationVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorSetInitialInfiltration">
            <summary>
              Looks up a localized string similar to Unable to set the Initial Infiltration for the following surface type: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorSetInitialInfiltrationVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorSetManningNb">
            <summary>
              Looks up a localized string similar to Unable to set the Manning number for the following surface type: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorSetManningNbVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorSetStorageCapacity">
            <summary>
              Looks up a localized string similar to Unable to set the storage capacity for the following surface type: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorSetStorageCapacityVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorSetWetHortonExponent">
            <summary>
              Looks up a localized string similar to Unable to set the wet Horton exponent for the following surface type: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorSetWetHortonExponentVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorSetWettingCapacity">
            <summary>
              Looks up a localized string similar to Unable to set the wetting capacity for the following surface type: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ErrorSetWettingCapacityVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_GlobalSourceBoundaryTypes">
            <summary>
              Looks up a localized string similar to Unable to find matching GlobalSourceBoundaryTypes for {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_GlobalSourceBoundaryTypesVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_HasGapInWeightedTS">
            <summary>
              Looks up a localized string similar to TimeSeries {0} has a gap at time step {1} and the simulation will stop..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_HotStartFileTypeNotSupported">
            <summary>
              Looks up a localized string similar to The Rainfall Runoff hotstart file format of {0} is not supported. Only res1d or res11 Rainfall Runoff hotstart files are supported. Please use a file with .res1d or res11 extension.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_HotStartFileTypeNotSupportedVD">
            <summary>
              Looks up a localized string similar to Hotstart file name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_HotstartTimeMismatch">
            <summary>
              Looks up a localized string similar to Rainfall Runoff hostart time {0} is not within the time interval of hotstart file {1}. The file starts at time {2} and ends at time {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_HotstartTimeMismatchVD">
            <summary>
              Looks up a localized string similar to Hot start time; File name; Start time; End time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_HydrographFilenameIsNull">
            <summary>
              Looks up a localized string similar to In catchment {0}, the hydrograph time series file name is undefined..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_HydrographFilenameIsNullVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ImperviousAreaCannotBeZeroInLinearReservoir">
            <summary>
              Looks up a localized string similar to Impervious area cannot be zero in linear reservoir {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ImperviousAreaCannotBeZeroInLinearReservoirVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_InvalidCatchmentLength">
            <summary>
              Looks up a localized string similar to The length of the catchment is not correctly set: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_InvalidCatchmentLengthHint">
            <summary>
              Looks up a localized string similar to Either the length of the catchment must be set, or all active catchment surfaces must have a length set..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_InvalidCatchmentLengthVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_InvalidEffectiveArea">
            <summary>
              Looks up a localized string similar to The effective area of the catchment is not a valid fraction, current value: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_InvalidEffectiveAreaVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_InvalidHydrographModel">
            <summary>
              Looks up a localized string similar to In catchment {0}, the UHM catchment hydrograph model is invalid. The model number is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_InvalidHydrographModelVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Model number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_InvalidLagTimeModel">
            <summary>
              Looks up a localized string similar to In catchment {0}, the UHM lag time model is invalid. The lag time model number is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_InvalidLagTimeModelVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Model number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_InvalidLagtimeType">
            <summary>
              Looks up a localized string similar to Invalid Lag time type: ({0})..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_InvalidLagtimeTypeVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_InvalidLossModel">
            <summary>
              Looks up a localized string similar to In catchment {0}, the UHM catchment loss model is invalid. The loss model number is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_InvalidLossModelVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Model number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_InvalidTimestep">
            <summary>
              Looks up a localized string similar to Time step for catchment {0} is {1} which is invalid.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_InvalidTimestepVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_KdryNotSet">
            <summary>
              Looks up a localized string similar to Kdry is not properly set..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_KwetNotSet">
            <summary>
              Looks up a localized string similar to Kwet is not properly set..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LengthCannotBeZeroInLinearReservoir">
            <summary>
              Looks up a localized string similar to Length cannot be zero in linear reservoir {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LengthCannotBeZeroInLinearReservoirVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDAreaTooLarge">
            <summary>
              Looks up a localized string similar to Area of LIDs are larger than area of catchment, for catchment &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDAreaTooLargeVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDCollectAreaTooLarge">
            <summary>
              Looks up a localized string similar to Collecting Area of LIDs are larger than area of catchment, for catchment &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDCollectAreaTooLargeVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDControlDeploy">
            <summary>
              Looks up a localized string similar to LID Control &apos;{0}&apos; for LID Deployment &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDControlDeployVD">
            <summary>
              Looks up a localized string similar to LID ID; MU ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDDeployCatchNotFound">
            <summary>
              Looks up a localized string similar to LID deployment &apos;{0}&apos; on catchment &apos;{1}&apos;, could not find catchment..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDDeployCatchNotFoundVD">
            <summary>
              Looks up a localized string similar to LID ID; Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDDeployNotSup">
            <summary>
              Looks up a localized string similar to LID deployment &apos;{0}&apos; on catchment &apos;{1}&apos; of type &apos;{2}&apos; is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDDeployNotSupKinWave">
            <summary>
              Looks up a localized string similar to LID deployment &apos;{0}&apos; on catchment &apos;{1}&apos; of type &apos;{2}&apos; is not supported. Only KinematicWave (model B) catchment supports LID currently..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDDeployNotSupKinWaveVD">
            <summary>
              Looks up a localized string similar to LID ID; Catchment ID; Type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDDeployNotSupVD">
            <summary>
              Looks up a localized string similar to LID ID; Catchment ID; Type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDDuplicateResFile">
            <summary>
              Looks up a localized string similar to The same report/result file is used by several LID usages/deployments: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDDuplicateResFileVD">
            <summary>
              Looks up a localized string similar to File path.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDFilePathMissing">
            <summary>
              Looks up a localized string similar to LID usage/deployment has reporting enabled but no report/result file: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDFilePathMissingVD">
            <summary>
              Looks up a localized string similar to LID ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDGreenAmptNoInitialization">
            <summary>
              Looks up a localized string similar to GreenAmpt could not initialize for LID &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDGreenAmptNoInitializationVD">
            <summary>
              Looks up a localized string similar to LID name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDNoImperArea">
            <summary>
              Looks up a localized string similar to Catchment &apos;{0}&apos; does not have any impervious area, LIDs calculations cannot be performed..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDNoImperAreaVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidBarrelDrainCap">
            <summary>
              Looks up a localized string similar to LID {0}: Barrel drainage capacity cannot be negative..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidBarrelDrainExp">
            <summary>
              Looks up a localized string similar to LID {0}: Barrel drainage exponent cannot be negative..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidBarrelDrainOffset">
            <summary>
              Looks up a localized string similar to LID {0}: Barrel drainage offset must be in range [0,height]..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidBarrelHeight">
            <summary>
              Looks up a localized string similar to LID {0}: Barrel height must be larger than zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidDrainmatPor">
            <summary>
              Looks up a localized string similar to Invalid drain mat parameters for LID {0}: Porosity must be in the range ]0,1].
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidDrainmatThickness">
            <summary>
              Looks up a localized string similar to Invalid drain mat parameters for LID {0}: Thickness must be larger than zero.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidDrainOffset">
            <summary>
              Looks up a localized string similar to Invalid storage parameters for LID {0}: Drainage offset must be less than storage height..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidInitialSaturation">
            <summary>
              Looks up a localized string similar to LID {0}: Initial saturation must be within range [0,1]..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidlBarrelInfilFac">
            <summary>
              Looks up a localized string similar to LID {0}: Barrel infiltration factor must be in range [0,1]..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidPavementClog">
            <summary>
              Looks up a localized string similar to LID {0}: Pavement clogging factor cannot be negative.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidPavementImpFrac">
            <summary>
              Looks up a localized string similar to LID {0}: Pavement Impervious fraction must be in the range [0;1[.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidPavementPerm">
            <summary>
              Looks up a localized string similar to LID {0}: Pavement permeability must be larger than zero.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidPavementPor">
            <summary>
              Looks up a localized string similar to LID {0}: Pavement porosity must be in the range ]0,1].
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidPavementThickness">
            <summary>
              Looks up a localized string similar to LID {0}: Pavement thickness must be larger than zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidSoilNo1">
            <summary>
              Looks up a localized string similar to Invalid soil parameters for LID {0}. Porosity must be in the range ]0,1].
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidSoilNo2">
            <summary>
              Looks up a localized string similar to Invalid soil parameters for LID {0}. Porosity must be greater than Fieldcapacity.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidSoilNo3">
            <summary>
              Looks up a localized string similar to Invalid soil parameters for LID {0}. Field capacity must be greater than WiltingPoint.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidSoilNo4">
            <summary>
              Looks up a localized string similar to Invalid soil parameters for LID {0}. Conductivity must be greater than 0.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidSoilNo5">
            <summary>
              Looks up a localized string similar to Invalid soil parameters for LID {0}. ConductivityCoefficient must be greater than or equal to 0..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidStoragePor">
            <summary>
              Looks up a localized string similar to Invalid storage parameters for LID {0}: Porosity must be in the range ]0,1].
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidSurfaceRoutingWidth">
            <summary>
              Looks up a localized string similar to LID {0}: Routing is enabled, but width of LID is zero (or negative).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidSurfaceStorHeight">
            <summary>
              Looks up a localized string similar to Invalid surface storage height for LID {0}: Cannot be negative.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidSurfaceVeg">
            <summary>
              Looks up a localized string similar to Invalid parameter for LID {0}: Surface vegetation fraction cannot be negative.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidSurfaceVegB">
            <summary>
              Looks up a localized string similar to Invalid parameter for LID {0}: Surface vegetation fraction must be smaller than 0.9.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidVegSwaleBotWidth">
            <summary>
              Looks up a localized string similar to LID {0}: Vegetative swale side slope makes bottom width less than {1}. A value of {2} will be used as swale side slope, giving a bottom width of {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidVegSwaleMinWidth">
            <summary>
              Looks up a localized string similar to LID {0}: Vegetative swale width is less than {1}. A value of {1} will be used.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidVegSwaleSideSlope">
            <summary>
              Looks up a localized string similar to LID {0}: Vegetative swale side slope cannot be negative..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsInvalidVegSwaleSoilInfil">
            <summary>
              Looks up a localized string similar to LID {0}: Vegetative swale infiltration capacity cannot be negative..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsLayerMissing">
            <summary>
              Looks up a localized string similar to Invalid layer parameters for LID {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsNotConverge">
            <summary>
              Looks up a localized string similar to Integration failed to converge for lid {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsReportFileDirMissing">
            <summary>
              Looks up a localized string similar to LID {0}: Directory for report file could not be found: {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDsReportFileLocked">
            <summary>
              Looks up a localized string similar to LID {0}: Existing report file could not be deleted: {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDTotalAreaTooLarge">
            <summary>
              Looks up a localized string similar to Total collecting area of LIDs are larger than area of impervious area, for catchment &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_LIDTotalAreaTooLargeVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_MeanAreaFail">
            <summary>
              Looks up a localized string similar to Failed computing RR Mean Area Weighting of time series, error when executing MeanAreaWeightingAlg library: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_MeanAreaFailVD">
            <summary>
              Looks up a localized string similar to Error message.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_MoreThanOneNonGeolocatedBoundary">
            <summary>
              Looks up a localized string similar to More than one global boundary of type {0} found when assigning boundaries to catchment {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_MoreThanOneNonGeolocatedBoundaryVD">
            <summary>
              Looks up a localized string similar to Boundary type; Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMAreaRatioIsOutOfRange">
            <summary>
              Looks up a localized string similar to The ratio between groundwater area and catchment area for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMAreaRatioIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMBaseTemperatureIsOutOfRange">
            <summary>
              Looks up a localized string similar to The base temperature for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMBaseTemperatureIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMCapilarFluxParameterIsOutOfRange">
            <summary>
              Looks up a localized string similar to The capilary flux parameter for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMCapilarFluxParameterIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMConstantDegreeCoefficientIsOutOfRange">
            <summary>
              Looks up a localized string similar to The constant degree day coefficient for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMConstantDegreeCoefficientIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMCropCoefficientsIsOutOfRange">
            <summary>
              Looks up a localized string similar to The crop coefficient for the catchment {0} is out of range. It must be between {1} and {2}. The error occurs at month number {3}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMCropCoefficientsIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value; Number of Month.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMGroundWaterDepthMatchingZeroFlowIsOutOfRange">
            <summary>
              Looks up a localized string similar to The treshold groundwater depth for baseflow for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMGroundWaterDepthMatchingZeroFlowIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInfiltrationRateAtFieldCapacityIsOutOfRange">
            <summary>
              Looks up a localized string similar to The infiltration rate at field capacity for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInfiltrationRateAtFieldCapacityIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialBaseFlowIsOutOfRange">
            <summary>
              Looks up a localized string similar to The initial base flow for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialBaseFlowIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialGlobalSnowStorageIsOutOfRange">
            <summary>
              Looks up a localized string similar to The initial global snow storage for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialGlobalSnowStorageIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialInterFlowIsOutOfRange">
            <summary>
              Looks up a localized string similar to The initial interflow for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialInterFlowIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialLowerBaseFlowIsOutOfRange">
            <summary>
              Looks up a localized string similar to The initial lower baseflow for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialLowerBaseFlowIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialOverLandFlowIsOutOfRange">
            <summary>
              Looks up a localized string similar to The initial overland flow for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialOverLandFlowIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialRootZoneStorageIsOutOfRange">
            <summary>
              Looks up a localized string similar to The initial relative root zone storage for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialRootZoneStorageIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialSnowStorageIsOutOfRange">
            <summary>
              Looks up a localized string similar to The initial snow storage for the catchment {0} is out of range. It must be between {1} and {2}. The error occurs at zone number {3}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialSnowStorageIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value; Zone Number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialSurfaceStorageIsOutOfRange">
            <summary>
              Looks up a localized string similar to The initial relative surface storage for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialSurfaceStorageIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialWaterRetentionIsOutOfRange">
            <summary>
              Looks up a localized string similar to The initial water retention for the catchment {0} is out of range. It must be between {1} and {2}. The error occurs at zone number {3}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMInitialWaterRetentionIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value; Zone Number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMIrrigationSourcesAreOutOfRange">
            <summary>
              Looks up a localized string similar to The sum of the irrigation sources (local river, local groundwater and external river) for the catchment {0} must be equal to {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMIrrigationSourcesAreOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Percent.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMLossesToEvaporationIsOutOfRange">
            <summary>
              Looks up a localized string similar to The operational and conveyance losses to evaporation for the catchment {0} is out of range. It must be between {1} and {2}. The error occurs at month number {3}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMLossesToEvaporationIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value; Number of Month.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMLossesToGroundWaterIsOutOfRange">
            <summary>
              Looks up a localized string similar to The operational and conveyance losses to the groundwater for the catchment {0} is out of range. It must be between {1} and {2}. The error occurs at month number {3}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMLossesToGroundWaterIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value; Number of Month.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMLossesToOverlandFlowIsOutOfRange">
            <summary>
              Looks up a localized string similar to The operational and conveyance losses to overland flow for the catchment {0} is out of range. It must be between {1} and {2}. The error occurs at month number {3}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMLossesToOverlandFlowIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value; Number of Month.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMLowerGroundWaterParameterIsOutOfRange">
            <summary>
              Looks up a localized string similar to The amount of groundwater being recharged to the lower reservoir for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMLowerGroundWaterParameterIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMLowerStorageIsOutOfRange">
            <summary>
              Looks up a localized string similar to The maximum water content in the root zone storage (Lmax) for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMLowerStorageIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMMaxGroundWaterDepthMatchingZeroFlowIsOutOfRange">
            <summary>
              Looks up a localized string similar to The maximum treshold groundwater depth for baseflow used for defining a seasonal variation for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMMaxGroundWaterDepthMatchingZeroFlowIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMMaximumStorageDepthIsOutOfRange">
            <summary>
              Looks up a localized string similar to The maximum storage depth for snow zone number {0} for the catchment {1} is out of range. It must be between {2} and {3}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMMaximumStorageDepthIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Zone Level; Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMMaximumWaterInSnowIsOutOfRange">
            <summary>
              Looks up a localized string similar to The maximum amount of water retained in the snow for snow zone number {0} for the catchment {1} is out of range. It must be between {2} and {3}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMMaximumWaterInSnowIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Zone Level; Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMMinGroundWaterDepthMatchingZeroFlowIsOutOfRange">
            <summary>
              Looks up a localized string similar to The minimum treshold groundwater depth for baseflow used for defining a seasonal variation for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMMinGroundWaterDepthMatchingZeroFlowIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMMinimumStorageDepthIsOutOfRange">
            <summary>
              Looks up a localized string similar to The minimum storage depth for snow zone number {0} for the catchment {1} is out of range. It must be between {2} and {3}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMMinimumStorageDepthIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Zone Level; Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMMonthlyAbstractionTooLow">
            <summary>
              Looks up a localized string similar to The monthly abstraction for the {0} month for the catchment {1} is too low. It must be at least {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMMonthlyAbstractionTooLowVD">
            <summary>
              Looks up a localized string similar to Number of Month; Catchment ID; Minimum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMOverLandFlowRunoffCoefficientIsOutOfRange">
            <summary>
              Looks up a localized string similar to The overland runoff coefficient for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMOverLandFlowRunoffCoefficientIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMRainFallDegreeDayCoefficientIsOutOfRange">
            <summary>
              Looks up a localized string similar to The rainfall degree day coefficient for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMRainFallDegreeDayCoefficientIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMReferencePrecipitationLevelIsOutOfRange">
            <summary>
              Looks up a localized string similar to The reference level for the precipitation for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMReferencePrecipitationLevelIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMReferenceTemperatureLevelIsOutOfRange">
            <summary>
              Looks up a localized string similar to The reference level for the temperature for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMReferenceTemperatureLevelIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMRelativeGroundWaterDepthMatchingZeroFlowIsOutOfRange">
            <summary>
              Looks up a localized string similar to The scaling factor used to define seasonal variation of the treshold groundwater depth for baseflow for the catchment {0} is out of range. It must be between {1} and {2}. The error occurs at month number {3}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMRelativeGroundWaterDepthMatchingZeroFlowIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value; Number of Month.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMRootZoneTresholdValueForGroundWaterRechargeIsOutOfRange">
            <summary>
              Looks up a localized string similar to The root zone treshold value for groundwater recharge for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMRootZoneTresholdValueForGroundWaterRechargeIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMRootZoneTresholdValueForInterLandFlowIsOutOfRange">
            <summary>
              Looks up a localized string similar to The root zone treshold value for interflow for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMRootZoneTresholdValueForInterLandFlowIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMRootZoneTresholdValueForOverLandFlowIsOutOfRange">
            <summary>
              Looks up a localized string similar to The root zone treshold value for overland flow for the catchment {0} is out of range. It must be between {1} and {2}, value is {3}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMRootZoneTresholdValueForOverLandFlowIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value; Actual Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMSeasonalDegreeCoefficientIsOutOfRange">
            <summary>
              Looks up a localized string similar to The seasonal degree day coefficient for the catchment {0} is out of range. It must be between {1} and {2}. The error occurs at month number {3}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMSeasonalDegreeCoefficientIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value; Number of Month.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMSpecificYieldIsOutOfRange">
            <summary>
              Looks up a localized string similar to The specific yield for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMSpecificYieldIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMTimeConstantForRoutingBaseFlowIsOutOfRange">
            <summary>
              Looks up a localized string similar to The time constant for routing baseflow for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMTimeConstantForRoutingBaseFlowIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMTimeConstantForRoutingInterflowIsOutOfRange">
            <summary>
              Looks up a localized string similar to The time constant for routing interflow for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMTimeConstantForRoutingInterflowIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMTimeConstantForRoutingOverflowFirstReservoirIsOutOfRange">
            <summary>
              Looks up a localized string similar to The time constant for routing of overflow (first reservoir) for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMTimeConstantForRoutingOverflowFirstReservoirIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMTimeConstantForRoutingOverflowSecondReservoirIsOutOfRange">
            <summary>
              Looks up a localized string similar to The time constant for routing of overflow (second reservoir) for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMTimeConstantForRoutingOverflowSecondReservoirIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMTimeConstantLowerGroundWaterIsOutOfRange">
            <summary>
              Looks up a localized string similar to The time constant used for routing of the lower baseflow for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMTimeConstantLowerGroundWaterIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMTotalLossesIsOutOfRange">
            <summary>
              Looks up a localized string similar to The total operational and conveyance losses for the catchment {0} is out of range. They must be between {1} and {2}. The error occurs at month number {3}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMTotalLossesIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value; Number of Month.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMTotalZoneAreaOutOfRange">
            <summary>
              Looks up a localized string similar to For the catchment {0}, the total area of the snow zones {2} do not match the total catchment area {1}, the snow zones are missing an area of {3}. Please adjust the snow zone areas or the catchment area..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMTotalZoneAreaOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Catchment Area; Snowzone Area; Area difference.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMUpperStorageIsOutOfRange">
            <summary>
              Looks up a localized string similar to The maximum water content in the surface storage (Umax) for the catchment {0} is out of range. It must be between {1} and {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMUpperStorageIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Minimum Value; Maximum Value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMZoneAreaIsOutOfRange">
            <summary>
              Looks up a localized string similar to The area of snow zone number {0} for the catchment {1} is out of range. It must be equal to the catchment area which is {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMZoneAreaIsOutOfRangeVD">
            <summary>
              Looks up a localized string similar to Zone Level; Catchment ID; Catchment Area.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMZoneElevationIsNotIncreasing">
            <summary>
              Looks up a localized string similar to The level of snow zone number {0} for the catchment {1} is not increasing.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NAMZoneElevationIsNotIncreasingVD">
            <summary>
              Looks up a localized string similar to Zone Level; Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NoCatchmentDischargeBoundary">
            <summary>
              Looks up a localized string similar to No catchment discharge boundary was found for catchment {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NoCatchmentDischargeBoundaryVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NoDataInHydrographTS">
            <summary>
              Looks up a localized string similar to There is no data in the item ({0} 1-based) of the user defined hydrograph: {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NoDataInHydrographTSVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NoEvaporationBoundary">
            <summary>
              Looks up a localized string similar to No evaporation boundary has been found, but an evaporation time series is required  for catchment {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NoEvaporationBoundaryVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NoItemsInHydrographTS">
            <summary>
              Looks up a localized string similar to There is no item in the time series for user defined hydrograph: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NoItemsInHydrographTSVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NoNAMSupportInLicense">
            <summary>
              Looks up a localized string similar to The license does not support Rainfall Runoff NAM simulations..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NoRainfallBoundary">
            <summary>
              Looks up a localized string similar to No rainfall boundary was found for catchment {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NoRainfallBoundaryVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NoTemperatureBoundary">
            <summary>
              Looks up a localized string similar to No temperature boundary was found, but a temperature time series is required when the snow module is activated for catchment {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NoTemperatureBoundaryVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_NoUserDefHydrograph">
            <summary>
              Looks up a localized string similar to The hydrograph type is set to &apos;User Defined&apos; but there is no valid time series..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ObservedQBoundaryNotImplemented">
            <summary>
              Looks up a localized string similar to In catchment {0}, a Observed Discharge catchment boundary is applied. This boundary type is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ObservedQBoundaryNotImplementedVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ResultsNotAvailable">
            <summary>
              Looks up a localized string similar to In catchment {0}, results are not available for time {1}. The calculation is ahead of the specified time..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_ResultsNotAvailableVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_RrQLoadBoundaryNotImplemented">
            <summary>
              Looks up a localized string similar to In catchment {0}, a QLoad catchment boundary is applied. This boundary type is not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_RrQLoadBoundaryNotImplementedVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_SetEndInfiltrationRate">
            <summary>
              Looks up a localized string similar to Unable to set the end infiltration rate for the following surface type: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_SetEndInfiltrationRateVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_SetStartInfiltrationRate">
            <summary>
              Looks up a localized string similar to Unable to set the start infiltration rate for the following surface type: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_SetStartInfiltrationRateVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_SlopeCannotBeZeroInLinearReservoir">
            <summary>
              Looks up a localized string similar to Slope cannot be zero in linear reservoir {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_SlopeCannotBeZeroInLinearReservoirVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_StartInfiltrationNoSet">
            <summary>
              Looks up a localized string similar to Start infiltration rate is not properly set..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_TimeAreaCurveNotDefined">
            <summary>
              Looks up a localized string similar to In catchment {0}, the required time area curve is not defined..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_TimeAreaCurveNotDefinedVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_TsFileNotFound">
            <summary>
              Looks up a localized string similar to Could not find time series {1} for catchment {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_UHMLagTimeTooLarge">
            <summary>
              Looks up a localized string similar to The UHM catchment {0} has a lagtime of {1} minutes, giving a hydrograph timespan of {2} minutes. The timestep is {3} minutes, producing {4} number of computational cells. This is too large..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_UHMLagTimeTooLargeHint">
            <summary>
              Looks up a localized string similar to Increase the time step or decrease the lagtime..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_UnableToWriteRRStatFile">
            <summary>
              Looks up a localized string similar to Unable to write rainfall runoff statistics to {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_UnableToWriteRRStatFileVD">
            <summary>
              Looks up a localized string similar to RR statistics filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_UnsuccessfulRRLicCheckInBridge">
            <summary>
              Looks up a localized string similar to A unsuccessful RainfallRunoff license check was performed when the setup was loaded. This error should have been caught in the bridge. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_ERR_WeightedTSFileNotDefined">
            <summary>
              Looks up a localized string similar to Time sereis file not defined corectly in {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_HINT_CombinaisonSCSHydrograph">
            <summary>
              Looks up a localized string similar to SCS hydrograph must be combined with &apos;UserDefined&apos; or &apos;SCSFormula&apos; lag time types..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_HINT_CombinaisonSUHAlamedaHydrograph">
            <summary>
              Looks up a localized string similar to SUH Alameda hydrograph must be combined with &apos;SUHAlameda&apos; lag time type..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_HINT_CombinaisonSUHStandardHydrograph">
            <summary>
              Looks up a localized string similar to SUH Standard hydrograph must be combined with &apos;SUHStandard&apos; lag time type..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_TXT_CatchmentDischarge">
            <summary>
              Looks up a localized string similar to Catchment (Discharge), name: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_TXT_CatchmentDischargeVD">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_TXT_CatchmentKinematicWave">
            <summary>
              Looks up a localized string similar to Catchment Kinematic Wave, name: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_TXT_CatchmentKinematicWaveVD">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_TXT_CatchmentLinearReservoir">
            <summary>
              Looks up a localized string similar to Catchment: Linear Reservoir, name: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_TXT_CatchmentLinearReservoirVD">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_TXT_CatchmentNAM">
            <summary>
              Looks up a localized string similar to Catchment NAM, name: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_TXT_CatchmentNAMVD">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_TXT_CatchmentTimeArea">
            <summary>
              Looks up a localized string similar to Catchment Time Area, Name: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_TXT_CatchmentTimeAreaVD">
            <summary>
              Looks up a localized string similar to Name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_AreaFracWrongSum">
            <summary>
              Looks up a localized string similar to Area fraction of all surfaces in catchment &apos;{1}&apos; does not sum to 1, but to {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_AreaFracWrongSumVD">
            <summary>
              Looks up a localized string similar to Catchment ID; Fraction.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_CalibrationPlotNoObsInSimulationTime">
            <summary>
              Looks up a localized string similar to Obsered data for catchment {0} does not contain any data within simulation period. Calibration plot is not created..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_CalibrationPlotNoObsInSimulationTimeVD">
            <summary>
              Looks up a localized string similar to Catchment name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_CalibrationPlotObsDataOutsideSimulation">
            <summary>
              Looks up a localized string similar to Observed data for catchment {0} is not within simulation time. Calibration plot is not created..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_CalibrationPlotObsDataOutsideSimulationVD">
            <summary>
              Looks up a localized string similar to Catchment name.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_DryTimeStepLargerWetTimeStep">
            <summary>
              Looks up a localized string similar to Dry time step is smaller than wet time step. The wet time step will be used in the calculation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_FileExtDfs0">
            <summary>
              Looks up a localized string similar to Report file extension changed to dfs0, lid &apos;{0}&apos;, report-file &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_FileExtDfs0VD">
            <summary>
              Looks up a localized string similar to LID ID; File path.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_HotstartValueMissing">
            <summary>
              Looks up a localized string similar to Hotstart value missing for catchment &apos;{0}&apos;: &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_HotstartValueMissingVD">
            <summary>
              Looks up a localized string similar to Catchment ID;Quantity.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_KineWaveNoConvergence">
            <summary>
              Looks up a localized string similar to Catchment Kinematic Wave &apos;{0}&apos; could not converge at time {1}. Applying simple routing calculations..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_KineWaveNoConvergenceVD">
            <summary>
              Looks up a localized string similar to Model; Time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_LIDsInvalidDrainmatManningM">
            <summary>
              Looks up a localized string similar to LID {0}: Drain mat Manning M value is less than one. Be sure to use Mannings M and not Mannings n.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_LIDsInvalidSurfaceManningM">
            <summary>
              Looks up a localized string similar to LID {0}: Surface Manning M value is less than one. Be sure to use Mannings M and not Mannings n.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_LIDsInvalidSurfaceSlope">
            <summary>
              Looks up a localized string similar to LID {0}: Slope of LID is less than 0.001 (1 permille). Setting value to 0.001.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_LIDSlopeTooSmall">
            <summary>
              Looks up a localized string similar to Slope of LID is less than 0.001 (1 permille). Setting value to 0.001. LID control ID {0}, used on catchment {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_LIDSlopeTooSmallVD">
            <summary>
              Looks up a localized string similar to Control ID; Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_NAMCatchmentAreaIsZero">
            <summary>
              Looks up a localized string similar to The area of the catchment {0} is zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_NAMCatchmentAreaIsZeroVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_NAMNoTemperature">
            <summary>
              Looks up a localized string similar to There is no temperature boundary associated with catchment {0}, therefore the snow module has been disabled. To enable it, add a valid temperature boundary to this catchment..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_NAMNoTemperatureVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_NoEvaporationTS">
            <summary>
              Looks up a localized string similar to Unable to find the Evaporation time series. The initial loss recover rate will be used instead: {0} m/s..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_NoEvaporationTSVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_UHMLagTimeLarge">
            <summary>
              Looks up a localized string similar to The UHM catchment {0} has a lagtime of {1} minutes, giving a hydrograph timespan of {2} minutes. The timestep is {3} minutes, producing {4} number of computational cells. This is a large number of computational cells and may impact performance..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_UHMLagTimeLargeHint">
            <summary>
              Looks up a localized string similar to Consider increasing the time step or decreasing the lagtime..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_UnableToUseEvaporationTS">
            <summary>
              Looks up a localized string similar to Not using the evaporation time series, the initial recover rate is used during dry periods..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.RR_WAR_UsingDemoLicense">
            <summary>
              Looks up a localized string similar to Rainfall Runoff license check failed. The number of catchments is {0}. Running in DEMO mode..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.SL_ERR_ExtensionUnknown">
            <summary>
              Looks up a localized string similar to Unknown extension on file {0}. Unable to load file..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.SL_ERR_ExtensionUnknownVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.SL_ERR_InitializingPlugin">
            <summary>
              Looks up a localized string similar to Error in plugin: &apos;{0}&apos;. Initialize failed. See log file for details.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.SL_ERR_LoadingPlugin">
            <summary>
              Looks up a localized string similar to Error loading plugin: &apos;{0}&apos;. See log file for details.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.SL_TXT_QuitSimulationConfirm">
            <summary>
              Looks up a localized string similar to Quit MIKE 1D?.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_AreasNotMonotonicallyIncreasing">
            <summary>
              Looks up a localized string similar to The areas in level-width-area table are not monotonically increasing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BothCircularAndOpen">
            <summary>
              Looks up a localized string similar to In culvert {0}, the culvert section was specified as both circular and open..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BothCircularAndOpenVD">
            <summary>
              Looks up a localized string similar to Culvert ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_Bridge_CrossSectionRawData">
            <summary>
              Looks up a localized string similar to Bride: {0} - Crosssection: {1} has incorrect Rawdata. Compare the bridge cross sections with the upstream and downstream cross sections..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_Bridge_CrossSectionRawDataVD">
            <summary>
              Looks up a localized string similar to Bridge ID; Crosssection ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeCrossSection">
            <summary>
              Looks up a localized string similar to Bridge at river: {0} chainage: {1} does not have correct upstream and downstream crosssections..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeCrossSectionData">
            <summary>
              Looks up a localized string similar to Bridge: {0} - The {1} bridge Sections must have atleast 1 surveyed point between mleft and right extent marker..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeCrossSectionDataVD">
            <summary>
              Looks up a localized string similar to ID; Up- or Downstream.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeCrossSectionVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeCrossSectionXdata">
            <summary>
              Looks up a localized string similar to Bridge at river: {0} chainage: {1} - Crosssection S-data cannot decrease when section is located {2} a bridge..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeCrossSectionXdataVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainag;Up- or Downstreame.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeCulvert">
            <summary>
              Looks up a localized string similar to Bridge: {0} uses a Culvert descriptiong for submergence. The culvert is not specified..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeCulvertVD">
            <summary>
              Looks up a localized string similar to ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeDownstream">
            <summary>
              Looks up a localized string similar to Bridge at river: {0} chainage: {1} - The distance from the bridge to the cross section downstream is less than half the waterway length..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeDownstreamVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeFailedReadingTables">
            <summary>
              Looks up a localized string similar to Bride: {0} - Failed reading Bridge Structure Tables.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeFailedReadingTablesVD">
            <summary>
              Looks up a localized string similar to Bridge ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeHorizontalSection">
            <summary>
              Looks up a localized string similar to Bridge: {0} - The horizontal coordinates (S) of {1} bridge section are not allowed to be decreasing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeHorizontalSectionVD">
            <summary>
              Looks up a localized string similar to ID; Up- or Downstream.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeMarker">
            <summary>
              Looks up a localized string similar to Bridge at river: {0} chainage: {1} - Bridge marker 3 in crosssection data must be found after marker 1 in crossection located {2} a bridge..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeMarkersSum">
            <summary>
              Looks up a localized string similar to Bridge: {0} - Both the left and right extent marker for the {1} bridge section must be set. Furthermore if the left or right abutment marker is set then both needs to be set..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeMarkersSumVD">
            <summary>
              Looks up a localized string similar to ID; Up- or Downstream.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeMarkerVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage;Up- or Downstream.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeNotMultiWayOpeningEnabled">
            <summary>
              Looks up a localized string similar to Bride: {0} - Bridge Method: {1} does not support Multiway openings..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeNotMultiWayOpeningEnabledVD">
            <summary>
              Looks up a localized string similar to Bridge ID; Bridge Method.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeOverflowFreeflow">
            <summary>
              Looks up a localized string similar to Bridge: {0} uses an overflow method which is not consistent with the free water surface method. If the overflow method is FHWA WSPRO or Energy Equation then the free surface flow method must be FHWA WSPRO, USBPR or Energy Equation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeOverflowFreeflowVD">
            <summary>
              Looks up a localized string similar to ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeOverflowMissingWeir">
            <summary>
              Looks up a localized string similar to Bride: {0} with Overflow type:{1} is missing weir number:{2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeOverflowMissingWeirVD">
            <summary>
              Looks up a localized string similar to ID; Overflow type; Weir number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeSubmergenceFreeflow">
            <summary>
              Looks up a localized string similar to Bridge: {0} uses a submergence method which is not consistent with the free water surface method. If the submergence method is FHWA WSPRO or Energy Equation then the free surface flow method must be FHWA WSPRO, USBPR or Energy Equation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeSubmergenceFreeflowVD">
            <summary>
              Looks up a localized string similar to ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeSubmergenceMissingCulvert">
            <summary>
              Looks up a localized string similar to Bride: {0} with Submergence type:{1} is missing culver number:{2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeSubmergenceMissingCulvertVD">
            <summary>
              Looks up a localized string similar to ID; Submergence type; Culvert number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeTableFile">
            <summary>
              Looks up a localized string similar to Bridge at river: {0} chainage: {1} does not have a correct bridge table file: {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeTableFileVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage;Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeTopBottomCurvature">
            <summary>
              Looks up a localized string similar to Bridge: {0} - The level for bottom of arch curvature is higher than the top level of arch curvature..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeTopBottomCurvatureVD">
            <summary>
              Looks up a localized string similar to ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeTopLevel">
            <summary>
              Looks up a localized string similar to Bridge: {0} - The bridge top level: {1} is lower than the bridge bottom level: {2}. This is physically not possible and thus not allowed..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeTopLevelVD">
            <summary>
              Looks up a localized string similar to ID; Top level; Bottom level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeUpstream">
            <summary>
              Looks up a localized string similar to Bridge at river: {0} chainage: {1} - The distance from the bridge to the cross section upstream is less than half the waterway length..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_BridgeUpstreamVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CircularCrossSectionDiameterMustBePositive">
            <summary>
              Looks up a localized string similar to The diameter of circular section must be positive. The diameter is {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CircularCrossSectionDiameterMustBePositiveVD">
            <summary>
              Looks up a localized string similar to Diameter.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ControlledFreeFlowExponentIsNegative">
            <summary>
              Looks up a localized string similar to In sluice gate {0}, the exponent for controlled free flow is negative. The exponent is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ControlledFreeFlowExponentIsNegativeVD">
            <summary>
              Looks up a localized string similar to Gate ID; Exponent.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ControlledFreeFlowIsNegative">
            <summary>
              Looks up a localized string similar to In sluice gate {0}, the coefficient for controlled free flow is negative. The coefficient is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ControlledFreeFlowIsNegativeVD">
            <summary>
              Looks up a localized string similar to Gate ID; Coefficient.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ControlledFreeFlowLimitError">
            <summary>
              Looks up a localized string similar to In sluice gate {0}, upper limit must be higher than lower limit for controlled free flow. Upper limit is {1}, lower limit is {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ControlledFreeFlowLimitErrorVD">
            <summary>
              Looks up a localized string similar to Gate ID; Upper limit; Lower limit.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ControlledSubmergedFlowExponentIsNegative">
            <summary>
              Looks up a localized string similar to In sluice gate {0}, the exponent for controlled submerged flow is negative. The exponent is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ControlledSubmergedFlowExponentIsNegativeVD">
            <summary>
              Looks up a localized string similar to Gate ID; Exponent.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ControlledSubmergedFlowIsNegative">
            <summary>
              Looks up a localized string similar to In sluice gate {0}, the coefficient for controlled submerged flow is negative. The coefficient is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ControlledSubmergedFlowIsNegativeVD">
            <summary>
              Looks up a localized string similar to Gate ID; Coefficient.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ControlledSubmergedFlowLimitError">
            <summary>
              Looks up a localized string similar to In sluice gate {0}, upper limit must be higher than lower limit for controlled submerged flow. Upper limit is {1}, lower limit is {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ControlledSubmergedFlowLimitErrorVD">
            <summary>
              Looks up a localized string similar to Gate ID; Upper limit; Lower limit.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CriticalDischargesNotMonotonicallyIncreasing">
            <summary>
              Looks up a localized string similar to Critical discharges are not monotonically increasing in QH flow type relations..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CulvertEmptyParTable">
            <summary>
              Looks up a localized string similar to Flow Conditions, Hydraulic Parameters table is empty or incomplete for culvert {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CulvertEmptyParTableVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CulvertLengthMustBePositive">
            <summary>
              Looks up a localized string similar to In culvert {0}, the length must be positive. The length is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CulvertLengthMustBePositiveVD">
            <summary>
              Looks up a localized string similar to Culvert ID; Length.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CulvertManningsNMustBePositiveOrZero">
            <summary>
              Looks up a localized string similar to In culvert {0}, Manning&apos;s n is less than zero. Manning&apos;s n is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CulvertManningsNMustBePositiveOrZeroVD">
            <summary>
              Looks up a localized string similar to Culvert ID; Manning&apos;s n.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CulvertQHEmpty">
            <summary>
              Looks up a localized string similar to Flow Conditions, Q-h relations table for {1} is empty or incomplete for culvert {0}. Minimum of two rows are required..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CulvertQHEmptyVD">
            <summary>
              Looks up a localized string similar to Structure ID; Positive/Negative.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CulvertQHNegHNotIncreasing">
            <summary>
              Looks up a localized string similar to The depths (y) in the Q-h relations for negative flow are not monotonically increasing. Culvert {0}, row {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CulvertQHNegHNotIncreasingHint">
            <summary>
              Looks up a localized string similar to This may be caused by the culvert geometry being less than the river geometry. Please check for all water levels that the cross sectional area at the structure is less than the cross sectional area up- and down-stream of the structure. Incorrect areas may give rice to an expansion instead of a contraction..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CulvertQHNegQcNotIncreasing">
            <summary>
              Looks up a localized string similar to The critical discharges (Qc) in the Q-h relations for negative flow are not monotonically increasing. Culvert {0}, row {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CulvertQHPosHNotIncreasing">
            <summary>
              Looks up a localized string similar to The depths (y) in the Q-h relations for positive flow are not monotonically increasing. Culvert {0}, row {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CulvertQHPosHNotIncreasingHint">
            <summary>
              Looks up a localized string similar to This may be caused by the culvert geometry being less than the river geometry. Please check for all water levels that the cross sectional area at the structure is less than the cross sectional area up- and down-stream of the structure. Incorrect areas may give rice to an expansion instead of a contraction. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CulvertQHPosQcNotIncreasing">
            <summary>
              Looks up a localized string similar to The critical discharges (Qc) in the Q-h relations for positive flow are not monotonically increasing. Culvert {0}, row {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CulvertXSecNotFound">
            <summary>
              Looks up a localized string similar to Culvert cross section geometry could not be found for culvert {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_CulvertXSecNotFoundVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_DamBreakBoundaryNotFound">
            <summary>
              Looks up a localized string similar to Boundary for Dam Break structure {0} on reach {1}, chainage {2} was not found..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_DamBreakBoundaryNotFoundVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage; Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_DambreakErosionZeroSlopeAndWidth">
            <summary>
              Looks up a localized string similar to For the dam break structure {0}, erosion parameters, both the inital failure width and breach slope is zero. A breach will never happen.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_DambreakErosionZeroSlopeAndWidthVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_DamBreakNoLicense">
            <summary>
              Looks up a localized string similar to No DamBreak license available. Cannot run with DamBreak structures in demo mode..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_DambreakPipeAboveCrest">
            <summary>
              Looks up a localized string similar to Dambreak structure {0} has pipe obvert level above dam crest level. Pipe obvert level is at {1} and crest level is at {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_DambreakPipeAboveCrestVD">
            <summary>
              Looks up a localized string similar to Structure ID; Pipe obvert level; Crest level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_DambreakPipeBelowBreach">
            <summary>
              Looks up a localized string similar to Dambreak structure {0} has pipe failure level below final breach level. Pipe failure level is at {1} and final breach level is at {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_DambreakPipeBelowBreachLimit">
            <summary>
              Looks up a localized string similar to Dambreak structure {0} has pipe failure level below limiting cross section at pipe position. Pipe failure level is at {1} and limit cross section bottom level is at {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_DambreakPipeBelowBreachLimitVD">
            <summary>
              Looks up a localized string similar to Structure ID; Pipe level; Breach level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_DambreakPipeBelowBreachVD">
            <summary>
              Looks up a localized string similar to Structure ID; Pipe level; Breach level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_DepthsNotMonotonicallyIncreasing">
            <summary>
              Looks up a localized string similar to Depths are not monotonically increasing in QH flow type relations..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_EnergyLossSideNotSupp">
            <summary>
              Looks up a localized string similar to EnergyLoss structure as side structure is not supported, structure ID: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_EnergyLossSideNotSuppVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ErrorGeneratingSlicesFromPolygon">
            <summary>
              Looks up a localized string similar to Unable to create slices in orifice in branch {0}, chainage {1}. Check the orifice geometry..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ErrorGeneratingSlicesFromPolygonVD">
            <summary>
              Looks up a localized string similar to Branch ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_FirstHLevelGTStopLevel">
            <summary>
              Looks up a localized string similar to First H level of HQ table is larger than stop level for pump {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_FirstHLevelGTStopLevelVD">
            <summary>
              Looks up a localized string similar to Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_GradualAlignmentChangeOutsideValidRange">
            <summary>
              Looks up a localized string similar to In energy loss structure {0}, the gradual alignment change is outside the valid range of [0; 90]. The gradual alignment change is  {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_GradualAlignmentChangeOutsideValidRangeVD">
            <summary>
              Looks up a localized string similar to Structure ID; Gradual alignment change.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossFactorNegativeContraction">
            <summary>
              Looks up a localized string similar to In energy loss structure {0}, the contraction headloss factor for negative flow is negative. The factor is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossFactorNegativeContractionVD">
            <summary>
              Looks up a localized string similar to Structure ID; Headloss factor.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossFactorNegativeExpansion">
            <summary>
              Looks up a localized string similar to In energy loss structure {0}, the expansion headloss factor for negative flow is negative. The factor is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossFactorNegativeExpansionVD">
            <summary>
              Looks up a localized string similar to Structure ID; Headloss factor.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossFactorNegativeUserDefined">
            <summary>
              Looks up a localized string similar to User defined headloss factor is negative for negative flow in structure {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossFactorNegativeUserDefinedVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossFactorPositiveContraction">
            <summary>
              Looks up a localized string similar to In energy loss structure {0}, the contraction headloss factor for positive flow is negative. The factor is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossFactorPositiveContractionVD">
            <summary>
              Looks up a localized string similar to Structure ID; Headloss factor.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossFactorPositiveExpansion">
            <summary>
              Looks up a localized string similar to In energy loss structure {0}, the expansion headloss factor for positive flow is negative. The factor is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossFactorPositiveExpansionVD">
            <summary>
              Looks up a localized string similar to Structure ID; Headloss factor.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossFactorPositiveUserDefined">
            <summary>
              Looks up a localized string similar to User defined headloss factor is negative for positive flow in structure {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossFactorPositiveUserDefinedVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossFreeOverflowNegativeFlow">
            <summary>
              Looks up a localized string similar to In structure {0}, head loss factor for free overflow (negative flow) is negative..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossFreeOverflowNegativeFlowVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossFreeOverflowPositiveFlow">
            <summary>
              Looks up a localized string similar to In structure {0}, head loss factor for free overflow (positive flow) is negative..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossFreeOverflowPositiveFlowVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossInflowNegativeFlow">
            <summary>
              Looks up a localized string similar to In structure {0}, head loss factor for inflow (negative flow) is negative..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossInflowNegativeFlowVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossInflowPositiveFlow">
            <summary>
              Looks up a localized string similar to In structure {0}, head loss factor for inflow (positive flow) is negative..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossInflowPositiveFlowVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossOutflowNegativeFlow">
            <summary>
              Looks up a localized string similar to In structure {0}, head loss factor for outflow (negative flow) is negative..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossOutflowNegativeFlowVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossOutflowPositiveFlow">
            <summary>
              Looks up a localized string similar to In structure {0}, head loss factor for outflow (positive flow) is negative..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_HeadLossOutflowPositiveFlowVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_IterCalcNotSupp">
            <summary>
              Looks up a localized string similar to Iterative calculation mode is not supported. Use PID or &apos;Change With&apos; alternatives..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_LevelsNotMonotonicallyIncreasing">
            <summary>
              Looks up a localized string similar to Levels are not monotonically increasing in level-width table..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_MaximumSpeedIsNegative">
            <summary>
              Looks up a localized string similar to The maximum speed of gate {0} is negative. The speed is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_MaximumSpeedIsNegativeVD">
            <summary>
              Looks up a localized string similar to Gate ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_MinimumTwoValuesInLevelsWidthTable">
            <summary>
              Looks up a localized string similar to Level-width table must contain at least two levels..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NegativeAreaInWidthAreaTable">
            <summary>
              Looks up a localized string similar to Level-width-area table contains a negative area..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NegativeNumberOfCulverts">
            <summary>
              Looks up a localized string similar to In culvert {0}, a negative number of culverts have been specified. The number of culverts is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NegativeNumberOfCulvertsVD">
            <summary>
              Looks up a localized string similar to Culvert ID; Number of culverts.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NegativeWidthInWidthTable">
            <summary>
              Looks up a localized string similar to Level-width table contains a negative width..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoCrestLevel">
            <summary>
              Looks up a localized string similar to The crest level has not been specified for overflow weir {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoCrestLevelVD">
            <summary>
              Looks up a localized string similar to Weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoCulvertSectionGeometry">
            <summary>
              Looks up a localized string similar to In culvert {0}, the culvert section was not specified..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoCulvertSectionGeometryVD">
            <summary>
              Looks up a localized string similar to Culvert ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoDHQTable">
            <summary>
              Looks up a localized string similar to DeltaH-Q data table not set for pump.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoDQRelationDefinedInSW">
            <summary>
              Looks up a localized string similar to No depth-Q relation is defined for stormwater inlet {0} which is of type SAG. Stormwater inlets of type SAG require a depth-Q relation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoDQRelationDefinedInSWVD">
            <summary>
              Looks up a localized string similar to Stormwater inlet ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoExplicitSupport">
            <summary>
              Looks up a localized string similar to The {0} structure at location {1} does not support explicit calculations..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoExplicitSupportVD">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoGeometryCrossSectionFound">
            <summary>
              Looks up a localized string similar to In weir {0}, the required geometry cross section is not available..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoGeometryCrossSectionFoundVD">
            <summary>
              Looks up a localized string similar to Weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoHQTable">
            <summary>
              Looks up a localized string similar to H-Q data table not set for pump.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoLevelWidthDataSupplied">
            <summary>
              Looks up a localized string similar to Data on structure width was not supplied for structure {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoLevelWidthDataSuppliedVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoLocation">
            <summary>
              Looks up a localized string similar to Structure {0} does not have a location..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoPolygonsDefinedInOrifice">
            <summary>
              Looks up a localized string similar to No polygons defined in orifice {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoPolygonsDefinedInOrificeVD">
            <summary>
              Looks up a localized string similar to Orifice ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoQQRelationDefinedInSW">
            <summary>
              Looks up a localized string similar to No QQ relations are defined for stormwater inlet {0} of type OnGrade. Stormwater inlets of type OnGrade require at least one QQ relation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoQQRelationDefinedInSWVD">
            <summary>
              Looks up a localized string similar to Stormwater inlet ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoUpstreamXSInOrifice">
            <summary>
              Looks up a localized string similar to No upstream cross section found for orifice {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoUpstreamXSInOrificeVD">
            <summary>
              Looks up a localized string similar to Orifice ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoWeirID">
            <summary>
              Looks up a localized string similar to Found a weir without and ID..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoWeirLocation">
            <summary>
              Looks up a localized string similar to Overflow weir {0} does not have a location..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoWeirLocationVD">
            <summary>
              Looks up a localized string similar to Weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoXSFound">
            <summary>
              Looks up a localized string similar to In weir {0}, the required geometry cross section could not be found. The cross section should be in reach {1}, chainage {2} with topo ID {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_NoXSFoundVD">
            <summary>
              Looks up a localized string similar to Weir ID; Reach ID; Chainage; Topo ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_OrificeDimensionsTooSmall">
            <summary>
              Looks up a localized string similar to Orifice shape data processing failed in orifice {0}. Dimensions are too small. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_OrificeDimensionsTooSmall_VD">
            <summary>
              Looks up a localized string similar to Orifice ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_OverFlowWeirFlowAngleIsWrong">
            <summary>
              Looks up a localized string similar to In overflow weir {0}, the flow angle is wrong. The weir flow angle must be between 0 and 90 but it is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_OverFlowWeirFlowAngleIsWrongVD">
            <summary>
              Looks up a localized string similar to Weir ID; Angle.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_OverFlowWeirNoIDForQhTable">
            <summary>
              Looks up a localized string similar to In overflow weir {0}, the ID for the QH table is missing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_OverFlowWeirNoIDForQhTableVD">
            <summary>
              Looks up a localized string similar to Weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_OverFlowWeirWrongMethodNumber">
            <summary>
              Looks up a localized string similar to In overflow weir {0}, a wrong method number has been specified. Only method numbers 1 and 2 are supported. The method number is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_OverFlowWeirWrongMethodNumberVD">
            <summary>
              Looks up a localized string similar to Weir ID; Method number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_OverFlowWeirWrongWeirType">
            <summary>
              Looks up a localized string similar to In overflow weir {0}, the crest type {1}. Only rectangular crest type is supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_OverFlowWeirWrongWeirTypeVD">
            <summary>
              Looks up a localized string similar to Weir ID; Crest type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_PumpDischargesChangeSign">
            <summary>
              Looks up a localized string similar to Pump disharges must be uniformly positive or negative for pump {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_PumpDischargesChangeSignVD">
            <summary>
              Looks up a localized string similar to Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_PumpNegAccTime">
            <summary>
              Looks up a localized string similar to Pump acceleration time is negative: {0} for pump {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_PumpNegAccTimeVD">
            <summary>
              Looks up a localized string similar to Pump acceleration time; Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_PumpNegDecTime">
            <summary>
              Looks up a localized string similar to Pump deceleration time is negative: {0} for pump {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_PumpNegDecTimeVD">
            <summary>
              Looks up a localized string similar to Pump deceleration time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_PumpNoTableSpecifiedForQdHPump">
            <summary>
              Looks up a localized string similar to No data specified for Q - Delta H pump {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_PumpNoTableSpecifiedForQdHPumpVD">
            <summary>
              Looks up a localized string similar to Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_PumpNoTableSpecifiedForQHPump">
            <summary>
              Looks up a localized string similar to No data specified for Q - H pump {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_PumpNoTableSpecifiedForQHPumpVD">
            <summary>
              Looks up a localized string similar to Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_PumpStopLevelLTStartLevel">
            <summary>
              Looks up a localized string similar to Pump stop level {0} is larger than pump start level {1} for pump {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_PumpStopLevelLTStartLevelVD">
            <summary>
              Looks up a localized string similar to Pump stop level; Pump start level; Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_PumpSuppressionCollision">
            <summary>
              Looks up a localized string similar to Only one of UseSuppressionFactor and UseMaximumDischarge can be active for pump {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_PumpSuppressionCollisionVD">
            <summary>
              Looks up a localized string similar to Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_RadialGateRadiusAndTrunnionLessThanHeight">
            <summary>
              Looks up a localized string similar to In radial gate {0}, radius plus trunnion is smalller than the height. Radius plus trunnion is {1} and height is {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_RadialGateRadiusAndTrunnionLessThanHeightVD">
            <summary>
              Looks up a localized string similar to Gate ID; Radius plus trunnion; Height.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_RadialGateRadiusLessThanTrunnion">
            <summary>
              Looks up a localized string similar to In radial gate {0}, the radius must be larger than trunnion. The radius is {1} and the trunnion is {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_RadialGateRadiusLessThanTrunnionVD">
            <summary>
              Looks up a localized string similar to Gate ID; Radius; Trunnion.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_RadialGateTuneFactorMustBePositive">
            <summary>
              Looks up a localized string similar to In radial gate {0}, the tune factor must be positive. The tune factor is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_RadialGateTuneFactorMustBePositiveVD">
            <summary>
              Looks up a localized string similar to Gate ID; Tune factor.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_RectangularSectionHeightMustBePositive">
            <summary>
              Looks up a localized string similar to The height of rectangular section must be positive. The height is {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_RectangularSectionHeightMustBePositiveVD">
            <summary>
              Looks up a localized string similar to Height.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_RectangularSectionWidthMustBePositive">
            <summary>
              Looks up a localized string similar to The width of rectangular section must be positive. The width is {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_RectangularSectionWidthMustBePositiveVD">
            <summary>
              Looks up a localized string similar to Width.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_RegularSideStrNotSupp">
            <summary>
              Looks up a localized string similar to Regular structure and side structure at the same location is not supported, at {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_RegularSideStrNotSuppVD">
            <summary>
              Looks up a localized string similar to Location.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ReservoirVolumeDecreasing">
            <summary>
              Looks up a localized string similar to Volume of reservoir cannot decrease with water level, structure {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ReservoirVolumeDecreasingVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ReservoirVolumeNegativeSurfaceArea">
            <summary>
              Looks up a localized string similar to  For structure {0}, a level-area table cannot be derived from the level-volume table. The geometry is assumed to vary linearly between levels, but at level {1} the increase in volume from previous level value  is too small compared to the area at previous level and the height between levels..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ReservoirVolumeNegativeSurfaceAreaHint">
            <summary>
              Looks up a localized string similar to Insert additional levels in the level-volume table, increase the volumes or specify a level-area table..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ReservoirVolumeNegativeSurfaceAreaVD">
            <summary>
              Looks up a localized string similar to Structure ID; Level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_RoughnessForGradualChange">
            <summary>
              Looks up a localized string similar to In energy loss structure {0}, the roughness coefficient for gradual change is negative. The roughness is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_RoughnessForGradualChangeVD">
            <summary>
              Looks up a localized string similar to Structure ID; Roughness.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_SluiceGateHeightMustBePositive">
            <summary>
              Looks up a localized string similar to In sluice gate {0}, the height of the gate must be positive. The height is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_SluiceGateHeightMustBePositiveVD">
            <summary>
              Looks up a localized string similar to Gate ID; Height.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_StructureIdIsNotUnique">
            <summary>
              Looks up a localized string similar to There are several structures with ID {0}. Structure IDs must be unique..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_StructureSectionUndefined">
            <summary>
              Looks up a localized string similar to Structure section not available, can not load structures..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_StructureSectionVersion">
            <summary>
              Looks up a localized string similar to Version of structure section is old, indicating an old file format: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_StructureSectionVersionVD">
            <summary>
              Looks up a localized string similar to Structure section version number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucDwsWLInColumnHeaderMustIncrease">
            <summary>
              Looks up a localized string similar to In tabulated bridge structure {0}, the downstream water level in the column header must increase..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucDwsWLInColumnHeaderMustIncreaseVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucDwsWLInRowheaderMustIncrease">
            <summary>
              Looks up a localized string similar to In tabulated bridge structure {0}, the downstream water level in the row header must increase..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucDwsWLInRowheaderMustIncreaseVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucDwsWLMustDecreaseInRow">
            <summary>
              Looks up a localized string similar to In tabulated bridge structure {0}, the downstream water level in row {1} must decrease..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucDwsWLMustDecreaseInRowVD">
            <summary>
              Looks up a localized string similar to Structure ID; Row number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucDwsWLMustIncreaseInCol">
            <summary>
              Looks up a localized string similar to In tabulated bridge structure {0}, the downstream water level in column {1} must increase..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucDwsWLMustIncreaseInColVD">
            <summary>
              Looks up a localized string similar to Structure ID; Column number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucTooFewColumns">
            <summary>
              Looks up a localized string similar to In tabulated bridge structure {0}, there must be at least four columns in the weir table. There are {1} columns..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucTooFewColumnsVD">
            <summary>
              Looks up a localized string similar to Structure ID; Number of columns.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucTooFewRows">
            <summary>
              Looks up a localized string similar to In tabulated bridge structure {0}, there must be at least four rows in the weir table. There are {1} rows..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucTooFewRowsVD">
            <summary>
              Looks up a localized string similar to Structure ID; Number of roes.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucUpsWLInRowheaderMustIncrease">
            <summary>
              Looks up a localized string similar to In tabulated bridge structure {0}, the upstream water level in the row header must increase..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucUpsWLInRowheaderMustIncreaseVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucUpsWLMustIncreaseInCol">
            <summary>
              Looks up a localized string similar to In tabulated bridge structure {0}, the upstream water level in column {1} must increase..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucUpsWLMustIncreaseInColVD">
            <summary>
              Looks up a localized string similar to Structure ID; Column number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucUpsWLMustIncreaseInRow">
            <summary>
              Looks up a localized string similar to In tabulated bridge structure {0}, the upstream water level in row {1} must increase..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabBridgeStrucUpsWLMustIncreaseInRowVD">
            <summary>
              Looks up a localized string similar to Structure ID; Row number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucDwsWLInColumnHeaderMustIncrease">
            <summary>
              Looks up a localized string similar to In tabulated structure {0}, the downstream water level in the column header must increase..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucDwsWLInColumnHeaderMustIncreaseVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucDwsWLInRowheaderMustIncrease">
            <summary>
              Looks up a localized string similar to In tabulated structure {0}, the downstream water level in the row header must increase..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucDwsWLInRowheaderMustIncreaseVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucDwsWLMustDecreaseInRow">
            <summary>
              Looks up a localized string similar to In tabulated structure {0}, the downstream water level in row {1} must decrease..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucDwsWLMustDecreaseInRowVD">
            <summary>
              Looks up a localized string similar to Structure ID; Row number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucDwsWLMustIncreaseInCol">
            <summary>
              Looks up a localized string similar to In tabulated structure {0}, the downstream water level in column {1} must increase..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucDwsWLMustIncreaseInColVD">
            <summary>
              Looks up a localized string similar to Structure ID; Column number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucTooFewColumns">
            <summary>
              Looks up a localized string similar to In tabulated structure {0}, there must be at least four columns in the weir table. There are {1} columns..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucTooFewColumnsVD">
            <summary>
              Looks up a localized string similar to Structure ID; Number of columns.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucTooFewRows">
            <summary>
              Looks up a localized string similar to In tabulated structure {0}, there must be at least four rows in the weir table. There are {1} rows..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucTooFewRowsVD">
            <summary>
              Looks up a localized string similar to Structure ID; Number of roes.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucUpsWLInRowheaderMustIncrease">
            <summary>
              Looks up a localized string similar to In tabulated structure {0}, the upstream water level in the row header must increase..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucUpsWLInRowheaderMustIncreaseVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucUpsWLMustIncreaseInCol">
            <summary>
              Looks up a localized string similar to In tabulated structure {0}, the upstream water level in column {1} must increase..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucUpsWLMustIncreaseInColVD">
            <summary>
              Looks up a localized string similar to Structure ID; Column number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucUpsWLMustIncreaseInRow">
            <summary>
              Looks up a localized string similar to In tabulated structure {0}, the upstream water level in row {1} must increase..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_TabStrucUpsWLMustIncreaseInRowVD">
            <summary>
              Looks up a localized string similar to Structure ID; Row number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_UncontrolledFreeFlowIsNegative">
            <summary>
              Looks up a localized string similar to In sluice gate {0}, the coefficient for uncontrolled free flow is negative. The coefficient is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_UncontrolledFreeFlowIsNegativeVD">
            <summary>
              Looks up a localized string similar to Gate ID; Coefficient.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_UncontrolledSubmergedFlowExponentIsNegative">
            <summary>
              Looks up a localized string similar to In sluice gate {0}, the exponent for uncontrolled submerged flow is negative. The exponent is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_UncontrolledSubmergedFlowExponentIsNegativeVD">
            <summary>
              Looks up a localized string similar to Gate ID; Exponent.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_UncontrolledSubmergedFlowIsNegative">
            <summary>
              Looks up a localized string similar to In sluice gate {0}, the coefficient for uncontrolled submerged flow is negative. The coefficient is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_UncontrolledSubmergedFlowIsNegativeVD">
            <summary>
              Looks up a localized string similar to Gate ID; Coefficient.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_UncontrolledSubmergedFlowLimitError">
            <summary>
              Looks up a localized string similar to In sluice gate {0}, upper limit must be higher than lower limit for uncontrolled submerged flow. Upper limit is {1}, lower limit is {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_UncontrolledSubmergedFlowLimitErrorVD">
            <summary>
              Looks up a localized string similar to Gate ID; Upper limit; Lower limit.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_UnderflowCoefficientOutsideAllowedInterval">
            <summary>
              Looks up a localized string similar to In structure {0}, the underflow coefficient is outside the allowed interval of [0; 1]. The value is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_UnderflowCoefficientOutsideAllowedIntervalVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_UnsupportedBridge">
            <summary>
              Looks up a localized string similar to Bridge structure(s) found: Bridge structures are not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_UnsupportedUserDefinedStructure">
            <summary>
              Looks up a localized string similar to User defined structure found: User defined structures are not supported..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_UpstreamWaterLevelIterationFailedToConverge">
            <summary>
              Looks up a localized string similar to In culvert {0}, the upstream water level iteration failed to converge..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_UpstreamWaterLevelIterationFailedToConvergeVD">
            <summary>
              Looks up a localized string similar to Culvert ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ValveDiameterIsBelowZero">
            <summary>
              Looks up a localized string similar to In valve {0}, the valve diameter is below zero. The diameter is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ValveDiameterIsBelowZeroVD">
            <summary>
              Looks up a localized string similar to Valve ID; Diameter.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ValveFlowAreaIsBelowZero">
            <summary>
              Looks up a localized string similar to In valve {0}, the valve flow area is below zero. The flow area is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ValveFlowAreaIsBelowZeroVD">
            <summary>
              Looks up a localized string similar to Valve ID; Flow area.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ValveInsufficientDataInFlowFactorTable">
            <summary>
              Looks up a localized string similar to In valve {0}, there must be at least two entries in the flow factor table..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ValveInsufficientDataInFlowFactorTableVD">
            <summary>
              Looks up a localized string similar to Valve ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ValveMethodNumberIsTooLarge">
            <summary>
              Looks up a localized string similar to In valve {0}, the valve calculation method must equal 1. The method number is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ValveMethodNumberIsTooLargeVD">
            <summary>
              Looks up a localized string similar to Valve ID; Method number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ValveOpeningIsAbove100">
            <summary>
              Looks up a localized string similar to In valve {0}, the valve opening is above 1. The opening is {1}. Valve opening is a fraction [0;1].
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ValveOpeningIsAbove100VD">
            <summary>
              Looks up a localized string similar to Valve ID; Opening.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ValveOpeningIsBelowZero">
            <summary>
              Looks up a localized string similar to In valve {0}, the valve opening is below zero. The opening is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ValveOpeningIsBelowZeroVD">
            <summary>
              Looks up a localized string similar to Valve ID; Opening.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ValveOpeningsOutOfBounds">
            <summary>
              Looks up a localized string similar to The valve openings in the flow factor table for valve {0} are not between 0 and 1..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_ValveOpeningsOutOfBoundsVD">
            <summary>
              Looks up a localized string similar to Valve ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_VariableSpeedConstantFlow">
            <summary>
              Looks up a localized string similar to A constant flow pump cannot apply variable speed. Pump ID: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_VariableSpeedConstantFlowVD">
            <summary>
              Looks up a localized string similar to Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_WeirCoefficientMustBePositive">
            <summary>
              Looks up a localized string similar to The weir coefficient of weir {0} is negative. The coefficient is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_WeirCoefficientMustBePositiveVD">
            <summary>
              Looks up a localized string similar to Weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_WeirHeightMustBePositive">
            <summary>
              Looks up a localized string similar to The height of weir {0} is negative. The height is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_WeirHeightMustBePositiveVD">
            <summary>
              Looks up a localized string similar to Weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_WeirNegativeCoefficient">
            <summary>
              Looks up a localized string similar to In overflow weir {0}, the weir cofficient is negative. The coefficient is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_WeirNegativeCoefficientVD">
            <summary>
              Looks up a localized string similar to Weir ID; Coefficient.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_WeirNegativeWidth">
            <summary>
              Looks up a localized string similar to In overflow weir {0}, the width is negative. The width is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_WeirNegativeWidthVD">
            <summary>
              Looks up a localized string similar to Weir ID; Width.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_WidthMustBePositive">
            <summary>
              Looks up a localized string similar to The width of structure {0} is negative. The width is {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_WidthMustBePositiveVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_WrongBoundaryForDambreak">
            <summary>
              Looks up a localized string similar to In dambreak structure {0}, the boundary type is wrong for boundary {1}. The boundary type must be &apos;Dambreak&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_WrongBoundaryForDambreakNWS">
            <summary>
              Looks up a localized string similar to In NWS dambreak structure {0}, the boundary type is wrong for boundary {1}. The boundary type must be &apos;Dambreak&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_WrongBoundaryForDambreakNWSPiping">
            <summary>
              Looks up a localized string similar to In NWS dambreak structure {0}, the boundary type is wrong for boundary {1}. The boundary type must be &apos;NWS DAMBRK piping&apos;..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_WrongBoundaryForDambreakNWSPipingVD">
            <summary>
              Looks up a localized string similar to Dambreak structure ID; Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_WrongBoundaryForDambreakNWSVD">
            <summary>
              Looks up a localized string similar to Dambreak structure ID; Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_ERR_WrongBoundaryForDambreakVD">
            <summary>
              Looks up a localized string similar to Dambreak structure ID; Boundary ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossFactorNegativeContraction">
            <summary>
              Looks up a localized string similar to Contraction headloss factor for negative flow is outside expected range for structure {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossFactorNegativeContractionVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossFactorNegativeExpansion">
            <summary>
              Looks up a localized string similar to Expansion headloss factor for negative flow is outside expected range for structure {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossFactorNegativeExpansionVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossFactorPositiveContraction">
            <summary>
              Looks up a localized string similar to Contraction headloss factor for positive flow is outside expected range for structure {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossFactorPositiveContractionVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossFactorPositiveExpansion">
            <summary>
              Looks up a localized string similar to Expansion headloss factor for positive flow is outside expected range for structure {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossFactorPositiveExpansionVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossFreeOverflowNegativeFlowFallsOutsideExpectedRange">
            <summary>
              Looks up a localized string similar to Headloss factor for free overflow (negative flow) falls outside expected range [0; 2] for structure {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossFreeOverflowNegativeFlowFallsOutsideExpectedRangeVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossFreeOverflowPositiveFlowFallsOutsideExpectedRange">
            <summary>
              Looks up a localized string similar to Headloss factor for free overflow (positive flow) falls outside expected range [0; 2] for structure {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossFreeOverflowPositiveFlowFallsOutsideExpectedRangeVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossInflowNegativeFlowFallsOutsideExpectedRange">
            <summary>
              Looks up a localized string similar to Headloss factor for inflow (negative flow) falls outside expected range [0; 2] for structure {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossInflowNegativeFlowFallsOutsideExpectedRangeVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossInflowPositiveFlowFallsOutsideExpectedRange">
            <summary>
              Looks up a localized string similar to Headloss factor for inflow (positive flow) falls outside expected range [0; 2] for structure {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossInflowPositiveFlowFallsOutsideExpectedRangeVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossOutflowNegativeFlowFallsOutsideExpectedRange">
            <summary>
              Looks up a localized string similar to Headloss factor for outflow (negative flow) falls outside expected range [0; 2] for structure {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossOutflowNegativeFlowFallsOutsideExpectedRangeVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossOutflowPositiveFlowFallsOutsideExpectedRange">
            <summary>
              Looks up a localized string similar to Headloss factor for outflow (positive flow) falls outside expected range [0; 2] for structure {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HeadLossOutflowPositiveFlowFallsOutsideExpectedRangeVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HintManningsN">
            <summary>
              Looks up a localized string similar to Mannings n of {0} falls outside expected interval [0.005; 0.1] for structure {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_HintManningsNVD">
            <summary>
              Looks up a localized string similar to Manning n; Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_ZeroMaximumSpeed">
            <summary>
              Looks up a localized string similar to Maximum speed is zero. Structure {0} is no longer operational..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_ZeroMaximumSpeedVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_ZeroWidth">
            <summary>
              Looks up a localized string similar to Zero width specified for structure {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HIN_ZeroWidthVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HINT_CrossSectionNeededWhenUsingContractionExpansionLosses">
            <summary>
              Looks up a localized string similar to When using contraction and expansion losses, a cross section must be defined for structure {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HINT_CrossSectionNeededWhenUsingContractionExpansionLossesVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HINT_HeadLossFactorNegativeUserDefinedOutsideExpectedRange">
            <summary>
              Looks up a localized string similar to User defined headloss factor for negative flow is outside exptected range for Energy Loss structure {0}. Value is {1}, expected to be less than 2..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HINT_HeadLossFactorNegativeUserDefinedOutsideExpectedRangeVD">
            <summary>
              Looks up a localized string similar to Structure ID; Headloss factor.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HINT_HeadLossFactorPositiveUserDefinedOutsideExpectedRange">
            <summary>
              Looks up a localized string similar to User defined headloss factor for positive flow is outside exptected range for Energy Loss structure {0}. Value is {1}, expected to be less than 2..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_HINT_HeadLossFactorPositiveUserDefinedOutsideExpectedRangeVD">
            <summary>
              Looks up a localized string similar to Structure ID; Headloss factor.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_BridgeStructureIdLocation">
            <summary>
              Looks up a localized string similar to Bridge: {0} at river: {1} chainage: {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_BridgeStructureIdLocationVD">
            <summary>
              Looks up a localized string similar to ID;ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_BridgeStructureLocation">
            <summary>
              Looks up a localized string similar to Bridge at river: {0} chainage: {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_BridgeStructureLocationVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_CulvertIdLocation">
            <summary>
              Looks up a localized string similar to Culvert with ID: {0} at location: ({1},{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_CulvertIdLocationVD">
            <summary>
              Looks up a localized string similar to ID; ReachName; Chainage .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_CulvertLocation">
            <summary>
              Looks up a localized string similar to Culvert at location: ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_CulvertLocationVD">
            <summary>
              Looks up a localized string similar to ReachName; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_DamBreakIdLocation">
            <summary>
              Looks up a localized string similar to Dam Break structrure with ID: {0} at location: ({1},{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_DamBreakIdLocationVD">
            <summary>
              Looks up a localized string similar to q.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_DamBreakLocation">
            <summary>
              Looks up a localized string similar to Dam Break structure at location: ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_DamBreakLocationVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_EnergyLossIdLocation">
            <summary>
              Looks up a localized string similar to Structure (Energy Loss) with ID: {0} at location: ({1},{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_EnergyLossIdLocationVD">
            <summary>
              Looks up a localized string similar to ID;ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_EnergyLossLocation">
            <summary>
              Looks up a localized string similar to Structure (Energy Loss) at location: ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_EnergyLossLocationVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_HonmaWeirIdLocation">
            <summary>
              Looks up a localized string similar to Weir (Honma) with ID: {0} at location: ({1},{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_HonmaWeirIdLocationVD">
            <summary>
              Looks up a localized string similar to ID;ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_HonmaWeirLocation">
            <summary>
              Looks up a localized string similar to Weir (Honma) at location: ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_HonmaWeirLocationVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_OrificeIdLocation">
            <summary>
              Looks up a localized string similar to Orifice with ID: {0} at location: ({1},{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_OrificeIdLocationVD">
            <summary>
              Looks up a localized string similar to ID;ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_OrificeLocation">
            <summary>
              Looks up a localized string similar to Orifice at location: ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_OrificeLocationVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_OverflowFormulaIdLocation">
            <summary>
              Looks up a localized string similar to Structure (OverflowFormula) with ID: {0} at location: ({1},{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_OverflowFormulaIdLocationVD">
            <summary>
              Looks up a localized string similar to ID;ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_OverflowFormulaLocation">
            <summary>
              Looks up a localized string similar to Structure (OverflowFormula) at location: ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_OverflowFormulaLocationVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_PumpIdLocation">
            <summary>
              Looks up a localized string similar to Pump with ID: {0} at location: ({1},{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_PumpIdLocationVD">
            <summary>
              Looks up a localized string similar to ID; Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_PumpLocation">
            <summary>
              Looks up a localized string similar to Pump at location: ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_PumpLocationVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_QHStructureIdLocation">
            <summary>
              Looks up a localized string similar to Structure (QH) with ID: {0} at location: ({1},{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_QHStructureIdLocationVD">
            <summary>
              Looks up a localized string similar to ID;ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_QHStructureLocation">
            <summary>
              Looks up a localized string similar to Structure (QH) at location: ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_QHStructureLocationVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_RadialGateIdLocation">
            <summary>
              Looks up a localized string similar to Radial Gate with ID: {0} at location: ({1},{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_RadialGateIdLocationVD">
            <summary>
              Looks up a localized string similar to ID;ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_RadialGateLocation">
            <summary>
              Looks up a localized string similar to Radial Gate at location: ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_RadialGateLocationVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_SluiceGateIdLocation">
            <summary>
              Looks up a localized string similar to Sluice Gate with ID: {0} at location: ({1},{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_SluiceGateIdLocationVD">
            <summary>
              Looks up a localized string similar to ID;ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_SluiceGateLocation">
            <summary>
              Looks up a localized string similar to Sluice Gate at location: ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_SluiceGateLocationVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_SpecialWeirIdLocation">
            <summary>
              Looks up a localized string similar to Weir (Special) with ID: {0} at location: ({1},{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_SpecialWeirIdLocationVD">
            <summary>
              Looks up a localized string similar to ID;ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_SpecialWeirLocation">
            <summary>
              Looks up a localized string similar to Weir (Special) at location: ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_SpecialWeirLocationVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_Structure">
            <summary>
              Looks up a localized string similar to Structure .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_StructureLocation">
            <summary>
              Looks up a localized string similar to Structure at location: ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_StructureLocationVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_TabulatedBridgeStructureIdLocation">
            <summary>
              Looks up a localized string similar to Bridge Structure (Tabulated) with ID: {0} at location: ({1},{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_TabulatedBridgeStructureIdLocationVD">
            <summary>
              Looks up a localized string similar to ID;ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_TabulatedBridgeStructureLocation">
            <summary>
              Looks up a localized string similar to Bridge Structure (Tabulated) at location: ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_TabulatedBridgeStructureLocationVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_TabulatedStructureIdLocation">
            <summary>
              Looks up a localized string similar to Structure (Tabulated) with ID: {0} at location: ({1},{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_TabulatedStructureIdLocationVD">
            <summary>
              Looks up a localized string similar to ID;ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_TabulatedStructureLocation">
            <summary>
              Looks up a localized string similar to Structure (Tabulated) at location: ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_TabulatedStructureLocationVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_UnderflowGateIdLocation">
            <summary>
              Looks up a localized string similar to Underflow Gate with ID: {0} at location: ({1},{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_UnderflowGateIdLocationVD">
            <summary>
              Looks up a localized string similar to ID;ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_UnderflowGateLocation">
            <summary>
              Looks up a localized string similar to Underflow Gate at location: ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_UnderflowGateLocationVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_ValveIdLocation">
            <summary>
              Looks up a localized string similar to Valve with ID: {0} at location: ({1},{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_ValveIdLocationVD">
            <summary>
              Looks up a localized string similar to ID;ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_ValveLocation">
            <summary>
              Looks up a localized string similar to Valve at location: ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_ValveLocationVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_VillemonteWeirIdLocation">
            <summary>
              Looks up a localized string similar to Weir (VilleMonte) with ID: {0} at location: ({1},{2}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_VillemonteWeirIdLocationVd">
            <summary>
              Looks up a localized string similar to ID;ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_VillemonteWeirLocation">
            <summary>
              Looks up a localized string similar to Weir (Villemonte) at location: ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_TXT_VillemonteWeirLocationVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_BCWeirMaxIterationsExceeded">
            <summary>
              Looks up a localized string similar to Maximum number of iterations exceeded in broad crested weir {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_BCWeirMaxIterationsExceededVD">
            <summary>
              Looks up a localized string similar to Weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_BridgeInconsistentGeometry">
            <summary>
              Looks up a localized string similar to Bridge: {0} - The geometry information is inconsistent. The arch curvature radius was changed from {1} to {2}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_BridgeInconsistentGeometryVD">
            <summary>
              Looks up a localized string similar to ID; Arc curvature radius; Min. curvature radius.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_BridgeStagnationPoints">
            <summary>
              Looks up a localized string similar to Bridge at river: {0} chainage: {1} - Overlap between bridge openings can cause error values in th default stagnation points..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_BridgeStagnationPointsUpdatedDown">
            <summary>
              Looks up a localized string similar to Bridge at river: {0} chainage: {1} - Stagnation point was outside range of downstream cross section, stagnation point was updated from {2} to {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_BridgeStagnationPointsUpdatedDownVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage;Stagnationpoint bridge downstream left; Downstream crossection right levee bank.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_BridgeStagnationPointsUpdatedUp">
            <summary>
              Looks up a localized string similar to Bridge at river: {0} chainage: {1} - Stagnation point was outside range of upstream cross section, stagnation point was updated from {2} to {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_BridgeStagnationPointsUpdatedUpVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage;Stagnationpoint bridge upstream left; Upstream crossection right levee bank.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_BridgeStagnationPointsVD">
            <summary>
              Looks up a localized string similar to ReachName;Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_BridgeWaterWayBlocking">
            <summary>
              Looks up a localized string similar to Bridge: {0} - The blockage fraction: {1} is set equal or greater than 1. Corresponding to 100% blockage. The blockage needs to be less than uniry. The blockage fraction is changed to 0.990 corresponding to 99% blockage..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_BridgeWaterWayBlockingVD">
            <summary>
              Looks up a localized string similar to ID; Blockage fraction.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_DamBreakBreachFinalBottomLevelBelowBottomLevel">
            <summary>
              Looks up a localized string similar to Breach final bottom level ({3}) is below bed level ({4}) for down- or up-stream cross section: Dam break structure {0} at location ({1}, {2})..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_DamBreakBreachFinalBottomLevelBelowBottomLevelVD">
            <summary>
              Looks up a localized string similar to Structure ID; Reach ID; Chainage; Breach Final Bottom Level; Cross Section Bed Level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_DambreakOutsideTSApplicationInterval">
            <summary>
              Looks up a localized string similar to In dambreak structure {0}, the controlling time series do not cover the entire dam breach period. The first time outside the time series interval was at simulation time {1}. The last values of the time series were used outside the time series interval..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_DambreakOutsideTSApplicationIntervalVD">
            <summary>
              Looks up a localized string similar to Dambreak ID; Simulation time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_GateLevelLessThanSilllevel">
            <summary>
              Looks up a localized string similar to Gate Level is {1} which is less than sill level at {2} for gate {0}. Please adjust gate level and/or sill level..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_GateLevelLessThanSilllevelVD">
            <summary>
              Looks up a localized string similar to Gate ID; Gate level; Sill level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_InitialDischargeLargerThanMax">
            <summary>
              Looks up a localized string similar to Initial discharge is larger than maximum discharge for discharge gate {0}. Setting initial discharge to max discharge..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_MaximumGateLevelBelowSilllevel">
            <summary>
              Looks up a localized string similar to The maximum gate level is {1} which is below the sill level at {2} for gate {0}. Gate level will always equal the sill level..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_MaximumGateLevelBelowSilllevelVD">
            <summary>
              Looks up a localized string similar to Gate ID; Max level; Sill level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_NoDownstreamXSInCulvert">
            <summary>
              Looks up a localized string similar to No downstream cross section found for culvert {0}. Using very large cross secion..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_NoDownstreamXSInCulvertVD">
            <summary>
              Looks up a localized string similar to Culvert ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_NonDecreasingQ">
            <summary>
              Looks up a localized string similar to Q is not decreasing in DeltaH-Q table for pump {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_NonDecreasingQVD">
            <summary>
              Looks up a localized string similar to Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_NonIncreasingQ">
            <summary>
              Looks up a localized string similar to Q is not increasing in DeltaH-Q table for pump {0} which is not allowed when Q is negative.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_NonIncreasingQVD">
            <summary>
              Looks up a localized string similar to Pump ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_NoUpstreamXSInCulvert">
            <summary>
              Looks up a localized string similar to No upstream cross section found for culvert {0}. Using very large cross secion..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_NoUpstreamXSInCulvertVD">
            <summary>
              Looks up a localized string similar to Culvert ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_PipeTopBelowBreachLevel">
            <summary>
              Looks up a localized string similar to In NWS dambreak structure {0} the pipe top level is below the breach level. The pipe top level is at {1} while the breach bottom level is at {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_PipeTopBelowBreachLevelVD">
            <summary>
              Looks up a localized string similar to Dambreak structure ID; Pipe top level; Breach bottom level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_SimulationStartTimeNotSet">
            <summary>
              Looks up a localized string similar to Simulation start time is unknown in dam break {0}. Dam break text output file will use {1} as the simulation start time. This will not affect the discharge through the dam break but only the text file output from the dam break..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_SimulationStartTimeNotSetVD">
            <summary>
              Looks up a localized string similar to Dam Break ID; Time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_SWInletZeroHeight">
            <summary>
              Looks up a localized string similar to Stormwater inlet structure {0} has zero height..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_SWInletZeroHeightVD">
            <summary>
              Looks up a localized string similar to Stormwater inlet ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_SWInletZeroWidth">
            <summary>
              Looks up a localized string similar to Stormwater inlet structure {0} has zero width..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_SWInletZeroWidthVD">
            <summary>
              Looks up a localized string similar to Stormwater inlet ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabBridgeStrucDischargeFactorNotPositive">
            <summary>
              Looks up a localized string similar to There is a non positive discharge factor in tabulated bridge structure {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabBridgeStrucDischargeFactorNotPositiveVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabBridgeStrucQInColumnHeaderMustIncrease">
            <summary>
              Looks up a localized string similar to In tabulated bridge structure {0}, the discharge in the column header is not increasing or constant..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabBridgeStrucQInColumnHeaderMustIncreaseVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabBridgeStrucQMustDecreaseInRow">
            <summary>
              Looks up a localized string similar to In tabulated bridge structure {0}, the discharge is not decreasing or constant in row {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabBridgeStrucQMustDecreaseInRowVD">
            <summary>
              Looks up a localized string similar to Structure ID; Row number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabBridgeStrucQMustIncreaseInCol">
            <summary>
              Looks up a localized string similar to In tabulated bridge structure {0}, the discharge is not increasing or constant in column {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabBridgeStrucQMustIncreaseInColVD">
            <summary>
              Looks up a localized string similar to Structure ID; Column number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabBridgeStrucWLHigherThanTable">
            <summary>
              Looks up a localized string similar to Water level in tabulated bridge structure {0} is {1} which is higher than the highest tabulated level..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabBridgeStrucWLHigherThanTableVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabBridgeStrucWLLowerThanTable">
            <summary>
              Looks up a localized string similar to Water level in tabulated bridge structure {0} is {1} which is lower than the lowest tabulated level..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabBridgeStrucWLLowerThanTableVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabStrucDischargeFactorNotPositive">
            <summary>
              Looks up a localized string similar to There is a non positive discharge factor in tabulated structure {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabStrucDischargeFactorNotPositiveVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabStrucQInColumnHeaderMustIncrease">
            <summary>
              Looks up a localized string similar to In tabulated structure {0}, the discharge in the column header is not increasing or constant..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabStrucQInColumnHeaderMustIncreaseVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabStrucQMustDecreaseInRow">
            <summary>
              Looks up a localized string similar to In tabulated structure {0}, the discharge is not decreasing or constant in row {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabStrucQMustDecreaseInRowVD">
            <summary>
              Looks up a localized string similar to Structure ID; Row number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabStrucQMustIncreaseInCol">
            <summary>
              Looks up a localized string similar to In tabulated structure {0}, the discharge is not increasing or constant in column {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabStrucQMustIncreaseInColVD">
            <summary>
              Looks up a localized string similar to Structure ID; Column number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabStrucWLHigherThanTable">
            <summary>
              Looks up a localized string similar to Water level in tabulated structure {0} is {1} which is higher than the highest tabulated level..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabStrucWLHigherThanTableVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabStrucWLLowerThanTable">
            <summary>
              Looks up a localized string similar to Water level in tabulated structure {0} is {1} which is lower than the lowest tabulated level..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_TabStrucWLLowerThanTableVD">
            <summary>
              Looks up a localized string similar to Structure ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ValveFlowFactorTableCouldBeDisorderly">
            <summary>
              Looks up a localized string similar to The flow factors are not increasing with decreasing valve openings for valve {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ValveFlowFactorTableCouldBeDisorderlyVD">
            <summary>
              Looks up a localized string similar to Valve ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_WeirHasZeroWidth">
            <summary>
              Looks up a localized string similar to Weir {0} has zero width..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_WeirHasZeroWidthVD">
            <summary>
              Looks up a localized string similar to Weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroControlledFreeFlowCoefficient">
            <summary>
              Looks up a localized string similar to In sluice gate {9}, the controlled free flow coefficient is zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroControlledFreeFlowCoefficientVD">
            <summary>
              Looks up a localized string similar to Gate ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroControlledFreeFlowExponent">
            <summary>
              Looks up a localized string similar to In sluice gate {9}, the controlled free flow exponent is zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroControlledFreeFlowExponentVD">
            <summary>
              Looks up a localized string similar to Gate ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroControlledSubmergedFlowCoefficient">
            <summary>
              Looks up a localized string similar to In sluice gate {9}, the controlled submerged flow coefficient is zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroControlledSubmergedFlowCoefficientVD">
            <summary>
              Looks up a localized string similar to Gate ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroControlledSubmergedFlowExponent">
            <summary>
              Looks up a localized string similar to In sluice gate {9}, the controlled submerged flow exponent is zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroControlledSubmergedFlowExponentVD">
            <summary>
              Looks up a localized string similar to Gate ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroUncontrolledFreeFlowCoefficient">
            <summary>
              Looks up a localized string similar to In sluice gate {9}, the uncontrolled free flow coefficient is zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroUncontrolledFreeFlowCoefficientVD">
            <summary>
              Looks up a localized string similar to Gate ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroUncontrolledSubmergedFlowCoefficient">
            <summary>
              Looks up a localized string similar to In sluice gate {9}, the uncontrolled submerged flow coefficient is zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroUncontrolledSubmergedFlowCoefficientVD">
            <summary>
              Looks up a localized string similar to Gate ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroUncontrolledSubmergedFlowExponent">
            <summary>
              Looks up a localized string similar to In sluice gate {9}, the uncontrolled submerged flow exponent is zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroUncontrolledSubmergedFlowExponentVD">
            <summary>
              Looks up a localized string similar to Gate ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroWeirCoefficient">
            <summary>
              Looks up a localized string similar to Weir {0} has zero weir coefficient..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroWeirCoefficientVD">
            <summary>
              Looks up a localized string similar to Weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroWeirHeight">
            <summary>
              Looks up a localized string similar to Weir {0} has zero height..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.ST_WAR_ZeroWeirHeightVD">
            <summary>
              Looks up a localized string similar to Weir ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_ERR_OnlyManningInMU">
            <summary>
              Looks up a localized string similar to ST Module only supports Manning resistance formulation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_ERR_Porosity">
            <summary>
              Looks up a localized string similar to Given porosity {0} for component {1} must be between 0 and 1..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_ERR_STDataMissing">
            <summary>
              Looks up a localized string similar to ST data is missing, but ST enabled..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_ERR_STLicenseNotAvail">
            <summary>
              Looks up a localized string similar to No ST license available. Cannot run ST in demo mode..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_ERR_TooManyLayers">
             <summary>
               Looks up a localized string similar to Only 0, 1, or 2 sediment layers supported.
            0 layer: 1 non-cohesive sediment component, corresponds to unlimited sediment supply
            1 layer: 1 or several sediment components, corresponds to limited sediment availability
            2 layers: 2 or more sediment components, active layer and passive layer with interaction between them.
             </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_ERR_TotalTransNotSupp">
            <summary>
              Looks up a localized string similar to ST Boundary with total sediment transport not supported. Specify sediment inflow for each fraction..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_ERR_TwoLayers">
            <summary>
              Looks up a localized string similar to Two layer sediment model only allowed with two or more sediment components.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_ERR_ZeroLayer">
            <summary>
              Looks up a localized string similar to Zero layer sediment model only allowed with one non-cohesive sediment component.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_HINT_UseRubeyFormula">
            <summary>
              Looks up a localized string similar to When using User-defined Fall velocity definition, local grain size values is not taken into account and the fall velocity value is constant. Consider using Rubey formula to obtain a distributed fall velocity for fraction: {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_HINT_UseRubeyFormulaVD">
            <summary>
              Looks up a localized string similar to Fraction ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_WAR_BedloadSTLimited">
            <summary>
              Looks up a localized string similar to Sediment bed load transport limited by factor {0}, at time {1} at location {2}. Try to decrease time step..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_WAR_BedloadSTLimitedVD">
            <summary>
              Looks up a localized string similar to Scaling factor; Time; Reach, chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_WAR_Egiazaroff">
            <summary>
              Looks up a localized string similar to Only one non-cohesive component and Egiazaroff hiding is on. Egiazaroff hiding can only be applied with more than one non-cohesive component. Therefore Egiazaroff is disabled..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_WAR_ErosionExponent">
            <summary>
              Looks up a localized string similar to Erosion exponent {0} for cohesive component {1} is normally between 1 and 3..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_WAR_GrainSizeBig">
            <summary>
              Looks up a localized string similar to Entered grain size for component [1} is very big: {0}, note that it must be entered in meter..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_WAR_InitPipeFilled">
            <summary>
              Looks up a localized string similar to The initial sediment depth: {0}&gt;={1} : 99% of crossection height of Reach: {2}. Setting the sediment depth to {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_WAR_InitPipeFilledVD">
            <summary>
              Looks up a localized string similar to Initial sediment depth; Crossection Height; Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_WAR_PipeFilled">
            <summary>
              Looks up a localized string similar to Link {0} was filled with sediment in {1} gridpoints. One gridpoint was filled for {2} timesteps..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_WAR_PipeFilledVD">
            <summary>
              Looks up a localized string similar to Reach ID; Gridpoint count; Timestep count.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_WAR_RelDensity">
            <summary>
              Looks up a localized string similar to Relative density given {0} is very big or small. Common value is 2.65..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_WAR_SedimentTransportLimited">
            <summary>
              Looks up a localized string similar to Sediment transport limited {1} times at reach {4}. Smallest reduction factor was {0} which occurred at {2} at {3}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_WAR_SedimentTransportLimitedVD">
            <summary>
              Looks up a localized string similar to Minimum scaling factor; Number of down scales;  Time; Reach; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_WAR_ShearVelocity">
            <summary>
              Looks up a localized string similar to Shear velocity is not supported (cohesive sediment: {0}), value will be used as shear stress..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_WAR_SusploadSTLimited">
            <summary>
              Looks up a localized string similar to Sediment suspended load transport limited by factor {0}, at time {1} at location {2}. Try to decrease time step..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_WAR_SusploadSTLimitedVD">
            <summary>
              Looks up a localized string similar to Scaling factor; Time; Reach, chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.STM_WAR_TotalLoad">
            <summary>
              Looks up a localized string similar to Total load model is treated as bed load in MIKE1D. To use bed and suspended load, use a st1d file. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.SWQ_ComponentNotMatching">
            <summary>
              Looks up a localized string similar to Component in the boundary specification {0} does not match the component {1} in surface pollutant specification..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.SWQ_ComponentNotMatchingVD">
            <summary>
              Looks up a localized string similar to Component ID; Component ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.SWQ_ImproperItem">
            <summary>
              Looks up a localized string similar to Catchment component source boundary {0} contains improper SWQ item for {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.SWQ_ImproperItemVD">
            <summary>
              Looks up a localized string similar to Boundary ID; Component ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.SWQ_NoCatchment">
            <summary>
              Looks up a localized string similar to Catchment {0} does not exist..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.SWQ_NoCatchmentVD">
            <summary>
              Looks up a localized string similar to Catchment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.SWQ_NoComponent">
            <summary>
              Looks up a localized string similar to Component {0} needed for SWQ simulation does not exist..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.SWQ_NoComponentVD">
            <summary>
              Looks up a localized string similar to Component ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.SWQ_NoPollutant">
            <summary>
              Looks up a localized string similar to Pollutant data with SWQ ID {0} does not exist..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.SWQ_NoPollutantVD">
            <summary>
              Looks up a localized string similar to SWQ ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.SWQ_NoSediment">
            <summary>
              Looks up a localized string similar to Sediment {0} needed for SWQ simulation does not exist..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.SWQ_NoSedimentVD">
            <summary>
              Looks up a localized string similar to Sediment ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TestMessage1">
            <summary>
              Looks up a localized string similar to Hello {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TestMessage2">
            <summary>
              Looks up a localized string similar to Hello {0}, water level: {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TestMessage3">
            <summary>
              Looks up a localized string similar to Water level is _0_ below bottom level. Water level is _1_, discharge is _27.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TestMessage3Hint">
            <summary>
              Looks up a localized string similar to Adjust bottom level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TestResource">
            <summary>
              Looks up a localized string similar to Water level of {0} is below bottom level, which is at {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TestResourceHint">
            <summary>
              Looks up a localized string similar to Decrease bottom level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TestResourceVD">
            <summary>
              Looks up a localized string similar to Water level; Bottom level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TS_ERR_BridgeDoesNotExist">
            <summary>
              Looks up a localized string similar to A time series collection exists without a bridge to load the data. Most likely, the extension of the file could not be translated into a method of loading the file. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TS_ERR_CannotConvert">
            <summary>
              Looks up a localized string similar to Can not read data type {0} in time series..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TS_ERR_CannotConvertVD">
            <summary>
              Looks up a localized string similar to Data type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TS_ERR_CannotHandleDeleteValue">
            <summary>
              Looks up a localized string similar to Cannot handle delete value in time series. Delete value found in row {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TS_ERR_CannotHandleDeleteValueVD">
            <summary>
              Looks up a localized string similar to Row number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TS_ERR_FileDoesNotExist">
            <summary>
              Looks up a localized string similar to Time series file {0} does not exist..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TS_ERR_FileDoesNotExistVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TS_ERR_TsWithDeleteValues">
            <summary>
              Looks up a localized string similar to Time series contains delete values: {0}, item {1}, item number {2}. These must be replaced by proper values..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TS_ERR_TsWithInvalidValues">
            <summary>
              Looks up a localized string similar to Time series contains invalid (NaN or Inf) values: {0}, item {1}, item number {2}. These must be replaced by proper values..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TS_TXT_TimeSeriesFileName">
            <summary>
              Looks up a localized string similar to Time series file {0} item {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TS_TXT_TimeSeriesFileNameVD">
            <summary>
              Looks up a localized string similar to Filename; Item number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.TS_WAR_TsDeleteValuesToZero">
            <summary>
              Looks up a localized string similar to Time series contains delete values: {0}, item {1}, item number {2}. These are be replaced by zero values..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.WAR_ST_OrificeGateLevelAboveMax">
            <summary>
              Looks up a localized string similar to In Orifice {0}, the gate level is {1} which is above max gate level. Max gate level is {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.WAR_ST_OrificeGateLevelAboveMaxVD">
            <summary>
              Looks up a localized string similar to Orifice ID; Gate level; Max gate level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.WAR_ST_OrificeGateLevelBelowMin">
            <summary>
              Looks up a localized string similar to In Orifice {0}, the gate level is {1} which is below min gate level. Min gate level is {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.WAR_ST_OrificeGateLevelBelowMinVD">
            <summary>
              Looks up a localized string similar to Orifice ID; Gate level; Min gate level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_ColebrookWhiteNonCircular">
            <summary>
              Looks up a localized string similar to Colebrook White resistance formulation is only valid for the predefined circular cross sections (circular, egg-shaped, o-shaped)..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_CoordDuplicates">
            <summary>
              Looks up a localized string similar to Cross section has duplicate coordinates: Location {0}, topo ID {1}, ID {2}. This can lead to other errors or incorrect results..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_CoordDuplicatesVD">
            <summary>
              Looks up a localized string similar to Location; Topo ID; Cross section ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_CoordMNotIncreasing">
            <summary>
              Looks up a localized string similar to Cross section has non-increasing S values: Location {0}, topo ID {1}, ID {2}. This can lead to other errors or incorrect results..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_LeftLowFlowSCoordOutsideLevee">
            <summary>
              Looks up a localized string similar to Cross section s coordinate of Left Low Flow bank marker {0} is outside of levee bank coordinates, ({1};{2})..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_MarkerNotSet">
            <summary>
              Looks up a localized string similar to Cross section at location {0}: {1} marker (marker {2}) is not set. Flood maps cannot be created..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_MarkerNotSetVD">
            <summary>
              Looks up a localized string similar to Location; Marker description; Marker number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_MissingProcessedData">
            <summary>
              Looks up a localized string similar to Found cross section without processed data where processed data will not be calculated automatically..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_MixingGlobalAndLocalXSNotAllowed">
            <summary>
              Looks up a localized string similar to Reach {0} already has a globally defined cross section. Mixing global and local crosssections is not allowed..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_MixingGlobalAndLocalXSNotAllowedVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_NonDecreaseSValue">
            <summary>
              Looks up a localized string similar to Cross section at location {0}: Cross section coordinates does not have increasing S value. First non-decreasing coordinate at index {1}. Flood maps cannot be created..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_NonDecreaseSValueVD">
            <summary>
              Looks up a localized string similar to Location; Index.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_NoProcessedLevels">
            <summary>
              Looks up a localized string similar to No processed levels present in cross section.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_NoProcessedLevelsInInterpolate">
            <summary>
              Looks up a localized string similar to Can not interpolate in processed data: Number of processed levels is zero for at least one of the cross sections.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_NoProcessedResistenceFactors">
            <summary>
              Looks up a localized string similar to Processed resistence factors do not exist at all processed levels.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_NoXsOnLocation">
            <summary>
              Looks up a localized string similar to A cross section could not be found or created at chainage {0} on reach {1}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_NoXsOnLocationVS">
            <summary>
              Looks up a localized string similar to Chainage; Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_NullXSBaseInInterpolation">
            <summary>
              Looks up a localized string similar to Can not interpolate in processed data: No XSBase exists for at least one of the cross sections.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_NullXSInInterpolation">
            <summary>
              Looks up a localized string similar to Tried to interpolate between two cross section where at least one was undefined.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_ProcessedFlowAreasDoNotExistForAllLevels">
            <summary>
              Looks up a localized string similar to Processed flow areas must exist at all processed levels..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_ProcessedFlowAreasNotPositive">
            <summary>
              Looks up a localized string similar to Processed flow areas must be positive..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_ProcessedHydraulicRadiiNotPositive">
            <summary>
              Looks up a localized string similar to Processed hydraulic radii must be positive..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_ProcessedLevelNotMonotonicallyIncreasing">
            <summary>
              Looks up a localized string similar to Processed levels must be strictly monotonically increasing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_ProcessedRadiiDoNotExistForAllLevels">
            <summary>
              Looks up a localized string similar to Processed radii must exist at all processed levels..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_ProcessedRawDataMismatch">
            <summary>
              Looks up a localized string similar to Processed data of cross section does not match raw data..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_ProcessedRawDataMismatchHint">
            <summary>
              Looks up a localized string similar to Try recompute all processed data..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_ProcessedResistanceFactorsDoNotExistForAllLevels">
            <summary>
              Looks up a localized string similar to Processed resistance factors must exist at all processed levels when flow resistance is tabulated..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_ProcessedResistanceFactorsNotPositive">
            <summary>
              Looks up a localized string similar to Processed resistance factors must be positive..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_ProcessedStorageWidthsDoNotExistForAllLevels">
            <summary>
              Looks up a localized string similar to Processed storage widths must exist at all processed levels..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_ProcLevelMaxBelowMin">
            <summary>
              Looks up a localized string similar to Maximum processing level is equal or below minimum processing level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_ProcLevelTooSmall">
            <summary>
              Looks up a localized string similar to Number of processing levels is {0}, which is too small.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_RelativeResistanceNonTabulated">
            <summary>
              Looks up a localized string similar to Relative resistance for constant or exponent varying resistance values are not supported. .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_RelativeResistanceNonTabulatedHint">
            <summary>
              Looks up a localized string similar to Switch to Uniform resistance distribution, or use a non-relative resistance formulation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_RigthLowFlowSCoordOutsideLevee">
            <summary>
              Looks up a localized string similar to Cross section s coordinate of Right Low Flow bank marker {0} is outside of levee bank coordinates, ({1};{2})..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_SValueNotIncluded">
            <summary>
              Looks up a localized string similar to Cross section at location {0}: Coordinates do not include S value of {1} marker (marker {2}). Flood maps cannot be created..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_SValueNotIncludedVD">
            <summary>
              Looks up a localized string similar to Location; Marker description; Marker number.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_TooFewProcessedDataLevels">
            <summary>
              Looks up a localized string similar to To few levels of processed data in cross section. A cross section must have at least two levels of processed data..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_UnableToConvertRelativeResistance">
            <summary>
              Looks up a localized string similar to Unable to convert relative resistance formulation at Location ({0},{1}).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_UnableToConvertRelativeResistanceVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_UnableToInterpolate">
            <summary>
              Looks up a localized string similar to Unable to interpolate between the cross sections at reach {0}, chainage {1} and reach {2}, chainage {3}. The cross section types are not supported for interpolation..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_UnableToInterpolateVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage; Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_UserDefinedLevelsNotDefined">
            <summary>
              Looks up a localized string similar to Cross section specifies &quot;user defined levels&quot;, but no levels are defined..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_UserDefinedLevelsNotIncreasing">
            <summary>
              Looks up a localized string similar to User defined levels are not strictly monotonically increasing..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_ZeroHeight">
            <summary>
              Looks up a localized string similar to The height of the cross section at reach {0}, chainage {1} is zero..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_ERR_ZeroHeightVD">
            <summary>
              Looks up a localized string similar to Cross section ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_TXT_CrossSectionLocation">
            <summary>
              Looks up a localized string similar to Cross section at reach {0}, chainage {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_TXT_CrossSectionLocationVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_TXT_CrossSectionReach">
            <summary>
              Looks up a localized string similar to Cross section at reach {0}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_TXT_CrossSectionReachVD">
            <summary>
              Looks up a localized string similar to Reach ID.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_TXT_LocatedCrossSection">
            <summary>
              Looks up a localized string similar to Cross section at reach {0}, chainage {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_TXT_LocatedCrossSectionVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_TXT_XSFile">
            <summary>
              Looks up a localized string similar to Cross section file: {0}.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_TXT_XSFileVD">
            <summary>
              Looks up a localized string similar to Filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_WAR_AdditionalStorageAreaNotSupported">
            <summary>
              Looks up a localized string similar to Additional storage area in cross section is not supported. Additional storage area was ignored..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_WAR_CoordinatesNotWellDefined">
            <summary>
              Looks up a localized string similar to Cross section coordinates are not well defined: Too few coordiantes. There must be at least two coordinates..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_WAR_DiffRFormulationInXSInterpolation">
            <summary>
              Looks up a localized string similar to Cannot interpolate between two cross sections with different resistance formulation. Using the resistance formulation from first cross section. Location  {0}, chainage {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_WAR_DiffRFormulationInXSInterpolationVD">
            <summary>
              Looks up a localized string similar to Reach ID; Chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_WAR_DuplicateXS">
            <summary>
              Looks up a localized string similar to Can not add crossSection: There is already another cross section at the same location+topoID: {0} {1}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_WAR_EndPointsCloseToZero">
            <summary>
              Looks up a localized string similar to End-point coordinates are (0,0), or close to, for cross section..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_WAR_ExtrapolatingXS">
            <summary>
              Looks up a localized string similar to Location {0}, {1} is outside chainage span of cross sections. Using nearest cross section at chainage {2}..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_WAR_ExtrapolatingXSVD">
            <summary>
              Looks up a localized string similar to Reach ID; Reach chainage; Cross section chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_WAR_ProcessedLevelsDoNotStartAt0">
            <summary>
              Looks up a localized string similar to Processed cross section levels do not start at 0..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_WAR_ProcessedStorageWidthsNotPositive">
            <summary>
              Looks up a localized string similar to Processed cross section storage widths are not all positive..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_WAR_ProcLevelMinAboveBottomLevel">
            <summary>
              Looks up a localized string similar to Minimum processing level is above bottom of cross section..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_WAR_ProcLevelMinBottomLevel">
            <summary>
              Looks up a localized string similar to Minimum processing level is below bottom of cross section. Using bottom of cross section as minimum.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_WAR_ReachHasGlobalXS">
            <summary>
              Looks up a localized string similar to Can not add crossSection: Reach already has a global crossSection..
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DHI_Mike1D_Generic.XS_WAR_XSWithoutLocation">
            <summary>
              Looks up a localized string similar to Cross Section must have a location..
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.FilePath">
            <summary>
            This class contains information on a file, as well its name and path,
            and handles relative and absolute (full) paths.
            
            When path is relative, it can have a BaseFilePath, used to 
            expand the relative filepath to an absolute (full) path. If a
            path is relative, and no BaseFilePath is specified, CurrentDirectory
            is used as BaseFilePath.
            
            Examples of legal paths:
             - "c:\\MyDir\\MyFile.txt" - directory and file
             - "c:\\MyDir"             - only directory
             - "MyDir\\MySubdir"       - relative directory
             - "\\\\MyServer\\MyShare" - network drive
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.FilePath.#ctor">
            <summary>
            Creates a new FilePath without a Path set. This defaults the path 
            to the current directory
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.FilePath.#ctor(DHI.Mike1D.Generic.IFilePath)">
            <summary>
            Creates a new FilePath with the given strfilePath as Path. If the path is
            relative, then the current directory are used as BaseFilePath.
            </summary>
            <param name="filePath">filepath to copy</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.FilePath.#ctor(System.String)">
            <summary>
            Creates a new FilePath with the given strfilePath as Path. If the path is
            relative, then the current directory are used as BaseFilePath.
            </summary>
            <param name="strfilePath">The filepath as a string</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.FilePath.#ctor(System.String,DHI.Mike1D.Generic.IFilePath)">
            <summary>
            Creates a new FilePath with the given strfilePath as Path
            and uses the baseFilePath as BaseFilePath
            </summary>
            <param name="strfilePath">The filepath as a string</param>
            <param name="baseFilePath">The base file path for this filepath</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.FilePath.Path">
            <summary>
            Get/set file name including path. The path can be absolute or relative.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.FilePath.BaseFilePath">
            <summary>
            If the path is relative, a BaseFilePath can be set. If a
            BaseFilePath is not set, then the CurrentDirectory will be used
            as BaseFilePath. For absolute paths, BaseFilePath is ignored.
            
            Only the directory part of the BaseFilePath is used.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.FilePath.HasPath">
            <summary>
            Return true if FilePath has a Path, false if empty.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.FilePath.IsRelative">
            <summary>
            Returns true if the FilePath is relative
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.FilePath.Extension">
            <summary>
            Gets or alters the extension of the file. The extionsion
            is returned with the dot, i.e., on the form ".ext". 
            If no extension exists, the empty string is returned.
            If path is null, null is returned.
            It can be set with or without the dot.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.FilePath.ExtensionIs(System.String)">
            <summary>
            Return true if the extension of the file path is "extension".
            </summary>
            <param name="extension">Extension string, including period "."</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.FilePath.FileName">
            <summary>
            Gets/alters the filename including extension
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.FilePath.FileNameWithoutExtension">
            <summary>
            Gets/alters the filename without the extension
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.FilePath.DirectoryName">
            <summary>
            Gets the directory name of the filepath. It will return
            relative or absolute directory, depending on whether the filepath
            is relative or absolute.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.FilePath.FullDirectoryName">
            <summary>
            Gets the full directory name of the filepath. It will return
            an absolute directory.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.FilePath.RelativeDirectoryName">
            <summary>
            Gets the relative directory name of the filepath. It will return
            a directory relative to BaseFilePath or CurrentDirectory.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.FilePath.FullFilePath">
            <summary>
            Gets the full directory name of the filepath, including file name. It will return
            an absolute directory.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.FilePath.RelativeFilePath">
            <summary>
            Gets the relative directory name of the filepath, including file name. It will return
            a directory relative to BaseFilePath or CurrentDirectory.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.FilePath.BaseDir">
            <summary>
            Return the base directory as a string, using either
            BaseFilePath or CurrentDirectory
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.FilePath.Clone">
            <summary>
            Creates a deep clone of the FilePath
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.FilePath.MakePathFull">
            <summary>
            Make the Path absolute, based on either BaseFilePath or CurrentDirectory.
            
            If path is already absolute, this has no effekt.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.FilePath.MakePathRelative">
            <summary>
            Make the Path relative, based on either BaseFilePath or CurrentDirectory.
            
            If path is already relative, this has no effect.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.FilePath._serializedFilePath">
            <summary>
            We serialize always the relative path, hence store this here.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.FilePath.GetRelativeFilePath(System.String,System.String)">
            <summary>
            Make the filepath relative to baseDirectory. If not succeding, return original file path.
            </summary>
            <param name="filePath">Absolute file path to find relative file path for.</param>
            <param name="baseDirectory">Directory to use as base. Must be rooted and must only contain directory info (no file name part)</param>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.IBridgeXml">
            <summary>
             Generic interface for Xml bridge
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IBridgeXml.Open(DHI.Mike1D.Generic.IConnection,System.Xml.XmlReader)">
            <summary>
             Get data access class
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IBridgeXml.Open(DHI.Mike1D.Generic.IConnection)">
            <summary>
             Get data access class
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IBridgeXml.Save(DHI.Mike1D.Generic.IConnection,DHI.Mike1D.Generic.AbstractDataAccess,System.Xml.XmlWriter)">
            <summary>
             Write data
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IBridgeXml.Save(DHI.Mike1D.Generic.AbstractDataAccess)">
            <summary>
             Write data
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDiagnosticItem">
            <summary>
            A DiagnosticsItem contains a message, additional information and 
            potentially also list the values that vary in the message string.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticItem.MessageID">
            <summary>
            ID of error in item.
            <para>
            Each kind of error will have an id which does not change between computers.
            The Message change, if localized messages exist for the system language.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticItem.Message">
            <summary>
             Diagnostics message. Including values from <see cref="P:DHI.Mike1D.Generic.IDiagnosticItem.Values"/>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticItem.MessageNoValues">
            <summary>
            Diagnostics message with value placeholders instead of actual values.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticItem.AdditionalInfo">
            <summary>
            Additional information about diagnostics item. Could be time of simulation when
            message was produced.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnosticItem.HasHint">
            <summary>
             Returns true if this item has an associated hint. The hint can be accessed throught the Hint property.
            </summary>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticItem.Hint">
            <summary>
            Diagnostics hint
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticItem.Values">
            <summary>
             List of values associated with this item
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticItem.Diagnostics">
            <summary>
            The diagnostics that the item belongs to.
            <para>
            This is automatically set when item is added to diagnostics object.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticItem.Location">
            <summary>
            Location of message
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDiagnosticItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnosticItems.Add(DHI.Mike1D.Generic.IDiagnosticItem)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticItems.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticItems.Count">
            <summary>
            
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnosticItems.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnosticItems.RemoveAll(System.Predicate{DHI.Mike1D.Generic.IDiagnosticItem})">
            <summary>
            Remove all items matching
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnosticItems.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.Diagnostics">
            <summary>
            A collection of error, warning and hint messages. 
            
            It implements a tree like strukture of IDiagnostics, 
            to be able to handle the diagnostics in a stack-trace like manner.
            
            Whenever an item is added, an event is triggered.
            
            Calling any of the recursive method must be done from one thread
            at a time only, otherwise it will fail.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Diagnostics.MessageIdToWarning">
            <summary>
            ID of messages that, if reported as errors, are reported as warnings
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Diagnostics.#ctor">
            <summary>
            Create a new unnamed Diagnostics. Use only if this diagnostics
            at a later stage is appended to a named diagnostics.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Diagnostics.#ctor(System.String)">
            <summary>
            Create a new named Diagnostics
            </summary>
            <param name="name">Name/id of Diagnostics</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Diagnostics.#ctor(DHI.Mike1D.Generic.IDiagnosticItem)">
            <summary>
            Create a new named Diagnostics
            </summary>
            <param name="description">Source of Diagnostics</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Diagnostics.#ctor(System.String,System.Object)">
            <summary>
            Create a new named Diagnostics
            </summary>
            <param name="name">Name/id of Diagnostics</param>
            <param name="source">Source that created the diagnostics</param>
        </member>
        <member name="E:DHI.Mike1D.Generic.Diagnostics.DiagnosticsEvent">
            <summary>
            The event which is called when a diagnostics event is encountered. If this is null, then the 
            event of the root diagnostic (the parent's parent until parent is null) is called.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Diagnostics.TriggerDiagnosticsEvent(DHI.Mike1D.Generic.DiagnosticsType,DHI.Mike1D.Generic.IDiagnostics,DHI.Mike1D.Generic.IDiagnosticItem)">
            <summary>
             Diagnostics encountered during runtime can be handed to the appropriate delegates
             via this function.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Diagnostics.Info(System.String)">
            <summary>
             Add an information DiagnosticItem
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Diagnostics.Info(DHI.Mike1D.Generic.IDiagnosticItem)">
            <summary>
             Add an information DiagnosticItem
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Diagnostics.Hint(DHI.Mike1D.Generic.IDiagnosticItem)">
            <summary>
             Add a hint DiagnosticItem
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Diagnostics.Warning(DHI.Mike1D.Generic.IDiagnosticItem)">
            <summary>
             Add a warning DiagnosticItem
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Diagnostics.Error(DHI.Mike1D.Generic.IDiagnosticItem)">
            <summary>
             Add an error DiagnosticItem
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Diagnostics.RuntimeError(DHI.Mike1D.Generic.IDiagnosticItem)">
            <summary>
             Create an error DiagnosticItem and throw an exception
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Diagnostics.RuntimeError(DHI.Mike1D.Generic.IDiagnosticItem,System.Exception)">
            <summary>
             Create an error DiagnosticItem and throw an exception
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Diagnostics.GetAdditionaInformationDelegate">
            <summary>
            Delegate type used to access additional information to add to items. Used to append time step information
            to items from HD.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Diagnostics.GetAdditionalInformation">
            <summary>
            Delegate to access additional information to add to items. Used to append time step information
            to items from HD.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Diagnostics.Clear">
            <summary>
            Clear diagnostics, as well errors as warnings as hints as stack.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Diagnostics.ClearIssuesRecursive">
            <summary>
            Remove all issues from this Diagnostics and all child Diagnostics
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Diagnostics.IssueCount">
            <summary>
            The number of issues in this diagnostics
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Diagnostics.IssueCountRecursive">
            <summary>
            The number of issues in this diagnostics, including issues in the stack.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Diagnostics.ErrorCountRecursive">
            <summary>
            The number of issues in this diagnostics, including issues in the stack.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Diagnostics.Errors">
            <summary>
            Get a list of all errors (not from the stack)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Diagnostics.ErrorsRecursive">
            <summary>
            Get a list of all errors, recursively
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Diagnostics.Warnings">
            <summary>
             Get a list of all warnings (not from the stack)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Diagnostics.WarningCountRecursive">
            <summary>
            The number of warnings in this diagnostics, including warnings in the stack.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Diagnostics.WarningsRecursive">
            <summary>
            Get a list of all warnings, recursively
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Diagnostics.HintCountRecursive">
            <summary>
            The number of warnings in this diagnostics, including warnings in the stack.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Diagnostics.Infos">
            <summary>
            Get a list of all hints (not from the stack)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Diagnostics.Hints">
            <summary>
            Get a list of all hints (not from the stack)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Diagnostics.HintsRecursive">
            <summary>
            Get a list of all warnings, recursively
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Diagnostics.Append(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Append errors, warnings and hints from input diagnostics to
            this diagnostics, and add stack items
            </summary>
            <param name="diagnostics">The diagnostics to append from</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.Diagnostics.Name">
            <summary>
            Name or origin of Diagnostics. Can be null/empty string.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Diagnostics.SourceDescription">
            <summary>
            Description of Diagnostics source. Can be null/empty string.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Diagnostics.Source">
            <summary>
            Source object that created the Diagnostics
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Diagnostics.Children">
            <summary>
            Children of sub-diagnostics, implementing a tree-like structure of Diagnostics.
            If you add children to the list, remember to se teh parent - or use AddChild().
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Diagnostics.AddChild(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Add a child diagnostics to the diagnostics tree. Sets the parent of the child.
            </summary>
            <param name="childDiagnostics"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Diagnostics.IsParent(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Return true if diagnostics is the parent of this diagnostics.
            It checks the parent recursively to the root.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Diagnostics.Parent">
            <summary>
             Parent diagnostic. Diagnostics can belong to a tree with one parent and 
             several children. If parent is null, then this diagnostic is the root.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.DiagnosticsList">
            <summary>
            Implements a list of IDiagnostics.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsList.Add(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Add an IDiagnostics to the list
            </summary>
            <param name="diagnostics">IDiagnostrics to add</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticsList.Item(System.Int32)">
            <summary>
            Get/set the value at the given index
            </summary>
            <param name="index">Index in list to get/set</param>
            <returns>IDiagnostics at given position in list</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticsList.Count">
            <summary>
            Returns the number of IDiagnostics in the list
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsList.Clear">
            <summary>
            Clears and empties the list
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsList.GetList">
            <summary>
            Get the .Net list directly
            </summary>
            <returns>A generic list of IDiagnostics</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticsList.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.DiagnosticItems">
            <summary>
            Implements a list of IDiagnosticItem's
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItems.#ctor(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Constructor, with the <see cref="T:DHI.Mike1D.Generic.IDiagnostics"/> that the items
            belong to
            </summary>
            <param name="diagnostics"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItems.Add(DHI.Mike1D.Generic.IDiagnosticItem)">
            <summary>
            Add an item to this diagnostics
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticItems.Item(System.Int32)">
            <summary>
            Get a diagnostics item from index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.DiagnosticItems.Count">
            <summary>
            Get the number of items in the diagnostics
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItems.Clear">
            <summary>
            Delete all items from this diagnostics
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItems.RemoveAll(System.Predicate{DHI.Mike1D.Generic.IDiagnosticItem})">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.DiagnosticItems.GetEnumerator">
            <summary>
            Get item enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDiagnosticsString">
            <summary>
             A string used in Diagnostics. 
             
             It has an Id, to be used if a translated version of the string is to be used instead.
             
             It has a Message which can contain format specifiers on the form {0} etc. 
             
             It has a list of objects, each of them supporting the ToString method, 
             which must match the format specifiers in the Message.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticsString.Id">
            <summary>
            Id of string
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticsString.Message">
            <summary>
            String message. Can contain format specifiers on the form
            {0} etc. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticsString.Arguments">
            <summary>
            List of object that are to be replaced into the Message at each
            format specifyer.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDiagnosticsValue">
            <summary>
            A diagnostics value can either be a string or a pair of
            a double value and a unit, depending on the value of <see cref="P:DHI.Mike1D.Generic.IDiagnosticsValue.HasUnitValue"/>.
            
            An interface system has the opportunity to convert double values to user 
            defined units. By default an engine ofte produce double values in SI units.
            
            If <see cref="P:DHI.Mike1D.Generic.IDiagnosticsValue.HasUnitValue"/> is true, the <see cref="P:DHI.Mike1D.Generic.IDiagnosticsValue.DoubleValue"/>
            and <see cref="P:DHI.Mike1D.Generic.IDiagnosticsValue.Unit"/> must be set.
            
            If <see cref="P:DHI.Mike1D.Generic.IDiagnosticsValue.HasUnitValue"/> is false, the <see cref="P:DHI.Mike1D.Generic.IDiagnosticsValue.StringValue"/>
            must be set.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticsValue.StringValue">
            <summary>
            Value as a string. Use when <see cref="P:DHI.Mike1D.Generic.IDiagnosticsValue.HasUnitValue"/> is false.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticsValue.HasUnitValue">
            <summary>
            Bool specifying whether this value has a unit.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticsValue.DoubleValue">
            <summary>
            Double value. Use when <see cref="P:DHI.Mike1D.Generic.IDiagnosticsValue.HasUnitValue"/> is true.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticsValue.Unit">
            <summary>
            Unit for <see cref="P:DHI.Mike1D.Generic.IDiagnosticsValue.DoubleValue"/>. Use when <see cref="P:DHI.Mike1D.Generic.IDiagnosticsValue.HasUnitValue"/> is true.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnosticsValue.ToString">
            <summary>
            Convert value to a string representation.
            </summary>
            <remarks>
            Overriding Object.ToString();
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleTimeProxies.Add(DHI.Mike1D.Generic.IDoubleTimeProxy)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDoubleTimeProxies.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDoubleTimeProxies.Count">
            <summary>
            
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IInterpolatable`1">
            <summary>
             Interface to implement if the given type can interpolate itself
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IInterpolatable`1.Interpolate(System.Double,`0,`0)">
            <summary>
            Interpolation returning a value of type T on the form:
            T newT = (1.0 - bRatio)*aValue + bRatio*bValue
            </summary>
            <param name="aValue">Value at one side</param>
            <param name="bValue">Value at other side</param>
            <param name="bRatio">Ratio of bValue to use</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.InterpolatableClosest`1">
            <summary>
            Class implementing <see cref="T:DHI.Mike1D.Generic.IInterpolatable`1"/>, by returning
            the closest of the values in the <see cref="M:DHI.Mike1D.Generic.InterpolatableClosest`1.Interpolate(System.Double,`0,`0)"/> method.
            <para>
            This can be used if no interpolation is possible.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.InterpolatableClosest`1.Interpolate(System.Double,`0,`0)">
            <summary>
            Interpolation returning either aValue or bValue, depending
            on whether bRatio is smaller/larger than 0.5
            </summary>
            <param name="aValue">Value at one side</param>
            <param name="bValue">Value at other side</param>
            <param name="bRatio">Ratio of bValue to use</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.InterpolatableDouble">
            <summary>
            Class implementing <see cref="T:DHI.Mike1D.Generic.IInterpolatable`1"/> for type double
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.InterpolatableDouble.Interpolate(System.Double,System.Double,System.Double)">
            <summary>
            Interpolation returning a value of type T on the form:
            T newT = (1.0 - bRatio)*aValue + bRatio*bValue
            </summary>
            <param name="aValue">Value at one side</param>
            <param name="bValue">Value at other side</param>
            <param name="bRatio">Ratio of bValue to use</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.InterpolatableDoubleArray">
            <summary>
            Class implementing <see cref="T:DHI.Mike1D.Generic.IInterpolatable`1"/> for type double array.
            <para>
            The arrays must have same lengths in order for interpolation to take place.
            In the constructor must be specified wether length differences is allowed
            or if it shold fail (throw an exception). If different lengths are allowed,
            it will return closest array, i.e., it will switch at the ratio of 0.5.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.InterpolatableDoubleArray.#ctor(System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="failOnLengthDifferences">Set to true, and the <see cref="M:DHI.Mike1D.Generic.InterpolatableDoubleArray.Interpolate(System.Double,System.Double[],System.Double[])"/> 
            method will throw an exception if the arrays have different lengths.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.InterpolatableDoubleArray.Interpolate(System.Double,System.Double[],System.Double[])">
            <summary>
            Interpolation returning a value of type T on the form:
            T newT = (1.0 - bRatio)*aValue + bRatio*bValue
            </summary>
            <param name="bRatio">Ratio of <paramref name="bValue"/></param>
            <param name="aValue">The a value</param>
            <param name="bValue">The b value</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.IQuantities">
            <summary>
            Interface for a list of <see cref="T:DHI.Mike1D.Generic.IQuantity"/>'s
            Required for generic list COM interop
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IQuantities.Add(DHI.Mike1D.Generic.IQuantity)">
            <summary>
            Add a <see cref="T:DHI.Mike1D.Generic.IQuantity"/> to the list
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.IQuantities.Item(System.Int32)">
            <summary>
            Get or set the <see cref="T:DHI.Mike1D.Generic.IQuantity"/> at the specified index in the list
            </summary>
            <param name="index">Index in list</param>
            <returns><see cref="T:DHI.Mike1D.Generic.IQuantity"/> at the index</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.IQuantities.Count">
            <summary>
            The number of <see cref="T:DHI.Mike1D.Generic.IQuantity"/>'s in the list
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IQuantities.IndexOf(DHI.Mike1D.Generic.IQuantity)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the entire List. 
            </summary>
            <param name="item">The object to locate in the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>The zero-based index of the first occurrence of item within the entire List, if found; otherwise, –1. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IQuantities.Contains(DHI.Mike1D.Generic.IQuantity)">
            <summary>
            Determines whether the list contains a specific value.
            </summary>
            <param name="item">The object to locate in the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>true if item is found in the list otherwise, false. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IQuantities.Find(System.Predicate{DHI.Mike1D.Generic.IQuantity})">
            <summary>
            Searches for an element that matches the conditions defined by 
            the specified predicate, and returns the first occurrence within 
            the entire List. 
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type IQuantity. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IQuantities.Remove(DHI.Mike1D.Generic.IQuantity)">
            <summary>
            Removes the first occurrence of a specific object from the List. 
            </summary>
            <param name="item">The object to remove from the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not found in the List. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IQuantities.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the List. 
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <remarks>This method is an O(n) operation</remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.IQuantities.Clear">
            <summary>
            Removes all elements from the List.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IQuantities.ToArray">
            <summary>
            Copies all elements of the list to an array.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDoubleTimeGetter">
            <summary>
            A value getter can be called at any time to provide 
            the actual value of the source. It will often just
            be wrapping DDoubleGetter
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleTimeGetter.GetValue(System.DateTime)">
            <summary>
            Get the current value
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDoubleTimeVectorGetter">
            <summary>
            A vector getter can be called at any time to provide 
            the actual values of the sources. It will often just
            be wrapping a list of DDoubleGetter
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleTimeVectorGetter.GetValues(System.DateTime)">
            <summary>
            Get the current values. A new array will be returned every time
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleTimeVectorGetter.GetValues(System.DateTime,System.Double[])">
            <summary>
            Get the current values.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDoubleTimeSetter">
            <summary>
            A value setter can be called at any time to set 
            the value of the source. It will often just
            be wrapping DDoubleSetter
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleTimeSetter.SetValue(System.DateTime,System.Double)">
            <summary>
            Set the current value
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDoubleTimeProxy">
            <summary>
            TODO: For IDoubleProxy, datatype should be replaced with struct containing:
                  (ModuleId), itemNumberId, datatype and descriptive name
            Needed when AD has several items of same datatype and
            when different modules have items of same datatype.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleTimeProxy.TimeValueGetter(System.Int32)">
            <summary>
            Get value getter for the specified data quantity
            </summary>
            <param name="index">Index of requested Quantity</param>
            <returns>A value getter delegate that can get the value</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleTimeProxy.TimeOffers">
            <summary>
            List of data types that is offered and can be used in GetValue
            </summary>
            <returns>List of data types offered</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.DDoubleTimeGetterBox">
            <summary>
            Class boxing DDoubleGetter and implementing IDoubleGetter
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleTimeGetterBox.#ctor(System.Func{System.DateTime,System.Double})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleTimeGetterBox.GetValue(System.DateTime)">
            <summary>
            Get the current value
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.DDoubleTimeVectorGetterBox">
            <summary>
            Class boxing a set of <see cref="!:DDoubleGetter"/>.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DDoubleTimeVectorGetterBox.Sources">
            <summary>
            Sources of where to get values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleTimeVectorGetterBox.GetValues(System.DateTime)">
            <summary>
            Get the current values. A new array will be returned every time
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleTimeVectorGetterBox.GetValues(System.DateTime,System.Double[])">
            <summary>
            Get the current values. A new array will be returned every time
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IBridge">
            <summary>
            The interface implemented by all MIKE 1D bridges.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IBridge.FilePath">
            <summary>
            FilePath specifying the name of the persistance storage
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IBridge.Open(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Reads in the data specified by FilePath and populates the DataAccess.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IBridge.Save">
            <summary>
            Writes the content of the DataAccess to the persistante storage specified by FilePath
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IConnection">
            <summary>
            
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IConnection.FilePath">
            <summary>
            Fully qualified file name for the file to store data in or read data from
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IConnection.BridgeName">
            <summary>
            Name of the bridge to use for saving and/or reading
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IConnection.Options">
            <summary>
            Options to the connection as key-value pairs. 
            Keys are case-sensitive.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IConnection.Clone">
            <summary>
            Clone this object. It returns a deep copy of 
            the file path, but just transfers the dictionary.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ConnectionExtension">
            <summary>
            Extension methods and static for IConnection
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ConnectionExtension.IsBridge(DHI.Mike1D.Generic.IConnection,System.String)">
            <summary>
            Return true if bridge is bridgeName
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.DiagnosticsType">
            <summary>
            Type of diagnostics levels
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsType.Error">
            <summary>
            Fatal errors, invalid data/setup 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsType.Warning">
            <summary>
            Warnings, inconsistent data
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsType.Hint">
            <summary>
            Hints, Good ideas
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.DiagnosticsType.Info">
            <summary>
            Information
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.DiagnosticsEvent">
            <summary>
             The type of function called when a diagnostics event is encountered
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDiagnostics">
            <summary>
            Interface for communication of Errors, Warnings and Hints
            
            It also includes a tree like strukture of IDiagnostics, called Children, 
            to be able to handle the diagnostics in a stack-trace manner.
            
            Whenever a new issue is added, the <see cref="E:DHI.Mike1D.Generic.IDiagnostics.DiagnosticsEvent"/> is triggered
            on the IDiagnostics self and all its parents.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnostics.Name">
            <summary>
            Name/id of Diagnostics. Can be null/empty string.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnostics.SourceDescription">
            <summary>
            Description of Diagnostics source. Can be null/empty string.
            Can contain values that requires unit conversion.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnostics.Source">
            <summary>
            Source object that created the diagnostics
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnostics.Children">
            <summary>
            Implements a recursive tree like structure of IDiagnostics
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnostics.Info(System.String)">
            <summary>
             Add a information messaeg
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnostics.Info(DHI.Mike1D.Generic.IDiagnosticItem)">
            <summary>
             Add a information DiagnosticItem
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnostics.Hint(DHI.Mike1D.Generic.IDiagnosticItem)">
            <summary>
             Add a hint DiagnosticItem
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnostics.Warning(DHI.Mike1D.Generic.IDiagnosticItem)">
            <summary>
             Add a warning DiagnosticItem
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnostics.Error(DHI.Mike1D.Generic.IDiagnosticItem)">
            <summary>
             Add an error DiagnosticItem
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnostics.RuntimeError(DHI.Mike1D.Generic.IDiagnosticItem)">
            <summary>
             Add an error DiagnosticItem, and throw an exception
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnostics.RuntimeError(DHI.Mike1D.Generic.IDiagnosticItem,System.Exception)">
            <summary>
             Add an error DiagnosticItem, and throw an exception
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnostics.Clear">
            <summary>
            Clear diagnostics, all errors, warnings and hints.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnostics.IssueCount">
            <summary>
            The number of issues in this diagnostics
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnostics.IssueCountRecursive">
            <summary>
            The number of issues in this Diagnostics and its children
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnostics.IsParent(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Return true of diagnostics is parent or parent's parent
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnostics.ErrorCountRecursive">
            <summary>
            The number of errors in this Diagnostics and its children
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnostics.Errors">
            <summary>
            Get a list of errors in this diagnostics
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnostics.ErrorsRecursive">
            <summary>
            Get a list of all errors, also from child diagnostics
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnostics.WarningCountRecursive">
            <summary>
            The number of warnings in this Diagnostics and its children
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnostics.Warnings">
            <summary>
             Get a list of warnings in this diagnostics
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnostics.WarningsRecursive">
            <summary>
            Get a list of all errors
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnostics.HintCountRecursive">
            <summary>
            The number of hints in this Diagnostics and its children
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnostics.Hints">
            <summary>
            Get a list of all hints
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnostics.HintsRecursive">
            <summary>
            Get a list of all errors
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnostics.Infos">
            <summary>
            Get a list of all informations
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnostics.Parent">
            <summary>
            Get the parent diagnostics - null if not parent is defined
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnostics.AddChild(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Add a child diagnostics to the diagnostics tree. Sets the parent of the child.
            </summary>
            <param name="diagnostics"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnostics.Append(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Append errors, warnings and hints from input diagnostics to
            this diagnostics
            </summary>
            <param name="diagnostics">The diagnostics to append from</param>
        </member>
        <member name="E:DHI.Mike1D.Generic.IDiagnostics.DiagnosticsEvent">
            <summary>
            The event which is called when a diagnostics event is encountered.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnostics.ClearIssuesRecursive">
            <summary>
            Remove Errors, hints, and warnings from the diagnostics and all child diagnostics
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDiagnosticsList">
            <summary>
            Implements a list of IDiagnostics
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnosticsList.Add(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Add an IDiagnostics to the list
            </summary>
            <param name="diagnostics">IDiagnostrics to add</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticsList.Item(System.Int32)">
            <summary>
            Get/set the value at the given index
            </summary>
            <param name="index">Index in list to get/set</param>
            <returns>IDiagnostics at given position in list</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.IDiagnosticsList.Count">
            <summary>
            Returns the number of IDiagnostics in the list
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnosticsList.Clear">
            <summary>
            Clears and empties the list
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDiagnosticsList.GetList">
            <summary>
            Get the .Net list directly
            </summary>
            <returns>A generic list of IDiagnostics</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.IFilePath">
            <summary>
            This class contains information on a file, as well its name and path,
            and handles relative and absolute (full) paths.
            
            When path is relative, it can have a BaseFilePath, used to 
            expand the relative filepath to an absolute (full) path. If a
            path is relative, and no BaseFilePath is specified, CurrentDirectory
            is used as BaseFilePath.
            
            Examples of legal paths:
             - "c:\\MyDir\\MyFile.txt" - directory and file
             - "c:\\MyDir"             - only directory
             - "MyDir\\MySubdir"       - relative directory
             - "\\\\MyServer\\MyShare" - network drive
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IFilePath.Path">
            <summary>
            Get/set file name including path. The path can be absolute or relative.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IFilePath.BaseFilePath">
            <summary>
            If the path is relative, a BaseFilePath can be set. If a
            BaseFilePath is not set, then the CurrentDirectory will be used
            as BaseFilePath. For absolute paths, BaseFilePath is ignored.
            
            Only the directory part of the BaseFilePath is used.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IFilePath.HasPath">
            <summary>
            Return true if FilePath has a Path, false if empty.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IFilePath.IsRelative">
            <summary>
            Returns true if the FilePath is relative
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IFilePath.Extension">
            <summary>
            Gets or alters the extension of the file. The extionsion
            is returned with the dot, i.e., on the form ".ext". 
            If no extension exists, the empty string is returned.
            If path is null, null is returned.
            It can be set with or without the dot.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IFilePath.FileName">
            <summary>
            Gets/alters the filename including extension
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IFilePath.ExtensionIs(System.String)">
            <summary>
            Return true if the extension of the file path is "extension".
            <para>
            The dot is a part of the extension, i.e. use as
            <code>
              fp.ExtensionIs(".txt")
            </code>
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IFilePath.FileNameWithoutExtension">
            <summary>
            Gets/alters the filename without the extension
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IFilePath.DirectoryName">
            <summary>
            Gets the directory name of the filepath. It will return
            relative or absolute directory, depending on whether the filepath
            is relative or absolute.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IFilePath.FullDirectoryName">
            <summary>
            Gets the full directory name of the filepath. It will return
            an absolute directory.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IFilePath.RelativeDirectoryName">
            <summary>
            Gets the relative directory name of the filepath. It will return
            a directory relative to BaseFilePath or CurrentDirectory.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IFilePath.FullFilePath">
            <summary>
            Gets the full directory name of the filepath, including file name. It will return
            an absolute directory.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IFilePath.RelativeFilePath">
            <summary>
            Gets the relative directory name of the filepath, including file name. It will return
            a directory relative to BaseFilePath or CurrentDirectory.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IFilePath.Clone">
            <summary>
            Creates a deep clone of the FilePath
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IFilePath.MakePathFull">
            <summary>
            Make the Path absolute, based on either BaseFilePath or CurrentDirectory.
            
            If path is already absolute, this has no effekt.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IFilePath.MakePathRelative">
            <summary>
            Make the Path relative, based on either BaseFilePath or CurrentDirectory.
            
            If path is already relative, this has no effekt.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IListDateTimes">
            <summary>
            Interface for a list of <see cref="T:System.DateTime"/>'s
            Required for generic list COM interop
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListDateTimes.Add(System.DateTime)">
            <summary>
            Add a <see cref="T:System.DateTime"/> to the list
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.IListDateTimes.Item(System.Int32)">
            <summary>
            Get or set the <see cref="T:System.DateTime"/> at the specified index in the list
            </summary>
            <param name="index">Index in list</param>
            <returns><see cref="T:System.DateTime"/> at the index</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.IListDateTimes.Count">
            <summary>
            The number of <see cref="T:System.DateTime"/>'s in the list
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListDateTimes.IndexOf(System.DateTime)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the entire List. 
            </summary>
            <param name="item">The object to locate in the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>The zero-based index of the first occurrence of item within the entire List, if found; otherwise, –1. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListDateTimes.Find(System.Predicate{System.DateTime})">
            <summary>
            Searches for an element that matches the conditions defined by 
            the specified predicate, and returns the first occurrence within 
            the entire List. 
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type DateTime. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListDateTimes.Remove(System.DateTime)">
            <summary>
            Removes the first occurrence of a specific object from the List. 
            </summary>
            <param name="item">The object to remove from the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not found in the List. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListDateTimes.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the List. 
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <remarks>This method is an O(n) operation</remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListDateTimes.Clear">
            <summary>
            Removes all elements from the List.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListDateTimes.ToArray">
            <summary>
            Copies all elements of the list to an array.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IListdoubles">
            <summary>
            Interface for a list of <see cref="T:System.Double"/>'s
            Required for generic list COM interop
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListdoubles.Add(System.Double)">
            <summary>
            Add a <see cref="T:System.Double"/> to the list
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.IListdoubles.Item(System.Int32)">
            <summary>
            Get or set the <see cref="T:System.Double"/> at the specified index in the list
            </summary>
            <param name="index">Index in list</param>
            <returns><see cref="T:System.Double"/> at the index</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.IListdoubles.Count">
            <summary>
            The number of <see cref="T:System.Double"/>'s in the list
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListdoubles.IndexOf(System.Double)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the entire List. 
            </summary>
            <param name="item">The object to locate in the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>The zero-based index of the first occurrence of item within the entire List, if found; otherwise, –1. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListdoubles.Find(System.Predicate{System.Double})">
            <summary>
            Searches for an element that matches the conditions defined by 
            the specified predicate, and returns the first occurrence within 
            the entire List. 
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type double. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListdoubles.Remove(System.Double)">
            <summary>
            Removes the first occurrence of a specific object from the List. 
            </summary>
            <param name="item">The object to remove from the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not found in the List. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListdoubles.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the List. 
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <remarks>This method is an O(n) operation</remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListdoubles.Clear">
            <summary>
            Removes all elements from the List.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListdoubles.ToArray">
            <summary>
            Copy data to array
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IListlongs">
            <summary>
            Interface for a list of <see cref="T:System.Int64"/>'s
            Required for generic list COM interop
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListlongs.Add(System.Int64)">
            <summary>
            Add a <see cref="T:System.Int64"/> to the list
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.IListlongs.Item(System.Int32)">
            <summary>
            Get or set the <see cref="T:System.Int64"/> at the specified index in the list
            </summary>
            <param name="index">Index in list</param>
            <returns><see cref="T:System.Int64"/> at the index</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.IListlongs.Count">
            <summary>
            The number of <see cref="T:System.Int64"/>'s in the list
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListlongs.IndexOf(System.Int64)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the entire List. 
            </summary>
            <param name="item">The object to locate in the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>The zero-based index of the first occurrence of item within the entire List, if found; otherwise, –1. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListlongs.Find(System.Predicate{System.Int64})">
            <summary>
            Searches for an element that matches the conditions defined by 
            the specified predicate, and returns the first occurrence within 
            the entire List. 
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type long. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListlongs.Remove(System.Int64)">
            <summary>
            Removes the first occurrence of a specific object from the List. 
            </summary>
            <param name="item">The object to remove from the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not found in the List. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListlongs.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the List. 
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <remarks>This method is an O(n) operation</remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListlongs.Clear">
            <summary>
            Removes all elements from the List.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IListstrings">
            <summary>
            Interface for a list of <see cref="T:System.String"/>'s
            Required for generic list COM interop
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListstrings.Add(System.String)">
            <summary>
            Add a <see cref="T:System.String"/> to the list
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.IListstrings.Item(System.Int32)">
            <summary>
            Get or set the <see cref="T:System.String"/> at the specified index in the list
            </summary>
            <param name="index">Index in list</param>
            <returns><see cref="T:System.String"/> at the index</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.IListstrings.Count">
            <summary>
            The number of <see cref="T:System.String"/>'s in the list
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListstrings.IndexOf(System.String)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the entire List. 
            </summary>
            <param name="item">The object to locate in the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>The zero-based index of the first occurrence of item within the entire List, if found; otherwise, –1. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListstrings.Find(System.Predicate{System.String})">
            <summary>
            Searches for an element that matches the conditions defined by 
            the specified predicate, and returns the first occurrence within 
            the entire List. 
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type string. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListstrings.Remove(System.String)">
            <summary>
            Removes the first occurrence of a specific object from the List. 
            </summary>
            <param name="item">The object to remove from the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not found in the List. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListstrings.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the List. 
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <remarks>This method is an O(n) operation</remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.IListstrings.Clear">
            <summary>
            Removes all elements from the List.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ILocationSpans">
            <summary>
            Interface for a list of <see cref="T:DHI.Mike1D.Generic.ILocationSpan"/>'s
            Required for generic list COM interop
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpans.Add(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Add a <see cref="T:DHI.Mike1D.Generic.ILocationSpan"/> to the list
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.ILocationSpans.Item(System.Int32)">
            <summary>
            Get or set the <see cref="T:DHI.Mike1D.Generic.ILocationSpan"/> at the specified index in the list
            </summary>
            <param name="index">Index in list</param>
            <returns><see cref="T:DHI.Mike1D.Generic.ILocationSpan"/> at the index</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.ILocationSpans.Count">
            <summary>
            The number of <see cref="T:DHI.Mike1D.Generic.ILocationSpan"/>'s in the list
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpans.IndexOf(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the entire List. 
            </summary>
            <param name="item">The object to locate in the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>The zero-based index of the first occurrence of item within the entire List, if found; otherwise, –1. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpans.Find(System.Predicate{DHI.Mike1D.Generic.ILocationSpan})">
            <summary>
            Searches for an element that matches the conditions defined by 
            the specified predicate, and returns the first occurrence within 
            the entire List. 
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type ILocationSpan. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpans.Remove(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Removes the first occurrence of a specific object from the List. 
            </summary>
            <param name="item">The object to remove from the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not found in the List. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpans.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the List. 
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <remarks>This method is an O(n) operation</remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpans.Clear">
            <summary>
            Removes all elements from the List.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ILocation">
            <summary>
            A location is a point in the network. A Location is always a
            part of the network, and identified by a branch/link id and
            a chainage
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ILocation.ID">
            <summary>
            Identification name, branch/link id
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ILocation.Chainage">
            <summary>
            Chainage.
            Unit: [m]
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocation.ToString">
            <summary>
            This method os important when creating a node id from a location. It is important to 
            return something sensible if _chainge == Constants.DELETEVALUE since this is how rivers are connected to pipes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocation.FromString(System.String)">
            <summary>
            This method is made to get back from a Location.ToString(). It is therefor very important that any
            changes in ToString are reflected in this method. 
            </summary>
            <param name="locationString"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocation.ToStringInUserUnits">
            <summary>
            Returns a textual representation of the Location in user units
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocation.IDEquals(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Check if the ID equals the others ID.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocation.IDCompareTo(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Compare the ID with the others ID.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ILocations">
            <summary>
            Interface for a list of <see cref="T:DHI.Mike1D.Generic.ILocation"/>'s
            Required for generic list COM interop
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocations.Add(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Add a <see cref="T:DHI.Mike1D.Generic.ILocation"/> to the list
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.ILocations.Item(System.Int32)">
            <summary>
            Get or set the <see cref="T:DHI.Mike1D.Generic.ILocation"/> at the specified index in the list
            </summary>
            <param name="index">Index in list</param>
            <returns><see cref="T:DHI.Mike1D.Generic.ILocation"/> at the index</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.ILocations.Count">
            <summary>
            The number of <see cref="T:DHI.Mike1D.Generic.ILocation"/>'s in the list
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocations.IndexOf(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the entire List. 
            </summary>
            <param name="item">The object to locate in the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>The zero-based index of the first occurrence of item within the entire List, if found; otherwise, –1. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocations.Find(System.Predicate{DHI.Mike1D.Generic.ILocation})">
            <summary>
            Searches for an element that matches the conditions defined by 
            the specified predicate, and returns the first occurrence within 
            the entire List. 
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type ILocation. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocations.Remove(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Removes the first occurrence of a specific object from the List. 
            </summary>
            <param name="item">The object to remove from the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not found in the List. </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocations.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the List. 
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <remarks>This method is an O(n) operation</remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocations.Clear">
            <summary>
            Removes all elements from the List.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ISerializerSurrogateHandler">
            <summary>
            Interface for classes that handles special behavior
            when (de)serializing a certain type.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ISerializerSurrogateHandler.GetDataContractType(System.Type)">
            <summary>
            During serialization, deserialization, and schema import and export, returns a data contract type that substitutes the specified type.
            </summary>
            <param name="type">Type to substitute</param>
            <returns>Substitution type, must be serializable by the DataContractSerializer. Null if not handled by this handler</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ISerializerSurrogateHandler.GetObjectToSerialize(System.Object,System.Type)">
            <summary>
            When deserializing, handle the deserialized object. 
            
            If type changes, transform obj to the original type.
            </summary>
            <param name="obj">Deserialized object - the object to substitute.</param>
            <param name="targetType">The Type that the substituted object should be assigned to.</param>
            <returns>New/updated object replacing deserialized object. Null if not handled by this instance</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ISerializerSurrogateHandler.GetDeserializedObject(System.Object,System.Type)">
            <summary>
            During deserialization, returns an object that is a substitute for the specified object.
            </summary>
            <param name="obj">The deserialized object to be substituted.</param>
            <param name="targetType">The Type that the substituted object should be assigned to.  </param>
            <returns>New/updated object replacing object to serialize</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.IValueGetter`1">
            <summary>
            A value getter can be called at any time to provide 
            the actual value of the source.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IValueGetter`1.GetValue">
            <summary>
            Get the current value
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IValueSetter`1">
            <summary>
            A value setter can be called at any time to set 
            the value of the source. It will often just
            be wrapping DValueSetter
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IValueSetter`1.SetValue(`0)">
            <summary>
            Set the current value
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDoubleGetter">
            <summary>
            A value getter can be called at any time to provide 
            the actual value of the source.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleGetter.GetValue">
            <summary>
            Get the current value
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDoubleSetter">
            <summary>
            A value setter can be called at any time to set 
            the value of the source. It will often just
            be wrapping DDoubleSetter
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleSetter.SetValue(System.Double)">
            <summary>
            Set the current value
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IVectorGetter`1">
            <summary>
            A vector getter can be called at any time to provide 
            the actual values of the sources.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IVectorGetter`1.ElementCount">
            <summary>
            Number of elements in vector
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IVectorGetter`1.GetValue(System.Int32)">
            <summary>
            Get value of specified element.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IVectorFractionGetter`1">
            <summary>
            A vector getter can be called at any time to provide 
            the actual values of the sources.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IVectorFractionGetter`1.GetValue(System.Int32,System.Double)">
            <summary>
            Get value of specified element.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDoubleVectorGetter">
            <summary>
            A vector getter can be called at any time to provide 
            the actual values of the sources.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDoubleVectorSetter">
            <summary>
            A vector setter can be called at any time to set 
            the values of the sources. It will often just
            be wrapping a list of DDoubleSetter
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleVectorSetter.SetValue(System.Int32,System.Double)">
            <summary>
            Set value of specified element.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDoubleGetSet">
            <summary>
             A Value GetSet can be called any time to get/set 
             the value of the source. It will often just be wrapping
             a DDoubleSetter and a DDoubleGetter
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDoubleVectorGetSet">
            <summary>
             A Vector GetSet can be called any time to get/set 
             the value of the source. It will often just be wrapping
             a list of IDoubleGetSet'ers
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IQuantityProxy">
            <summary>
            List of quantities offered/accepted by the proxy.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IQuantityProxy.Offers">
            <summary>
            List of data types that is offered, i.e., that you can get a ValueGetter for.
            </summary>
            <returns>List of data types offered</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IQuantityProxy.Accepts">
            <summary>
            List of data types that is accepted, i.e., that you can get a ValueSetter for.
            </summary>
            <returns>List of data types accepted</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDoubleProxy">
            <summary>
            An <see cref="T:DHI.Mike1D.Generic.IDoubleProxy"/> gives access to quantities that are offered (can be retrieved) and
            accepted (can be set).
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleProxy.ValueGetter(System.Int32)">
            <summary>
            Get value setter for the specified data quantity
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Offers"/></param>
            <returns>A value getter delegate that can set the value</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleProxy.ValueSetter(System.Int32)">
            <summary>
            Get value setter for the specified data type
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Accepts"/></param>
            <returns>A value setter delegate that can set the value</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDoubleFractionProxy">
            <summary>
            An <see cref="T:DHI.Mike1D.Generic.IDoubleFractionProxy"/> can interpolate
            within the current time step, from time N to time Np1.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleFractionProxy.ValueFractionGetter(System.Int32)">
            <summary>
            Get value getter for the specified data quantity. The fraction getter can interpolate
            within the current time step, from time N to time Np1.
            <para>
            If a quantity does not offer timestep interpolation, null is returned, and the <see cref="M:DHI.Mike1D.Generic.IDoubleProxy.ValueGetter(System.Int32)"/>
            must be called instead.
            </para>
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Offers"/></param>
            <returns>A value getter delegate that can set the value, or null, if this quantity does not implement time step interpolation.</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDoubleVectorProxy">
            <summary>
            An <see cref="T:DHI.Mike1D.Generic.IQuantityProxy"/> gives access to quantities that are offered (can be retrieved) and
            accepted (can be set) on vector form.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleVectorProxy.ValueGetter(System.Int32)">
            <summary>
            Get value setter for the specified data quantity
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Offers"/></param>
            <returns>An interface providing functionality to get the value</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleVectorProxy.ValueSetter(System.Int32)">
            <summary>
            Get value setter for the specified data type
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Accepts"/></param>
            <returns>An interface providing functionality to set the value</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDoubleReachProxy">
            <summary>
            An <see cref="T:DHI.Mike1D.Generic.IQuantityProxy"/> also specifying the gridpoints where the element values belong to.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleReachProxy.ValueGetter(System.Int32,System.Int32[]@)">
            <summary>
            Get value getter for the specified data quantity, also provides a list of grid point indices
            where the element values belong to.
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Offers"/></param>
            <param name="indexList">List of indices to gridpoints where each element values belongs to</param>
            <returns>An interface providing functionality to get the value</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleReachProxy.ValueSetter(System.Int32,System.Int32[]@)">
            <summary>
            Get value setter for the specified data quantity, also provides a list of grid point indices
            where the element values belong to.
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Accepts"/></param>
            <param name="indexList">List of indices to gridpoints where each element values belongs to</param>
            <returns>An interface providing functionality to get the value</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.IDoubleElementSetProxy">
            <summary>
            An <see cref="T:DHI.Mike1D.Generic.IQuantityProxy"/> also specifying the geometry that the element values belong to.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleElementSetProxy.ValueGetter(System.Int32,DHI.Mike1D.Generic.IElementSetDefinition@)">
            <summary>
            Get value getter for the specified data quantity, also provides an elementSet describing the
            geometry of each element.
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Offers"/></param>
            <param name="elementSet">ElementSetDefinition describing the geometry of each element.</param>
            <returns>An interface providing functionality to get the value</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IDoubleElementSetProxy.ValueSetter(System.Int32,DHI.Mike1D.Generic.IElementSetDefinition@)">
            <summary>
            Get value setter for the specified data quantity, also provides an elementSet describing the
            geometry of each element.
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Offers"/></param>
            <param name="elementSet">ElementSetDefinition describing the geometry of each element.</param>
            <returns>An interface providing functionality to get the value</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.DDoubleGetterBox">
            <summary>
            Class boxing DDoubleGetter and implementing IDoubleGetter
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleGetterBox.#ctor(System.Func{System.Double})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleGetterBox.GetValue">
            <summary>
            Get the current value
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.DDoubleGetSetBox">
            <summary>
            Class boxing DDoubleGetter and DDoubleSetter implementing IDoubleGetSet
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleGetSetBox.#ctor(System.Func{System.Double},System.Action{System.Double})">
            <summary>
            Constructor where getting and setting is allowed.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleGetSetBox.GetValue">
            <summary>
            Get the current value. Calls the proxy getter()
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleGetSetBox.SetValue(System.Double)">
            <summary>
            Set the current value. Calls the proxy setter(value)
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.DDoubleVectorGetterBox">
            <summary>
            Class boxing a set of <see cref="T:System.Func`1"/>.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DDoubleVectorGetterBox.Sources">
            <summary>
            Sources of where to get values
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DDoubleVectorGetterBox.ElementCount">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleVectorGetterBox.GetValues">
            <summary>
            Get the current values. A new array will be returned every time called.
            </summary>
            <remarks>
            When implementing new code, be sure to return a copy of data, such that 
            engine data is not made available for editing with this call.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleVectorGetterBox.GetValues(System.Double[])">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleVectorGetterBox.GetValue(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.DDoubleVectorFractionGetterBox">
            <summary>
            Class boxing a set of <see cref="T:System.Func`2"/>.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DDoubleVectorFractionGetterBox.Sources">
            <summary>
            Sources of where to get values
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DDoubleVectorFractionGetterBox.ElementCount">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleVectorFractionGetterBox.GetValues">
            <summary>
            Get the current values. A new array will be returned every time called.
            </summary>
            <remarks>
            When implementing new code, be sure to return a copy of data, such that 
            engine data is not made available for editing with this call.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleVectorFractionGetterBox.GetValues(System.Double[])">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleVectorFractionGetterBox.GetValue(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleVectorFractionGetterBox.GetValues(System.Double)">
            <summary>
            Get the current values. A new array will be returned every time called.
            </summary>
            <remarks>
            When implementing new code, be sure to return a copy of data, such that 
            engine data is not made available for editing with this call.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleVectorFractionGetterBox.GetValues(System.Double[],System.Double)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleVectorFractionGetterBox.GetValue(System.Int32,System.Double)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.DDoubleVectorGetSetBox">
            <summary>
            Class boxing a set of <see cref="T:DHI.Mike1D.Generic.IDoubleGetSet"/>.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DDoubleVectorGetSetBox.Sources">
            <summary>
            Sources of where to get/set values
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.DDoubleVectorGetSetBox.ElementCount">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleVectorGetSetBox.GetValues">
            <summary>
            Get the current values. A new array will be returned every time called.
            </summary>
            <remarks>
            When implementing new code, be sure to return a copy of data, such that 
            engine data is not made available for editing with this call.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleVectorGetSetBox.GetValues(System.Double[])">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleVectorGetSetBox.GetValue(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleVectorGetSetBox.SetValues(System.Double[])">
            <summary>
            Set the current values, vals will be copied into current array and update that.
            </summary>
            <remarks>
            When implementing new code, be sure to copy data into the existing data,
            such that engine data is not made available for editing with this call.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.DDoubleVectorGetSetBox.SetValue(System.Int32,System.Double)">
            <summary>
            Set the current values, vals will be copied into current array and update that.
            </summary>
            <remarks>
            When implementing new code, be sure to copy data into the existing data,
            such that engine data is not made available for editing with this call.
            </remarks>
        </member>
        <member name="T:DHI.Mike1D.Generic.EmptyDoubleProxy">
            <summary>
            Default empty proxy. Use <see cref="F:DHI.Mike1D.Generic.EmptyDoubleProxy.Instance"/> to get hold of one
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.EmptyDoubleProxy.Instance">
            <summary>
            The static instance of the <see cref="T:DHI.Mike1D.Generic.EmptyDoubleProxy"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.EmptyDoubleProxy.#ctor">
            <summary>
            Protected constructor, such that a user cannot create one. Use <see cref="F:DHI.Mike1D.Generic.EmptyDoubleProxy.Instance"/> to get one of these
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.EmptyDoubleProxy.Offers">
            <summary>
            List of data types that is offered, i.e., that you can get a ValueGetter for.
            </summary>
            <returns>List of data types offered</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.EmptyDoubleProxy.Accepts">
            <summary>
            List of data types that is accepted, i.e., that you can get a ValueSetter for.
            </summary>
            <returns>List of data types accepted</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.EmptyDoubleProxy.ValueGetter(System.Int32)">
            <summary>
            Get value setter for the specified data quantity
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Offers"/></param>
            <returns>A value getter delegate that can set the value</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.EmptyDoubleProxy.ValueSetter(System.Int32)">
            <summary>
            Get value setter for the specified data type
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Accepts"/></param>
            <returns>A value setter delegate that can set the value</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.EmptyDoubleReachProxy">
            <summary>
            Default empty proxy
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.EmptyDoubleReachProxy.Instance">
            <summary>
            The static instance of the <see cref="T:DHI.Mike1D.Generic.EmptyDoubleProxy"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.EmptyDoubleReachProxy.#ctor">
            <summary>
            Protected constructor, such that a user cannot create one. Use <see cref="F:DHI.Mike1D.Generic.EmptyDoubleReachProxy.Instance"/> to get one of these
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.EmptyDoubleReachProxy.ValueGetter(System.Int32,System.Int32[]@)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.EmptyDoubleReachProxy.ValueSetter(System.Int32,System.Int32[]@)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.EmptyDoubleElementSetProxy">
            <summary>
            Default empty proxy
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.EmptyDoubleElementSetProxy.Instance">
            <summary>
            The static instance of the <see cref="T:DHI.Mike1D.Generic.EmptyDoubleElementSetProxy"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.EmptyDoubleElementSetProxy.ValueGetter(System.Int32,DHI.Mike1D.Generic.IElementSetDefinition@)">
            <summary>
            Get value getter for the specified data quantity, also provides an elementSet describing the
            geometry of each element.
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Offers"/></param>
            <param name="elementSet">ElementSetDefinition describing the geometry of each element.</param>
            <returns>An interface providing functionality to get the value</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.EmptyDoubleElementSetProxy.ValueSetter(System.Int32,DHI.Mike1D.Generic.IElementSetDefinition@)">
            <summary>
            Get value setter for the specified data quantity, also provides an elementSet describing the
            geometry of each element.
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Offers"/></param>
            <param name="elementSet">ElementSetDefinition describing the geometry of each element.</param>
            <returns>An interface providing functionality to get the value</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.ILocationSpan">
            <summary>
            A span of a reach, based on the reach id, an start and end
            chainage.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ILocationSpan.ID">
            <summary>
            Identification name
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ILocationSpan.StartChainage">
            <summary>
            Start chainage value of location span (lowest chainage number).
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ILocationSpan.EndChainage">
            <summary>
            End chainage value of location span (highest chainage number).
            Unit: [m]
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.GetStartLocation">
            <summary>
            Gets the start location of the span. The span can not be edited by editing 
            this location.
            </summary>
            <returns>start location of the span</returns>
            <remarks>
            Made as a method instead of a property get to avoid 
            users to think the start end of the span can be 
            manipulated through this method.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.GetEndLocation">
            <summary>
            Gets the end location of the span. The span can not be edited by editing 
            this location.
            </summary>
            <returns>End location of the span</returns>
            <remarks>
            Made as a method instead of a property get to avoid 
            users to think the end of the span can be 
            manipulated through this method.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.CreateLocation(System.Double)">
            <summary>
            Creates a location at the specified chainage of the span. Derived
            data is automatically calculated at the location. 
            The chainage must lay within the span.
            </summary>
            <param name="chainage">Chainage to make location at</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.CreateSubLocationSpan(System.Double,System.Double)">
            <summary>
            Creates a sub-locationSpan defined within chainage interval. Derived
            data is automatically adjusted to match locationspan
            The chainages must lay within the span.
            </summary>
            <param name="startChainage">Start chainage for new locationSpan</param>
            <param name="endChainage">End chainage for new locationSpan</param>
            <returns>A derived location span defined at chainage interval</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.ContainsChainage(System.Double)">
             <summary>
             Decides wheather a chainage value is contained inside the location span chainage values 
             or on the edge of the span.
            
             Comparison uses the Constants.LOCATION_EQUAL_TOLERANCE,
             i.e., the chainage can be tolerance outside the span and still be contained.
             </summary>
             <param name="chainage">Chainage value</param>
             <returns>True if contained</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.ContainsChainage(System.Double,System.Double)">
             <summary>
             Decides wheather a chainage value is contained inside the location span chainage values 
             or on the edge of the span.
            
             Comparison uses the <paramref name="tolerance"/>,
             i.e., the chainage can be tolerance outside the span and still be contained.
             Negative values for tolerance are allowed ("shortening" the span)
             </summary>
             <returns>True if contained</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.StrictContainsChainage(System.Double)">
             <summary>
             Decides wheather a chainage value is strictly contained inside the location span 
             chainage values.
            
             Comparison uses the Constants.LOCATION_EQUAL_TOLERANCE,
             i.e., the chainage must be tolerance inside the span before it is contained.
             </summary>
             <param name="chainage">Chainage argument</param>
             <returns>True if strictly contained</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.Contains(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Decides wheather location is contained inside the location span or on the edge of the span.
            
            Location comparisons are case insensitive, and uses the Constants.LOCATION_EQUAL_TOLERANCE,
            i.e., the location can be tolerance outside the span and still be contained.
            </summary>
            <param name="location"></param>
            <returns>true if location has same branch name and chainage is inside interval</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.Contains(DHI.Mike1D.Generic.ILocation,System.Double)">
            <summary>
            Decides wheather location is contained inside the location span or on the edge of the span.
            
            Location comparisons are case insensitive, and uses the <paramref name="tolerance"/>,
            i.e., the location can be tolerance outside the span and still be contained. <paramref name="tolerance"/> may
            be negative.
            </summary>
            <returns>true if location has same branch name and chainage is inside interval</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.StrictContains(DHI.Mike1D.Generic.ILocation)">
            <summary>
            <para>
            Decides whether location is contained inside the location span. Inside is understood as 
            startChainage > location.Chainage and location.Chainage > endChainage
            </para>
            <para>
            Location comparisons are case insensitive, and uses the Constants.LOCATION_EQUAL_TOLERANCE,
            i.e., location.Chainage must be tolerance inside the span to evaluate to true.
            </para>
            </summary>
            <param name="location">Location to check</param>
            <returns>true if location has same branch name and chainage is strictly inside interval</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.StrictContains(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Decides whether a location span is contained inside this location span. This is the case when both the start
            and end location is strictly contained inside the location span
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.OverLaps(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Decides whether a location span overlaps the current locationSpan.
            
            There must be a strict overlap, i.e., the intersection must be larger than 
            <see cref="F:DHI.Mike1D.Generic.Constants.LOCATION_EQUAL_TOLERANCE"/>.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.OverLaps(DHI.Mike1D.Generic.ILocationSpan,System.Double)">
            <summary>
            Decides whether a location span overlaps the current locationSpan. If overlap is less than
            minOverlap, false is returned.
            </summary>
            <param name="other"></param>
            <param name="minOverlap">Positive or zero number specifying the minimum overlap required</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.OverLaps(System.Double,System.Double,System.Double)">
            <summary>
            Decides whether a location span overlaps the chainages of another locationSpan. If overlap is less than
            minOverlap, false is returned.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.Intersection(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Returns the intersection of this and other. 
            
            There must be a strict overlap, i.e., the intersection must be larger than
            <see cref="F:DHI.Mike1D.Generic.Constants.LOCATION_EQUAL_TOLERANCE"/>.
            </summary>
            <param name="other"></param>
            <returns>The intersected span, or null if they are not overlapping</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.Intersection(DHI.Mike1D.Generic.ILocationSpan,System.Double)">
            <summary>
            Returns the intersection of this and other. 
            
            There must be a strict overlap, i.e., the intersection must be larger than
            minOverlap. Set to zero if very small overlaps is allowed.
            </summary>
            <param name="other"></param>
            <param name="minOverlap">positive or zero number specifying how big an overlap that is required.</param>
            <returns>The intersected span, or null if they are not overlapping</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.Intersection(System.Double,System.Double,System.Double)">
            <summary>
            Returns the intersection of this and chainages of another locationspan. 
            
            There must be a strict overlap, i.e., the intersection must be larger than
            minOverlap. Set to zero if very small overlaps is allowed.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.Clone">
            <summary>
            Clone the base properties of the ILocationSpan.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.MidPoint">
            <summary>
            Returns location midway in the location span
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ILocationSpan.Length">
            <summary>
            Length of the location span. 
            </summary>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.IStateManaged">
            <summary>
            Structures with state must implement IStateManaged. Examples of structures with state are gates, pumps and 
            dambreak structures
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IStateManaged.KeepCurrentState">
            <summary>
            Keep current state saves the current state and assings a stateID string to the state. The stateID string is returned.
            </summary>
            <returns>ID of state</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IStateManaged.RestoreState(System.String)">
            <summary>
            Restores the state with the given ID.
            </summary>
            <param name="stateID">ID of the state to restore. The stateID is typically the ID returned by KeepCurrentState.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.IStateManaged.ClearState(System.String)">
            <summary>
            Cleares the state with the given ID.
            </summary>
            <param name="stateID">ID of the state to clear. The stateID is typically the stateID returned by KeepCurrentState</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.IStateManaged.ClearAllStates">
            <summary>
            Clears all states.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ITwoDLocation">
            <summary>
            Location used when working with 2D or 3D models
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ITwoDLocation.CoordinateProjection">
            <summary>
            String representation of projection
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ITwoDLocation.Points">
            <summary>
            List of (x,y) points
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ITwoDLocation.Info">
            <summary>
            Used for structure ID 
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IXYPair">
            <summary>
            Defines data for a single row in a XY table. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IXYPair.X">
            <summary>
            x
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IXYPair.Y">
            <summary>
            y
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IXYPairs">
            <summary>
            
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYPairs.Add(DHI.Mike1D.Generic.IXYPair)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:DHI.Mike1D.Generic.IXYPairs.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.IXYPairs.Count">
            <summary>
            
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYPairs.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYPairs.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.IXYTable">
            <summary>
            Table of corresponding x and y values. 
            <para>
            If using one of the <code>YFromX</code> methods, the x values
            must be monotonic, and similar if using the <code>XFromY</code>, the
            y values must be monotonic.
            </para>
            <para>
            NOTE: When this is used for a qh-relation, h is stored on x
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYTable.YFromX(System.Double)">
            <summary>
            Interpolates/extrapolates width using linear interpolation
            </summary>
            <param name="x">the lookup variable</param>
            <returns>the interpolated y</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYTable.XFromY(System.Double)">
            <summary>
            Interpolates/extrapolates width using linear interpolation
            <para>
            Assuming that the y-values are monotonic.
            </para>
            </summary>
            <param name="y">the lookup variable</param>
            <returns>the interpolated x</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYTable.YFromX(System.Double,DHI.Mike1D.Generic.ExtrapolationTypes)">
            <summary>
            Interpolates/extrapolates width using linear interpolation
            </summary>
            <param name="x">the lookup variable</param>
            <param name="extrapolationType">Type of extrapolation</param>
            <returns>the interpolated y</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYTable.XFromY(System.Double,DHI.Mike1D.Generic.ExtrapolationTypes)">
            <summary>
            Interpolates/extrapolates width using linear interpolation
            <para>
            Assuming that the y-values are monotonic.
            </para>
            </summary>
            <param name="y">the lookup variable</param>
            <param name="extrapolationType">Type of extrapolation</param>
            <returns>the interpolated x</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYTable.Validate">
            <summary>
            Validates the data. The only constraint is that the x values after sorting must be monotonically increasing.
            </summary>
            <returns>String that descripes the problem.</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.IXYTable.Count">
            <summary>
            Number of elements in table
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYTable.Resize(System.Int32)">
            <summary>
            Resize table. Copy over data to new table
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.IXYTable.Set(System.Int32,System.Double,System.Double)">
            <summary>
            Set a value to the table
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IXYTable.MinimumX">
            <summary>
            Minimum x value
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IXYTable.MaximumX">
            <summary>
            Maximum x value
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IXYTable.XValues">
            <summary>
             Get x values
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IXYTable.YValues">
            <summary>
             Get y values
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IXYTable.Item(System.Int32,System.Int32)">
            <summary>
            Indexer for getting/setting x or y values
            </summary>
            <param name="i">Row index</param>
            <param name="j">Column index, must be 0 or 1</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.KnownTypes">
            <summary>
            Contains all DHI.Mike1D known types, i.e. all types
            that has the DataContractAttribute
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.KnownTypes.List">
            <summary>
            List of known types
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.KnownTypes.#ctor(System.Type)">
            <summary>
            Create a list of KnownTypes based on the Type t.
            
            All known types in the assembly that 
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.KnownTypes.AddType(System.Type)">
            <summary>
            Add a type to the list of known types
            </summary>
            <param name="t">Type to add</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.KnownTypes.AddType(System.Object)">
            <summary>
            Add a type corresponding to the type of the input object
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.KnownTypes.generateList">
            <summary>
            Generate initial list based on reflection
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ListDateTimes">
            <summary>
            Class implementing a list of DateTime's
            Required for generic list COM interop
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ListDateTimes.#ctor">
            <summary>
            Initializes a new instance of the List class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ListDateTimes.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the List class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.ListDateTimes.#ctor(System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Initializes a new instance of the List class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.Listdoubles">
            <summary>
            Class implementing a list of double's
            Required for generic list COM interop
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Listdoubles.#ctor">
            <summary>
            Initializes a new instance of the List class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Listdoubles.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the List class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Listdoubles.#ctor(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Initializes a new instance of the List class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.Listlongs">
            <summary>
            Class implementing a list of long's
            Required for generic list COM interop
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Listlongs.#ctor">
            <summary>
            Initializes a new instance of the List class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Listlongs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the List class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Listlongs.#ctor(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Initializes a new instance of the List class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.Liststrings">
            <summary>
            Class implementing a list of string's
            Required for generic list COM interop
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Liststrings.#ctor">
            <summary>
            Initializes a new instance of the List class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Liststrings.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the List class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Liststrings.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the List class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.Location">
            <summary>
            Class describing a location in a network. ,'s are not allowed in the ID.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Location.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Location.#ctor(System.String,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="id"></param>
            <param name="chainage"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Location.#ctor(System.String,System.Double,System.Int32)">
            <summary>
            Optimized internal version, for deep cloning, when the
            intId matching the ID of the Location is known.
            </summary>
            <param name="id"></param>
            <param name="chainage"></param>
            <param name="intId"></param>
        </member>
        <member name="F:DHI.Mike1D.Generic.Location._id">
            <summary> Identification name </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Location.ID">
            <summary>
            Identification name
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Location._chainage">
            <summary>
            Position along the reach.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Location.Chainage">
            <summary>
            Chainage.
            Unit: [m]
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Location.ToString">
            <summary>
            This method os important when creating a node id from a location. It is important to 
            act in _chainage == Constants.DELETEVALUE since this is how rivers are connected to pipes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Location.ToStringInUserUnits">
            <summary>
            Gives the textual representation of the string in user units.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Location.FromString(System.String)">
            <summary>
            This method is made to get back from a Location.ToString(). It is therefor very important that any
            changes in ToString are reflected in this method. 
            </summary>
            <param name="locationString"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Location.Clone">
            <summary>
            Returns a deep clone of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Location.CompareTo(System.Object)">
            <summary>
            Compares two ILocations. First id is compared, secondly chainage.
            
            This can be used to sort the ILocations, first alphabetically, secondly 
            by chainage.
            </summary>
            <param name="obj">Other ILocation (or Location) to compare to</param>
            <returns>0 if the same (withing Constants.LOCATION_EQUAL_TOLERANCE), else nonzero.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Location.Equals(DHI.Mike1D.Generic.ILocation)">
            <summary>
             Indicates whether the current object is equal to another object of the same type.
             
             The Location chainage must be within <see cref="F:DHI.Mike1D.Generic.Constants.LOCATION_EQUAL_TOLERANCE"/>.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Location.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:DHI.Mike1D.Generic.Location.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current Location
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:DHI.Mike1D.Generic.Location.IDEquals(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Check if the ID equals the others ID
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Location.IDCompareTo(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Compare the ID with the others ID.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Location.IDEquals(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Check if the ID equals the others ID, case ignored (culture invariant)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.Location.ExtensionData">
            <summary>
            Data from an extended DataContract not recognized here
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Location.CreateSpanAroundLocation(DHI.Mike1D.Generic.ILocation,System.Double,System.Double)">
            <summary>
            Create a LocationSpan around the given location, that
            goes startDist up and endDist down from the chainage of the location.
            
            Span will go from location.Chainage-startDist to location.Chainage+endDist.
            </summary>
            <param name="location">Location to make span around</param>
            <param name="startDist">Distance from location in negative chainage direction (positive number)</param>
            <param name="endDist">Distance from location in positive chainage direction (positive number)</param>
            <returns>Span around location.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Location.CalculateRatio(DHI.Mike1D.Generic.ILocation,DHI.Mike1D.Generic.ILocation,DHI.Mike1D.Generic.ILocation)">
            <summary>
             Calculate the ratio of the inter Location position in between the
             start (sc) and end (ec) locations, such that
             <code>v = (1-ratio)*v_sc + ratio*v_ec </code>
             
             If inter is not in between sc and ec, ratio can be negative
             or larger than one.
            </summary>
            <param name="startLocation">Start location - usually chainage less than inter</param>
            <param name="endLocation">End location - usually chainage larger than inter</param>
            <param name="inter">Intermediate location.</param>
            <returns>The ratio of the position between start and end location</returns>
            <remarks>
             if start and end location equals, 0.5 is returned. 
            </remarks>
        </member>
        <member name="T:DHI.Mike1D.Generic.LocationIdMap">
            <summary>
            Class mapping a string ID to an integer ID.
            All string ID's must be upper cased in the StringToInt Dictionary
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.LocationSpan">
            <summary>
            Class representing a span along a river or a pipe. 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.MidPoint">
            <summary>
            Returns location midway in the location span
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.#ctor(System.String,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="id">Identification name</param>
            <param name="startChainage">Start chainage. [m]</param>
            <param name="endChainage">End chainage. [m]</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.#ctor(System.String,System.Double,System.Double,System.Int32)">
            <summary>
            internal Constructor, optimized, when the intID is known
            </summary>
            <param name="id">Identification name</param>
            <param name="startChainage">Start chainage. [m]</param>
            <param name="endChainage">End chainage. [m]</param>
            <param name="intID">Internal ID</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.LocationSpan.ID">
            <summary>
            Identification name
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.LocationSpan._startChainage">
            <summary>
            Start chainage [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.LocationSpan.StartChainage">
            <summary>
            Start chainage.
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.LocationSpan._endChainage">
            <summary>
            End chainage [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.LocationSpan.EndChainage">
            <summary>
            End chainage.
            Unit: [m]
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.GetStartLocation">
            <summary>
            Gets the start location of the span. 
            </summary>
            <returns>Start location of the span</returns>
            <remarks>
            Made as a method instead of a property get to avoid 
            users to think the start location of the span can be 
            manipulated through this method.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.GetEndLocation">
            <summary>
            Gets the end location of the span. 
            </summary>
            <returns>End location of the span</returns>
            <remarks>
            Made as a method instead of a property get to avoid 
            users to think the end location of the span can be 
            manipulated through this method.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.CreateLocation(System.Double)">
            <summary>
            Creates a location at the specified chainage of the span. Derived
            data is automatically calculated at the location. 
            The chainage must lay within the span, otherwise null is returned
            </summary>
            <param name="chainage">Chainage to make location at</param>
            <returns>Location at chainage value, or null if chainage is outside span</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.CreateSubLocationSpan(System.Double,System.Double)">
            <summary>
            Creates a sub-locationSpan defined within chainage interval. Derived
            data is automatically adjusted to match locationspan
            The chainages must lay within the span.
            </summary>
            <param name="startChainage">Start chainage for new locationSpan</param>
            <param name="endChainage">End chainage for new locationSpan</param>
            <returns>A derived location span defined at chainage interval, or null if chainages is outside span</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.ContainsChainage(System.Double)">
             <summary>
             Decides wheather a chainage value is contained inside the location span chainage values 
             or on the edge of the span.
            
             Comparison uses the Constants.LOCATION_EQUAL_TOLERANCE,
             i.e., the chainage can be tolerance outside the span and still be contained.
             </summary>
             <param name="chainage"></param>
             <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.StrictContainsChainage(System.Double)">
             <summary>
             Decides wheather a chainage value is strictly contained inside the location span 
             chainage values.
            
             Comparison uses the Constants.LOCATION_EQUAL_TOLERANCE,
             i.e., the chainage must be tolerance inside the span before it is contained.
             </summary>
             <param name="chainage"></param>
             <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.ContainsChainage(System.Double,System.Double)">
             <summary>
             Decides wheather a chainage value is contained inside the location span 
             chainage values.
            
             Comparison uses the tolerance parameter
             i.e., the chainage can be tolerance outside the span before it is contained.
             Negative values for tolerance are allowed ("shortening" the span)
             </summary>
             <param name="chainage"></param>
             <param name="tolerance"></param>
             <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.Contains(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Decides wheather location is contained inside the location span or on the edge of the span.
            
            Location comparisons are case insensitive, and uses the Constants.LOCATION_EQUAL_TOLERANCE,
            i.e., the location can be tolerance outside the span and still be contained.
            </summary>
            <param name="location"></param>
            <returns>true if location has same branch name and chainage is inside interval</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.StrictContains(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Decides whether location is contained inside the location span. Inside is understood as 
            startChainage > location.Chainage and location.Chainage > endChainage
            
            Location comparisons are case insensitive, and uses the Constants.LOCATION_EQUAL_TOLERANCE,
            i.e., location.Chainage must be tolerance inside the span to evaluate to true.
            </summary>
            <returns>true if location has same branch name and chainage is inside interval</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.Contains(DHI.Mike1D.Generic.ILocation,System.Double)">
            <summary>
            Decides wheather location is contained inside the location span or on the edge of the span.
            
            Location comparisons are case insensitive, and uses the <paramref name="tolerance"/>,
            i.e., the location can be tolerance outside the span and still be contained.
            Negative values for tolerance are allowed ("shortening" the span)
            </summary>
            <returns>true if location has same branch name and chainage is inside interval</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.StrictContains(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Decides whether a location span is contained inside this location span. This is the case when both the start
            and end location is contained inside the location span
            </summary>
            <param name="locationSpan"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.OverLaps(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Decides whether a location span overlaps the current locationSpan. If overlap is less than
            <see cref="F:DHI.Mike1D.Generic.Constants.LOCATION_EQUAL_TOLERANCE"/>, false is returned.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.OverLaps(DHI.Mike1D.Generic.ILocationSpan,System.Double)">
            <summary>
            Decides whether a location span overlaps the current locationSpan. If overlap is less than
            minOverlap, false is returned.
            </summary>
            <param name="other">Location span to check</param>
            <param name="minOverlap">Positive or zero number specifying the minimum overlap required</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.OverLaps(System.Double,System.Double,System.Double)">
            <summary>
            Decides whether a location span overlaps the chainages of another locationSpan. If overlap is less than
            minOverlap, false is returned.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.Intersection(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Returns the intersection of this and other. 
            
            There must be a strict overlap, i.e., the intersection must be larger than
            <see cref="F:DHI.Mike1D.Generic.Constants.LOCATION_EQUAL_TOLERANCE"/>.
            </summary>
            <param name="other"></param>
            <returns>The intersected span, or null if they are not overlapping</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.Intersection(DHI.Mike1D.Generic.ILocationSpan,System.Double)">
            <summary>
            Returns the intersection of this and other. 
            
            There must be a strict overlap, i.e., the intersection must be larger than
            minOverlap. Set to zero if very small overlaps is allowed.
            </summary>
            <param name="other"></param>
            <param name="minOverlap">positive or zero number specifying how big an overlap that is required.</param>
            <returns>The intersected span, or null if they are not overlapping</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.Intersection(System.Double,System.Double,System.Double)">
            <summary>
            Returns the intersection of this and chainages of another locationspan. 
            
            There must be a strict overlap, i.e., the intersection must be larger than
            minOverlap. Set to zero if very small overlaps is allowed.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.Clone">
            <summary>
            Produce a deep clone of the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.Length">
            <summary>
            Length of the location span. 
            </summary>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.LocationSpan.ExtensionData">
            <summary>
            Data from an extended DataContract not recognized here
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.ToString">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.Equals(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
             
             The LocationSpan chainages must be within <see cref="F:DHI.Mike1D.Generic.Constants.LOCATION_EQUAL_TOLERANCE"/>.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current Location
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.CompareTo(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="other" />. Zero This instance is equal to <paramref name="other" />. Greater than zero This instance is greater than <paramref name="other" />. 
            </returns>
            <param name="other">An object to compare with this instance. </param>
            <exception cref="T:System.ArgumentException"><paramref name="other" /> is not the same type as this instance. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.IDEquals(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Check if the ID equals the others ID, case ignored (culture invariant)
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.ContainsChainage(System.Double,System.Double,System.Double)">
             <summary>
             Decides wheather a chainage value is contained inside the location span chainage values 
             or on the edge of the span.
            
             Comparison uses the Constants.LOCATION_EQUAL_TOLERANCE,
             i.e., the chainage can be tolerance outside the span and still be contained.
             </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.ContainsChainage(System.Double,System.Double,System.Double,System.Double)">
             <summary>
             Decides wheather a chainage value is contained inside the location span 
             chainage values.
            
             Comparison uses the tolerance parameter
             i.e., the chainage can be tolerance outside the span before it is contained.
             Negative values for tolerance are allowed ("shortening" the span)
             </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpan.OverLaps(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Decides whether a location span overlaps the chainages of another locationSpan. If overlap is less than
            minOverlap, false is returned.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.LocationSpans">
            <summary>
            Class implementing a list of ILocationSpan's
            Required for generic list COM interop
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpans.#ctor">
            <summary>
            Initializes a new instance of the List class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpans.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the List class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.LocationSpans.#ctor(System.Collections.Generic.IEnumerable{DHI.Mike1D.Generic.ILocationSpan})">
            <summary>
            Initializes a new instance of the List class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.ExtrapolationTypes">
            <summary>
            Extrapolation types. When data is outside the data set, this controls
            how extrapolation takes place
            This does not control the type of interpolation for internal values.
            <para>
            Not all interpolation/extrapolation routines support all the extrapolation types,
            especially the Sqrt is only implemented in certain places..
            </para>
            </summary> 
        </member>
        <member name="F:DHI.Mike1D.Generic.ExtrapolationTypes.NotAllowed">
            <summary>
            No extrapolation is allowed. An exception is thrown when argument is outside the valid interval.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ExtrapolationTypes.Nearest">
            <summary>
            Get the nearest value
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ExtrapolationTypes.Linear">
            <summary>
            y = a * x + b, using the two closest value in the set
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ExtrapolationTypes.Sqrt">
            <summary>
            y = a * sqrt(x) + beta, using the two closest values in the set
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.ExtrapolationTypes.SqrtOrNearest">
            <summary>
            When argument x is outside on the the first x-value side: nearest
            When argument x is outside on the the last x-value side: y = a * sqrt(x) + b.
            This method is suitable for extrapolation in Q-h relations.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.MathUtil">
            <summary>
            Collection of static methods used in Mike1D.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.MathUtil.Radian2Degrees">
            <summary>
            Constant for converting radians to degrees
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.MathUtil.Degrees2Radians">
            <summary>
            Constant for converting degrees to radians
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.VolumeOfPartialCone(System.Double,System.Double,System.Double)">
            <summary>
             Return the volume of a partial cone of a given height and surface areas.
            </summary>
            <param name="area1"></param>
            <param name="area2"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.SurfaceAreaOfPartialCone(System.Double,System.Double,System.Double)">
            <summary>
             Return the surface area of a partial cone given the volume and one surface areas.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.Limit(System.Double,System.Double,System.Double)">
            <summary>
             Limit a value between min and max
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.AreEqualRel(System.Double,System.Double,System.Double)">
            <summary>
            Returns true if <paramref name="a"/> and <paramref name="b"/> are equal
            within a relative tolerance.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.Interp(System.Double,System.Double[],System.Double[],DHI.Mike1D.Generic.ExtrapolationTypes)">
            <summary>
            1-D linear interpolation (table lookup)
            Interpolates to find y, the value of the underlying function yTable at the point x.
            xTable must be a monoton increasing array of the same length as yTable.
            For x values outside xTable extrapolation is applied. Extrapolation method is 
            specified.
            </summary>
            <param name="x">value where to look up</param>
            <param name="xTable">Monoton vector of length n</param>
            <param name="yTable">vector of length n</param>
            <param name="extrapolationType">How to extrapolate if not within xTable span</param>
            <returns>interpolated value (looked up value)</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.Interp(System.Double,System.Double[],System.Double[])">
            <summary>
            1-D linear interpolation (table lookup)
            Interpolates to find y, the value of the underlying function yTable at the point x.
            xTable must be a monoton increasing array of the same length as yTable.
            </summary>
            <param name="x">value where to look up</param>
            <param name="xTable">Monoton increasing vector of length n</param>
            <param name="yTable">vector of length n</param>
            <returns>interpolated value (looked up value)</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.Interp(System.DateTime,System.DateTime[],System.Double[],DHI.Mike1D.Generic.ExtrapolationTypes)">
            <summary>
            1-D linear interpolation (table lookup)
            Interpolates to find y, the value of the underlying function yTable at the point x.
            xTable must be a monoton increasing array of the same length as yTable.
            For x values outside xTable extrapolation is applied. Extrapolation method is 
            specified.
            </summary>
            <param name="date">value where to look up</param>
            <param name="xTable">Monoton vector of length n</param>
            <param name="yTable">vector of length n</param>
            <param name="extrapolationType">How to extrapolate if not within xTable span</param>
            <returns>interpolated value (looked up value)</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.MathUtil.IDataForSearching">
            <summary>
             Helper interface for searching routinge <see cref="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.Double,System.Collections.Generic.List{System.Double},System.Double@,System.Int32)"/>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathUtil.IDataForSearching.Count">
            <summary>
             Length of vectors to interpolate in 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathUtil.IDataForSearching.Item(System.Int32)">
            <summary>
             Returns values in which to find the indices to interpolate between 
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.MathUtil.DataForSearchingNegate">
            <summary>
            An <see cref="T:DHI.Mike1D.Generic.MathUtil.IDataForSearching"/> class that negates
            the value in the array/list
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.DataForSearchingNegate.#ctor(System.Collections.Generic.IList{System.Double})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathUtil.DataForSearchingNegate.Count">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.MathUtil.DataForSearchingNegate.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.MathUtil.IDataForSearching`1">
            <summary>
             Helper interface for searching routinge <see cref="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.Double,System.Collections.Generic.List{System.Double},System.Double@,System.Int32)"/>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathUtil.IDataForSearching`1.Count">
            <summary>
             Length of vectors to interpolate in 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathUtil.IDataForSearching`1.Item(System.Int32)">
            <summary>
             Returns values in which to find the indices to interpolate between 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.IDataForSearching`1.Fraction(`0,`0,`0)">
            <summary>
             Calculates the fraction of mid in between first and last
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.MathUtil.IDataToInterpolate">
            <summary>
             Helper interface for interpolation routine Interp(double, IDataToInterpolate, ExtrapolationTypes). 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.MathUtil.IDataToInterpolate.Length">
            <summary>
             Length of vectors to interpolate in 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.IDataToInterpolate.X(System.Int32)">
            <summary>
             Returns values in which to find the indices to interpolate between 
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.IDataToInterpolate.Y(System.Int32)">
            <summary>
             Returns the data to interpolate in
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.Interp(System.Double,DHI.Mike1D.Generic.MathUtil.IDataToInterpolate,DHI.Mike1D.Generic.ExtrapolationTypes)">
            <summary>
            1-D linear interpolation (table lookup)
            Interpolates to find y, the value of the underlying function yTable at the point x.
            xTable must be a monoton increasing array of the same length as yTable.
            For x values outside xTable extrapolation is applied. Extrapolation method is 
            specified.
            </summary>
            <param name="x">value where to look up</param>
            <param name="data">Accessor to data to interpolate</param>
            <param name="extrapolationType">How to extrapolate if not within xTable span</param>
            <returns>interpolated value (looked up value)</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.GetIndeces(System.Double,System.Double[],System.Int32@,System.Int32@,System.Boolean)">
            <summary>
            Finds the two indexes in a mononton vector using bisection search. 
            
            This can handle as well increasing as decreasing vectors, as long as they are monotone.
            
            The indexes corresponds to the points neighbouring the argument, arg. In case of an 
            exact match the two indexes will be identical. If the argument is outside the valid 
            interval either the lower or the upper interval boundary is returned depending on
            wheter the argument is lower or higher than the lower or upper boundary, respectively.
            </summary>
            <param name="arg">Value to look up in table</param>
            <param name="vector">Vector, must be monoton</param>
            <param name="iLow">The low index, the index to the lowest vector value</param>
            <param name="iHigh">The high index, the index to the highest vector value</param>
            <param name="xIncreasing">Increasing or decreasing vector values</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.GetIndeces(System.DateTime,System.DateTime[],System.Int32@,System.Int32@,System.Boolean)">
            <summary>
            Finds the two indexes in a mononton vector using bisection search. 
            
            This can handle as well increasing as decreasing vectors, as long as they are monotone.
            
            The indexes corresponds to the points neighbouring the argument, arg. In case of an 
            exact match the two indexes will be identical. If the argument is outside the valid 
            interval either the lower or the upper interval boundary is returned depending on
            wheter the argument is lower or higher than the lower or upper boundary, respectively.
            </summary>
            <param name="arg">Value to look up in table</param>
            <param name="vector">Vector, must be monoton</param>
            <param name="iLow">The low index, the index to the lowest vector value</param>
            <param name="iHigh">The high index, the index to the highest vector value</param>
            <param name="xIncreasing">Increasing or decreasing vector values</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.GetIndeces(System.Double,DHI.Mike1D.Generic.MathUtil.IDataToInterpolate,System.Int32@,System.Int32@,System.Boolean)">
            <summary>
            Finds the two indexes in a mononton vector using bisection search. 
            
            This can handle as well increasing as decreasing vectors, as long as they are monotone.
            
            The indexes corresponds to the points neighbouring the argument, arg. In case of an 
            exact match the two indexes will be identical. If the argument is outside the valid 
            interval either the lower or the upper interval boundary is returned depending on
            wheter the argument is lower or higher than the lower or upper boundary, respectively.
            </summary>
            <param name="arg">Value to look up in table</param>
            <param name="data">Accessor to data</param>
            <param name="iLow">The low index, the index to the lowest vector value</param>
            <param name="iHigh">The high index, the index to the highest vector value</param>
            <param name="xIncreasing">Increasing or decreasing vector values</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.Double,System.Double[],System.Double@)">
            <summary>
            <para>
            Finds the interval in a vector where the argument lays in between. Assumes that the
            vector has at least two elements.
            </para>
            <para>
            The vector must increase strictly monotonically. If argument is below the first value, 0
            is returned. If argument is above last value, the length of the vector is returned.
            </para>
            <para>
            The result is the interval number, one based, meaning that the arg fullfills:
            <code>(vector[res-1] &lt; arg &amp;&amp; arg &lt;= vector[res])</code>
            </para>
            <para>
            Also the scale factor for interpolating is returned. For linear interpolation
            <code>arg = vector[res-1] + fraction*(vector[res]-vector[res-1])</code>
            or
            <code>arg = (1-fraction)*vector[res-1] + fraction*vector[res]</code>
            </para>
            <para>
            If arg exists in vector, the result is such that 
            <code>arg = vector[res]</code>
            i.e., fraction is one (except when arg = vector[0], then res = 1 and fraction = 0).
            </para>
            </summary>
            <param name="arg">Value to look up in table</param>
            <param name="vector">Vector, must be monoton increasing</param>
            <param name="fraction">number with wich to scale the highest</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.GetInterval``1(System.Double,``0[],System.Func{``0,System.Double},System.Double@)">
            <summary>
            <para>
            Finds the interval in a vector where the argument lays in between. Assumes that the
            vector has at least two elements.
            </para>
            <para>
            The vector must increase strictly monotonically. If argument is below the first value, 0
            is returned. If argument is above last value, the length of the vector is returned.
            </para>
            <para>
            The result is the interval number, one based, meaning that the arg fullfills:
            <code>(vector[res-1] &lt; arg &amp;&amp; arg &lt;= vector[res])</code>
            </para>
            <para>
            Also the scale factor for interpolating is returned. For linear interpolation
            <code>arg = vector[res-1] + fraction*(vector[res]-vector[res-1])</code>
            or
            <code>arg = (1-fraction)*vector[res-1] + fraction*vector[res]</code>
            </para>
            <para>
            If arg exists in vector, the result is such that 
            <code>arg = vector[res]</code>
            i.e., fraction is one (except when arg = vector[0], then res = 1 and fraction = 0).
            </para>
            </summary>
            <param name="arg">Value to look up in table</param>
            <param name="vector">Vector, must be monoton increasing</param>
            <param name="valueSelector">Function that returns a double from type T</param>
            <param name="fraction">number with wich to scale the highest</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.Double,System.Int32,System.Func{System.Int32,System.Double},System.Double@)">
            <summary>
            <para>
            Finds the interval in a vector where the argument lays in between. Assumes that the
            vector has at least two elements.
            </para>
            <para>
            The vector must increase strictly monotonically. If argument is below the first value, 0
            is returned. If argument is above last value, the length of the vector is returned.
            </para>
            <para>
            The result is the interval number, one based, meaning that the arg fullfills:
            <code>(vector[res-1] &lt; arg &amp;&amp; arg &lt;= vector[res])</code>
            </para>
            <para>
            Also the scale factor for interpolating is returned. For linear interpolation
            <code>arg = vector[res-1] + fraction*(vector[res]-vector[res-1])</code>
            or
            <code>arg = (1-fraction)*vector[res-1] + fraction*vector[res]</code>
            </para>
            <para>
            If arg exists in vector, the result is such that 
            <code>arg = vector[res]</code>
            i.e., fraction is one (except when arg = vector[0], then res = 1 and fraction = 0).
            </para>
            </summary>
            <param name="arg">Value to look up in table</param>
            <param name="count">Number of values in table</param>
            <param name="valueSelector">Function that returns a double from table</param>
            <param name="fraction">number with wich to scale the highest</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.Double,System.Double[],System.Double@,System.Int32)">
            <summary>
            Finds the interval in a vector where the argument lays in between. Searches 
            the last interval first. It is assumed that the input vector has at least two elements.
            
            This uses binary search techniques for efficiency.
            
            The vector must increase strictly monotonically. If argument is below the first value, 0
            is returned. If argument is above last value, the length of the vector is returned.
            
            The result is the interval number, one based, meaning that the arg fullfills:
            <code>(vector[res-1] &lt; arg &amp;&amp; arg &lt;= vector[res])</code>
            
            Also the scale factor for interpolating is returned. For linear interpolation
            <code>arg = vector[res-1] + fraction*(vector[res]-vector[res-1])</code>
            or
            <code>arg = (1-fraction)*vector[res-1] + fraction*vector[res]</code>
            
            If arg exists in vector, the result is such that 
            <code>arg = vector[res]</code>
            i.e., fraction is one (except when arg = vector[0], then res = 1 and fraction = 0).
            
            </summary>
            <param name="arg">Value to look up in table</param>
            <param name="vector">Vector, must be monoton increasing</param>
            <param name="fraction">number with wich to scale the highest</param>
            <param name="lastInterval">last result returned. Must be &gt;= 0 and &lt;= vector.Length. Use -1 if not known</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.GetIntervalU(System.Double,System.Double[],System.Double@,System.Int32)">
            <summary>
            Unsafe version of <see cref="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.Double,System.Double[],System.Double@,System.Int32)"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.Double,System.Collections.Generic.IList{System.Double},System.Double@,System.Int32)">
            <summary>
            <see cref="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.Double,System.Double[],System.Double@,System.Int32)"/> for details.
            
            This has an <see cref="T:System.Collections.Generic.IList`1"/> as argument instead of a double[].
            This version is slower than the double[] version.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.Double,DHI.Mike1D.Generic.MathUtil.IDataForSearching,System.Double@,System.Int32)">
            <summary>
            <see cref="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.Double,System.Double[],System.Double@,System.Int32)"/> for details.
            
            This has an <see cref="T:DHI.Mike1D.Generic.MathUtil.IDataForSearching"/> as argument instead of a double[].
            This version is slower than the double[] version.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.GetInterval``1(``0,DHI.Mike1D.Generic.MathUtil.IDataForSearching{``0},System.Double@,System.Int32)">
            <summary>
            <see cref="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.Double,System.Double[],System.Double@,System.Int32)"/> for details.
            
            This has an <see cref="T:DHI.Mike1D.Generic.MathUtil.IDataForSearching`1"/> as argument instead of a double[].
            This version is slower than an array version.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.Double,System.Collections.Generic.List{System.Double},System.Double@,System.Int32)">
            <summary>
            <see cref="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.Double,System.Double[],System.Double@,System.Int32)"/> for details.
            
            This has an <see cref="T:System.Collections.Generic.List`1"/> as argument instead of a double[]. 
            This version is slower than the double[] version
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.Double,System.Int32,System.Func{System.Int32,System.Double},System.Double@,System.Int32)">
            <summary>
            <para>
            Finds the interval in a vector where the argument lays in between. Assumes that the
            vector has at least two elements.
            <para>
            The vector is represented by the <paramref name="vectorValue"/> function, which
            must return vector values in strictly increasing order.
            </para>
            </para>
            <para>
            The vector must increase strictly monotonically. If argument is below the first value, 0
            is returned. If argument is above last value, the length of the vector is returned.
            </para>
            <para>
            The result is the interval number, one based, meaning that the arg fullfills:
            <code>(vector[res-1] &lt; arg &amp;&amp; arg &lt;= vector[res])</code>
            </para>
            <para>
            Also the scale factor for interpolating is returned. For linear interpolation
            <code>arg = vector[res-1] + fraction*(vector[res]-vector[res-1])</code>
            or
            <code>arg = (1-fraction)*vector[res-1] + fraction*vector[res]</code>
            </para>
            <para>
            If arg exists in vector, the result is such that 
            <code>arg = vector[res]</code>
            i.e., fraction is one (except when arg = vector[0], then res = 1 and fraction = 0).
            </para>
            <para>
            </para>
            </summary>
            <param name="arg">Value to look up in table</param>
            <param name="count">Number of elements in vector</param>
            <param name="vectorValue">Return vector value at given index.</param>
            <param name="fraction">number with wich to scale the highest</param>
            <param name="lastInterval">last result returned. Must be &gt;= 0 and &lt;= vector.Length. Use -1 if not known or first time called</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.DateTime,System.Collections.Generic.IReadOnlyList{System.DateTime},System.Double@,System.Int32)">
            <summary>
             <see cref="M:DHI.Mike1D.Generic.MathUtil.GetInterval(System.Double,System.Double[],System.Double@,System.Int32)"/> for DateTimes.
            
            This has an <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> DateTime as argument instead of a DateTime[]. 
            which is slower than a DateTime[] version
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.PrepareIndexesForDerivation(System.Int32@,System.Int32@,System.Int32)">
            <summary>
            Returns the indexes used to make a derivative. As input is used the indexes
            found in GetIndeces and the total number of entries in the array.
            </summary>
            <param name="iLow">Low index</param>
            <param name="iHigh">High index</param>
            <param name="TotalNo">Number of entries in the vector</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.InterpolateTable(System.Double,DHI.Mike1D.Generic.XYTable,DHI.Mike1D.Generic.XYTable,System.Double)">
            <summary>
            Interpolate an XYtable
            </summary>
            <param name="fraction"></param>
            <param name="a"></param>
            <param name="b"></param>
            <param name="xTol"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.InterpolateRowsInTable(System.Double,System.Double[],System.Double[][],System.Int32@,System.Int32@)">
            <summary>
            Looks the argument, x, up in the rowheader, xTable, of a table, table.
            Hereby the row numbers used for the interpolation is determined.
            In case of an exact match the indexes are identical.
            No extrapolations is used which implicitly corresponds to
            the extraplation type 'Nearest'.
            </summary>
            <param name="x">Argument used to look up in rowheader</param>
            <param name="xTable">Row header of the table</param>
            <param name="Table">The table</param>
            <param name="iLow">Low index in rowheader used for interpolation</param>
            <param name="iHigh">High index in rowheader used for interpolation</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.Interpn(System.Double,System.Double[],System.Double[0:,0:],DHI.Mike1D.Generic.ExtrapolationTypes)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="xTable"></param>
            <param name="yTable"></param>
            <param name="extrapolationType"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.SqrtExtrapolateACoefficient(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculation of the 'a' used in sqrt extrapolation (y = a * sqrt(x) + b)
            </summary>
            <param name="y1">Dependent variable corresponding to x1</param>
            <param name="y2">Dependent variable corresponding to x2</param>
            <param name="x1">Independent variable</param>
            <param name="x2">Independent variable</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.SqrtExtrapolate(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Performing sqrt extrapolation based on two points on the curve. Finding
            the curve on the form
            
            y = a * sqrt(abs(x)) + b
            
            that intersects the two input points, and using the result to calculate y.
            </summary>
            <param name="x">Independent variable outside valid interval. Extrapolation returns the corrsponding y</param>
            <param name="x1">Independent variable 1</param>
            <param name="x2">Independent variable 2</param>
            <param name="y1">Dependent variable corresponding to x1</param>
            <param name="y2">Dependent variable corresponding to x2</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.Interpn(System.Double,System.Double[],System.Double[0:,0:])">
            <summary>
            1-D linear interpolation (table lookup)
            Interpolates to find y, the value of the underlying function yTable at the point x.
            xTable must be a monoton increasing array of the same length as yTable.
            </summary>
            <param name="x">value where to look up</param>
            <param name="xTable">Monoton increasing vector of length n</param>
            <param name="yTable">vector of length n</param>
            <returns>interpolated value (looked up value)</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.StrictlyMonoton(System.Double[])">
            <summary>
            Checks if vector xTable is strictly monoton and increasing
            </summary>
            <param name="xTable">Vector that must be checked</param>
            <returns>True if vector is monoton</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.StrictlyMonotonIndex(System.Double[])">
            <summary>
            Checks if vector xTable is strictly monoton and increasing
            </summary>
            <param name="xTable">Vector that must be checked</param>
            <returns>-1 if vector is monoton, index of first violating value if non-monoton</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.MonotonicallyIncreasingOrConstant(System.Double[])">
            <summary>
            Checks if vector xTable is monoton and increasing or constant
            </summary>
            <param name="xTable">Vector that must be checked</param>
            <returns>True if vector is monoton and increasing or constant</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.MonotonicallyDecreasingOrConstant(System.Double[])">
            <summary>
            Checks if vector xTable is monoton and decreasing or constant
            </summary>
            <param name="xTable">Vector that must be checked</param>
            <returns>True if vector is monoton and decreasing or constant</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.MonotonouslyDecreasingOrConstant(System.Double[])">
            <summary>
            Checks if vector xTable is monoton and decreasing or constant
            </summary>
            <param name="xTable">Vector that must be checked</param>
            <returns>True if vector is monoton and increasing or constant</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.AllPositive(System.Double[],System.Int32)">
            <summary>
            Checks if vector xTable has all positive elements
            </summary>
            <param name="xTable">Vector that must be checked</param>
            <param name="startIndex">First index to check</param>
            <returns>True all elements are positive</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.AllPositive(System.Double[],System.Int32,System.Int32)">
            <summary>
            Checks if vector xTable has all positive elements
            </summary>
            <param name="xTable">Vector that must be checked</param>
            <param name="startIndex">First index to check</param>
            <param name="length">Number of elements to check</param>
            <returns>True all elements are positive</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.AllZero(System.Double[],System.Int32)">
            <summary>
            Checks if vector xTable has all zero elements
            </summary>
            <param name="xTable">Vector that must be checked</param>
            <param name="startIndex">First index to check</param>
            <returns>True all elements are zero</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.Derivative(System.Double,System.Double[],System.Double[],DHI.Mike1D.Generic.ExtrapolationTypes)">
            <summary>
            Calculates the derivative of the yTable versus xTable at x.
            The xTable must be either monoton increasing or monoton decreasing array.
            The method applied when the argument is outside the interval
            corresponds to the exrapolationmethod.nearest, i.e derivative equals zero.
            </summary>
            <param name="x">Lookup value</param>
            <param name="tempXTable">X Values values</param>
            <param name="tempYTable">Y values</param>
            <param name="extrapolationType">Extrapolation Type</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.Derivatives(System.Double[],System.Double[])">
            <summary>
            This procedure calculates the derivative of vector yTable with respect to the monoton and increasing vector xTable.
            The lengt of the yTable and xTable vectors must be equal and at least equal to 2.
            </summary>
            <param name="xTable">Monoton and increasing vector</param>
            <param name="yTable">Vector</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.Min(System.Double[])">
            <summary>
            Determines the minimum value contained in the vector x.
            </summary>
            <param name="x">Vector of values</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.Max(System.Double[])">
            <summary>
            Determines the maximum value contained in the vector x.
            </summary>
            <param name="x">Vector of values</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.Sqr(System.Double)">
            <summary>
            Square function.
            </summary>
            <param name="x"></param>
            <returns>x to the power of two</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.DivOrZero(System.Double,System.Double)">
            <summary>
            This functions will make a division. If the denominator equals zero the function returns zero.
            </summary>
            <param name="Nominator">Nominator</param>
            <param name="Denominator">Denominator</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.MathUtil.FixBetweenLimits(System.Double,System.Double,System.Double)">
            <summary>
            Function that ensures that a value (the variable arg) is located within certain limits.
            if the value is lower than the low limit (the variable LowLimit) this function returns
            LowLimit. If the value is higher than the high limit (the variable HighLimit)
            the function returns HighLimit. Otherwise the value is returned.
            </summary>
            <param name="arg">The variable that must be located within certain limits.</param>
            <param name="LowLimit">The low limit of the allowed interval.</param>
            <param name="HighLimit">The upper limit of the allowed interval.</param>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.TableInterpolator">
            <summary>
            Interpolate a table from two other tables.
            <para>
            The "x-column" of the two tables are merged into one new interpolated
            x-column by interpolating the min and max values from the two tables, 
            and scale the internal x-values of the two tables to the new min and max value.
            Then y-values are interpolated from 
            
            </para>
            , using an "x-column" as the range
            and computing
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TableInterpolator.XTol">
            <summary>
            Tolerance in x value for removing "near-duplicate" points
            in the x-axis. Set to zero to only remove exact duplicate points
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TableInterpolator.Fraction">
            <summary>
            Interpolation fraction, between zero and one.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TableInterpolator.#ctor(System.Double)">
            <summary>
            Constructor, specifying the fraction
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TableInterpolator.Initialize(System.Double[],System.Double[])">
            <summary>
            Set x-values of the two tables and create a new interpolated x axis.
            <para>
            The min and max values of the two tables are interpolated, and
            all inner x-values of the two tables are scaled into this new range
            and added. If two points are very close, only one is added.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TableInterpolator.InterpolateYValues(System.Double[],System.Double[])">
            <summary>
            Interpolate y values for the table
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Mike1DException">
            <summary>
            Exception derived from standard exception. Included to be able to distinguish 
            system exceptions from Mike1D exceptions
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Mike1DException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Mike1DException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
            <param name="e"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Mike1DException.HandleMike1DException(DHI.Mike1D.Generic.Mike1DException,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Add the exception error to the diagnostics object.
            </summary>
            <returns>True if exception was handled.</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.Locations">
            <summary>
            Class implementing a list of ILocation's
            Required for generic list COM interop
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Locations.#ctor">
            <summary>
            Initializes a new instance of the List class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Locations.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the List class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Locations.#ctor(System.Collections.Generic.IEnumerable{DHI.Mike1D.Generic.ILocation})">
            <summary>
            Initializes a new instance of the List class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.NetworkDataDouble">
            <summary>
             A network value of type double. See <see cref="T:DHI.Mike1D.Generic.NetworkData`1"/> for details.
             <para>
             Required for COM interop.
             </para>
             <para>
             This class adds implementation for the COM specific part of the <see cref="T:DHI.Mike1D.Generic.INetworkDataDouble"/>.
             </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkDataDouble.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.NetworkDataDouble.NetworkReachDataDouble">
            <summary>
            Helper class, wrapping an <see cref="T:DHI.Mike1D.Generic.NetworkReachDataSet`1"/> of type T double
            into an <see cref="T:DHI.Mike1D.Generic.INetworkReachDataDouble"/>.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkDataDouble.NetworkReachDataDouble.CreateReachLocationValueWrapper(DHI.Mike1D.Generic.ReachLocationValue{System.Double})">
            <summary>
            Create a wrapper around an <see cref="T:DHI.Mike1D.Generic.ReachLocationValue`1"/> to 
            implement the <see cref="T:DHI.Mike1D.Generic.IReachLocationValueDouble"/>.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.NetworkDataSetDouble">
            <summary>
            A network data set class containing data of type double
            <para>
            Required for COM interop.
            </para>
            <para>
            This class is a COM usable version of the <see cref="T:DHI.Mike1D.Generic.NetworkDataSet`1"/>
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkDataSetDouble.Data">
            <summary>
            List of network data available.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkDataSetDouble.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkDataSetDouble.#ctor(System.Collections.Generic.IList{DHI.Mike1D.Generic.INetworkDataDouble})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkDataSetDouble.Offers">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkDataSetDouble.NetworkData(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkDataSetDouble.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.NetworkDataDoubleArray">
            <summary>
             A network value of type double[]. <see cref="T:DHI.Mike1D.Generic.NetworkData`1"/> for details.
             <para>
             The double[]'s do not need to have the same length. However, consistent interpolation
             can only take place if all have same lenghts. 
             </para>
             <para>
             See <see cref="P:DHI.Mike1D.Generic.NetworkDataDoubleArray.FailOnLengthDifferences"/> on how to set behavior if lengths differ.
             Default value is to fail.
             </para>
            </summary>
             <remarks>
             This is just a simple wrapper around the <see cref="T:DHI.Mike1D.Generic.NetworkData`1"/>
             </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkDataDoubleArray.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkDataDoubleArray.#ctor(System.Boolean)">
            <summary>
            Default constructor.
            </summary>
            <param name="failOnLengthDifferences">Set to true, and the interpolate 
            method will throw an exception if the arrays have different lengths.</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.NetworkDataDoubleArray.FailOnLengthDifferences">
            <summary>
            Behavior in interpolation if the length of the arrays differ: 
            Setting the <see cref="P:DHI.Mike1D.Generic.NetworkDataDoubleArray.FailOnLengthDifferences"/> to true will throw an
            exception if the lengths differ.
            Setting the <see cref="P:DHI.Mike1D.Generic.NetworkDataDoubleArray.FailOnLengthDifferences"/> to false will return the 
            array closest to the requested location, i.e., no interpolation.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.NetworkDataInterp`1">
            <summary>
             A set of network data that can interpolate.
             <para>
             <see cref="T:DHI.Mike1D.Generic.NetworkData`1"/> for details
             </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkDataInterp`1.#ctor(DHI.Mike1D.Generic.IInterpolatable{`0})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkDataInterp`1.CreateDouble">
            <summary>
            Create a <see cref="T:DHI.Mike1D.Generic.NetworkDataInterp`1"/> of type double, 
            with the default interpolator
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.NetworkDataInterp`1.CreateDoubleArray">
            <summary>
            Create a <see cref="T:DHI.Mike1D.Generic.NetworkDataInterp`1"/> of type double[], 
            with the default interpolator
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Quantities">
            <summary>
            Class implementing a list of IQuantity's
            Required for generic list COM interop
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantities.#ctor">
            <summary>
            Initializes a new instance of the List class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantities.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the List class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantities.#ctor(System.Collections.Generic.IEnumerable{DHI.Mike1D.Generic.IQuantity})">
            <summary>
            Initializes a new instance of the List class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.TimeValueType">
            <summary>
            Definition on how a value is defined at a certain time
            or within a certain time period/time step
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeValueType.Instantaneous">
            <summary>
            Value is defined at this time
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeValueType.Accumulated">
            <summary>
            Value is accumulated up til this time
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeValueType.StepAccumulated">
            <summary>
            Value is accumulated from previous time to this time
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeValueType.MeanStepBackward">
            <summary>
            Value is defined as the mean from previous time to this time
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.TimeValueType.MeanStepForward">
            <summary>
            Value is defined as the mean from this time to next time
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Quantity">
            <summary>
            A data quantity is a combination of an ID and an EUM item and unit. 
            <para>
            The data item type is one of the EUM types
            </para>
            <para>
            For AD components, they will usually have the same datatype
            but different ID's.
            </para>
            <para>
            It is not allowed to edit an IQuantity. Create a new one, if required.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.#ctor">
            <summary>
             Default constructor, creates and undefined quantity. 
             COM requires empty constructor. 
             Afterwards use <see cref="M:DHI.Mike1D.Generic.Quantity.Create(DHI.Generic.MikeZero.eumItem,System.String,System.String)"/>
             to create the quantity.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.#ctor(DHI.Generic.MikeZero.eumItem,System.String)">
            <summary>
             Construct data quantity from eumItem and description
            </summary>
            <param name="item"></param>
            <param name="id"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.#ctor(System.String,System.String,DHI.Generic.MikeZero.eumItem)">
            <summary>
             Construct data quantity from eumItem and description
            </summary>
            <param name="item"></param>
            <param name="description"></param>
            <param name="id"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.#ctor(System.String,System.String,DHI.Generic.MikeZero.eumItem,DHI.Generic.MikeZero.eumUnit)">
            <summary>
             Construct data quantity from eumItem and description
            </summary>
            <param name="item">Quantity item type</param>
            <param name="unit">Quantity unit</param>
            <param name="description">Description of quantity</param>
            <param name="id">Id of quantity</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.#ctor(DHI.Generic.MikeZero.eumQuantity,System.String)">
            <summary>
             Construct data quantity from eumItem and description
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Quantity.EumQuantity">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Quantity.Description">
            <summary>
            Quantity description
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Quantity.Id">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Quantity.TimeValueType">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.Generic.Quantity.Undefined">
            <summary>
            Return a wuantity based on eumItem.eumIItemUndefined
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.Equals(DHI.Mike1D.Generic.IQuantity)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:DHI.Mike1D.Generic.Quantity" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />. </param>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj" /> parameter is null.</exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.ToBaseId(System.String)">
            <summary>
            Converting a Quantity Id to its base form, without commas and spaces
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.Equals(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.IQuantity)">
            <summary>
             Equals method on BaseId, which is the Id with commas and spaces removed.
            </summary>
            <returns>
             true if the two objects equals to each other; otherwise, false.
            </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.EqualsBaseId(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.IQuantity)">
            <summary>
             Equals method on BaseId, which is the Id with commas and spaces removed.
            </summary>
            <returns>
             true if the two objects equals to each other; otherwise, false.
            </returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.GetHashCode(DHI.Mike1D.Generic.IQuantity)">
            <summary>
            Serves as a hash function for this type. Uses the Id of the quantity as specified, but not the description.
            </summary>
            <returns>
            A hash code for the current <see cref="T:DHI.Mike1D.Generic.Quantity" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.GetHashCodeBaseId(DHI.Mike1D.Generic.IQuantity)">
            <summary>
            Serves as a hash function based on Base Id. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:DHI.Mike1D.Generic.Quantity" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.ComparerDescription">
            <summary>
            Provides a equality comparer that also includes the <see cref="P:DHI.Mike1D.Generic.Quantity.Description"/>
            in the comparison
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Quantity.Comparer">
            <summary>
            IEqualityComparer for <see cref="T:DHI.Mike1D.Generic.IQuantity"/> that
            compares the id as is (including commas and spaces)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.Comparer.Equals(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.IQuantity)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.Comparer.GetHashCode(DHI.Mike1D.Generic.IQuantity)">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Mike1D.Generic.Quantity.FullComparer">
            <summary>
            IEqualityComparer that also includes the <see cref="P:DHI.Mike1D.Generic.Quantity.Description"/>
            in the comparison
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.FullComparer.Equals(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.IQuantity)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.FullComparer.GetHashCode(DHI.Mike1D.Generic.IQuantity)">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Mike1D.Generic.Quantity.BaseIdComparer">
            <summary>
            IEqualityComparer for <see cref="T:DHI.Mike1D.Generic.IQuantity"/> that
            compares based on the BaseId of the quantity (without komma and spaces)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.BaseIdComparer.Equals(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.IQuantity)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.BaseIdComparer.GetHashCode(DHI.Mike1D.Generic.IQuantity)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.ComparerGroup">
            <summary>
            Provides a equality comparer that groups quantities of the same type. 
            <para>
            Quantities like SnowCover, SnowCover_2, SnowCover_3 are in this context
            grouped under one.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Quantity.GroupComparer">
            <summary>
            Provides a equality comparer that groups quantities of the same type. 
            <para>
            Quantities like SnowCover, SnowCover_2, SnowCover_3 are in this context
            grouped under one.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.GroupComparer.Equals(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.IQuantity)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.GroupComparer.GetHashCode(DHI.Mike1D.Generic.IQuantity)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.Create(DHI.Mike1D.Generic.PredefinedQuantity)">
            <summary>
            Create a Quantity based on one of the <see cref="T:DHI.Mike1D.Generic.PredefinedQuantity"/>
            </summary>
            <param name="predefinedQuantity">Predefined datatype</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.Create(DHI.Mike1D.Generic.PredefinedQuantity,System.String)">
            <summary>
            Create a Quantity based on one of the <see cref="T:DHI.Mike1D.Generic.PredefinedQuantity"/>
            </summary>
            <param name="predefinedQuantity">Predefined datatype</param>
            <param name="description"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.Create(DHI.Mike1D.Generic.PredefinedQuantity,DHI.Generic.MikeZero.eumUnit)">
            <summary>
            Create a Quantity based on one of the <see cref="T:DHI.Mike1D.Generic.PredefinedQuantity"/>
            </summary>
            <param name="predefinedQuantity">Predefined datatype</param>
            <param name="eumUnit">Replace unit</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.Create(DHI.Generic.MikeZero.eumItem,System.String,System.String)">
            <summary>
            Create a new Quantity. Not static for COM support.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.CreateVariable(System.String)">
            <summary>
            Create a quantity for control module variable
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.ToString">
            <summary>
            Return eumItemType and description as a string
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.AppendNum(DHI.Mike1D.Generic.IQuantity,System.Int32)">
            <summary>
            Append the number in the id and description  string of the quantity.
            </summary>
            <returns>Quantity with new id and description.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.AppendZoneNum(DHI.Mike1D.Generic.IQuantity,System.Int32)">
            <summary>
            Create zone quantity
            <para>
            This is used by the NAM model to create snow zone quantities.
            </para>
            <para>
            Append the number in the id (if larger than one) and prepend "Zone X" to description of quantity.
            </para>
            <para>
            If the description already contains "Zone", it is replaced by "Zone X"
            </para>
            </summary>
            <returns>Quantity with new id and description.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.PrependNum(DHI.Mike1D.Generic.IQuantity,System.Int32)">
            <summary>
            Prepend the number in the id string of the quantity.
            </summary>
            <returns>Quantity with new id.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Quantity.GuessUnitFromString(System.String)">
            <summary>
            Try guess an eum unit from a string. 
            <para>
            For this to work, be sure to use a string matching the Description ("Desc") of an eumUnit.
            </para>
            <para>
            If the string does not exactly any unit, a set of common abbreviations are tried. 
            </para>
            <para>
            If no success, <see cref="F:DHI.Generic.MikeZero.eumUnit.eumUUnitUndefined"/> is returned.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.RelationTable`2">
            <summary>
            A relational table that relates an object of type A
            to an object of type B.
            </summary>
            <typeparam name="A"></typeparam>
            <typeparam name="B"></typeparam>
        </member>
        <member name="M:DHI.Mike1D.Generic.RelationTable`2.#ctor">
            <summary>
            Create an empty relational table
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.RelationTable`2.#ctor(System.Int32)">
            <summary>
            Create an empty relational table with initial capacity.
            </summary>
            <param name="capacity">Initial capacity of table</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.RelationTable`2.add(`0,`1)">
            <summary>
            Add a relation to the table, two object that relateB to each other
            </summary>
            <param name="a">Object a</param>
            <param name="b">Object b</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.RelationTable`2.isBRelated(`1)">
            <summary>
            Looks in the table for object b, and returns true if it relates
            </summary>
            <param name="b">Input object</param>
            <returns>True if there is a relation, false if no relation exist</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.RelationTable`2.isARelated(`0)">
            <summary>
            Looks in the table for object a, and returns true if it relates
            </summary>
            <param name="a">Input object</param>
            <returns>True if there is a relation, false if no relation exist</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.RelationTable`2.relateB(`1,`0@)">
            <summary>
            Looks in the table for object b, and finds the object a that
            is related. Returns true if found, false if not found.
            Remark: Named relateB, since, if A and B is same type
            then relateA and relateB can not be distinguished without the A/B in
            the end
            </summary>
            <param name="b">Input object</param>
            <param name="a">Output object that relates to b</param>
            <returns>True if there is a relation, false if no relation exist</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.RelationTable`2.relateB(`1)">
            <summary>
            Looks in the table for object b, and finds the object a that
            is related. Returns the found object, or throws an exception if not found
            </summary>
            <param name="b">Input object</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.RelationTable`2.relateA(`0,`1@)">
            <summary>
            Looks in the table for object a, and finds the object b that
            is related. Returns true if found, false if not found.
            </summary>
            <param name="a">Input object</param>
            <param name="b">Output object that relates to a</param>
            <returns>True if there is a relation, false if no relation exist</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.RelationTable`2.relateA(`0)">
            <summary>
            Looks in the table for object a, and finds the object b that
            is related. Returns the found object, or throws an exception if not found
            </summary>
            <param name="a">Input object</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.SerializerDoubleArrayHandler">
            <summary>
            Class that writes a double array to one long string
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerDoubleArrayHandler.GetDataContractType(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerDoubleArrayHandler.GetObjectToSerialize(System.Object,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerDoubleArrayHandler.Serialize(System.Double[])">
            <summary>
            Serialize a double array to string
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerDoubleArrayHandler.GetDeserializedObject(System.Object,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerDoubleArrayHandler.Deserialize(System.String)">
            <summary>
            Deserialize a string to a double array
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.SerializerDoubleArraySurrogate">
            <summary>
            Helper class
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.SerializerFilePathHandler">
            <summary>
            A handler that handles FilePath's during (de)serialization.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.SerializerFilePathHandler.BasePath">
            <summary>
            FilePath to use as base
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerFilePathHandler.#ctor(DHI.Mike1D.Generic.IFilePath)">
            <summary>
            Create a new handler that handles FilePaths during (de)serialization
            </summary>
            <param name="baseFilePath"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerFilePathHandler.GetDataContractType(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerFilePathHandler.GetObjectToSerialize(System.Object,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerFilePathHandler.GetDeserializedObject(System.Object,System.Type)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.Generic.SerializerSurrogateFilePath">
            <summary>
            This class is used when serializing/deserializing, to handle base paths
            of FilePath (input and result files). When serializing (saving to xml), 
            every FilePath is made relative to the xml file.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogateFilePath.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.SerializerSurrogateFilePath.BasePath">
            <summary>
            Base filepath that all other filepaths are relative to
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogateFilePath.GetDataContractType(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogateFilePath.GetObjectToSerialize(System.Object,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogateFilePath.GetDeserializedObject(System.Object,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogateFilePath.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)">
            <summary>
            Not implemented
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogateFilePath.GetCustomDataToExport(System.Type,System.Type)">
            <summary>
            Not implemented
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogateFilePath.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})">
            <summary>
            Not implemented
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogateFilePath.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
            <summary>
            Not implemented
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogateFilePath.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
            <summary>
            Not implemented
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.SerializerSurrogate">
            <summary>
            This class is used when serializing/deserializing, either to replace one
            (de)serialized type with another, or to setup relations that the (de)serializer
            can not itself setup.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogate.RegisterSurrogateHandler(DHI.Mike1D.Generic.ISerializerSurrogateHandler)">
            <summary>
            Register a ISerializerSurrogateHandler to handle one specific type
            </summary>
            <param name="handler">SurrogateHandler to register</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogate.GetDataContractType(System.Type)">
            <summary>
            The GetDataContractType method maps one type to another.
            
            On serialization, the mapping returned by this method is 
            subsequently used to transform the original instance to a 
            surrogated instance by calling the GetObjectToSerialize method.
            
            On deserialization, the mapping returned by this method is 
            used by the serializer to deserialize into an instance of 
            the surrogate type. It subsequently calls GetDeserializedObject 
            to transform the surrogated instance into an instance of the 
            original type. 
            
            If the type is not handled by this class, the input type is 
            just returned.
            </summary>
            <param name="type">The CLR type to substitute.</param>
            <returns>The Type to substitute for the type value.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogate.GetObjectToSerialize(System.Object,System.Type)">
            <summary>
            The GetObjectToSerialize method converts the original type instance 
            to the surrogated type instance. The method is required for serialization.
            
            Return input object, if not handling type
            </summary>
            <param name="obj">The object to substitute.</param>
            <param name="targetType">The Type that the substituted object should be assigned to - the surrogated type returned by the GetDataContractType method.</param>
            <returns>The substituted object that will be serialized.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogate.GetDeserializedObject(System.Object,System.Type)">
            <summary>
            The GetDeserializedObject method converts the surrogated type 
            instance to the original type instance. It is required for 
            deserialization.
            
            Return input object, if not handling type.
            </summary>
            <param name="obj">The deserialized object to be substituted.</param>
            <param name="targetType">The Type that the substituted object should be assigned to.</param>
            <returns>The substituted deserialized object.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)">
            <summary>
            During schema export operations, inserts annotations into the schema for non-null return values.
            
            Not implemented
            </summary>
            <param name="memberInfo">A MemberInfo that describes the member.</param>
            <param name="dataContractType">A Type.</param>
            <returns>An object that represents the annotation to be inserted into the XML schema definition.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogate.GetCustomDataToExport(System.Type,System.Type)">
            <summary>
            During schema export operations, inserts annotations into the schema for non-null return values.
            
            Not implemented
            </summary>
            <param name="clrType"></param>
            <param name="dataContractType"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})">
            <summary>
            Sets the collection of known types to use for serialization and deserialization 
            of the custom data objects.
            
            This method is required during schema export or schema import only if annotations 
            are inserted into the schema using the GetCustomDataToExport method.
            </summary>
            <param name="customDataTypes"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
            <summary>
            During schema import, returns the type referenced by the schema.
            
            Not implemented
            </summary>
            <param name="typeName">The name of the type in schema.</param>
            <param name="typeNamespace">The namespace of the type in schema.</param>
            <param name="customData">The object that represents the annotation inserted into the XML schema definition, which is data that can be used for finding the referenced type.</param>
            <returns>The Type to use for the referenced type.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.SerializerSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
            <summary>
            Processes the type that has been generated from the imported schema.
            
            When importing a schema, this method allows for any imported type and 
            compilation information to be customized.
            
            Not implemented
            </summary>
            <param name="typeDeclaration">A CodeTypeDeclaration to process that represents the type declaration generated during schema import.</param>
            <param name="compileUnit">The CodeCompileUnit that contains the other code generated during schema import.</param>
            <returns>A CodeTypeDeclaration that contains the processed type.</returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.StopwatchCollection">
            <summary>
            Provides a set of methods and properties to accurately measure elapsed time.
            
            A collection of stopwatches organized in a tree like manner, each stopwatch
            can have one parent and many children.
            
            If a child stopwatch is started, the parent stopwatch will also be started. Hence, 
            elapsed time covers self time and any child time. If several childs are started, 
            time will only be "recorded once".
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.StopwatchCollection.Name">
            <summary>
            Name of stopwatch.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.StopwatchCollection.Parent">
            <summary>
            Parent stopwatch, when this stopwatch is part of another collection.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.StopwatchCollection.ChildWatches">
            <summary>
            List of all child-stopwatches. All children must have _parent=this
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.StopwatchCollection._selfRunning">
            <summary>
            True if this stopwatch was explicitly started. It can be false
            and watch can run, if a child trickered the watch to start.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.StopwatchCollection._subsRunning">
            <summary>
            Counting the number of childs watches that are running.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.StopwatchCollection._startCount">
            <summary>
            Counting the number of times <see cref="M:DHI.Mike1D.Generic.StopwatchCollection.Start"/> was called
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.StopwatchCollection.StartCount">
            <summary>
            Counting the number of times <see cref="M:DHI.Mike1D.Generic.StopwatchCollection.Start"/> was called
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.StopwatchCollection.#ctor(System.String)">
            <summary>
            Create a new stopwatch collection with a given name.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.StopwatchCollection.AddChild(DHI.Mike1D.Generic.StopwatchCollection)">
            <summary>
            Add a child to the list of stopwatches. A watch can only be added once to the list.
            A watch can only be a child of one other collection. The child can not be running.
            </summary>
            <param name="watch"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.StopwatchCollection.RemoveChild(DHI.Mike1D.Generic.StopwatchCollection)">
            <summary>
            Removes a child from the list of stopwatches. The child can not be running.
            </summary>
            <param name="watch">watch to remove</param>
            <returns>true if watch was found and removed, false otherwise</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.StopwatchCollection.Find(System.String)">
            <summary>
            Within this stopwatch collection, find the stopwatch with the provided name.
            </summary>
            <param name="name">Name of stopwatch to find</param>
            <returns>Stopwatch with name, or null if not found.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.StopwatchCollection.Start">
            <summary>
            Starts measuring elapsed time. 
            
            If part of a collection, the parent stopwatch will also be started.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.StopwatchCollection.Resume">
            <summary>
            Resumes, measuring elapsed time, does not increment the <see cref="P:DHI.Mike1D.Generic.StopwatchCollection.StartCount"/>.
            
            If part of a collection, the parent stopwatch will also be started.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.StopwatchCollection.Stop">
            <summary>
            Stops measuring elapsed time.
            
            If part of a collection, the parent stopwatch will be stopped, if 
            this stopwatch is the one keeping it running.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.StopwatchCollection.Reset">
            <summary>
            Stops time measurement of this watch and all children, and resets the elapsed time
            of this watch (but not its children).
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.StopwatchCollection.StopAll">
            <summary>
            Stop this stopwatch and all child watches
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.StopwatchCollection.ResetAll">
            <summary>
            Stops time measurement of this watch and all children, and resets the elapsed time
            of this watch and all its children.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.StopwatchCollection.ChildStarted">
            <summary>
            Called when one of the child watches has been started. It is 
            the responsibility of the child to only call this once.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.StopwatchCollection.ChildStopped">
            <summary>
            Called when one of the child watches has been stopped. It is 
            the responsibility of the child to only call this once.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.StopwatchCollection.StartEvaluation">
            <summary>
            Evaluate whether the watch should be started, and
            if so, tells the parent that is has been started.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.StopwatchCollection.StopEvaluation">
            <summary>
            Evaluate whether the watch should be stopped, and
            if so, tells the parent that is has been stopped.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.StopwatchCollection.PrintTimings(System.Int32)">
            <summary>
            Simple print-out of timings to Console.
            </summary>
            <param name="ident"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.StopwatchCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through all child watches.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.StopwatchCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through all child watches.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.TwoDLocation">
            <summary>
            Location used when working with 2D or 3D models
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TwoDLocation.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TwoDLocation.NumberofPoints">
            <summary>
            Returns the number of points
            </summary>
            <returns>The number of points</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TwoDLocation.Point(System.Int32)">
            <summary>
            Returns _points[x]
            </summary>
            <returns>The choosen point</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TwoDLocation.Weight">
            <summary>
            Returns an array with weights of the form li/L
            </summary>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.TwoDLocation.TopoID">
            <summary>
            TopoID used for looking up cross section database
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TwoDLocation.CoordinateProjection">
            <summary>
            String representation of projection
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TwoDLocation.Info">
            <summary>
            Used for structure ID
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TwoDLocation.Points">
            <summary>
            
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TwoDLocation.CompareTo(System.Object)">
            <summary>
            IComparable implementation. Hierarchical calls to the CompareTo methods
            for topo ID, then x1, then y1, x2, y2 comparison (but not Info). String comparisons
            are case-insensitive and culture-invariant.
            </summary>
            <param name="obj">other object (really a Location) to compare to</param>
            <returns>lexical comparison result</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TwoDLocation.Clone">
            <summary>
            ICloneable implementation. deep clone.
            </summary>
            <returns>Copy of the instance</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.TwoDLocation.Branch">
            <summary>
            Branch name. The branch termonology is kept to be used with the cross section collection
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.TwoDLocation.Chainage">
            <summary>
            Chainage is not used for the TwoDlocation
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TwoDLocation.CompareTo(DHI.Mike1D.Generic.ILocation,System.Double)">
            <summary>
            like IComaparable, but with tolerance for coordinate comparison as an argument.
            Hierarchical calls to the CompareTo methods
            for topo ID, then x1, then y1, x2, y2 comparison (but not Info). String comparisons
            are case-insensitive and culture-invariant.
            </summary>
            <param name="other">the location to compare to</param>
            <param name="tolerance">the tolerance [m] within which chainages are taken as equal</param>
            <returns>lexical comparison result</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TwoDLocation.IsNull">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TwoDLocation.ToStringInUserUnits">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.TwoDLocation.IDEquals(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Check if the ID equals the others ID.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TwoDLocation.IDCompareTo(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Compare the ID with the others ID.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.TwoDLocation.FromString(System.String)">
            <summary>
            
            </summary>
            <param name="locationString"></param>
        </member>
        <member name="M:DHI.Mike1D.Generic.TwoDLocation.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.TwoDLocation.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.Generic.TwoDLocation.Equals(DHI.Mike1D.Generic.ILocation)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            
            <returns>
            true if the current object is equal to the other parameter; otherwise, false.
            </returns>
            
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="T:DHI.Mike1D.Generic.Util">
            <summary>
            Collection of handy static utillity like methods.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Util.HyperThreadingEnabled">
            <summary>
            Flag specifying that Hyper Threading is enabled on this machine
            <para>
            This is false by default, and hence can be false, even though Hyper Threading is enabled.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Util.ProcessorCount">
            <summary>
            Returns the number of processing units in the current system.
            <para>
            If <see cref="P:DHI.Mike1D.Generic.Util.HyperThreadingEnabled"/> is set, it returns 
            half of Environment.ProcessorCount, otherwise it just
            returns Environment.ProcessorCount.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Util.CommonData">
            <summary>
            Common data, e.g. data to be shared between model instances.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Util.UndefinedDouble">
            <summary>
            Undefined value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.IsDefined(System.Double)">
            <summary>
            Check if this double "is defined", i.e. does not equal the <see cref="F:DHI.Mike1D.Generic.Util.UndefinedDouble"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.NextTimeAfter(System.DateTime,System.TimeSpan,System.DateTime)">
            <summary>
            Returns the next time after <paramref name="currentTime"/>, being an integer
            multiplum of <paramref name="dt"/> after <paramref name="startTime"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.RoundDown(System.DateTime,System.TimeSpan)">
            <summary>
            Rounding up time to nearest dt, where
            dt is typicalle on the form <code>dt = TimeSpan.FromHours(1)</code>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.RoundUp(System.DateTime,System.TimeSpan)">
            <summary>
            Rounding up time to nearest dt, where
            dt is typicalle on the form <code>dt = TimeSpan.FromHours(1)</code>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.LimitTimeStepToCheckPoint(System.DateTime,System.TimeSpan,System.DateTime,System.Int32)">
            <summary>
            Make sure timestep hits exactly <paramref name="checkPoint"/>.
            <para>
            The <paramref name="lookAhead"/> parameter defines how many time steps before 
            <paramref name="checkPoint"/> to modify in order to hit the <paramref name="checkPoint"/>.
            If <paramref name="lookAhead"/> is 1, only the last time step before <paramref name="checkPoint"/>
            will be modified. If 2, then two time steps before <paramref name="checkPoint"/> will be modified etc.
            </para>
            <para>
            Assuming <paramref name="checkPoint"/> is after <paramref name="currentTime"/> (<paramref name="suggestedTimeStep"/> is returned).
            </para>
            </summary>
            <returns>Time step that is sure to hit exactly <paramref name="checkPoint"/> in this or one of the following time steps</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.IsSimple(System.Type)">
            <summary>
            Returns true if this is a "simple" type
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.MakeValidFileName(System.String)">
            <summary>
            Makes a file name valid by replacing invalid file name characters by an underscore.
            <para>
            The input string must be the file name only, and can not contain any
            path characters.
            </para>
            </summary>
            <param name="name">File name to make valid</param>
            <returns>Valid file name</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.Truncate(System.String,System.Int32)">
            <summary>
            Truncate string to the maximum length specified.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.CreateDirectoryForFileIfNotExists(System.String)">
            <summary>
            Creates a directory for the file, if the directory does not already exist.
            <para>
            It only creates one level of directory. If the directory already exists, 
            nothing is done.
            </para>
            <para>
            The method returns false if it was not possible to create directory, becase
            the parent directory did not exists either. Otherwise it returns true.
            </para>
            </summary>
            <param name="fileName">Full path and name of file to create directory for</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.CheckDirectoryForFile(System.String)">
            <summary>
            Check a directory for the file, if the directory or the parent directory exists.
            </summary>
            <param name="fileName">Full path and name of file to check</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.CreateDirectoryIfNotExists(System.String)">
            <summary>
            Creates a directory, if the directory does not already exist.
            <para>
            It only creates one level of directory. If the directory already exists, 
            nothing is done.
            </para>
            <para>
            The method returns false if it was not possible to create directory, becase
            the parent directory did not exists either. Otherwise it returns true.
            </para>
            </summary>
            <param name="folderName">Full path and name of directory to create</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.Swap``1(``0@,``0@)">
            <summary>
            Swapping two elements.
            </summary>
            <typeparam name="T">Type of element to swap</typeparam>
            <param name="e1">first element</param>
            <param name="e2">second element</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.GetParameters(DHI.Generic.MikeZero.eumUnit,System.Double@,System.Double@)">
            <summary>
            Get parameters of unit
            </summary>
            <param name="unit">Unit</param>
            <param name="scaleFactor">Scale factor to SI</param>
            <param name="offset">Offset to SI</param>
            <returns>True on success</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.BaseUnit(DHI.Generic.MikeZero.eumUnit)">
            <summary>
            Get base unit (SI)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.GetUnitConversionFactor(DHI.Generic.MikeZero.eumUnit,DHI.Generic.MikeZero.eumUnit)">
            <summary>
            Get a unit conversion factor from target unit to source unit. Undefined units are treated as SI unit, and
            does not contribute to the factor. Units need not be equivalent.
            <para>
            See also <see cref="M:DHI.Mike1D.Generic.Util.UnitConversionFactors(DHI.Generic.MikeZero.eumUnit,DHI.Generic.MikeZero.eumUnit,System.Double@,System.Double@,System.Boolean)"/>
            for details.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.GetUnitConversionFactor(DHI.Generic.MikeZero.eumQuantity,DHI.Generic.MikeZero.eumQuantity)">
            <summary>
            Get a unit conversion factor from target unit to source unit. Undefined units are treated as SI unit, and
            does not contribute to the factor. Units need not be equivalent.
            <para>
            See also <see cref="M:DHI.Mike1D.Generic.Util.UnitConversionFactors(DHI.Generic.MikeZero.eumUnit,DHI.Generic.MikeZero.eumUnit,System.Double@,System.Double@,System.Boolean)"/>
            for details.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.GetUserUnitOrDefault(DHI.Mike1D.Generic.IUnitProvider,DHI.Generic.MikeZero.eumItem,DHI.Generic.MikeZero.eumUnit)">
            <summary>
            Get a unit conversion factor for EUM quantity
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.UpdateQuantityUserUnit(DHI.Mike1D.Generic.IUnitProvider,DHI.Mike1D.Generic.IQuantity)">
            <summary>
            Update quantity with user unit, if user unit is available
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.CandoUnitConversion(DHI.Generic.MikeZero.eumUnit,DHI.Generic.MikeZero.eumUnit)">
            <summary>
            Returns true if unit conversions can be performed between the two units, i.e.
            they are different and none of them are undefined.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.GetUnitConversionFactor(DHI.Mike1D.Generic.IUnitProvider,DHI.Generic.MikeZero.eumItem,DHI.Generic.MikeZero.eumUnit)">
            <summary>
            Get a unit conversion factor for EUM quantity
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.GetUnitConversionFactor(DHI.Mike1D.Generic.IUnitProvider,DHI.Generic.MikeZero.eumItem,DHI.Generic.MikeZero.eumUnit,DHI.Generic.MikeZero.eumUnit@)">
            <summary>
            Get a unit conversion factor for EUM quantity
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.UnitConversionFactors(DHI.Generic.MikeZero.eumUnit,DHI.Generic.MikeZero.eumUnit,System.Double@,System.Double@,System.Boolean)">
            <summary>
            Calculate scale factor and offset for converting between eum units. 
            <para>
            In case of success, the <paramref name="factor"/> and <paramref name="offset"/>
            contains the conversion values, that will convert from source to target using
            <code>
              target = source*factor + offset
            </code>
            </para>
            <para>
            The method will fail if one of the units are undefined, or if the units are not 
            equivalent and <paramref name="unitsMustBeEquivalent"/> is set. 
            On failure, default values are used (scale is 1 and offset is 0).
            and false is returned
            </para>
            <para>
            It can handle units that are not equivalent, i.e. if the target is kg/m3 and the source is g/s, and there is some
            processing (in proper units) between the target and the source, the conversion will take care of the factor 1000
            here.
            </para>
            </summary>
            <param name="targetUnit">Target unit</param>
            <param name="sourceUnit">Source unit</param>
            <param name="factor">Factor in conversion </param>
            <param name="offset">Offset in conversion </param>
            <param name="unitsMustBeEquivalent">Flag specifying whether to calculate scale and offset even though units are not equivalent </param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.UnitConversionFactors(DHI.Generic.MikeZero.eumQuantity,DHI.Generic.MikeZero.eumQuantity,System.Double@,System.Double@,System.Boolean,System.Boolean)">
            <summary>
            Calculate scale factor and offset for converting between eum units. 
            <para>
            In case of success, the <paramref name="factor"/> and <paramref name="offset"/>
            contains the conversion values, that will convert from source to target using
            <code>
              target = source*factor + offset
            </code>
            </para>
            <para>
            The method will fail 1) if one of the units are undefined and <paramref name="undefinedAsSI"/> is not set, 
            or 2) if the units are not equivalent and <paramref name="unitsMustBeEquivalent"/> is set. 
            On failure, default values are used (scale is 1 and offset is 0).
            and false is returned
            </para>
            <para>
            It can handle units that are not equivalent, i.e. if the target is kg/m3 and the source is g/s, and there is some
            processing (in proper units) between the target and the source, the conversion will take care of the factor 1000
            here.
            </para>
            </summary>
            <param name="target">Target unit</param>
            <param name="source">Source unit</param>
            <param name="factor">Factor in conversion </param>
            <param name="offset">Offset in conversion </param>
            <param name="unitsMustBeEquivalent">Flag specifying whether to calculate scale and offset even though units are not equivalent </param>
            <param name="undefinedAsSI">Treat undefined value as SI.</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.UnitConversionFactors(DHI.Generic.MikeZero.eumUnit,DHI.Generic.MikeZero.eumUnit,System.Double@,System.Double@,System.Boolean,System.Boolean)">
            <summary>
            Calculate scale factor and offset for converting between eum units. 
            <para>
            In case of success, the <paramref name="factor"/> and <paramref name="offset"/>
            contains the conversion values, that will convert from source to target using
            <code>
              target = source*factor + offset
            </code>
            </para>
            <para>
            The method will fail 1) if one of the units are undefined and <paramref name="undefinedAsSI"/> is not set, 
            or 2) if the units are not equivalent and <paramref name="unitsMustBeEquivalent"/> is set. 
            On failure, default values are used (scale is 1 and offset is 0).
            and false is returned
            </para>
            <para>
            It can handle units that are not equivalent, i.e. if the target is kg/m3 and the source is g/s, and there is some
            processing (in proper units) between the target and the source, the conversion will take care of the factor 1000
            here.
            </para>
            </summary>
            <param name="targetUnit">Target unit</param>
            <param name="sourceUnit">Source unit</param>
            <param name="factor">Factor in conversion </param>
            <param name="offset">Offset in conversion </param>
            <param name="unitsMustBeEquivalent">Flag specifying whether to calculate scale and offset even though units are not equivalent </param>
            <param name="undefinedAsSI">Treat undefined value as SI.</param>
        </member>
        <member name="F:DHI.Mike1D.Generic.Util._unitProvider">
            <summary>
            If not null, then this unit provider is use to convert values into user units
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.Util.UnitProvider">
            <summary>
            If not null, then this unit provider is use to convert values into user units
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.ValueInUserUnitToStringWithUnit(DHI.Generic.MikeZero.eumItem,System.Double)">
            <summary>
            Convert a value to user unit and return as a string
            </summary>
            <param name="eumItemType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.ValueInUserUnitToStringWithUnit(DHI.Mike1D.Generic.IUnitProvider,DHI.Generic.MikeZero.eumItem,System.Double)">
            <summary>
            Convert a value to user unit and return as a string
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.ValueInUserUnitToString(DHI.Generic.MikeZero.eumItem,System.Double)">
            <summary>
            Convert a value to user unit and return as a string
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.ValueInUserUnitToString(DHI.Mike1D.Generic.IUnitProvider,DHI.Generic.MikeZero.eumItem,System.Double)">
            <summary>
            Convert a value to user unit and return as a string
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.ValueToString(System.Double)">
            <summary>
            Convert a value to string, with appropriate number of digits
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.ValueInUserUnit(DHI.Generic.MikeZero.eumItem,System.Double)">
            <summary>
            Convert a value to user unit and return as a string
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.ValueInUserUnit(DHI.Mike1D.Generic.IUnitProvider,DHI.Generic.MikeZero.eumItem,System.Double)">
            <summary>
            Convert a value to user unit and return as a string
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.UserUnitToString(DHI.Generic.MikeZero.eumItem)">
            <summary>
            Return a unit as a string
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.UserUnitToString(DHI.Mike1D.Generic.IUnitProvider,DHI.Generic.MikeZero.eumItem)">
            <summary>
            Return a unit as a string
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.TrimString(System.String,System.String)">
            <summary>
            Trim the string c from back and front of string str.
            </summary>
            <param name="str"></param>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.ReadSelectionFile(DHI.Mike1D.Generic.IFilePath,System.String,DHI.Mike1D.Generic.DiagnosticsValue,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Read a MU .MUS file into a list of strings
            </summary>
            <param name="filePath">Name and path to .MUS file</param>
            <param name="tableName">Table in .MUS file to read</param>
            <param name="locationDescription">Location that .MUS file is related to. Use null when not relevant.</param>
            <param name="diagnostics">Diagnostics object to report errors to</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.AllMessages(System.Exception)">
            <summary>
            Get a message that describes the current exception and all inner exceptions.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.Util.ImageFileHeader">
            <summary>
            Struct used for reading PH header of .NET assembly files
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Util.ImageFileHeader.Machine">
            <summary> Machine </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Util.ImageFileHeader.NumberOfSections">
            <summary> NumberOfSections </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Util.ImageFileHeader.TimeDateStamp">
            <summary> TimeDateStamp </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Util.ImageFileHeader.PointerToSymbolTable">
            <summary> PointerToSymbolTable </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Util.ImageFileHeader.NumberOfSymbols">
            <summary> NumberOfSymbols </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Util.ImageFileHeader.SizeOfOptionalHeader">
            <summary> SizeOfOptionalHeader </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Util.ImageFileHeader.Characteristics">
            <summary> Characteristics </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.ReadAssemblyBuildDateTime(System.Reflection.Assembly,System.Boolean)">
            <summary>
            Returns the DateTime that the assembly was build.
            <para>
            The PE header of the assembly file includes a time stamp
            (in UTC time) of when it was build. this procedures
            opens the assembly file, reads the header and returns the
            build time.
            </para>
            </summary>
            <param name="assembly">Assembly to read time for.</param>
            <param name="localtime">True if return in local time, false to return utc time</param>
            <returns>Time of build date. <see cref="F:System.DateTime.MinValue"/> if not succeded</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.CreateStackTraceString(System.Diagnostics.StackTrace,System.Boolean)">
            <summary>
            From a stack trace object, return a stack trace string.
            Call like: 
            <code>
            CreateStackTraceString(System.Diagnostics.StackTrace(true), false)
            </code>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.Util._assemblyBinRoot">
            <summary> Root folder of assemblies that are not in the GAC </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.SetupInstallRoot">
            <summary>
            Sets up a run environment that does not utilize the GAC.
            This is only necessary in a develoment environment and should not
            be used by others.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.SetupInstallRoot(System.String)">
            <summary>
            Sets up a run environment that does not utilize the GAC.
            This is only necessary in a develoment environment and should not
            be used by others.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.SetupEnvironmentPath(System.String)">
            <summary>
            Setup environment path to this DHI install root.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.Min(System.TimeSpan,System.TimeSpan)">
            <summary>
            Minimum of span 1 and span 2
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.Util.Max(System.TimeSpan,System.TimeSpan)">
            <summary>
            Maximum of span 1 and span 2
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.XYPair">
            <summary>
            Holds the level width data of a structure.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.XYPair._x">
            <summary>
            x
            </summary>
        </member>
        <member name="F:DHI.Mike1D.Generic.XYPair._y">
            <summary>
            y
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYPair.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYPair.X">
            <summary>
            X
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYPair.op_Subtraction(DHI.Mike1D.Generic.XYPair,DHI.Mike1D.Generic.XYPair)">
            <summary>
            Subctract xy2 from xy1.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYPair.Length">
            <summary>
            Length of vector defined by (X, Y)
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYPair.#ctor(System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYPair.CompareTo(System.Object)">
            <summary>
            Allows LevelWidth objects to be sorted after first Level and secondly Width.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYPair.Clone">
            <summary>
            Returns copy of instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.XYTable">
            <summary>
            Table of corresponding x and y values, sorted on x values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYTable.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYTable.#ctor(System.Int32)">
            <summary>
            Create tables with specified size
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYTable.#ctor(System.Double[],System.Double[])">
            <summary>
            Constructor, using specified arrays
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYTable.YFromX(System.Double)">
            <summary>
            Interpolates/extrapolates using linear interpolation
            </summary>
            <param name="x">the lookup variable</param>
            <returns>the interpolated value</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYTable.XFromY(System.Double)">
            <summary>
            Interpolates/extrapolates using linear interpolation
            </summary>
            <param name="y">the lookup variable</param>
            <returns>the interpolated value</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYTable.YFromX(System.Double,DHI.Mike1D.Generic.ExtrapolationTypes)">
            <summary>
            Interpolates/extrapolates width using linear interpolation
            </summary>
            <param name="x">the lookup variable</param>
            <param name="extrapolationType"></param>
            <returns>the interpolated value</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYTable.XFromY(System.Double,DHI.Mike1D.Generic.ExtrapolationTypes)">
            <summary>
            Interpolates/extrapolates width using linear interpolation
            </summary>
            <param name="y">the lookup variable</param>
            <param name="extrapolationType"></param>
            <returns>the interpolated value</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYTable.DyDx(System.Double)">
            <summary>
            Interpolates/extrapolates width using linear interpolation
            </summary>
            <param name="x">the lookup variable</param>
            <returns>the interpolated value</returns>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYTable.XValues">
            <summary>
            Gets all the x values of the collection.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYTable.YValues">
            <summary>
            Gets all the y values of the collection.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYTable.Item(System.Int32,System.Int32)">
            <summary>
            Indexer.
            </summary>
            <param name="i">Row index</param>
            <param name="j">Column index, must be 0 or 1</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYTable.Count">
            <summary>
            Number of items in table
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYTable.Validate">
            <summary>
            Validates the data. The only constraint is that the levels after sorting must be monotonically increasing.
            </summary>
            <returns>String that descripes the problem.</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYTable.Clone">
            <summary>
            Creates a copy of an instance.
            </summary>
            <returns>copy of instance</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYTable.Set(System.Int32,System.Double,System.Double)">
            <summary>
            Set a value to the table
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYTable.MinimumX">
            <summary>
            Minimum x value
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.XYTable.MaximumX">
            <summary>
            Maximum x value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.XYTable.Resize(System.Int32)">
            <summary>
            Resize table. Copy over data to new table
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.IZLocation">
            <summary>
            A location is a point in the network. A Location is always a
            part of the network, and identified by a branch/link id and
            a chainage, and a IZLocation furthermore has a Z coordinate
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.IZLocation.Z">
            <summary>
            Gets and sets the z-coordinate
            </summary>
        </member>
        <member name="T:DHI.Mike1D.Generic.ZLocation">
            <summary>
            A location with a z-value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ZLocation.#ctor(DHI.Mike1D.Generic.ILocation)">
            <summary>
             Create a ZLocation from an <see cref="T:DHI.Mike1D.Generic.ILocation"/>, setting a default Z value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ZLocation.#ctor(System.String,System.Double)">
            <summary>
             Create a ZLocation
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ZLocation.#ctor(System.String,System.Double,System.Int32)">
            <summary>
             Create a ZLocation
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ZLocation.Z">
            <summary>
            Gets and sets the z-coordinate
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ZLocation.Clone">
            <summary>
            Returns a deep clone of this object
            </summary>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.Generic.ZLocationSpan">
            <summary>
             Location span. Identified by two points: Start chainage [m] and end chainage [m]
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ZLocationSpan.#ctor(System.String,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="id">identification name</param>
            <param name="startChainage">start chainage. [m]</param>
            <param name="endChainage">end chainage. [m]</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.ZLocationSpan.#ctor(System.String,System.Double,System.Double,System.Int32)">
            <summary>
            Constructor, internal optimized version, when the intID is already known.
            </summary>
            <param name="id">identification name</param>
            <param name="startChainage">start chainage. [m]</param>
            <param name="endChainage">end chainage. [m]</param>
            <param name="intID">Known internal integer ID</param>
        </member>
        <member name="M:DHI.Mike1D.Generic.ZLocationSpan.CreateZLocationSpan(DHI.Mike1D.Generic.ILocationSpan)">
            <summary>
            Create a ZLocationSpan from an ILocationSpan. Z values will be zero
            </summary>
            <param name="span">Span to initialize the new ZLocationSpan with.</param>
        </member>
        <member name="P:DHI.Mike1D.Generic.ZLocationSpan.StartZ">
            <summary>
             Z value at start of location span [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.Generic.ZLocationSpan.EndZ">
            <summary>
             Z value at end of location span [m]
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ZLocationSpan.interpolateZAt(System.Double)">
            <summary>
            Interpolate Z value at given chainage. It is not tested
            whether the chainage is inside span, use Contains
            </summary>
        </member>
        <member name="M:DHI.Mike1D.Generic.ZLocationSpan.GetStartLocation">
            <summary>
            Gets the start location of the span. 
            </summary>
            <returns>start location of the span</returns>
            <remarks>
            Made as a method instead of a property get to avoid 
            users to think the start location of the span can be 
            manipulated through this method.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.ZLocationSpan.GetEndLocation">
            <summary>
            Gets the end location of the span.
            </summary>
            <returns>End location of the span</returns>
            <remarks>
            Made as a method instead of a property get to avoid 
            users to think the end location of the span can be 
            manipulated through this method.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.Generic.ZLocationSpan.CreateLocation(System.Double)">
            <summary>
            Creates a location at the specified chainage of the span. Derived
            data is automatically calculated at the location. 
            The chainage must lay within the span, otherwise null is returned
            </summary>
            <param name="chainage">Chainage to make location at</param>
            <returns>Location at chainage value, or null if chainage is outside span</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ZLocationSpan.MidPoint">
            <summary>
            Returns location midway in the location span
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ZLocationSpan.CreateSubLocationSpan(System.Double,System.Double)">
            <summary>
            Creates a sub-locationSpan defined within chainage interval. Derived
            data is automatically adjusted to match locationspan
            The chainages must lay within the span.
            </summary>
            <param name="startChainage">Start chainage for new locationSpan</param>
            <param name="endChainage">End chainage for new locationSpan</param>
            <returns>A derived location span defined at chainage interval, or null if chainages is outside span</returns>
        </member>
        <member name="M:DHI.Mike1D.Generic.ZLocationSpan.Clone">
            <summary>
            Produce a deep clone of the object
            </summary>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.ModelState.BlockWriterXml">
            <summary>
            Block writer implementation, outputting XML
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.BlockWriterXml.DoubleDataArrayAsFloats">
            <summary>
            Flag indicating if double data arrays should be stored as floats (to save disc space).
            <para>
            Default is false.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.BlockWriterXml._str">
            <summary>
            Reusable string builder
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockWriterXml.#ctor(System.String,System.Xml.XmlWriterSettings)">
            <summary>
            Create writer, and store to file
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockWriterXml.#ctor(System.IO.Stream,System.Xml.XmlWriterSettings)">
            <summary>
            Create writer, and store to stream
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockWriterXml.WriteStartObject(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockWriterXml.WriteEndObject">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockWriterXml.WriteValue(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockWriterXml.WriteValue(System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockWriterXml.WriteValue(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockWriterXml.WriteValue(System.String,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockWriterXml.WriteValue(System.String,System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockWriterXml.WriteValue(System.String,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockWriterXml.WriteValue(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockWriterXml.WriteValue(System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockWriterXml.WriteValue(System.String,System.Collections.Generic.IEnumerable{System.Double})">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockWriterXml.WriteDataValue(System.String,System.Collections.Generic.IEnumerable{System.Double})">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockWriterXml.WriteValue(System.String,System.Collections.Generic.IEnumerable{System.DateTime})">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockWriterXml.Close">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Mike1D.ModelState.IBlockReader">
            <summary>
            Interface for a block reader
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.IBlockReader.TokenName">
            <summary>
            Name of current token.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.IBlockReader.TokenType">
            <summary>
            Type of current token
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockReader.Read">
            <summary>
            Read next token from state stream
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockReader.ReadString">
            <summary>
            Read string
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockReader.ReadBoolean">
            <summary>
            Read string integer
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockReader.ReadInt">
            <summary>
            Read string integer
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockReader.ReadDouble">
            <summary>
            Read double
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockReader.ReadDateTime">
            <summary>
            Read DateTime
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockReader.ReadTimeSpan">
            <summary>
            Read TimeSpan
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockReader.ReadStrings">
            <summary>
            Read a list of strings
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockReader.ReadBooleans">
            <summary>
            Read a list of strings
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockReader.ReadInts">
            <summary>
            Read a list of integers
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockReader.ReadDoubles">
            <summary>
            Read a list of doubles
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockReader.Skip">
            <summary>
            Skip current element, moves beyond the <see cref="F:DHI.Mike1D.ModelState.StateToken.ObjectEnd"/>
            of the current section.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockReader.Close">
            <summary>
            Close reader
            </summary>
        </member>
        <member name="T:DHI.Mike1D.ModelState.BlockReaderXml">
            <summary>
            Block writer implementation, outputting XML
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.BlockReaderXml.TokenName">
            <summary>
            Name of current token.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.BlockReaderXml.TokenType">
            <summary>
            Type of current token
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.BlockReaderXml.HasLineInfo">
            <summary>
            Flag indicating if class can return line information
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.BlockReaderXml.LineNumber">
            <summary>
            The current line number in the xml file, or -1 if not available
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.BlockReaderXml.LinePosition">
            <summary>
            The current line position in the xml file, or -1 if not available
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockReaderXml.#ctor(System.String)">
            <summary>
            Create reader, and read from file
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockReaderXml.#ctor(System.IO.Stream)">
            <summary>
            Create reader, and read from stream
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockReaderXml.Read">
            <summary>
            Read next token from state stream
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockReaderXml.ReadString">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockReaderXml.ReadBoolean">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockReaderXml.ReadInt">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockReaderXml.ReadDouble">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockReaderXml.ReadDateTime">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockReaderXml.ReadTimeSpan">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockReaderXml.ReadStrings">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockReaderXml.ReadBooleans">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockReaderXml.ReadInts">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockReaderXml.ReadDoubles">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockReaderXml.ReadDateTimes">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockReaderXml.ReadValue">
            <summary>
            Read string value from XML text element
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockReaderXml.Skip">
            <summary>
            Skip current element, moves beyond the <see cref="F:DHI.Mike1D.ModelState.StateToken.ObjectEnd"/>
            of the current section.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.BlockReaderXml.Close">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Mike1D.ModelState.IBlockWriter">
            <summary>
            Interface for a block writer
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockWriter.WriteStartObject(System.String)">
            <summary>
            Write start tag object with specified name
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockWriter.WriteEndObject">
            <summary>
            Write end-object tag
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockWriter.WriteValue(System.String,System.String)">
            <summary>
            Write parameter value with specified name
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockWriter.WriteValue(System.String,System.Int32)">
            <summary>
            Write parameter value with specified name
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockWriter.WriteValue(System.String,System.Boolean)">
            <summary>
            Write parameter value with specified name
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockWriter.WriteValue(System.String,System.Double)">
            <summary>
            Write parameter value with specified name
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockWriter.WriteValue(System.String,System.DateTime)">
            <summary>
            Write parameter value with specified name
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockWriter.WriteValue(System.String,System.TimeSpan)">
            <summary>
            Write parameter value with specified name
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockWriter.WriteValue(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Write parameter value with specified name
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockWriter.WriteValue(System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Write parameter value with specified name
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockWriter.WriteValue(System.String,System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Write parameter value with specified name
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockWriter.WriteDataValue(System.String,System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Write parameter value with specified name
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IBlockWriter.Close">
            <summary>
            Close writer
            </summary>
        </member>
        <member name="T:DHI.Mike1D.ModelState.IModelStateReadWrite">
            <summary>
            Interface of model class that can handle state
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IModelStateReadWrite.WriteState(DHI.Mike1D.ModelState.ModelStateWriter)">
            <summary>
            Write current state of module
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.IModelStateReadWrite.ReadState(DHI.Mike1D.ModelState.ModelStateReader)">
            <summary>
            Read state and apply to module.
            Returns true if state was successfully read.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.ModelState.StateToken">
            <summary>
            Tokens in state
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateToken.Undefined">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateToken.FileEnd">
            <summary>
            End-of-file
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateToken.Object">
            <summary>
            Object, with a name
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateToken.ObjectEnd">
            <summary>
            End of object
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateToken.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:DHI.Mike1D.ModelState.StateNode">
            <summary>
            State node. Helper class for reading and writing state.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateNode.Id">
            <summary>
            Id of node
            </summary>
        </member>
        <member name="T:DHI.Mike1D.ModelState.StateReach">
            <summary>
            State reach. Helper class for reading and writing state.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateReach.Type">
            <summary>
            Type of reach
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateReach.Id">
            <summary>
            Id of reach
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateReach.Chainages">
            <summary>
            Chainages of grid points
            </summary>
        </member>
        <member name="T:DHI.Mike1D.ModelState.StateReachType">
            <summary>
            Type of reach. Helper enum for reading and writing state.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateReachType.Default">
            <summary>
            Default HD reach
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateReachType.Structure">
            <summary>
            Structure reach
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateReachType.Routing">
            <summary>
            Routing reach
            </summary>
        </member>
        <member name="T:DHI.Mike1D.ModelState.StateReadMode">
            <summary>
            Read mode enumeration, describing what happens when reading and old/new version of a state file.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateReadMode.Exact">
            <summary>
            If the state file version is identical to the bridge version, then
            we expect all known items to be present in the file
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateReadMode.NewFile">
            <summary>
            If the state file version is newer than the bridge version, then 
            we will skip unknown items in the file.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateReadMode.OldFile">
            <summary>
            If the state file version is older than the bridge version, then
            we will skip processing items if they are missing in the file
            </summary>
        </member>
        <member name="T:DHI.Mike1D.ModelState.ModelStateReader">
            <summary>
            Class for reading model state file. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.ModelStateReader.TokenName">
            <summary>
            Name of current token in state
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.ModelStateReader.TokenType">
            <summary>
            Type of current token in state
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.ModelStateReader.Nodes">
            <summary>
            Nodes stored in state, if state contains network
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.ModelStateReader.Reaches">
            <summary>
            Reaches stored in state, if state contains network
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.ModelStateReader.ReadMode">
            <summary>
            Read-mode of reader
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.ModelStateReader.Info">
            <summary>
            State start info for this reader.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.ModelStateReader.HasLineInfo">
            <summary>
            Flag indicating if class can return line information
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.ModelStateReader.LineNumber">
            <summary>
            The current line number in the xml file, or -1 if not available
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.ModelStateReader.LinePosition">
            <summary>
            The current line position in the xml file, or -1 if not available
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.AppendLineInfo(System.String)">
            <summary>
            Append line information to string. If no line information is available, the input string is returned directly.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.#ctor(DHI.Mike1D.ModelState.StatestartInfo,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Create new Model State Reader
            </summary>
            <param name="statestartInfo"></param>
            <param name="diagnostics"></param>
        </member>
        <member name="P:DHI.Mike1D.ModelState.ModelStateReader.Options">
            <summary>
            Option objects for reader
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.Open(System.String)">
            <summary>
            Open reader and read from file
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.Close">
            <summary>
            Close reader and underlying stream.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.Read">
            <summary>
            Read next token from state stream
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.ReadEndObject">
            <summary>
            Reads next element from the state stream and validates that it is and end object element.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.Read(DHI.Mike1D.ModelState.StateToken)">
            <summary>
            Reads next element from the state stream and validates that the <paramref name="tokenType"/> matches.
            <para>
            It throws an exception if the <paramref name="tokenType"/> does not match
            </para>
            </summary>
            <param name="tokenType">Type of token to read</param>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.TryRead(DHI.Mike1D.ModelState.StateToken)">
            <summary>
            First time called, this will read the next token.
            At subsequent calls, a new token will only be read
            if the previous call returned true
            </summary>
            <param name="tokenType"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.ReadStartObject(System.String)">
            <summary>
            Reads the next element from the state stream and validates that the
            <paramref name="tokenName"/> matches.
            <para>
            If file version and bridge version matches, if object is not found, 
            an exception is thrown.
            </para>
            <para>
            If file version is older than bridge version, of object is not found, 
            false is returned. 
            </para>
            </summary>
            <param name="tokenName">Name of token</param>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.TryReadStartObject(System.String)">
            <summary>
            Reads the next element, but does only move by it if the
            <paramref name="tokenName"/> matches.
            </summary>
            <param name="tokenName">Name of token</param>
            <returns>True if element was read</returns>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.ReadString">
            <summary>
            Read string
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.ReadBoolean">
            <summary>
            Read boolean
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.ReadInt">
            <summary>
            Read integer
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.ReadDouble">
            <summary>
            Read double
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.ReadDateTime">
            <summary>
            Read a DateTime
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.ReadTimeSpan">
            <summary>
            Read a TimeSpan
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.ReadStrings">
            <summary>
            Read a list of strings
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.ReadBooleans">
            <summary>
            Read a list of integers
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.ReadInts">
            <summary>
            Read a list of integers
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.ReadDoubles">
            <summary>
            Read a list of doubles
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.ReadDateTimes">
            <summary>
            Read a list of DateTimes
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateReader.Skip">
            <summary>
            Skip current element, moves beyond the <see cref="F:DHI.Mike1D.ModelState.StateToken.ObjectEnd"/>
            of the current section.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.ModelState.ModelStateExtensions">
            <summary>
            Extension for reading/writing state
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateExtensions.ReadBoolean(DHI.Mike1D.ModelState.ModelStateReader,System.String)">
            <summary>
            Read a parameter from state, return its value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateExtensions.ReadBoolean(DHI.Mike1D.ModelState.ModelStateReader,System.String,System.Action{System.Boolean})">
            <summary>
            Read a parameter from state, and if there, apply it.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateExtensions.ReadString(DHI.Mike1D.ModelState.ModelStateReader,System.String)">
            <summary>
            Read a parameter from state, return its value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateExtensions.ReadBooleans(DHI.Mike1D.ModelState.ModelStateReader,System.String)">
            <summary>
            Read a parameter from state, return its value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateExtensions.ReadInt(DHI.Mike1D.ModelState.ModelStateReader,System.String)">
            <summary>
            Read a parameter from state, return its value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateExtensions.ReadInt(DHI.Mike1D.ModelState.ModelStateReader,System.String,System.Action{System.Int32})">
            <summary>
            Read a parameter from state, and if there, apply it.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateExtensions.ReadDouble(DHI.Mike1D.ModelState.ModelStateReader,System.String)">
            <summary>
            Read a parameter from state, return its value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateExtensions.ReadDouble(DHI.Mike1D.ModelState.ModelStateReader,System.String,System.Action{System.Double})">
            <summary>
            Read a parameter from state, and if there, apply it.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateExtensions.TryReadDouble(DHI.Mike1D.ModelState.ModelStateReader,System.String,System.Action{System.Double})">
            <summary>
            Read a parameter from state, and if there, apply it.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateExtensions.ReadDoubles(DHI.Mike1D.ModelState.ModelStateReader,System.String)">
            <summary>
            Read a parameter from state, return its value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateExtensions.ReadDateTime(DHI.Mike1D.ModelState.ModelStateReader,System.String)">
            <summary>
            Read a parameter from state, return its value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateExtensions.ReadDateTime(DHI.Mike1D.ModelState.ModelStateReader,System.String,System.Action{System.DateTime})">
            <summary>
            Read a parameter from state, and if there, apply it.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateExtensions.ReadDateTimes(DHI.Mike1D.ModelState.ModelStateReader,System.String)">
            <summary>
            Read a parameter from state, return its value
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateExtensions.Warning(DHI.Mike1D.ModelState.ModelStateReader,System.String)">
            <summary>
            Warning while reading state
            </summary>
        </member>
        <member name="T:DHI.Mike1D.ModelState.ModelStateWriter">
            <summary>
            Class for writing to state stream.
            <para>
            It supports optional objects and optional values. Whenever a non-optional object 
            or value is included, all earlier optional object and values at that level and lower
            will be added to the stream. Objects with purely optional sub-objects and parameters
            will not be added to the stream. 
            </para>
            <para>
            The optional object can be used if an ancestor does not know whether a child actually
            contains state, so the ancestor can add itself and its parameters as optional, and only
            if a child has state, the ancestor values will be included.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.ModelStateWriter._optionalObjects">
            <summary>
            Stack of optional objects that has not yet been written to the state stream.
            Each object can contain a number of parameters with values. 
            <para>
            A single line of objects in a stack is sufficient (a tree-like structure is not required),
            since a subtree of objects with purely optional parameters will be immediately removed
            when ending the object (popped from the stack), and hence a single line of objects remains. 
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.#ctor(System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="stateTime">Time of state.</param>
        </member>
        <member name="P:DHI.Mike1D.ModelState.ModelStateWriter.StateTime">
            <summary>
            Timestamp of state
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.ModelStateWriter.Options">
            <summary>
            Option objects for writer
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.Open(System.String)">
            <summary>
            Create writer that writes to a file
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.Close">
            <summary>
            Close state, and also underlying state stream.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.WriteStartObject(System.String)">
            <summary>
            Writes a start object tag with the specified name
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.WriteStartObject(System.String,System.Boolean)">
            <summary>
            Adds an optional start object tag with the specified name to 
            the list of optional objects
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.WriteEndObject">
            <summary>
            Closes current object
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.WriteValue(System.String,System.Object,System.Boolean)">
            <summary>
            Write parameter value to object
            </summary>
            <param name="parameterName">Name of parameter</param>
            <param name="value">Value of parameter</param>
            <param name="optional">Flag indicating of the parameter is optional</param>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.WriteValue(System.String,System.String,System.Boolean)">
            <summary>
            Write parameter value to current object
            </summary>
            <param name="parameterName">Name of parameter</param>
            <param name="value">Value of parameter</param>
            <param name="optional">Flag indicating of the parameter is optional</param>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.WriteValue(System.String,System.Int32,System.Boolean)">
            <summary>
            Write parameter value to current object
            </summary>
            <param name="parameterName">Name of parameter</param>
            <param name="value">Value of parameter</param>
            <param name="optional">Flag indicating of the parameter is optional</param>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.WriteValue(System.String,System.Boolean,System.Boolean)">
            <summary>
            Write parameter value to current object
            </summary>
            <param name="parameterName">Name of parameter</param>
            <param name="value">Value of parameter</param>
            <param name="optional">Flag indicating of the parameter is optional</param>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.WriteValue(System.String,System.Double,System.Boolean)">
            <summary>
            Write parameter value to current object
            </summary>
            <param name="parameterName">Name of parameter</param>
            <param name="value">Value of parameter</param>
            <param name="optional">Flag indicating of the parameter is optional</param>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.WriteValue(System.String,System.DateTime,System.Boolean)">
            <summary>
            Write parameter value to current object
            </summary>
            <param name="parameterName">Name of parameter</param>
            <param name="value">Value of parameter</param>
            <param name="optional">Flag indicating of the parameter is optional</param>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.WriteValue(System.String,System.TimeSpan,System.Boolean)">
            <summary>
            Write parameter value to current object
            </summary>
            <param name="parameterName">Name of parameter</param>
            <param name="value">Value of parameter</param>
            <param name="optional">Flag indicating of the parameter is optional</param>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.WriteValue(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Write parameter array values to current object
            </summary>
            <param name="parameterName">Name of parameter</param>
            <param name="values">Array of values</param>
            <param name="optional">Flag indicating of the parameter is optional</param>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.WriteValue(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)">
            <summary>
            Write parameter array values to current object
            </summary>
            <param name="parameterName">Name of parameter</param>
            <param name="values">Array of values</param>
            <param name="optional">Flag indicating of the parameter is optional</param>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.WriteValue(System.String,System.Collections.Generic.IEnumerable{System.Double},System.Boolean)">
            <summary>
            Write parameter array values to current object
            </summary>
            <param name="parameterName">Name of parameter</param>
            <param name="values">Array of values</param>
            <param name="optional">Flag indicating of the parameter is optional</param>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.WriteDataValue(System.String,System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Write parameter array values to current object
            </summary>
            <param name="parameterName">Name of parameter</param>
            <param name="values">Array of values</param>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.WriteValue(System.String,System.Collections.Generic.IEnumerable{System.DateTime},System.Boolean)">
            <summary>
            Write parameter array values to current object
            </summary>
            <param name="parameterName">Name of parameter</param>
            <param name="values">Array of values</param>
            <param name="optional">Flag indicating of the parameter is optional</param>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.HandleOptionalParameter(System.String,System.Object,System.Boolean)">
            <summary>
            Helper method for handling optional parameters: If the parameter
            is optional, and the current object is optional (there is something in the list
            of optional objects), this parameter value is added to the list of parameters in 
            the optional object.
            <para>
            If the parameter is not optional, but the current object is optional, all optional
            objects and parameters are added to the state.
            </para>
            </summary>
            <param name="parameterName"></param>
            <param name="value"></param>
            <param name="optional"></param>
            <returns>Returns true if this was an optional parameter</returns>
        </member>
        <member name="M:DHI.Mike1D.ModelState.ModelStateWriter.WriteOptionalObjects">
            <summary>
            Write all optional objects to state stream.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.ModelState.ModelStateWriter.OptionalObject">
            <summary>
            An optional object contains a name and a number of parameter values in order,
            that will be written if the optional object data is required.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.ModelState.StateDataType">
            <summary>
            Type of state data. Can be used to select which part of the state to apply or exclude.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateDataType.Time">
            <summary>
            Time of simulation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateDataType.HD">
            <summary>
            Hydro Dynamic state
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateDataType.AD">
            <summary>
            Advection Dispersion/component transport state
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateDataType.ST">
            <summary>
            Sediment transport state
            </summary>
        </member>
        <member name="F:DHI.Mike1D.ModelState.StateDataType.DA">
            <summary>
            Data Assimilation state
            </summary>
        </member>
        <member name="T:DHI.Mike1D.ModelState.StatestartInfo">
            <summary>
            Structure to store state start information.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.ModelState.StatestartInfo.#ctor(DHI.Mike1D.Generic.IFilePath)">
            <summary>
            Create new HotstartInfo based on the filename
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.StatestartInfo.Connection">
            <summary>
            Connection info of file to load hotstart from
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.StatestartInfo.FileName">
            <summary>
            Name of file to load hotstart from, short of <code>Connection.FileName</code>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.ModelState.StatestartInfo.Exclude">
            <summary>
            State content to exclude when reading state.
            </summary>
        </member>
        <member name="T:DHI.Spatial.Algorithm.GridCellWeight">
            <summary>
            Weight for a grid cell/pixel.
            </summary>
        </member>
        <member name="F:DHI.Spatial.Algorithm.GridCellWeight.I">
            <summary>
            Index in I (x) direction
            </summary>
        </member>
        <member name="F:DHI.Spatial.Algorithm.GridCellWeight.J">
            <summary>
            Index in I (y) direction
            </summary>
        </member>
        <member name="F:DHI.Spatial.Algorithm.GridCellWeight.Weight">
            <summary>
            Weight value.
            </summary>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridCellWeight.CompareTo(DHI.Spatial.Algorithm.GridCellWeight)">
            <summary>
            CompareTo implemented explicitly, to allow automatic sorting of objects.
            </summary>
        </member>
        <member name="T:DHI.Spatial.Algorithm.GridWeightCalculator">
            <summary>
            Class for calculating grid cell/pixel weights for grid cells covered by a given polygon.
            <para>
            The grid origin is defined by <see cref="M:DHI.Spatial.Algorithm.GridWeightCalculator.SetGridOrigin(System.Double,System.Double,System.Double)"/>, and the grid
            is created by one of the <code>CreateGrid</code> methods. It is assumed that 
            polygon coordinates is in the same coordinate-system/projection as the grid.
            </para>
            <para>
            If <see cref="P:DHI.Spatial.Algorithm.GridWeightCalculator.WeightType"/> is <see cref="F:DHI.Spatial.Algorithm.GridWeightCalculator.GridCellWeightType.Weight"/>, 
            the weight for a grid cell
            is the area fraction of the total grid-polygon intersecting area. It can
            be used for calculating the average of some grid value set over the polygon.
            </para>
            <para>
            If <see cref="P:DHI.Spatial.Algorithm.GridWeightCalculator.WeightType"/> is <see cref="F:DHI.Spatial.Algorithm.GridWeightCalculator.GridCellWeightType.Area"/>, 
            the weight for a grid cell
            is the area of each grid cell covered by the polygon. If the grid cell
            is fully covered by the polygon, the weight is the cell area.
            </para>
            <para>
            If <see cref="P:DHI.Spatial.Algorithm.GridWeightCalculator.WeightType"/> is <see cref="F:DHI.Spatial.Algorithm.GridWeightCalculator.GridCellWeightType.Fraction"/>, 
            the weight for a grid cell
            is the fraction of each grid cell covered by the polygon. If the grid cell
            is fully covered by the polygon, the weight is 1.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Spatial.Algorithm.GridWeightCalculator.GridCellWeightType">
            <summary>
            Types of grid cell weights
            </summary>
        </member>
        <member name="F:DHI.Spatial.Algorithm.GridWeightCalculator.GridCellWeightType.Weight">
            <summary>
            Weights, all weights summing to 1
            </summary>
        </member>
        <member name="F:DHI.Spatial.Algorithm.GridWeightCalculator.GridCellWeightType.Area">
            <summary>
            Area of grid cell covered by polygon
            </summary>
        </member>
        <member name="F:DHI.Spatial.Algorithm.GridWeightCalculator.GridCellWeightType.Fraction">
            <summary>
            Fraction of grid cell covered by polygon
            </summary>
        </member>
        <member name="T:DHI.Spatial.Algorithm.GridWeightCalculator.GridCalculationType">
            <summary>
            Types of grid cell weights for polygon weight calculations
            </summary>
        </member>
        <member name="F:DHI.Spatial.Algorithm.GridWeightCalculator.GridCalculationType.Intersection">
            <summary>
            Intersection approach used
            </summary>
        </member>
        <member name="F:DHI.Spatial.Algorithm.GridWeightCalculator.GridCalculationType.MarkPoints">
            <summary>
            Mark points approach used
            </summary>
        </member>
        <member name="P:DHI.Spatial.Algorithm.GridWeightCalculator.WeightedArea">
            <summary>
            The area included in the weights.
            <para>
            Using the intersection (exact) approach, this will equal the polygon area
            when the polygon is fully covered by the grid. Otherwise it will return
            the area covered by the grid.
            </para>
            <para>
            Using the MarkPoints (fast) approach, this will equal a "grid-digitized" polygon area.
            When the polygon is fully covered by the grid, the difference between this area and
            the polygon area will indicate how big the error is, compared to the exact intersection approach.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Spatial.Algorithm.GridWeightCalculator.WeightType">
            <summary>
            Flag specifying the type of weight results
            </summary>
        </member>
        <member name="P:DHI.Spatial.Algorithm.GridWeightCalculator.CalculationUsed">
            <summary>
            Result flag: Type of calculation approach used in last call to <see cref="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeights(GeoAPI.Geometries.IGeometry)"/>
            </summary>
        </member>
        <member name="P:DHI.Spatial.Algorithm.GridWeightCalculator.PolygonFullyInsideGrid">
            <summary>
            Result flag: Boolean indicating if catchment used in last call to <see cref="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeights(GeoAPI.Geometries.IGeometry)"/> is fully covered by the grid
            </summary>
        </member>
        <member name="P:DHI.Spatial.Algorithm.GridWeightCalculator.IntersectionRejectedCount">
            <summary>
            Counter for how many grid cell that was tested but rejected during the intersection approach.
            </summary>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:DHI.Spatial.Algorithm.GridWeightCalculator.Reprojector">
            <summary>
            Reprojector for reprojecting from model/catchment coordinates
            to grid coordinates. If null, it is assumed that the two
            projections are identical.
            </summary>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.SetGridOrigin(System.Double,System.Double,System.Double)">
            <summary>
            Set origin of local grid coordinates (lower left corner) in projection coordinates (easting/northing)
            and also specifying the rotation of the grid (around the local grid origin)
            </summary>
            <param name="east">Easting (x) coordinate value of the local grid origin</param>
            <param name="north">Northing (y) coordinate value of the local grid origin</param>
            <param name="orientation">Orientation of the local grid, rotation in radians clockwise from projection north</param>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.CreateGrid(System.Int32,System.Double,System.Int32,System.Double,System.Boolean)">
            <summary>
            Create grid as equidistant grid, lower-left grid cell in local grid coordinate <code>(0,0)</code>.
            </summary>
            <param name="xCount">Number of data points in the x direction</param>
            <param name="dx">space between each gridpoint in x direction</param>
            <param name="yCount">Number of data points in the y direction</param>
            <param name="dy">space between each gridpoint in y direction</param>
            <param name="originInFirstCellCenter">Flag indicating if the projection origin is in the
            center of the first grid cell (true) or in the
            lower left corner of the first grid cell (false).</param>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.CreateGrid(System.Int32,System.Double,System.Double,System.Int32,System.Double,System.Double,System.Boolean)">
            <summary>
            Create grid as equidistnat grid, lower-left grid cell in local grid coordinate <code>(x0,y0)</code>.
            </summary>
            <param name="xCount">Number of data points in the x direction</param>
            <param name="x0">Relative offset to origin in x direction</param>
            <param name="dx">space between each gridpoint in x direction</param>
            <param name="yCount">Number of data points in the y direction</param>
            <param name="y0">Relative offset to origin in y direction</param>
            <param name="dy">space between each gridpoint in y direction</param>
            <param name="originInFirstCellCenter">Flag indicating if the projection origin is in the
            center of the first grid cell (true) or in the
            lower left corner of the first grid cell (false).</param>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.GetGridCell(System.Double,System.Double,System.Int32@,System.Int32@)">
            <summary>
            Get grid cell index of a coordinate, projection coordinates. 
            If east/north is outside grid, i/j are returned as either -1 or x/yCount. 
            If east/north is inside grid, a value between 0 and <code>x/yCount-1</code> is returned.
            </summary>
            <param name="east">Easting/x coordinate</param>
            <param name="north">Northing/y coordinate</param>
            <param name="i">Cell index i</param>
            <param name="j">Cell index j</param>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeights(GeoAPI.Geometries.IGeometry)">
            <summary>
            Calculate weights using a balanced approach: If the polygon area is 10
            times larger than the typical grid cell area, the mark approach (<see cref="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeightsMarkPoints(GeoAPI.Geometries.IGeometry)"/>) is
            tried, and if the weights includes more than 5 cells, this is returned.
            <para>
            If the polygon area is less than 10 times larger than the typical grid cell area, or if the mark approach
            returned 5 cells or less, the intersection approach is applied.
            </para>
            <para>Input must be a polygon or a multi-polygon</para>
            </summary>
            <param name="polygon">Polygon in projection coordinates</param>
            <returns>List of catchment weights, or null if polygon does not overlap with grid</returns>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeights(GeoAPI.Geometries.IPolygon)">
            <summary>
            Calculate weights using a balanced approach: If the polygon area is 10
            times larger than the typical grid cell area, the mark approach (<see cref="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeightsMarkPoints(GeoAPI.Geometries.IGeometry)"/>) is
            tried, and if the weights includes more than 5 cells, this is returned.
            <para>
            If the polygon area is less than 10 times larger than the typical grid cell area, or if the mark approach
            returned 5 cells or less, the intersection approach is applied.
            </para>
            </summary>
            <param name="polygon">Polygon in projection coordinates</param>
            <returns>List of catchment weights, or null if polygon does not overlap with grid</returns>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeights(GeoAPI.Geometries.IMultiPolygon)">
            <summary>
            Calculate weights using a balanced approach: If the polygon area is 10
            times larger than the typical grid cell area, the mark approach (<see cref="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeightsMarkPoints(GeoAPI.Geometries.IGeometry)"/>) is
            tried, and if the weights includes more than 5 cells, this is returned.
            <para>
            If the polygon area is less than 10 times larger than the typical grid cell area, or if the mark approach
            returned 5 cells or less, the intersection approach is applied.
            </para>
            </summary>
            <param name="polygon">Polygon in projection coordinates</param>
            <returns>List of catchment weights, or null if polygon does not overlap with grid</returns>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeightsIntersection(GeoAPI.Geometries.IGeometry)">
            <summary>
            Calculate weights using intersection approach, calculating exact
            area of intersection between grid cell and catchment polygon.
            <para>
            This approach is the most accurate, but also computationally expensive, 
            and hence may take some time.
            </para>
            <para>Input must be a polygon or a multi-polygon</para>
            </summary>
            <param name="polygon">Polygon in projection coordinates</param>
            <returns>List of catchment weights, or null if polygon does not overlap with grid</returns>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeightsIntersection(GeoAPI.Geometries.IPolygon)">
            <summary>
            Calculate weights using intersection approach, calculating exact
            area of intersection between grid cell and catchment polygon.
            <para>
            This approach is the most accurate, but also computationally expensive, 
            and hence may take some time.
            </para>
            </summary>
            <param name="polygon">Polygon in projection coordinates</param>
            <returns>List of catchment weights, or null if polygon does not overlap with grid</returns>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeightsIntersection(GeoAPI.Geometries.IMultiPolygon)">
            <summary>
            Calculate weights using intersection approach, calculating exact
            area of intersection between grid cell and catchment polygon.
            <para>
            This approach is the most accurate, but also computationally expensive, 
            and hence may take some time.
            </para>
            </summary>
            <param name="polygon">Polygon in projection coordinates</param>
            <returns>List of catchment weights, or null if polygon does not overlap with grid</returns>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeightsMarkPoints(GeoAPI.Geometries.IGeometry)">
            <summary>
            Calculate weights using a mark approach, where a grid cell is
            marked as inside the catchment polygon if the center of the cell is inside the catchment polygon.
            <para>
            This approach is fast, but less accurate. For small catchments that does not cover
            any grid cell center points, it will return an empty list. Use the <see cref="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeights(GeoAPI.Geometries.IGeometry)"/>
            method when possible, which automatically will evaluate whether the result of this
            fast approach is sufficient, and if not, turn to the exact intersection approach.
            </para>
            <para>
            This approach disregards any holes in the polygon, it is only working on the exterior ring of the polygon.
            </para>
            <para>Input must be a polygon or a multi-polygon</para>
            </summary>
            <param name="polygon">Polygon in projection coordinates</param>
            <returns>List of catchment weights, or null if polygon does not overlap with grid</returns>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeightsMarkPoints(GeoAPI.Geometries.IPolygon)">
            <summary>
            Calculate weights using a mark approach, where a grid cell is
            marked as inside the catchment polygon if the center of the cell is inside the catchment polygon.
            <para>
            This approach is fast, but less accurate. For small catchments that does not cover
            any grid cell center points, it will return an empty list. Use the <see cref="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeights(GeoAPI.Geometries.IGeometry)"/>
            method when possible, which automatically will evaluate whether the result of this
            fast approach is sufficient, and if not, turn to the exact intersection approach.
            </para>
            <para>
            This approach disregards any holes in the polygon, it is only working on the exterior ring of the polygon.
            </para>
            </summary>
            <param name="polygon">Polygon in projection coordinates</param>
            <returns>List of catchment weights, or null if polygon does not overlap with grid</returns>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeightsMarkPoints(GeoAPI.Geometries.IMultiPolygon)">
            <summary>
            Calculate weights using a mark approach, where a grid cell is
            marked as inside the catchment polygon if the center of the cell is inside the catchment polygon.
            <para>
            This approach is fast, but less accurate. For small catchments that does not cover
            any grid cell center points, it will return an empty list. Use the <see cref="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeights(GeoAPI.Geometries.IGeometry)"/>
            method when possible, which automatically will evaluate whether the result of this
            fast approach is sufficient, and if not, turn to the exact intersection approach.
            </para>
            <para>
            This approach disregards any holes in the polygon, it is only working on the exterior ring of the polygon.
            </para>
            </summary>
            <param name="polygon">Polygon in projection coordinates</param>
            <returns>List of catchment weights, or null if polygon does not overlap with grid</returns>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.ConvertPolygon(GeoAPI.Geometries.IMultiPolygon)">
            <summary>
            Convert polygon to local grid coordinates
            </summary>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.ConvertPolygon(GeoAPI.Geometries.IPolygon)">
            <summary>
            Convert polygon to local grid coordinates
            </summary>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeightsIntersectionP(GeoAPI.Geometries.IGeometry)">
            <summary>
            Works on the converted polygon
            </summary>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeightsMarkPointsP(GeoAPI.Geometries.IMultiPolygon)">
            <summary>
            Works on the converted polygon
            </summary>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.CalculateWeightsMarkPointsP(GeoAPI.Geometries.IPolygon)">
            <summary>
            Works on the converted polygon
            </summary>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.MarkPointsInsidePolygon(GeoAPI.Geometries.IPolygon)">
            <summary>
            Mark grid cells where cell center point is inside polygon.
            <para>
            Algorithm from MzChart library.
            </para>
            </summary>
            <returns>Number of cells marked</returns>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.SearchX(System.Double)">
            <summary>
            Searches for coordinate and returns the zero-based index of the element.
            <para>
            If coordinate is not found, a negative number is returned, 
            which can be intepreted as the bitwise complement
            of the interval of indices that the key is in between, i.e.
            <code>
            list[interval-1] &lt; key &lt; list[interval]
            </code>
            </para>
            </summary>
            <param name="x">The coordinate to locate.</param>
            <returns>The zero-based index of item in the list of coordinates, if item is found; 
            otherwise, a negative number that is the bitwise complement 
            of the index of the next element that is larger than item or, 
            if there is no larger element, the bitwise complement of Count.</returns>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.SearchY(System.Double)">
            <summary>
            Searches for coordinate and returns the zero-based index of the element.
            <para>
            If coordinate is not found, a negative number is returned, 
            which can be intepreted as the bitwise complement
            of the interval of indices that the key is in between, i.e.
            <code>
            list[interval-1] &lt; key &lt; list[interval]
            </code>
            </para>
            </summary>
            <param name="y">The coordinate to locate.</param>
            <returns>The zero-based index of item in the list of coordinates, if item is found; 
            otherwise, a negative number that is the bitwise complement 
            of the index of the next element that is larger than item or, 
            if there is no larger element, the bitwise complement of Count.</returns>
        </member>
        <member name="M:DHI.Spatial.Algorithm.GridWeightCalculator.BinarySearch(System.Double[],System.Double)">
            <summary>
            Searches the entire sorted <see cref="T:System.Collections.Generic.IList`1"/> for an element using the provided 
            comparer and returns the zero-based index of the element.
            <para>
            If the key is not found, a negative number is returned, 
            which can be intepreted as the bitwise complement
            of the interval of indices that the key is in between, i.e.
            <code>
            list[interval-1] &lt; key &lt; list[interval]
            </code>
            </para>
            </summary>
            <param name="list">List to search in</param>
            <param name="key">The key to locate. The value can be null for reference types.</param>
            <returns>The zero-based index of item in the sorted <see cref="T:System.Collections.Generic.IList`1"/>, if item is found; 
            otherwise, a negative number that is the bitwise complement 
            of the index of the next element that is larger than item or, 
            if there is no larger element, the bitwise complement of Count.</returns>
        </member>
        <member name="T:DHIMath.Numerics.AdvectiveTransport">
            <summary>
            Advection transport utility class.
            <para>
            Transport velocity is in terms of the Courant Number
            <code>
            c = u * dt / dx
            </code>
            where u is the velocity, dt is the time step, and dx is the spacing between the grid points.
            </para>
            <para>
            Time integration with this method is only stable for Courant numbers less than one.
            </para>
            <para>
            Implementing the QUICKEST scheme (3rd order upwind biased) with the ULTIMATE limiter.
            Based on the article:
            "Universal Limiter for Transient Interpolation Modeling of the Advective Transport Equations: The ULTIMATE Conservative Difference Scheme",
            B.P. Leonard, 1988, 
            NASA Technical Memorandum 100916, ICOMP-88-11
            </para>
            </summary>
        </member>
        <member name="T:DHIMath.Numerics.AdvectiveTransport.BoundaryValueType">
            <summary>
            Type of boundary
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.AdvectiveTransport.BoundaryValueType.UserSpecified">
            <summary>
            User specified
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.AdvectiveTransport.BoundaryValueType.FirstValue">
            <summary>
            Use first value inside domain
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.AdvectiveTransport.LeftBoundaryType">
            <summary>
            Boundary type on left boundary
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.AdvectiveTransport.RightBoundaryType">
            <summary>
            Boundary type on right boundary
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.AdvectiveTransport.LeftBoundaryValue">
            <summary>
            Boundary value on left boundary, in case <see cref="P:DHIMath.Numerics.AdvectiveTransport.LeftBoundaryType"/> is <see cref="F:DHIMath.Numerics.AdvectiveTransport.BoundaryValueType.UserSpecified"/>
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.AdvectiveTransport.RightBoundaryValue">
            <summary>
            Boundary value on right boundary, in case <see cref="P:DHIMath.Numerics.AdvectiveTransport.RightBoundaryType"/> is <see cref="F:DHIMath.Numerics.AdvectiveTransport.BoundaryValueType.UserSpecified"/>
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.AdvectiveTransport.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.AdvectiveTransport.UseLimiter">
            <summary>
            Flag specifying whether the ULTIMATE limiter should be applied
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.AdvectiveTransport.CalculateFaceValue(System.Double[],System.Int32,System.Double)">
            <summary>
            Calculate value between grid point i and i+1, where i is the <paramref name="faceIndex"/>.
            </summary>
            <param name="values">Array of grid point values</param>
            <param name="faceIndex">Index of face, first face (index 0) is in between ad grid point 0 and 1</param>
            <param name="c">Courant number. May be negative</param>
        </member>
        <member name="M:DHIMath.Numerics.AdvectiveTransport.CalculateFaceValue(System.Func{System.Int32,System.Double},System.Int32,System.Int32,System.Double)">
            <summary>
            Calculate value between grid point i and i+1, where i is the <paramref name="faceIndex"/>.
            </summary>
            <param name="values">Grid point values</param>
            <param name="valuesLength">Number of values</param>
            <param name="faceIndex">Index of face, first face (index 0) is in between ad grid point 0 and 1</param>
            <param name="c">Courant number. May be negative</param>
        </member>
        <member name="M:DHIMath.Numerics.AdvectiveTransport.CalculateFaceValue(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculate face value between cell C and D, assuming a flow direction from C to D.
            </summary>
            <param name="cl">Courant number between U and C. </param>
            <param name="cr">Courant number between C and D. Must always be positive</param>
            <param name="crr">Courant number between D and DD. </param>
            <param name="vu">Upstream value</param>
            <param name="vc">Center value</param>
            <param name="vd">Downstream value</param>
            <param name="vdd">Further downstream value</param>
        </member>
        <member name="M:DHIMath.Numerics.AdvectiveTransport.CalculateBoundaryFaceValue(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculate face value between right of cell C, by extrapolation.
            </summary>
            <param name="cl">Courant number between U and C. </param>
            <param name="cr">Courant number between C and D. Must always be positive</param>
            <param name="vu">Upstream value</param>
            <param name="vc">Center value</param>
        </member>
        <member name="T:DHIMath.Numerics.BlasTranspose">
            <summary>
            The Transpose enum from BLAS
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.BlasTranspose.Normal">
            <summary> trans='N' </summary>
        </member>
        <member name="F:DHIMath.Numerics.BlasTranspose.Transpose">
            <summary> trans='T' </summary>
        </member>
        <member name="F:DHIMath.Numerics.BlasTranspose.ConjugateTranspose">
            <summary> trans='C' </summary>
        </member>
        <member name="T:DHIMath.Numerics.BlasOrder">
            <summary>
            The Order enum from BLAS
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.BlasOrder.RowMajor">
            <summary> Row-major arrays </summary>
        </member>
        <member name="F:DHIMath.Numerics.BlasOrder.ColMajor">
            <summary> Column-major arrays </summary>
        </member>
        <member name="T:DHIMath.Numerics.BlasUplo">
            <summary>
            The UPLO enum from BLAS
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.BlasUplo.Upper">
            <summary> uplo ='U' </summary>
        </member>
        <member name="F:DHIMath.Numerics.BlasUplo.Lower">
            <summary> uplo ='L' </summary>
        </member>
        <member name="T:DHIMath.Numerics.BlasDiag">
            <summary>
            the DIAG enum from BLAS
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.BlasDiag.NonUnit">
            <summary> diag = 'N' </summary>
        </member>
        <member name="F:DHIMath.Numerics.BlasDiag.Unit">
            <summary> diag = 'U' </summary>
        </member>
        <member name="T:DHIMath.Numerics.BlasSide">
            <summary>
            The Side enum from BLAS
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.BlasSide.Left">
            <summary> side ='L' </summary>
        </member>
        <member name="F:DHIMath.Numerics.BlasSide.Right">
            <summary> side ='R' </summary>
        </member>
        <member name="T:DHIMath.Numerics.VectorFunction">
            <summary>
            Signature of vector function
            </summary>
            <param name="x">The x value into the function</param>
            <param name="f">The f(x) value of the function</param>
        </member>
        <member name="T:DHIMath.Numerics.ScalarFunction">
            <summary>
            Signature of vector function for which zeros is to be found
            </summary>
            <param name="x">The x value into the function</param>
            <returns>The f(x) value of the function</returns>
        </member>
        <member name="T:DHIMath.Numerics.LevenbergMarquardt">
            <summary>
            A class for finding minimum of a least squared problem on the form
            <code>
                f(x) = ||fv(x)||
            </code>
            where x and fv are multi-dimensional, of dimension dimx and dimf respectively.
            <para>
            It is using a Levenberg-Marquardt method or a Newton-Raphson method, 
            according to <see cref="P:DHIMath.Numerics.LevenbergMarquardt.UseLm"/>.
            </para>
            Finding zeros of a nonlinear system of equations, i.e. 
            <code>
            fv(x) = [0]
            </code>
            is a special case of a least square minimization problem, 
            where the minimum is in the zero point and fv(x*) = (0).
            <para>
            If the Jacobian is available, it can be provided, otherwise it
            works by numerically calculating the Jacobian.
            </para>
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt.Jacobian">
            <summary>
            Setter for Jacobian.
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt.X">
            <summary>
            Current value in iteration
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt.Fx">
            <summary>
            Current function value in iteration
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.LevenbergMarquardt.#ctor(System.Int32,System.Int32,DHIMath.Numerics.VectorFunction)">
            <summary>
            Constructor for minimizing/finding zeros of the <paramref name="function"/>
            </summary>
            <param name="dimx">Dimension of parameter vector x</param>
            <param name="dimf">Dimension of vector f function</param>
            <param name="function">Function to minimize/find zero of</param>
        </member>
        <member name="M:DHIMath.Numerics.LevenbergMarquardt.#ctor(System.Int32,System.Int32,DHIMath.Numerics.VectorFunction,DHIMath.Numerics.VectorFunction)">
            <summary>
            Constructor for minimizing/finding zeros of the <paramref name="function"/>
            <para>
            The <paramref name="jacobian"/> must return the jacobian as a vector 
            in column major ordering containing
            the coefficients [df1_dx1, df2_dx1, df1_dx2, df2_dx2].
            </para>
            </summary>
            <param name="dimx">Dimension of parameter vector x</param>
            <param name="dimf">Dimension of vector f function</param>
            <param name="function">Function to find zero of</param>
            <param name="jacobian">Jacobian of function</param>
        </member>
        <member name="M:DHIMath.Numerics.LevenbergMarquardt.Init">
            <summary>
            Setting default values
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt.UseLm">
            <summary>
            Flag whether a LM algorithm should be used. Default true. If set to false
            the Newton-Raphson method will be used. The Newton-Raphson method
            can only be used for finding zeros, not for minimizing in generel, 
            and only for square systems, dimx = dimf.
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt.JacobianRecalc">
            <summary>
            Integer specifying how often the Jacobian is completely recalculated
            by a forward difference approximation.
            <para>
            Every iteration can either performs a rank-1 update of the the Jacobian
            or completely recalculate the Jacobian. This number specifies how often the 
            Jacobian should be completely recalculated.
            </para>
            <para>
            Set to 1 to recalculate in every iteration. Set to zero to never recalculate,
            but only use rank-1 updates.
            </para>
            <para>
            Default is Max(dimx,10). When a Jacobian function is provided, this parameter is not used.
            </para>
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt.MaxIter">
            <summary>
            Maximum number of iterations. Default 100
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt.MaxFunctionEval">
            <summary>
            Maximum number of function evaluations. Default 200
            <para>
            This may not be hit exactly, since one iteration can trigger several 
            function evaluations.
            </para>
            <para>
            In case a Jacobian is not provided, this can be set app. 
            <code>
            MaxIter + dimx*MaxIter/JacobianRecalc, 
            </code>
            since the number of evaluations per iteration is 1 per default and 
            then dimx evaluations per 1/JacobianRecalc iterations
            </para>
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt.TolG">
            <summary>
            Tolerance value for steepest descent direction, used in stopping criteria,
            stopping when:
            <code>
            ||g||_inf &lt;= TolG
            </code>
            <para>
            Default value is 1e-6. It is recommended to set a lower value
            when not using LM (<see cref="P:DHIMath.Numerics.LevenbergMarquardt.UseLm"/>).
            </para>
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt.TolX">
            <summary>
            Tolerance value for change in parameter vector, used in stopping criteria,
            stopping when:
            <code>
            ||dx||_2 &lt;= TolX*(||x||_2 + TolX) 
            </code>
            It combines a relative and absolute stopping criteria
            <para>
            Default value is 1e-9.
            </para>
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt.Tau">
            <summary>
            used in starting value for Marquardt parameter: 
            <code>
            lambda = Tau * max( diag(J(x0)'*J(x0)) )
            </code>
            <para>
            Default value is 1e-3
            </para>
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt.RelativeDx">
            <summary>
            Relative dx used when calculating Jacobian numerically
            by a forward difference approximation.
            <para>
            Default value is 1e-6;
            </para>
            <para>
            The forward difference has the form:
            <code>
              dx = RelativeDx*Math.Abs(x)
              df/dx = (f(x+dx)-f(x)) / dx;
            </code>
            </para>
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt.LambdaScaling">
            <summary>
            Scaling factor in J'*J+lambda*I, replacing
            the diagonal of I by those in <see cref="P:DHIMath.Numerics.LevenbergMarquardt.LambdaScaling"/>
            <para>
            By default they are [1,...,1]. They can not be negative.
            </para>
            </summary>
            <remarks>
            Not used by the Newton-Raphson method
            </remarks>
        </member>
        <member name="F:DHIMath.Numerics.LevenbergMarquardt.LambdaDecreaseMinFac">
            <summary>
            When decreasing lambda, this sets the minimum decrease factor
            <para>
            Default value is 1.0/5.0. Values must be positive
            and in the range ]0,1[.
            </para>
            </summary>
            <remarks>
            Not used by the Newton-Raphson method
            </remarks>
        </member>
        <member name="F:DHIMath.Numerics.LevenbergMarquardt.LambdaUpdateFactor">
            <summary>
            When updating lambda, an optimal update factor is calculated.
            This scales the update factor. Set greater than 1 in order to 
            get a larger lambda, which can increase stability.
            <para>
            Default value is 1. Value must be positive and larger than 1.
            </para>
            </summary>
            <remarks>
            Not used by the Newton-Raphson method
            </remarks>
        </member>
        <member name="F:DHIMath.Numerics.LevenbergMarquardt.LambdaCutRel">
            <summary>
            Relative lambda value deceding when to set lambda to
            zero, in order to try to get quadratic convergence
            close to the solution.
            <para>
            Default value is zero (disabled). Values must be positive
            and reasonable values are in the range [0,1], where a value
            close to zero will change behavior seldomly.
            </para>
            </summary>
            <remarks>
            Not used by the Newton-Raphson method
            </remarks>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt.UseLineSearch">
            <summary>
            Flag specifying whether a line search approach is to be used. Default false.
            </summary>
            <remarks>
            Using a line search approach for finding a better guess will usually
            decrease the number of iterations, but can increase the number of
            function evaluations. 
            <para>
            The line search approach should usually only be used if it also 
            decrease the number of function evaluations required for finding a 
            solution. It can speed up the process when the steepest descent
            is dominent, and step size is very small.
            </para>
            <para>
            When a search direction dx is found, the residual is calculated
            at x0, x1 = x0 + dx, x2 = x0 + 2*dx. Using a second order polynomial
            approximation through these, a guess on a new x with minimum residual
            is calculated.
            </para>
            <para>
            It does generally not improve when <see cref="P:DHIMath.Numerics.LevenbergMarquardt.UseLm"/> is set, 
            though it can improve the convergence for the pure Newton-Raphson method 
            quite significantly.
            </para>
            </remarks>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt.MaxLineSearchIter">
            <summary>
            Maximum number of line search iterations. Default 0.
            </summary>
            <remarks>
            Setting this to more than 0 means that the search direction
            is halfed/doubled recursively until a best possible value
            of the residual is found, though at most <see cref="P:DHIMath.Numerics.LevenbergMarquardt.MaxLineSearchIter"/>
            number of times.
            </remarks>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt.NumIter">
            <summary>
            Hold the actual number of iterations for the last solve.
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt.NumFunctionEval">
            <summary>
            Hold the number of function evaluations for the last solve.
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt.NumJacobianEval">
            <summary>
            Hold the number of Jacobian evaluations for the last solve.
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.LevenbergMarquardt.StoreIterations">
            <summary>
            Flag indicating whether x-array solution values for all iterations should
            be stored. <seealso cref="F:DHIMath.Numerics.LevenbergMarquardt.Iterations"/>.
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.LevenbergMarquardt.Iterations">
            <summary>
            Stores all intermediate x-array solution values for all iterations,
            in case <see cref="F:DHIMath.Numerics.LevenbergMarquardt.StoreIterations"/> is set. If the <see cref="F:DHIMath.Numerics.LevenbergMarquardt.StoreIterations"/>
            is not set, this is null.
            <para>
            The residual is decreasing with each x-array in the list.
            </para>
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.LevenbergMarquardt.NewValueAction">
            <summary>
            If set, the action method is called every time a new x value
            has been computed. If the x-array argument is changed, the method
            must return true, otherwise it should return false.
            <para>
            Changing the x-values can be used to constrain the x values to 
            a certain set of values. 
            </para>
            <para>
            Changing the x-values may significantly
            decrease convergence speed, and it may produce a suboptimal
            solution, even though an optimal solution is nearby.
            </para>
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.LevenbergMarquardt.Solve(System.Double[])">
            <summary>
            Minimize/Solves for zeros, using <paramref name="x"/> as starting point
            and updating the value of <paramref name="x"/> as a result.
            <para>
            The user must check whether the solution is acceptable before using it.
            </para>
            </summary>
            <param name="x">Starting point of the solver</param>
            <returns>
            1: Stopped due to TolG criteria. 
            2: Stopped due to TolX criteria.
            3: Stopped due to maximum number of iterations.
            4: Stopped due to maximum number of function evaluations.
            </returns>
        </member>
        <member name="M:DHIMath.Numerics.LevenbergMarquardt.JacobianTest(System.Int32,System.Int32,System.Double[],DHIMath.Numerics.VectorFunction,DHIMath.Numerics.VectorFunction)">
            <summary>
            Calculates the 2-norm difference between the exact and the numeric jacobian, 
            on an element-wise basis (not matrix norm, but element/vector norm)
            </summary>
            <param name="dimx">Dimension of x vector</param>
            <param name="dimf">Dimension of f vector</param>
            <param name="x">Point to evaluate jacobian at</param>
            <param name="function">Function to test</param>
            <param name="jacobian">Jacobian to test</param>
            <returns></returns>
        </member>
        <member name="M:DHIMath.Numerics.LevenbergMarquardt.JacobianTest(System.Int32,System.Int32,System.Double[],DHIMath.Numerics.VectorFunction,DHIMath.Numerics.VectorFunction,System.Double)">
            <summary>
            Calculates the 2-norm difference between the exact and the numeric jacobian, 
            on an element-wise basis (not matrix norm, but element/vector norm)
            </summary>
            <param name="dimx">Dimension of x vector</param>
            <param name="dimf">Dimension of f vector</param>
            <param name="x">Point to evaluate jacobian at</param>
            <param name="function">Function to test</param>
            <param name="jacobian">Jacobian to test</param>
            <param name="reldx">Relative dx used when approximating the Jacobian numerically</param>
            <returns></returns>
        </member>
        <member name="M:DHIMath.Numerics.LevenbergMarquardt.Evaluate(System.Double[],DHIMath.Numerics.LevenbergMarquardt.FunctionValue)">
            <summary>
            Method for calculating an IFunctionValue, to be used
            by the <see cref="T:DHIMath.Numerics.LineSearch`1"/> class.
            </summary>
        </member>
        <member name="T:DHIMath.Numerics.LevenbergMarquardt.FunctionValue">
            <summary>
            Helper class for storing values related to one x coordinate,
            used with the <see cref="T:DHIMath.Numerics.LineSearch`1"/> class.
            </summary>
        </member>
        <member name="T:DHIMath.Numerics.LevenbergMarquardt2D">
            <summary>
            A class for finding minimum of a least squared problem on the form
            <code>
                f(x,y) = 0.5*||fv(x,y)||
            </code>
            where fv is a 2D function - returns a vector of length 2.
            <para>
            It is using a Levenberg-Marquardt method or a Newton-Raphson method, 
            according to <see cref="P:DHIMath.Numerics.LevenbergMarquardt2D.UseLm"/>.
            </para>
            Finding zeros of a nonlinear system of equations, i.e. 
            <code>
            fv(x,y) = [0,0]
            </code>
            is a special case of a least square minimization problem, 
            where the minimum is in the zero point and fv(x*,y*) = (0,0).
            <para>
            If the Jacobian is available, it can be provided, otherwise it
            works by numerically calculating the Jacobian.
            </para>
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt2D.Jacobian">
            <summary>
            Function to calculate Jacobian of input function.
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.LevenbergMarquardt2D.#ctor(DHIMath.Numerics.VectorFunction)">
            <summary>
            Constructor for minimizing/finding zeros of the <paramref name="function"/>
            </summary>
            <param name="function">Function to minimize/find zero of</param>
        </member>
        <member name="M:DHIMath.Numerics.LevenbergMarquardt2D.#ctor(DHIMath.Numerics.VectorFunction,DHIMath.Numerics.VectorFunction)">
            <summary>
            Constructor for minimizing/finding zeros of the <paramref name="function"/>
            <para>
            The <paramref name="jacobian"/> must return a vector containing
            the coefficients [df1_dx1, df1_dx2, df2_dx1, df2_dx2].
            </para>
            </summary>
            <param name="function">Function to find zero of</param>
            <param name="jacobian">Jacobian of function</param>
        </member>
        <member name="M:DHIMath.Numerics.LevenbergMarquardt2D.Init">
            <summary>
            Setting default values
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt2D.UseLm">
            <summary>
            Flag whether a LM algorithm should be used. Default true. If set to false
            the Newton-Raphson method will be used. The Newton-Raphson method
            can only be used for finding zeros, not for minimizing.
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt2D.JacobianRecalc">
            <summary>
            Integer specifying how often the Jacobian is completely recalculated
            by a forward difference approximation.
            <para>
            Every iteration can either performs a rank-1 update of the the Jacobian
            or completely recalculate the Jacobian. This number specifies how often the 
            Jacobian should be completely recalculated.
            </para>
            <para>
            Set to 1 to recalculate in every iteration. Set to zero to never recalculate,
            but only use rank-1 updates.
            </para>
            <para>
            Default is 10. When a Jacobian function is provided, this parameter is not used.
            </para>
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt2D.MaxIter">
            <summary>
            Maximum number of iterations. Default 100
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt2D.MaxFunctionEval">
            <summary>
            Maximum number of function evaluations. Default 200
            <para>
            This may not be hit exactly, since one iteration can trigger several 
            function evaluations.
            </para>
            <para>
            In case a Jacobian is not provided, this can be set app. 
            <code>
            MaxIter + 2*MaxIter/JacobianRecalc, 
            </code>
            since the number of evaluations per iteration is 1 per default and 
            then 2 evaluations per 1/JacobianRecalc iterations
            </para>
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt2D.TolG">
            <summary>
            Tolerance value for steepest descent direction, used in stopping criteria,
            stopping when:
            <code>
            ||g||_inf &lt;= TolG
            </code>
            <para>
            Default value is 1e-6. It is recommended to set a lower value
            when not using LM (<see cref="P:DHIMath.Numerics.LevenbergMarquardt2D.UseLm"/>).
            </para>
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt2D.TolX">
            <summary>
            Tolerance value for change in parameter vector, used in stopping criteria,
            stopping when:
            <code>
            ||dx||_2 &lt;= TolX*(||x||_2 + TolX) 
            </code>
            It combines a relative and absolute stopping criteria
            <para>
            Default value is 1e-9.
            </para>
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt2D.Tau">
            <summary>
            used in starting value for Marquardt parameter: 
            <code>
            lambda = Tau * max( diag(J(x0)'*J(x0)) )
            </code>
            <para>
            Default value is 1e-3
            </para>
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt2D.RelativeDx">
            <summary>
            Relative dx used when calculating Jacobian numerically
            by a forward difference approximation.
            <para>
            Default value is 1e-6;
            </para>
            <para>
            The forward difference has the form:
            <code>
              dx = RelativeDx*Math.Abs(x)
              df/dx = (f(x+dx)-f(x)) / dx;
            </code>
            </para>
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt2D.LambdaScaling">
            <summary>
            Scaling factor in J'*J+lambda*I, replacing
            the diagonal of I by those in <see cref="P:DHIMath.Numerics.LevenbergMarquardt2D.LambdaScaling"/>
            <para>
            By default they are [1,1]. They can not be negative.
            </para>
            </summary>
            <remarks>
            Not used by the Newton-Raphson method
            </remarks>
        </member>
        <member name="F:DHIMath.Numerics.LevenbergMarquardt2D.LambdaDecreaseMinFac">
            <summary>
            When decreasing lambda, this sets the minimum decrease factor
            <para>
            Default value is 1.0/5.0. Values must be positive
            and in the range [0,1].
            </para>
            </summary>
            <remarks>
            Not used by the Newton-Raphson method
            </remarks>
        </member>
        <member name="F:DHIMath.Numerics.LevenbergMarquardt2D.LambdaUpdateFactor">
            <summary>
            When updating lambda, an optimal update factor is calculated.
            This scales the update factor. Set greater than 1 in order to 
            get a larger lambda, which can increase stability.
            <para>
            Default value is 1. Value must be positive and larger than 1.
            </para>
            </summary>
            <remarks>
            Not used by the Newton-Raphson method
            </remarks>
        </member>
        <member name="F:DHIMath.Numerics.LevenbergMarquardt2D.LambdaCutRel">
            <summary>
            Relative lambda value deceding when to set lambda to
            zero, in order to try to get quadratic convergence
            close to the solution.
            <para>
            Default value is zero (disabled). Values must be positive
            and reasonable values are in the range [0,1], where a value
            close to zero will change behavior seldomly.
            </para>
            </summary>
            <remarks>
            Not used by the Newton-Raphson method
            </remarks>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt2D.UseLineSearch">
            <summary>
            Flag specifying whether a line search approach is to be used. Default false.
            </summary>
            <remarks>
            Using a line search approach for finding a better guess will usually
            decrease the number of iterations, but can increase the number of
            function evaluations. 
            <para>
            The line search approach should usually only be used if it also 
            decrease the number of function evaluations required for finding a 
            solution. It can speed up the process when the steepest descent
            is dominent, and step size is very small.
            </para>
            <para>
            When a search direction dx is found, the residual is calculated
            at x0, x1 = x0 + dx, x2 = x0 + 2*dx. Using a second order polynomial
            approximation through these, a guess on a new x with minimum residual
            is calculated.
            </para>
            <para>
            It does generally not improve when <see cref="P:DHIMath.Numerics.LevenbergMarquardt2D.UseLm"/> is set, 
            though it can improve the convergence for the pure Newton-Raphson method 
            quite significantly.
            </para>
            </remarks>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt2D.MaxLineSearchIter">
            <summary>
            Maximum number of line search iterations. Default 0.
            </summary>
            <remarks>
            Setting this to more than 0 means that the search direction
            is halfed/doubled recursively until a best possible value
            of the residual is found, though at most <see cref="P:DHIMath.Numerics.LevenbergMarquardt2D.MaxLineSearchIter"/>
            number of times.
            </remarks>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt2D.NumIter">
            <summary>
            Hold the actual number of iterations for the last solve.
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt2D.NumFunctionEval">
            <summary>
            Hold the number of function evaluations for the last solve.
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LevenbergMarquardt2D.NumJacobianEval">
            <summary>
            Hold the number of Jacobian evaluations for the last solve.
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.LevenbergMarquardt2D.StoreIterations">
            <summary>
            Flag indicating whether iteration vaues should be stored in <see cref="F:DHIMath.Numerics.LevenbergMarquardt2D.Iterations"/>
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.LevenbergMarquardt2D.Iterations">
            <summary>
            Stored iteration values. Only used when <see cref="F:DHIMath.Numerics.LevenbergMarquardt2D.StoreIterations"/> is set.
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.LevenbergMarquardt2D.Solve(System.Double[])">
            <summary>
            Minimize/Solves for zeros, using <paramref name="x"/> as starting point
            and updating the value of <paramref name="x"/> as a result.
            <para>
            The user must check whether the solution is acceptable before using it.
            </para>
            </summary>
            <param name="x">Starting point of the solver</param>
            <returns>
            1: Stopped due to TolG criteria. 
            2: Stopped due to TolX criteria.
            3: Stopped due to maximum number of iterations.
            4: Stopped due to maximum number of function evaluations.
            </returns>
        </member>
        <member name="M:DHIMath.Numerics.LevenbergMarquardt2D.CalcJacobian(System.Double[],System.Double[],System.Double[],System.Double)">
            <summary>
            Calculates numerically the Jacobian
            </summary>
            <param name="x">Point at which to calculate Jacobian</param>
            <param name="fx">Function value at x, f(x)</param>
            <param name="dfdx">Jacobian in column major format</param>
            <param name="reldx">Relative dx used in numerical gradient calculation</param>
        </member>
        <member name="M:DHIMath.Numerics.LevenbergMarquardt2D.CalcJacobian(DHIMath.Numerics.VectorFunction,System.Double[],System.Double[],System.Double)">
            <summary>
            Calculates numerically the Jacobian
            </summary>
            <param name="function">Function to calculate Jacobian for</param>
            <param name="x">Point at which to calculate Jacobian</param>
            <param name="dfdx">Jacobian in vector form, [a00, a01, a10, a11]</param>
            <param name="reldx">Relative change in x values</param>
        </member>
        <member name="M:DHIMath.Numerics.LevenbergMarquardt2D.JacobianTest(System.Double[],DHIMath.Numerics.VectorFunction,DHIMath.Numerics.VectorFunction)">
            <summary>
            Calculates the 2-norm difference between the exact and the numeric jacobian, 
            on an element-wise basis (not matrix norm, but element/vector norm)
            </summary>
            <param name="x">Point to evaluate jacobian at</param>
            <param name="function">Function to test</param>
            <param name="jacobian">Jacobian to test</param>
            <returns></returns>
        </member>
        <member name="M:DHIMath.Numerics.LevenbergMarquardt2D.JacobianTest(System.Double[],DHIMath.Numerics.VectorFunction,DHIMath.Numerics.VectorFunction,System.Double)">
            <summary>
            Calculates the 2-norm difference between the exact and the numeric jacobian, 
            on an element-wise basis (not matrix norm, but element/vector norm)
            </summary>
            <param name="x">Point to evaluate jacobian at</param>
            <param name="function">Function to test</param>
            <param name="jacobian">Jacobian to test</param>
            <param name="reldx">Relative dx used when approximating the Jacobian numerically</param>
            <returns></returns>
        </member>
        <member name="M:DHIMath.Numerics.LevenbergMarquardt2D.Evaluate(System.Double[],DHIMath.Numerics.LevenbergMarquardt2D.FunctionValue)">
            <summary>
            Method for calculating an IFunctionValue, to be used
            by the <see cref="T:DHIMath.Numerics.LineSearch`1"/> class.
            </summary>
        </member>
        <member name="T:DHIMath.Numerics.LevenbergMarquardt2D.FunctionValue">
            <summary>
            Helper class for storing values related to one x coordinate,
            used with the <see cref="T:DHIMath.Numerics.LineSearch`1"/> class.
            </summary>
        </member>
        <member name="T:DHIMath.Numerics.IFunctionValue">
            <summary>
            An interface for a function value, which may contain more than just
            the actual double value.
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.IFunctionValue.Value">
            <summary>
            Value of function
            </summary>
        </member>
        <member name="T:DHIMath.Numerics.LineSearch`1">
            <summary>
            A class for performing a (soft) line-search for a function with multidimensional input
            <code>
            argmin_{a > 0} { f(x+a*dx) }
            </code>
            <para>
            It tries to find an alpha such that
            <code>
             x1 = x0 +   alpha*dx
             x2 = x0 + 2*alpha*dx
            </code>
            and f(x1) is smaller than f(x0) and f(x2). 
            </para>
            <para>
            A second order polynomial through (0,f(x0)), (1,f(x1)) and (2,f(x2))
            is created, and the alpha value corresponding to the minimum function
            value is returned.
            </para>
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.LineSearch`1.#ctor(System.Action{System.Double[],`0})">
            <summary>
            Constructor with function argument.
            </summary>
            <param name="function"></param>
        </member>
        <member name="F:DHIMath.Numerics.LineSearch`1.MaxLineSearchIter">
            <summary>
            Maximum number of line search iterations. Default 10.
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.LineSearch`1.StepLimited">
            <summary>
            Limits the dx search step. Set to false to also allow -dx and
            a very large multipla of dx.
            <para>
            When true, the largest search step length accepted is 
            <code>
            2 * 2^MaxLineSearchIter * initial search step length
            </code>
            </para>
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LineSearch`1.NumFunctionEval">
            <summary>
            Hold the number of function evaluations for the last search.
            </summary>
        </member>
        <member name="P:DHIMath.Numerics.LineSearch`1.Minimum">
            <summary>
            Hold the minimum function value for the last search.
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.LineSearch`1.Reset">
            <summary>
            Reset line search procedure
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.LineSearch`1.Search(System.Double[],System.Double[],System.Double)">
            <summary>
            Search in direction dx, from starting point x0.
            </summary>
            <param name="x0">Staring point of search</param>
            <param name="dx">Direction to search in</param>
            <param name="alpha">Factor of dx for first search</param>
            <returns>Alpha value of mimimum, 0 if not found</returns>
        </member>
        <member name="M:DHIMath.Numerics.LineSearch`1.Search(System.Double[],System.Double[],System.Double,System.Double[],`0,`0)">
            <summary>
            Search in direction dx, from starting point x0 towards point x1.
            <para>
            This method can utilize if some function values have already been computed.
            </para>
            </summary>
            <param name="x0">Staring point of search</param>
            <param name="dx">Direction to search in</param>
            <param name="alpha">Factor of dx for first search</param>
            <param name="x1">Precalculated x1 = x0 + alpha*dx</param>
            <param name="fx0">Precalculated f(x0)</param>
            <param name="fx1">Precalculated f(x1)</param>
            <returns>Alpha value of mimimum, 0 if not found</returns>
        </member>
        <member name="T:DHIMath.Numerics.BLAS">
            <summary>
            Class containing access to double precision mkl routines, containing
            BLAS, LAPACK and more.
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.BLAS.dgemv(DHIMath.Numerics.BlasTranspose,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Double[],System.Int32,System.Double,System.Double[],System.Int32)">
            <summary>
            Performing matrix-vector product on the form 
            <code>
            y = alpha*op(A)*x + beta*y
            </code>
            where op(A) is of size (m x n) (m rows, n columns), alpha and beta are scalars, x and y are vectors.
            <para>
            If incx and incy is different from 1, the size of x and y must be at least:
            <code>
            (1+(n-1)*abs(incx/y)) or (1+(m - 1)*abs(incx/y))
            </code>
            instead of n and m respectively.
            </para>
            </summary>
            <param name="trans">'N'/'n' for A*x, 'T'/'t' for A'*x, 'C'/'c' for conjg(A')*x</param>
            <param name="m">Number of rows in A</param>
            <param name="n">Number of columns in A</param>
            <param name="alpha">Alpha scalar</param>
            <param name="a">Matrix A in column major order (first column first)</param>
            <param name="lda">Leading dimension of a, usually m, but can be larger.</param>
            <param name="x">Array of size n for trans 'N', otherwise of size m</param>
            <param name="incx">Increment in vector x, usually 1, but can be larger.</param>
            <param name="beta">Beta scalar. When beta = 0, y need not be initialized</param>
            <param name="y">Array of size m for trans='N', otherwise of size n</param>
            <param name="incy">Increment in vector y, usually 1, but can be larger.</param>
        </member>
        <member name="M:DHIMath.Numerics.BLAS.dgemm(DHIMath.Numerics.BlasTranspose,DHIMath.Numerics.BlasTranspose,System.Int32,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Double[],System.Int32,System.Double,System.Double[],System.Int32)">
            <summary>
            Performs : C = alpha*op(A)*op(B) + beta*C,
            </summary>
            <param name="transa">Specifies the operation on A</param>
            <param name="transb">Specifies the operation on B</param>
            <param name="m">Number of rows in C and op(A)</param>
            <param name="n">Number of cols in C and op(B)</param>
            <param name="k">Number of cols in op(A) and rows in op(B)</param>
            <param name="alpha">Alpha scalar</param>
            <param name="a">Matrix A in column major order</param>
            <param name="lda">Leading dimension of A, usually m, but can be larger</param>
            <param name="b">Matrix B in column major order</param>
            <param name="ldb">Leading dimension of B, usually k, but can be larger</param>
            <param name="beta">Beta scalar. When beta = 0, y need not be initialized</param>
            <param name="c">Matrix C in column major order</param>
            <param name="ldc">Leading dimension of C, usually m, but can be larger</param>
        </member>
        <member name="M:DHIMath.Numerics.BLAS.dgesv(System.Int32,System.Int32,System.Double[],System.Int32,System.Int32[],System.Double[],System.Int32)">
            <summary>
            Computes the solution to the system of linear equations with a square matrix A and multiple
            right-hand sides. It uses an LU decomposition with partial pivoting and row interchanges, solving
            <code>
            (P*L*U)*X = B
            </code>
            </summary>
            <param name="n">The number of linear equations, the size of A</param>
            <param name="nrhs">Number of right hand sides</param>
            <param name="a">The matrix A in column major format, on return the LU factors</param>
            <param name="lda">Leading dimension of A, usually n but can be larger</param>
            <param name="ipiv">The pivot indices that define the permutation matrix P</param>
            <param name="b">The right hand sides, n x nrhs</param>
            <param name="ldb">Leading dimension of B, usually n but can be larger</param>
            <returns>
            0 on success.
            i, when U(i, i) (computed in double precision for mixed precision
            subroutines) is exactly zero. The factorization has been completed, but
            the factor U is exactly singular, so the solution could not be computed
            </returns>
        </member>
        <member name="M:DHIMath.Numerics.BLAS.dpotrf(DHIMath.Numerics.BlasUplo,System.Int32,System.Double[],System.Int32)">
            <summary>
            Computes the Cholesky factorization of a real symmetric positive-definite matrix.
            Use <see cref="M:DHIMath.Numerics.BLAS.dpotrs(DHIMath.Numerics.BlasUplo,System.Int32,System.Int32,System.Double[],System.Int32,System.Double[],System.Int32)"/> for solving A*x=B using the factorisation.
            </summary>
            <param name="uplo">'U': upper triangle of A is stored, 'L' lower triangle of A is stored</param>
            <param name="n">Size of A</param>
            <param name="a">Matrix A in column major order</param>
            <param name="lda">Leading dimension of A, usually n, but can be larger</param>
            <returns>0 on success, i when the leading minor of order i is not positive definite, and the factorization could not be completed</returns>
        </member>
        <member name="M:DHIMath.Numerics.BLAS.dpotrs(DHIMath.Numerics.BlasUplo,System.Int32,System.Int32,System.Double[],System.Int32,System.Double[],System.Int32)">
            <summary>
            Solves a system of linear equations with a Cholesky-factored real symmetric positive-definite matrix.
            Use <see cref="M:DHIMath.Numerics.BLAS.dpotrf(DHIMath.Numerics.BlasUplo,System.Int32,System.Double[],System.Int32)"/> for creating the factorisation.
            </summary>
            <param name="uplo">'U': upper triangle of A is stored, 'L' lower triangle of A is stored</param>
            <param name="n">Size of A</param>
            <param name="nrhs">Number of right hand sides</param>
            <param name="a">Matrix A in column major order</param>
            <param name="lda">Leading dimension of A, usually n, but can be larger</param>
            <param name="b">The right hand sides, overwritten by the solutions</param>
            <param name="ldb">Leading dimension of B</param>
        </member>
        <member name="M:DHIMath.Numerics.BLAS.dpotri(DHIMath.Numerics.BlasUplo,System.Int32,System.Double[],System.Int32)">
            <summary>
            Computes the inverse of a real symmetric positive-definite matrix from
            the Cholesky-factored matrix.
            <para>
            Before calling this routine, call <see cref="M:DHIMath.Numerics.BLAS.dpotrf(DHIMath.Numerics.BlasUplo,System.Int32,System.Double[],System.Int32)"/> to factorize
            </para>
            </summary>
            <param name="uplo">'U': upper triangle of A is stored, 'L' lower triangle of A is stored</param>
            <param name="n">Size of A</param>
            <param name="a">Cholesky-factored matrix A in column major order, inverse of A on return</param>
            <param name="lda">Leading dimension of A, usually n, but can be larger</param>
            <returns>
            0 on success. 
            i when the the i-th diagonal element of the Cholesky factor (and
            therefore the factor itself) is zero, and the inversion could not be completed
            </returns>
        </member>
        <member name="T:DHIMath.Numerics.BLASDllAccess">
            <summary>
            Class containing dll-import statements for mkl routines
            </summary>
        </member>
        <member name="T:DHIMath.Numerics.SteepestDescent">
            <summary>
            Generalized Reduced Gradient method
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.SteepestDescent.#ctor(DHIMath.Numerics.ScalarFunction)">
            <summary>
            Constructor
            </summary>
            <param name="function">Function to minimize</param>
        </member>
        <member name="F:DHIMath.Numerics.SteepestDescent.MaxIter">
            <summary>
            Maximum number of iterations
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.SteepestDescent.MaxFunctionEval">
            <summary>
            Maximum number of function evaluations
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.SteepestDescent.TolX">
            <summary>
            Stop criteria. When the step-length/change in x (2-norm) is smaller than <see cref="F:DHIMath.Numerics.SteepestDescent.TolX"/>, the iteration stops.
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.SteepestDescent.TolG">
            <summary>
            Stop criteria. When the steepest descent vector (2-norm) is smaller than <see cref="F:DHIMath.Numerics.SteepestDescent.TolG"/>, the iteration stops.
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.SteepestDescent.RelativeDx">
            <summary>
            The relative change in x to use when calculating gradient numerically.
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.SteepestDescent.DirectionSmoothing">
            <summary>
            Smoothing of search direction, such that the previous direction
            is used partly in the current search.
            </summary>
            <remarks>
            The Steepest Descent method can have a tendency to oscillate forth and back
            between each side of a "valley", and hence converging very slowly. The direction
            smoothing tries to minimize these oscillations by forcing a more smooth search direction, 
            and will often make the SD method converge faster.
            </remarks>
        </member>
        <member name="F:DHIMath.Numerics.SteepestDescent.StoreIterations">
            <summary>
            Flag indicating whether iteration vaues should be stored in <see cref="F:DHIMath.Numerics.SteepestDescent.Iterations"/>
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.SteepestDescent.Iterations">
            <summary>
            Stored iteration values. Only used when <see cref="F:DHIMath.Numerics.SteepestDescent.StoreIterations"/> is set.
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.SteepestDescent.NumIter">
            <summary>
            Hold the actual number of iterations for the last solve.
            </summary>
        </member>
        <member name="F:DHIMath.Numerics.SteepestDescent.NumFunctionEval">
            <summary>
            Hold the number of function evaluations for the last solve.
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.SteepestDescent.Reset">
            <summary>
            Reset and prepare for new solve
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.SteepestDescent.Search(System.Double[])">
            <summary>
            Search for minimum
            </summary>
            <param name="x">Start guess of solution vector</param>
            <returns>Integer indicating search success</returns>
        </member>
        <member name="M:DHIMath.Numerics.SteepestDescent.Search(System.Double[],System.Double[])">
            <summary>
            Search for minimum
            </summary>
            <param name="x">Start guess of solution vector</param>
            <param name="dfdx">Initial gradient at <paramref name="x"/></param>
            <returns>Integer indicating search success</returns>
        </member>
        <member name="T:DHIMath.Numerics.Util">
            <summary>
            Utility class with various mathematical helper functions.
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.Util.Norm2(System.Double[],System.Double[])">
            <summary>
            Calculates the 2-norm, |x2-x1|
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.Util.Norm2Sq(System.Double[],System.Double[])">
            <summary>
            Calculates the 2-norm squared, |x2-x1|^2
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.Util.Norm2(System.Double[])">
            <summary>
            Calculates the 2-norm, |x|
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.Util.Norm2Sq(System.Double[])">
            <summary>
            Calculates the 2-norm squared, |x|^2
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.Util.NormInf(System.Double[])">
            <summary>
            Calculates the inf-norm squared, |x|^inf
            </summary>
        </member>
        <member name="M:DHIMath.Numerics.Util.CalcJacobian(System.Int32,DHIMath.Numerics.VectorFunction,System.Double[],System.Double[],System.Double)">
            <summary>
            Calculates numerically the Jacobian
            </summary>
            <param name="dimf">Dimension of f vector</param>
            <param name="function">Function to calculate the Jacobian of</param>
            <param name="x">Point at which to calculate Jacobian</param>
            <param name="dfdx">Jacobian in column major format, must be of size dimx*dimf</param>
            <param name="reldx">Relative dx used in numerical gradient calculation</param>
        </member>
        <member name="M:DHIMath.Numerics.Util.CalcJacobian(DHIMath.Numerics.VectorFunction,System.Double[],System.Double[],System.Double[],System.Double)">
            <summary>
            Calculates numerically the Jacobian
            <para>
            Use if fx is already calculated.
            </para>
            </summary>
            <param name="function">Function to calculate the Jacobian of</param>
            <param name="x">Point at which to calculate Jacobian</param>
            <param name="fx">Function value at x, f(x)</param>
            <param name="dfdx">Jacobian in column major format, must be of size dimx*dimf</param>
            <param name="reldx">Relative dx used in numerical gradient calculation</param>
        </member>
        <member name="M:DHIMath.Numerics.Util.CalcGradient(DHIMath.Numerics.ScalarFunction,System.Double[],System.Double)">
            <summary>
            Calculates numerically the gradient
            <para>
            Use if fx is already calculated.
            </para>
            </summary>
            <param name="function">Function to calculate the Jacobian of</param>
            <param name="x">Point at which to calculate Jacobian</param>
            <param name="reldx">Relative dx used in numerical gradient calculation</param>
            <return>Jacobian in column major format, must be of size dimx*dimf</return>
        </member>
        <member name="M:DHIMath.Numerics.Util.CalcGradient(DHIMath.Numerics.ScalarFunction,System.Double[],System.Double,System.Double[],System.Double)">
            <summary>
            Calculates numerically the gradient
            <para>
            Use if fx is already calculated.
            </para>
            </summary>
            <param name="function">Function to calculate the Jacobian of</param>
            <param name="x">Point at which to calculate Jacobian</param>
            <param name="fx">Function value at x, f(x)</param>
            <param name="dfdx">Jacobian in column major format, must be of size dimx*dimf</param>
            <param name="reldx">Relative dx used in numerical gradient calculation</param>
        </member>
        <member name="M:DHIMath.Numerics.Util.Swap``1(``0@,``0@)">
            <summary>
            Swapping two elements.
            </summary>
            <typeparam name="T">Type of element to swap</typeparam>
            <param name="e1">first element</param>
            <param name="e2">second element</param>
        </member>
    </members>
</doc>
