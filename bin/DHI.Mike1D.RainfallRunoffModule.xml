<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DHI.Mike1D.RainfallRunoffModule</name>
    </assembly>
    <members>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.Autocal">
            <summary>
            Data for autocalibration of catchment parameters.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.Autocal.Parameter">
            <summary>
            Autocalibration Parameter
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Autocal.Parameter.#ctor(System.Boolean,System.Double,System.Double)">
            <summary>
            Create new parameter
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Autocal.Parameter.Enabled">
            <summary>
            Is included in autocalibration
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Autocal.Parameter.UpperBound">
            <summary>
            Upper Bound
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Autocal.Parameter.LowerBound">
            <summary>
            Lower Bound
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.Autocal.ObjectiveFunction">
            <summary>
            Objective Function
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Autocal.ObjectiveFunction.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Create new objective function
            </summary>
            <param name="owbl">Overall water balance</param>
            <param name="ormse">Overall RMSE</param>
            <param name="peakFlow">PeakFlow RMSE</param>
            <param name="lowFlow">Lof flow RMSE</param>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Autocal.ObjectiveFunction.OverallWaterBalance">
            <summary>
            Overall Water Balance
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Autocal.ObjectiveFunction.OverallRMSE">
            <summary>
            Overall RMSE
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Autocal.ObjectiveFunction.PeakFlowRMSE">
            <summary>
            Peak Flow RMSE
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Autocal.ObjectiveFunction.LowFlowRMSE">
            <summary>
            Low Flow RMSE
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.Enabled">
            <summary>
            Boolean specifying whether auto calibration is 
            enabled for this catchment.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.RR11FileName">
            <summary>
            RR11 File Name
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.SurfaceStorageMax">
            <summary>
            Maximum Water Content in the surface storage
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.RootZoneStorageMax">
            <summary>
            Maximum water content in the lower zone storage
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.OverLandflowRunoffCoeff">
            <summary>
            Overland flow runoff coefficient
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.TimeConstantInterFlow">
            <summary>
            Time constant for interflow from the surface storage
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.TimeConstantFirstReservoir">
            <summary>
            CK1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.ThresholdOverlandFlow">
            <summary>
            Threshold value for overland flow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.ThresholdInterFlow">
            <summary>
            Threshold value for interflow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.ThresholdGroundWaterRecharge">
            <summary>
            Threshold value for recharge
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.TimeConstantBaseFlow">
            <summary>
            Baseflow time constant
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.TimeConstantSecondReservoir">
            <summary>
            CK2 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.LowerGwRechargeCoef">
            <summary>
            CQLOW 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.TimeConstantLowerBaseFlow">
            <summary>
            CKLOW
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.ObjectiveFunctions">
            <summary>
            Objective Functions Included
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.MaxNumEvaluation">
            <summary>
            Maximum number of evaluations
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.InitialExcludedTime">
            <summary>
            Initial Number of Days Excluded
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.PeakFlowLimit">
            <summary>
            Peak Flow >
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Autocal.LowFlowLimit">
            <summary>
            LowFlow
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentCalibrationPlot">
            <summary>
            Class that write a time series file and a plc file with
            calibration data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCalibrationPlot.CreateObservedYearlyRunoff">
            <summary>
            Create observed yearly runoff in catchment for statistics
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCalibrationPlot.Finish">
            <summary>
            Finalize, close output files.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCalibrationPlot.CalculateR2(System.Double[],System.Double[])">
            <summary>
            Calculate r2
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentCalibrationPlot.Dfs0Writer.Count">
            <summary>
            How many time steps to write. Default -1: use entire array of observed and simulated values.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCalibrationPlot.Dfs0Writer.WriteItemTimesteNext(DHI.Generic.MikeZero.DFS.IDfsFile,System.Double,System.Double)">
            <summary>
            Writer method, reusing a float container when writing
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCalibrationPlot.Dfs0WriterOnline.Finish">
            <summary>
            Finish, close output files.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCalibrationPlot.Dfs0WriterOnline.WriteItemTimesteNext(System.Double,System.Double)">
            <summary>
            Writer method, reusing a float container when writing
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ObservedData">
            <summary>
            Class containing observed discharge data for the catchment
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.ObservedData.CalibrationPlot">
            <summary>
            Flag indicating whether calibration plots should be created.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.ObservedData.FilePath">
            <summary>
            Path to file containing observed/reference data
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.ObservedData.ItemNumber">
            <summary>
            Item number/id of observed data
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentData">
            <summary>
             A overall data interface for cathcment data, containing 
             data properties that are common for all catchments.
             <para>
             This interface contains data and parameters for setting up a catchment model, and represents
             as such only setup data. Computational variables and methods are not included in this interface.
             It can be used to explore data and parameters required when setting up the catchment model.
             </para>
            </summary>
             <remarks>
             This does deliberately not inherit from <see cref="T:DHI.Mike1D.RainfallRunoffModule.ICatchment"/>, in order to distinguish 
             between data for setting up the catchment and functionality required for a general 
             catchment to be included in the simulation. However, any catchment implementing this 
             interface  will also implement the <see cref="T:DHI.Mike1D.RainfallRunoffModule.ICatchment"/> interface. Some properties
             in this interface will be present also in the <see cref="T:DHI.Mike1D.RainfallRunoffModule.ICatchment"/> interface.
             </remarks>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentData.CatchmentName">
            <summary>
             Catchment name
             <para>
             The name is not unique, there may be several catchment models for one catchment, 
             however all catchments with the same name should/must share the same catchment geometry.
             </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentData.ModelId">
            <summary>
             Catchment model ID. Unique id. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentData.Name">
            <summary>
             Catchment model ID. Unique id. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentData.Area">
            <summary>
             Total area of catchment
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentData.AdditionalFlow">
            <summary>
            Additional constant flow added to the total runoff
            Unit: [m3/s]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentData.Persons">
            <summary>
            Number of person equivalent in the catchment,
            used with catchment discharge source boundary
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentData.ObservedData">
            <summary>
            Observed data. Used for creating calibration plots and for auto-calibration reference data.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentData.CatchmentGeometry">
            <summary>
            Geometry of the catchment. This is a list of coordinates defining a closed polygon as
            the extent of the catchment.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentData.CenterPoint">
            <summary>
             The central point of the catchment. Used for e.g. finding the
             rain time series closest to this catchment.
            </summary>    
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentData.TimeStep">
            <summary>
            Time step used during the simulation by the catchment model
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentData.UseHotStartFile">
            <summary>
            Flag telling if initial conditions is taken from a hotstart file
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentData.StartTime">
            <summary>
             Start time of catchment simulation - the earliest time for which the catchment can return data
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentData.EndTime">
            <summary>
             End time of catchment simulation - the latest time for which the catchment can return data
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentData.StormWaterLIDs">
            <summary>
            StormWater LIDs connected to catchment
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.Catchment">
            <summary>
             Abstract catchment class. 
            </summary>
        </member>
        <member name="E:DHI.Mike1D.RainfallRunoffModule.Catchment.PostTimeStepEvent">
            <summary>
            Event that is triggered every time the catchment has finished
            a new time step
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.CatchmentName">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.ModelId">
            <inheritdoc />
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._area">
            <summary>
             Total area of catchment.
             Type: Catchment area.
             Unit: [m2].
             Default: 1e8 (100 km2).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.Area">
            <summary>
             Total area of catchment
             Type: Catchment area
             Unit: [m2]
             Default: 1e8 (100 km2)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.CenterPoint">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.CatchmentGeometry">
            <inheritdoc/>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._additionalFlow">
            <summary>
            Additional constant flow added to the total runoff
            Unit: [m3/s]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._additionalFlowOld">
            <summary>
            Additional constant flow at start of time step
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.AdditionalFlow">
            <summary>
            Additional constant flow added to the total runoff
            Unit: [m3/s]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.Persons">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.ObservedData">
            <inheritdoc/>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._timeStep">
            <summary>
            Time step used in the simulation, or initial time step if the time step can change.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.TimeStep">
            <summary>
            Time step used by the catchment model
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._useHotStartFile">
            <summary>
            Flag telling if initial conditions is taken from a hotstart file
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.UseHotStartFile">
            <summary>
            Flag telling if initial conditions is taken from a hotstart file
            Default: false
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._stormwaterLIDs">
            <summary>
            List of Lids
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.StormWaterLIDs">
            <summary>
            List of Lids
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.ComponentSources">
            <summary>
            A Component Source provides info on concentration of various 
            components.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._startTime">
            <summary>
             Protected start time of catchment data - the earliest time for which the catchment can return data
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.StartTime">
            <summary>
             Start time of catchment data - the earliest time for which the catchment can return data
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._endTime">
            <summary>
             Protected end time of catchment data - the latest time for which the catchment can return data
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.EndTime">
            <summary>
             End time of catchment data - the latest time for which the catchment can return data
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._effectiveTimeStep">
            <summary>
            Time step used in the simulation, it may change. It is set in Prepare
            to _timeStep, and can be updated by individual catchment models when required,
            i.e. it may differ from _timeStep.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._timeOld">
            <summary>
            Variable holding information on the latest calulated time
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._timeNew">
            <summary>
            Variable holding information on the latest calulated time
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._timeOfLastUpdate">
            <summary>
            Last time the state of this catchment was updated (<see cref="M:DHI.Mike1D.RainfallRunoffModule.Catchment.Update(System.DateTime)"/> was called)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._timeUpdateFraction">
            <summary>
            Fraction of time between prev time and current time for the last
            call to <see cref="M:DHI.Mike1D.RainfallRunoffModule.Catchment.Update(System.DateTime)"/>. This should be updated everytime
            <see cref="F:DHI.Mike1D.RainfallRunoffModule.Catchment._timeOfLastUpdate"/> is updated.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.MinTime">
            <summary>
            Minimum time the catchment should be able to provide values. The catchment will cache
            or recalculate values from MinTime to EndTime. MinTime must be updated ("dragged behind" 
            time of calculation) from the caller to allow the catchment to discard cached values.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._minTime">
            <summary>
            Proteced MinTime
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._offers">
            <summary>
            List of datatypes offered in GetValue
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._tsBuffer">
            <summary>
            TSBuffer to use when accessing time series objects
            Set in Catchments.Add(). If not set, then the inheritors must 
            create a TSBuffer before using it.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._boundarySourceRainfall">
            <summary>
            Rainfall boundary source
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._boundarySourceEvaporation">
            <summary>
            Evaporation boundary source
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._boundarySourceTemperature">
            <summary>
            Temperature boundary source
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._totalRunoffVolume">
            <summary> Total volume of runoff </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._totalAdditionalInflowVolume">
            <summary> Total volume of additional inflow </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._minimumFlow">
            <summary> Minimum flow </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._maximumFlow">
            <summary> Maximum flow </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._timeOfMinimumFlow">
            <summary> Time of minimum flow </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._timeOfMaximumFlow">
            <summary> Time of maximum flow </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._totalLossVolume">
            <summary> Total volume of loss </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._totalRainfallVolume">
            <summary> Total volume of rain </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._yearlyRunoff">
            <summary>
            Dictionary of runoff as a function of year
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.YearlyRunoff">
            <summary>
            Return dictionary of runoff as a function of year
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.#ctor(System.String)">
            <summary>
             Catchment constructor
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.#ctor(System.String,System.String)">
            <summary>
             Catchment constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.Initialize(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize Rainfall Runoff model. Sets up static data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.Type">
            <summary>
            The type of catchment: NAM, Urban A etc
            </summary>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.CurrentTime">
            <summary>
            Current time of catchment
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.TimeOfNextUpdate">
            <summary>
            Return the time of next update. Used for PostTimeStepEvent event in Catchments.
            If a catchment uses variable timesteps, then this function must be overridden!!
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.Prepare(System.DateTime,System.DateTime,DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Prepare Rainfall Runoff model. Sets up dynamic data so that the model is ready for first time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.PrepareState">
            <summary>
            Prepare state, especially time
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.PrepareSource(DHI.Mike1D.BoundaryModule.IBoundarySource,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Prepare boundary source.
            </summary>
            <param name="source">Source to be prepared</param>
            <param name="diagnostics"> </param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.CalculateYearlyStatistics">
            <summary>
            Update the yearly statistics. 
            <para>
            Called at end of every time step.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.Update(System.DateTime)">
            <summary>
             Update internal state of catchment to time Time()
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.EffectiveArea">
            <summary>
            Effective area. The effective area is the area that collects water. 
            Can be smaller than total area, eg for Linear Reservoir or when LIDs are present.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.CalculateStatistics">
            <summary>
            Calculate statistics on catchment. 
            TODO: Consider moving this to individual catchments to increase performance (avoid using _stateVariables).
            TODO: Consider moving this out of Catchments class and into seperate class, for generic handling of all catchments
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.PerformTimeStep">
            <summary>
            This procedure forwards the calculation with one time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.TriggerPostTimeStepEvent">
            <summary>
            Trigger the <see cref="E:DHI.Mike1D.RainfallRunoffModule.Catchment.PostTimeStepEvent"/>, called at end of a time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.VolumeInCatchment">
            <summary>
            Volume of water stored in catchment after previous TakeTimeStep()
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.VolumeInCatchmentAtStart">
            <summary>
            Volume of water stored in catchment after previous TakeTimeStep()
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.TakeTimeStep">
            <summary>
            This procedure is the one actually calculating the new time step.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.AreaInSquareKm">
            <summary>
             Full area of catchment
             Type: Catchment area
             Unit: [km2]
             Default: 100
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.TSBuffer">
            <summary>
             Set the TSBuffer to use in this catchment
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.Validate">
            <summary>
            Validate that the catchment is set up correctly
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.ValidateLIDs(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Validate all LIDs in catchment
            </summary>
            <param name="diagnostics"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.TimeValueGetter(DHI.Mike1D.Generic.IQuantity)">
            <summary>
            Get value setter for the specified data quantity
            </summary>
            <param name="quantity">Requested Quantity</param>
            <returns>A value getter delegate that can set the value</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.TimeValueGetter(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.IQuantity@)">
            <summary>
            Get value setter for the specified data quantity
            </summary>
            <param name="quantity">Requested Quantity</param>
            <param name="actualQuantity">Actual Quantity. Can differ in the description</param>
            <returns>A value getter delegate that can set the value</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.TimeValueGetterRR(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.IQuantity@)">
            <summary>
            Get value setter for the specified data quantity
            </summary>
            <param name="quantity">Requested Quantity</param>
            <param name="actualQuantity">Actual quantity, that may differ in the description</param>
            <returns>A value getter delegate that can set the value</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.TimeValueSetter(DHI.Mike1D.Generic.IQuantity)">
            <summary>
            Get value setter for the specified data type
            </summary>
            <param name="quantity">Requested Quantity</param>
            <returns>A value setter delegate that can set the value</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.TimeOffers">
            <summary>
            List of data types that is offered and can be used in GetValue
            </summary>
            <returns>List of data types offered</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.TimeAccepts">
            <summary>
            List of data types that is accepted and can be used in SetValue
            </summary>
            <returns>List of data types accepted</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.GetRequiredTypes">
            <summary>
            Get the type of boundary required by this catchment
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.ApplyBoundary(DHI.Mike1D.BoundaryModule.ICatchmentSourceBoundary)">
            <summary>
             Apply a boundary to this catchment
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.ApplyBoundary(DHI.Mike1D.BoundaryModule.CatchmentSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.IBoundarySource)">
            <summary>
             Apply a boundary to this catchment
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.ApplyBoundaryLIDs(DHI.Mike1D.BoundaryModule.ICatchmentSourceBoundary)">
            <summary>
            Apply boundary to LID's in catchment
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.ApplyBoundaryLIDs(DHI.Mike1D.BoundaryModule.CatchmentSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.IBoundarySource)">
            <summary>
            Apply boundary to LID's in catchment
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.ApplyBoundary(DHI.Mike1D.BoundaryModule.GlobalSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.GlobalGeoLocatedSource)">
            <summary>
             Apply a boundary to this catchment
            </summary>
            <param name="type"></param>
            <param name="geoLocatedSource"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.ApplyBoundaryLIDs(DHI.Mike1D.BoundaryModule.GlobalGeoLocatedSource)">
            <summary>
            Apply boundary to LID's in catchment
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.ApplyBoundaryLIDs(DHI.Mike1D.BoundaryModule.GlobalSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.GlobalGeoLocatedSource)">
            <summary>
            Apply boundary to LID's in catchment
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.BoundaryTypeIsAdditive(DHI.Mike1D.BoundaryModule.CatchmentSourceBoundaryTypes)">
            <summary>
            Return true if boundaries of the specified type are additive; the contributions of
            two discharge boundaries add up, while two temperature boundaries do not.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.RuntimeDiagnostics">
            <summary>
            Get the Diagnostics instance for a Catchment. Used during runtime.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.TotalRunoffVolume">
            <summary>
            Total runoff from this catchment (integrated over time)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.TotalLossVolume">
            <summary>
            Total infiltration into this catchment (integrated over time)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.TotalRainfallVolume">
            <summary>
            Total rainfall on this catchment (integrated over time)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.ResetBoundaries">
            <summary>
            Remove boundaries applied in previous runs
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.MaximumFlow">
            <summary>
            Maximum runoff flow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.MinimumFlow">
            <summary>
            Minimum runoff flow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.TimeOfMinimumFlow">
            <summary>
            Time of maximum runoff flow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.TimeOfMaximumFlow">
            <summary>
            Time of minimum runoff flow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchment.TotalAdditionalInflowVolume">
            <summary>
            Total volume of additional inflow
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment._runtimeDiagnostics">
            <summary>
            Diagnostics instance for a Catchment. Used during runtime.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchment.ToString">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.Catchment.CatchmentADData">
            <summary>
            Helper class for computing and storing mass flux state.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment.CatchmentADData.MassFluxQuantity">
            <summary>
            Quantity of mass flux
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment.CatchmentADData._factor">
            <summary> Unit conversion factor </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchment.CatchmentADData._offset">
            <summary> Unit conversion offset </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentState">
            <summary>
            Base class for catchments utilizing the <see cref="T:DHI.Mike1D.RainfallRunoffModule.StateVariables"/> for
            maintaining and interpolating in state.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentState._stateVariables">
            <summary>
            State variables in catchment
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentState.#ctor(System.String)">
            <summary>
            Protected constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentState.#ctor(System.String,System.String)">
            <summary>
            Protected constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentState.TransferToStateVariableTable">
            <summary>
            This routine stores the calculated variables in variables ready for export. The values in these state variable 
            corresponds to the values written to the result file. All discharge variables are subject to a unit conversion. 
            During the calculation discharges are calculated using the unit mm/hour and must therefor be converted into m3/s. 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentState.PrepareState">
            <summary>
            Prepare state for new simulation. 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentState.InitialiseStateVariableTable">
            <summary>
            This procedure initializes all the state variables declared for the catchment.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentState.CalculateYearlyStatistics">
            <summary>
            Calculate and update yearly statistics, <see cref="P:DHI.Mike1D.RainfallRunoffModule.Catchment.YearlyRunoff"/>.
            <para>
            Called at end of each time step, in <see cref="M:DHI.Mike1D.RainfallRunoffModule.Catchment.PerformTimeStep"/>
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentState.Update(System.DateTime)">
            <summary>
             Update internal state of catchment to time Time()
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentState.CalculateStatistics">
            <summary>
            Calculate statistics.
            <para>
            Called at end of each time step, by <see cref="M:DHI.Mike1D.RainfallRunoffModule.Catchment.PerformTimeStep"/>
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentState.TimeValueGetterRR(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.IQuantity@)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.AbstractCatchmentComponentSource">
            <summary>
            Base class for CatchmentComponentSource implementation.
            <para>
            A CatchmentComponentSource is attached to a catchment
            and provides a concentration from the catchment for one component.
            The concentration is that of the total-runoff, though
            it may be aggregated from different concentrations of
            different flows (ground-water flow, surface flow etc.)
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.AbstractCatchmentComponentSource.EumQuantity">
            <summary>
            The eum-quantity of the values. Used to handle unit conversion of 
            the values from the boundary to the engine. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.AbstractCatchmentComponentSource.IsLoad">
            <summary>
            If false, then the value is a concentration, and application depends on inflow.
            If true, then the value is a load and used directly.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.AbstractCatchmentComponentSource.Initialize(DHI.Mike1D.RainfallRunoffModule.ICatchment)">
            <summary>
            Initialize component source with the catchment that it belongs to.
            <para>
            Default implementation does nothing.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.AbstractCatchmentComponentSource.GetValue(System.DateTime)">
            <summary>
            Get a concentration/load value for the current time.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentComponentSourceConstant">
            <summary>
            A constant catchment component source
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentComponentSourceConstant.ConstValue">
            <summary>
            The component number to use when coupling to the AD module.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentComponentSourceConstant.GetValue(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentComponentSourceEMC">
            <summary>
            A constant catchment component source
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentComponentSourceEMC.Initialize(DHI.Mike1D.RainfallRunoffModule.ICatchment)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentComponentSourceEMC.ConstValue">
            <summary>
            The component number to use when coupling to the AD module.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentComponentSourceEMC.GetValue(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentComponentSourceNormalizedFlowTable">
            <summary>
            A constant catchment component source
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentComponentSourceNormalizedFlowTable.Initialize(DHI.Mike1D.RainfallRunoffModule.ICatchment)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentComponentSourceNormalizedFlowTable.GetValue(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentUrbanData">
            <summary>
             ICatchmentUrban is a common data interface for different urban catchment models.
             <para>
             This interface contains data and parameters for setting up a catchment model, and represents
             as such only setup data. Computational variables and methods are not included in this interface.
             It can be used to explore data and parameters required when setting up the catchment model.
             </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUrbanData.InfiltrationAfterRain">
            <summary>
             True if infiltration shall occur also after rain
             Default: True
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUrbanData.GlobalDryDepthLimit">
            <summary>
            Dry depth used for switching Horton's mode between dry and wet
            in Kinematic Wave model:
            when InfiltrationAfterRain == true
            In this case the switching to regeneration of infiltration capacity
            is controlled by a low limit of the water depth on the surface.
            (from ini file)
            Unit: [m]
            Default: 1e-6
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUrbanData.InitialLossRecoveryRate">
            <summary>
            Recovery rate for initial loss capacity. 
            The initial loss capacity is regenerated in dry periods by a linear recovery rate.
            <para>
            Used as constant evaporation, when evaporation is not defined explicitly. If evaporation is defined explicitly 
            (see <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUrbanData.EvaporationFromTimeSeries"/>), this is neglected.
            </para>
            <para>
            For some catchment models it is only applied under dry conditions.
            </para>
            <para>
            Unit: [m/s]
            Default: 0.00005 [m/hour]
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUrbanData.EvaporationFromTimeSeries">
            <summary>
            True if evaporation is enabled, and an evaporation boundary has been defined.
            <para>
            If set to false the initial recover rate is used during dry periods.
            Default: False
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUrbanData.UseSnowModule">
            <summary>
            True if the snow module is activated.
            If True, a temperature time series has to be provided for the catchment.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUrbanData.SnowMeltCoefficient">
            <summary>
            Snow melt coefficient.
            Note: the snow melt coefficient is not in SI unit,
            because the temperature is assumed to be in degres Celcius.
            Unit: [m/degCelcius/s]
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban">
            <summary>
             CatchmentAbstractUrban is an abstract class that inherits
             from <see cref="T:DHI.Mike1D.RainfallRunoffModule.Catchment"/>. All common methods for urban
             rainfall-runoff models are implemented here.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._bInfiltrationAfterRain">
            <summary>
            True if infiltration shall occur also after rain,
            used in Horton infiltration depth calculation from INI file
            Default: True
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.InfiltrationAfterRain">
            <summary>
             True if infiltration shall occur also after rain
             Default: True
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._globalDepthDryLimit">
            <summary>
            Global dry depth limit
            from INI file
            in Kinematic wave: used when InfiltrationAfterRain == true
            Default: 1e-6
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.GlobalDryDepthLimit">
            <summary>
            Dry depth used for switching Horton's mode between dry and wet
            in Kinematic Wave model when InfiltrationAfterRain == true.
            In this case the switching to regeneration of infiltration capacity
            is controlled by a low limit of the water depth on the surface.
            Unit: [m]
            Default: 1e-6
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._initialLossRecoverRate">
            <summary>
            Initial loss recover rate
            Unit: [m/s]
            Default: 5e-5 m/h = 1.2 mm/day
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.InitialLossRecoveryRate">
            <summary>
            Recovery rate for initial loss capacity. 
            The initial loss capacity is regenerated in dry periods by a linear recovery rate.
            <para>
            Used as constant evaporation, when evaporation is not defined explicitly. If evaporation is defined explicitly 
            (see <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.EvaporationFromTimeSeries"/>), this is neglected.
            </para>
            <para>
            Unit: [m/s]
            Default: 0.00005 [m/hour] = 1.2 [mm/day]
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._evaporationFromTS">
            <summary>
            True if evaporation is enabled, and an evaporation boundary has been defined.
            <para>
            If set to false the initial recover rate is used during dry periods.
            Default: False
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.EvaporationFromTimeSeries">
            <summary>
            True if evaporation is enabled, and an evaporation boundary has been defined.
            <para>
            If set to false the initial recover rate is used during dry periods.
            Default: False
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._bSnowModule">
            <summary>
            True if the snow module is activated.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.UseSnowModule">
            <summary>
            True if the snow module is activated.
            If True, a temperature time series has to be provided for the catchment.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._snowMeltCoefficient">
            <summary>
            Snow melt coefficient.
            Unit: [m/degCelcius/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.SnowMeltCoefficient">
            <summary>
            Snow melt coefficient.
            Note: the snow melt coefficient is not in SI unit,
            because the temperature is assumed to be in degres Celcius.
            Unit: [m/degCelcius/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._initialLossMax">
            <summary>
            Maximum value of InitialLossStorageDepth
            Unit: [m]
            Default: 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.InitialLossMax">
            <summary>
            Maximum value of InitialLossStorageDepth
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._redCoeff">
            <summary>
            Hydrological reduction is the runoff reduction factor,
            accounts for water losses caused by e.g evapo-transpiration,
            imperfect imperviousness, etc. on the contributing area.
            Unit: [-]
            Default: 0.90
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.ReductionFactor">
            <summary>
            Hydrological reduction coeeficient. The runoff reduction factor,
            accounts for water losses caused by e.g evapo-transpiration,
            imperfect imperviousness, etc. on the contributing area.
            Unit: [-]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._offerDelegates">
            <summary>
            List of delegates, matching list of <see cref="F:DHI.Mike1D.RainfallRunoffModule.Catchment._offers"/>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._actRainIntensity">
            <summary>
            Actual rain intensity.
            Unit: [m/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._actRainDepth">
            <summary>
            Actual rain depth.
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._actInfiltration">
            <summary>
            Actual infiltration, loss.
            Unit: [m/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._actInfiltrationOld">
            <summary> Infiltration at time N. Unit: [m/s] </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._loss">
            <summary>
            Loss, other than infiltration which goes into <see cref="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._actInfiltration"/> (in another unit).
            Unit [m3/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._lossOld">
            <summary> Loss at time N. Unit: [m/s] </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._actRainMode">
            <summary>
            State of the actual period can take one of these values:
            wet, dry or unknown.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._prevRainMode">
            <summary>
            State of the previous period can take one of these values:
            wet, dry or unknown.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._initialLossStorageDepth">
            <summary>
            Initial loss storage depth.
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._initialLossStorageDepthOld">
            <summary> Initial loss storage depth at time N. Unit: [m] </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._runoff">
            <summary>
            Runoff.
            Unit: [m3/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._runoffOld">
            <summary> Runoff at time N. Unit: [m3/s] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.Runoff">
            <summary>
            Runoff.
            <para>
            Unit: [m3/s]
            </para>
            <para>
            This is a computational variable. Setting this has no effect 
            (apart from when writing initial value to result file)
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._rainfallFromForcing">
            <summary>
            Rainfall that must be applied during the calculation time step measured in m/s.
            unit: [m/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._rainfallFromForcingOld">
            <summary>  Rainfall that must be applied during the calculation time step measured in m/s, at time N. unit: [m/s] </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._evaporationFromForcing">
            <summary>
            Evaporation that must be applied during the calculation time step.
            unit: [m/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._temperatureFromForcing">
            <summary>
            Temperature that must be applied during the calculation time step.
            Note: the temperature is given in degres Celcius, which is not SI unit!
            unit: [degCelcius]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._actEvaporation">
            <summary>
            Actual evaporation
            Unit: [m/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._actEvaporationOld">
            <summary> Actual evaporation at time N, Unit: [m/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._potentialEvaporation">
            <summary>
            Potential evaporation
            Unit: [m/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._potentialEvaporationOld">
            <summary> Potential evaporation at time N. Unit: [m/s] </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._snowStorage">
            <summary>
            Snow storage
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._snowStorageOld">
            <summary> Snow storage at time N. Unit: [m] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.SnowStorage">
            <summary>
            Snow storage
            <para>
            State variable
            </para>
            <para>
            Only applicable when <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.UseSnowModule"/> is set.
            </para>
            <para>
            Unit: [m]
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._loadPerInhabitant">
            <summary>
            Load per inhabitant
            Unit: [-]
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.RainMode">
            <summary>
             Rainfall mode
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.RainMode.Unknown">
            <summary>
             Unknown rain
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.RainMode.Wet">
            <summary>
             Wet rain
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.RainMode.Dry">
            <summary>
             Dry rain
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.#ctor(System.String)">
            <summary>
            Constructor for abstract urban class
            </summary>
            <param name="name">Name of the catchment</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.CreateOffersBase">
            <summary>
            Create offers, populating <see cref="F:DHI.Mike1D.RainfallRunoffModule.Catchment._offers"/> and <see cref="F:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban._offerDelegates"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.TimeValueGetterRR(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.IQuantity@)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.TransferStateToOldBase">
            <summary>
            Transfer current state to state N. First thing to do when starting a timestep.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.ApplySnowModule">
            <summary>
            Apply snow module if activated, and update _actRainDepth.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.FindRainState">
            <summary>
            Finds out if there is rainfall during the current time step.
            it will update _actRainMode variable.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.FindActualRainStateEndTime">
            <summary>
            Finds when the current rain state ends.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.ComputeInitialLossfromSurfaceStorage">
            <summary>
            Compute losses from surface storage
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.UpdateForcings(System.DateTime)">
            <summary>
            This routine updates the forcings rainfall, evaporation etc
            </summary>
            <param name="simTime">Simulation time</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.ResetEngineStateVariables">
            <summary>
            This routine resets certain state variables to zero before making calculations for the next time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.Prepare(System.DateTime,System.DateTime,DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Prepare Rainfall Runoff model. Sets up dynamic data so that the model is ready for first time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.CalculateStatistics">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.CalculateYearlyStatistics">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.GetRequiredTypes">
            <summary>
            Get the type of boundary required by this catchment
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.ApplyBoundary(DHI.Mike1D.BoundaryModule.CatchmentSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.IBoundarySource)">
            <summary>
             Apply a boundary to this catchment
            </summary>
            <param name="catchmentSourceBoundaryType"></param>
            <param name="catchmentSourceBoundary"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.ApplyBoundary(DHI.Mike1D.BoundaryModule.GlobalSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.GlobalGeoLocatedSource)">
            <summary>
             Apply a boundary to this catchment
            </summary>
            <param name="type"></param>
            <param name="geoLocatedSource"></param>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.BoundarySourceEvaporation">
            <summary>
            Evaporation boundary
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.LoadPerInhabitant">
            <summary>
            Load per inhabitant.
            Unit: [-]
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentCombined">
            <summary>
            Class for the Combined type of catchment.
            A combined catchment is a combination of existing Catchments, named subcatchments.
            The runoff is calculated by multiplying a contributing area factor to each subcatchments.
            </summary>
            TODO: CatchmentCombined requires synchronization with times of sub-catchments
            I.e. the time step of the sub-catchments must currently be a multipla of
            the time step of the CatchmentCombined. The synchronization can be removed
            but a more intelligent update of the CatchmentCombined is required.
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCombined.#ctor(System.String)">
            <summary>
            Constructor of CatchmentCombined
            Create the new dictionary that are used to store the subcatchments
            </summary>
            <param name="name"></param>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentCombined.SubCatchmentNames">
            <summary>
            Subcatchment by names. The dictionary
            contains the name of the subcatchment and a contributing area factor,
            which is the fraction of the total area that the subcatchment
            runoff contributes to this combined catchment.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentCombined.ScaleByArea">
            <summary>
            Flag specifying whether the AreaFactor of a sub catchment is an area 
            (in m^2) or a relative scaling factor.
            <para>
            When true, the AreaFactor is interpreted as the area of the sub catchment within
            the combined catchment. The discharge of the sub catchment will be scaled with 
            the area of the sub catchment to get discharge per area, and then multiplied 
            with the area stored in the AreaFactor.
            </para>
            <para>
            When false, the AreaFactor is interpreted as a scaling factor of the discharge
            from each of the sub catchment. A value of one means that the entire discharge
            from the sub catchment is used in the combined catchment.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentCombined._subCatchments">
            <summary>
            List of actual subcatchments, populated during initialize
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCombined.AddNewCatchment(System.String,System.Double)">
            <summary>
            Method that adds a new catchment into the list of subcathcment,
            the factor correspond to the contributing area of the subcatchment
            compared to the entire area of the combined catchment
            </summary>
            <param name="subCatchmentName">Subcatchment name</param>
            <param name="areaFactor">the fraction of the total area that the subcatchment
            runoff contributes to this combined catchment.</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCombined.Initialize(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize Rainfall Runoff model. Sets up static data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCombined.Initialize(DHI.Mike1D.RainfallRunoffModule.Catchments,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize Rainfall Runoff model. Sets up static data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCombined.Prepare(System.DateTime,System.DateTime,DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCombined.Type">
            <summary>
            The type of catchment: NAM, Urban A etc
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCombined.TransferToStateVariableTable">
            <summary>
            This routine stores the calculated variables in variables ready for export. The values in these state variable 
            corresponds to the values written to the result file. All discharge variables are subject to a unit conversion. 
            During the calculation discharges are calculated using the unit mm/hour and must therefor be converted into m3/s. 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCombined.TimeOfNextUpdate">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCombined.TakeTimeStep">
            <summary>
            This procedure forwards the calculation with one time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCombined.GetRequiredTypes">
            <summary>
            Get the type of boundary required by this catchment
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCombined.ApplyBoundary(DHI.Mike1D.BoundaryModule.CatchmentSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.IBoundarySource)">
            <summary>
             Apply a boundary to this catchment
            </summary>
            <param name="catchmentSourceBoundaryType"></param>
            <param name="catchmentSourceBoundary"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentCombined.ApplyBoundary(DHI.Mike1D.BoundaryModule.GlobalSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.GlobalGeoLocatedSource)">
            <summary>
             Apply a boundary to this catchment
            </summary>
            <param name="type"></param>
            <param name="geoLocatedSource"></param>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge">
            <summary>
             Simple catchment that handles catchment discharge
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge._catchmentDischargeSources">
            <summary>
            Catchment discharge source, populated during initialize.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge._globalCatchmentDischargeSources">
            <summary>
            Global discharge sources, populated during initialize.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge._offerDelegates">
            <summary>
            List of delegates, matching list of <see cref="F:DHI.Mike1D.RainfallRunoffModule.Catchment._offers"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.#ctor(System.String)">
            <summary>
             Constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.#ctor(System.String,System.String)">
            <summary>
             Constructor
            </summary>
            <param name="modelId">Id of catchment model</param>
            <param name="catchmentName">Name of catchment</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.ResetBoundaries">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.Initialize(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize Rainfall Runoff model. Sets up static data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.InitializeAD(DHI.Mike1D.ADDataAccess.ADComponentData,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.InitializeST(DHI.Mike1D.STDataAccess.STData,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.ApplyBoundary(DHI.Mike1D.BoundaryModule.CatchmentSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.IBoundarySource)">
            <summary>
             Apply a boundary to this catchment
            </summary>
            <param name="catchmentSourceBoundary"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.ApplyBoundary(DHI.Mike1D.BoundaryModule.GlobalSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.GlobalGeoLocatedSource)">
            <summary>
             Apply a boundary to this catchment
            </summary>
            <param name="type"></param>
            <param name="geoLocatedSource"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.Prepare(System.DateTime,System.DateTime,DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Prepare Rainfall Runoff model. Sets up dynamic data so that the model is ready for first time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.Type">
            <summary>
            The type of catchment: NAM, Urban A etc
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.TakeTimeStep">
            <summary>
            This procedure forwards the calculation with one time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.CalculateStatistics">
            <summary>
            Calculate statistics on catchment. 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.CalculateYearlyStatistics">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.GetRequiredTypes">
            <summary>
            Get the type of boundary required by this catchment
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.TimeValueGetterRR(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.IQuantity@)">
            <summary>
            Get value setter for the specified data quantity
            </summary>
            <param name="quantity">Requested Quantity</param>
            <param name="actualQuantity">Actual quantity found, may differ in description.</param>
            <returns>A value getter delegate that can set the value</returns>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.CatchmentDischargeADData">
            <summary>
            <para>
            For each <see cref="F:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge._catchmentDischargeSources"/>
            and <see cref="F:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge._globalCatchmentDischargeSources"/>
            a <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.BoundaryComponentDataSet"/> (list of <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.BoundaryComponentData"/>)
            is required to handle component data for each source.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.CatchmentDischargeSTData">
            <summary>
            <para>
            For each <see cref="F:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge._catchmentDischargeSources"/>
            and <see cref="F:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge._globalCatchmentDischargeSources"/>
            a <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.BoundaryComponentDataSet"/> (list of <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentDischarge.BoundaryComponentData"/>)
            is required to handle component data for each source.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentSurfaceData">
            <summary>
            Catchment surface data interface, setup data for the <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface"/> class.
            <para>
            If <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentSurfaceData.Infiltration"/> is not defined, the surface is assumed to be impervious, and
            no infiltration is applied.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentSurfaceData.WettingCapacity">
            <summary>
            Wetting capacity.
            Unit: [m].
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentSurfaceData.StorageCapacity">
            <summary>
            Storage capacity.
            Unit: [m].
            Not applicable to <see cref="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.SurfaceType.ImperviousSteep"/>.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentSurfaceData.Infiltration">
            <summary>
            Infiltration calculator. This defines whether the surface is pervious.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface">
            <summary>
            Catchment surface class, handling wetting loss, storage loss, infiltration and evaporation
            <para>
            If <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.Infiltration"/> is not defined, the surface is assumed to be impervious, and
            no infiltration is applied.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface._wettingCapacity">
            <summary>
            Wetting capacity
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.WettingCapacity">
            <summary>
            Wetting capacity
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface._storageCapacity">
            <summary>
            Storage capacity
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.StorageCapacity">
            <summary>
            Storage capacity
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.Infiltration">
            <summary>
            Infiltration calculator. If null, the surface is impervious.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.Horton">
            <summary>
            Horton, defined only for pervious surfaces.
            <para>
            Returns null if <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.Infiltration"/> is not <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.Horton"/>.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.__horton">
            <summary>
            Backwards compatible Data Contract (Release 2017 and earlier)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.ApplyEvaporationOnRain">
            <summary>
            When raining, if true the evaporation is applied at the beginning of the time step, 
            correcting the net rain and limited by the rain.
            If false, evaporation is applied on non-empty storages in the catchment and can exceed the rain.
            <para>
            In dry periods, this is not used, evaporation is always applied on storages.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.InfiltrationAfterRain">
            <summary>
             True if infiltration shall occur also after rain has ended.
             <para>
             Default is true
             </para>.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.UseReverseDraining">
            <summary>
            Revert to old draining order. Set to true to 
            drain in same order as in MOUSE engine.
            <para>
            Reverse draining drains in order: wetting, storage, depth.
            Hence, when storages are full, wetting and storage will
            be drained and not depth, depth will be higher and give more runoff.
            This is visible in low-flow conditions.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.Depth">
            <summary>
            Depth of water on sub-catchment.
            State variable.
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.DepthOld">
            <summary>
            Depth of water at the previous time step.
            Computational variable.
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.WettingLoss">
            <summary>
            Wetting loss depth.
            State variable.
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.WettingLossOld">
            <summary>
            Wetting loss depth at the previous time step.
            Computational variable.
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.StorageLoss">
            <summary>
            Storage loss depth.
            State variable.
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.StorageLossOld">
            <summary>
            Storage loss depth at the previous time step.
            Computational variable.
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.EvapActual">
            <summary>
            Actual evaporation.
            Reporting variable.
            Unit: [m/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.InfiltrationActual">
            <summary>
            Actual infiltration.
            Reporting variable.
            Unit: [m/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.InfiltrationActualOld">
            <summary>
            Infiltration of last time step
            Reporting variable.
            Unit: [m/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.InfiltrationPotential">
            <summary>
            Potential infiltration.
            Reporting variable.
            Unit: [m/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.InfiltrationPotentialOld">
            <summary>
            Potential infiltration of last time step
            Reporting variable.
            Unit: [m/s]
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.PerformTimeStep(System.Double,System.Double,System.Double)">
            <summary>
            Take timestep for surface, filling storages and evaluating
            evaporation and infiltration
            </summary>
            <param name="dt">Time step in seconds</param>
            <param name="rainRate">Rain intensity in [m/s]</param>
            <param name="potentialEvaporationRate">Potential evaporation in [m/s]</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.FillStorage(System.Double@,System.Double,System.Double)">
            <summary>
            Fills a specific storage with a giving amount of inflow (rain). 
            This procedure will update the amount of inflow not added to the storage,
            and returns the new depth of the storage.
            </summary>
            <param name="netInflow">Net inflow, rain or similar [m]. Output is part that was not added due to <paramref name="storageCapacity"/> limitation.</param>
            <param name="storage">Current depth of the storage to be filled [m]</param>
            <param name="storageCapacity">Capacity of the storage to be filled [m]</param>
            <returns>New storage depth</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.DrainStorage(System.Double@,System.Double@)">
            <summary>
            Drains water for the given storage (eg. infiltration)
            </summary>
            <param name="storage">Current depth of the storage to be filled [m]</param>
            <param name="drainPotential">Potential drainage depth of the storage [m]</param>
            <returns>Depth that was drained from the storage [m]</returns>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.GreenAmptInfiltration">
            <summary>
            Class containing state for a Green Ampt infiltration calculation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.GreenAmptInfiltration.S">
            <summary> avg. capillary suction [m] </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.GreenAmptInfiltration.Ks">
            <summary> saturated conductivity [m/s] </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.GreenAmptInfiltration.IMDmax">
            <summary> max. soil moisture deficit (m/m) </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.GreenAmptInfiltration.EvapRecoveryFactor">
            <summary> Evaporation, current soil recovery factor </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.GreenAmptInfiltration.Lu">
            <summary> Depth of upper soil zone [m] - calculated from <see cref="F:DHI.Mike1D.RainfallRunoffModule.GreenAmptInfiltration.Ks"/> </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.GreenAmptInfiltration.IMD">
            <summary> current initial soil moisture deficit. Computational state variable</summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.GreenAmptInfiltration.F">
            <summary> current cumulative infiltrated volume [m]. Computational state variable </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.GreenAmptInfiltration.Fu">
            <summary> current upper zone infiltrated volume [m]. Computational state variable </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.GreenAmptInfiltration.T">
            <summary> time until start of next rain event (sec). Computational state variable </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.GreenAmptInfiltration.Sat">
            <summary> saturation flag. Computational state variable </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GreenAmptInfiltration.Setup(System.Double,System.Double,System.Double)">
            <summary>
            Setup the GreenAmptInfiltration class. Especially it calculates
            the <see cref="F:DHI.Mike1D.RainfallRunoffModule.GreenAmptInfiltration.Lu"/> value from the <see cref="F:DHI.Mike1D.RainfallRunoffModule.GreenAmptInfiltration.Ks"/> value.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GreenAmptInfiltration.CalculateInfiltration(System.Double,System.Double,System.Double)">
            <summary>
            Computes Green-Ampt infiltration for a catchment or a storage node.
            </summary>
            <param name="dt">Time step [s]</param>
            <param name="netRainfallRate">Net rainfall rate. May also include snow-melt and runon [m/s]</param>
            <param name="currentDepth">Depth of water in catchment [m]</param>
            <returns>Infiltration depth [m]</returns>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.GreenAmptInfiltrationCalculator">
            <summary>
            Class for calculating infiltration using the Green Ampt infiltration method
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveData">
            <summary>
            Kinematic wave data interface.
            <para>
            The Kinematic wave rainfall runoff model is also called "Urban B"
            </para>
            <para>
            In Kinematic Wave model the runoff is computed as flow in an open channel, taking the gravitational and frition forces only.
            The runoff amount is controlled by the various hydrological losses and the size of the actually contributing area.
            </para>
            <para>
            Interface for Kinematic Wave catchment model inherits from <see cref="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentUrbanData"/> interface.
            </para>
            <para>
            This interface contains data and parameters for setting up a catchment model, and represents
            as such only setup data. Computational variables and methods are not included in this interface.
            It can be used to explore data and parameters required when setting up the catchment model.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveData.ApplyEvaporationOnRain">
            <summary>
            True if the evaporation is applied at the beginning of the time step, 
            correcting the net rain (in wet periods).
            <para>
            If false, evaporation is applied at the end of the time step on non-empty 
            storages in the catchment.
            </para>
            <para>
            Only valid if <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUrbanData.EvaporationFromTimeSeries"/> is enabled.
            </para>
            <para>
            Default true. Historically MIKE 11 has set this to true and MIKE URBAN to false.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveData.Length">
            <summary>
            The length of the channel.
            <para>
            The model assumes a prismatic flow chammel with rectangular cross section.
            The channel bottom width is computed from catchment area and length.
            </para>
            <para>
            This is only applicable when the catchment does not specify their length explicitly, see <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.Length"/>.
            </para>
            <para>
            Unit: [m]
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveData.FixedLengthWidthRatio">
            <summary>
            Flag indicating if the length-width ratio should be fixed.
            <para>
            When fixed, the length and width for each sub-catchment are calculated so
            that the length/width ratio for each sub-area is kept equal to the length/width
            ratio of the entire catchment.
            </para>
            <para>
            When not set, the length of each subcatchment equals the length of the entire catchment, and 
            width of each subcatchment is calculated as the area fraction of the width of the entire catchment.
            </para>
            <para>
            This is only applicable when the catchment does not specify their length explicitly, see <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.Length"/>.
            </para>
            <para>
            Default: true
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveData.Slope">
            <summary>
            Avearage slope of the catchment.
            <para>
            This is only applicable when the catchment does not specify their slope explicitly, see <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.Slope"/>.
            </para>
            <para>
            Unit: [-]
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveData.IntegratedHorton">
            <summary>
             True if the Integrated Horton method is used in the calculation
             for infiltration.
             Default: False
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveData.LowFlow">
            <summary>
            Low flow limit for switching to dry period time step.
            The dry period time step will only be applied when
            the runoff from the rainfall is below the limit.
            Unit: [m3/s]
            Default: 0.0001
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveData.TimeStepDryPeriod">
            <summary>
            Time step used during dry period
            Unit: [s]
            Default: 12 hours
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveData.TimeStepDry">
            <summary>
            Time step used during dry period
            Default: 12 hours
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveData.Item(DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.SurfaceType)">
            <summary>
            Getter returning data that vary with each surface type.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveSurfaceData">
            <summary>
            Data interface that covers data in a kinematic wave catchment model which
            varies with the surface type. Note that not all properties
            are applicable for all surface types.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveSurfaceData.AreaFraction">
            <summary>
            Area fraction of surface type.
            Unit: [-].
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveSurfaceData.ManningM">
            <summary>
            Manning M number.
            <para>
            Default: depending on the surface type.
            </para>
            <para>
            Unit: [m^(2/3)/s].
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveSurfaceData.Length">
            <summary>
            The length of the subcatchment/channel.
            <para>
            The model assumes a prismatic flow channel with rectangular cross section.
            The channel bottom width is computed from catchment area and length.
            </para>
            <para>
            If not defined, the average length of the base catchment is used.
            </para>
            <para>
            Default: undefined
            Unit: [m]
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveSurfaceData.Slope">
            <summary>
            The slope of the catchment/channel.
            <para>
            If not defined, the average slope of the base catchment is used.
            </para>
            <para>
            Default: undefined
            Unit: [m]
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveSurfaceData.WettingCapacity">
            <summary>
            Wetting capacity.
            Unit: [m].
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveSurfaceData.StorageCapacity">
            <summary>
            Storage capacity.
            Unit: [m].
            Not applicable to <see cref="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.SurfaceType.ImperviousSteep"/>.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveSurfaceData.HortonWetExponent">
            <summary>
            Time constant for wet period (horton's exponent).
            Unit: [1/s].
            Only applicable for the Pervious surfaces.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveSurfaceData.HortonDryExponent">
            <summary>
            Time constant for dry period (inverse Horton's equation).
            Unit: [1/s].
            Only applicable for the Pervious surfaces.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveSurfaceData.HortonStartInfiltrationRate">
            <summary>
            Infiltration rate at start.
            Unit: [m/s].
            Only applicable for the Pervious surfaces.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveSurfaceData.HortonEndInfiltrationRate">
            <summary>
            Infiltration rate at end.
            Unit: [m/s].
            Only applicable for the Pervious surfaces.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave">
            <summary>
            Class for Kinematic Wave catchment model. See <see cref="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentKinematicWaveData"/> for parameters
            availabel when setting up the model.
            <para>
            In Kinematic Wave model the runoff is computed as flow in an open channel, taking the gravitational and frition forces only.
            The runoff amount is controlled by the various hydrological losses and the size of the actually contributing area.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.Use2016DryTimeStepAlgorithm">
            <summary>
            Revert to dry-timestep algorithm from Release 2016
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.UseReverseDraining">
            <summary>
            Revert to old draining order (Release 2016 and earlier). Set to true to 
            drain in same order as in MOUSE engine.
            <para>
            Reverse draining drains in order: wetting, storage, depth.
            Hence, when storages are full, wetting and storage will
            be drained and not depth, depth will be higher and give more runoff.
            This is visible in low-flow conditions.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.Exponent">
            <summary>
            Exponent for runoff calculations
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave._applyEvaporationOnRain">
            <summary>
            When raining, 
            if true the evaporation is applied at the beginning of the time step, 
            correcting the net rain (in wet periods).
            <para>
            If false, evaporation is applied at the end of the time step on non-empty 
            storages in the catchment.
            </para>
            <para>
            In dry periods, this is not used. if  <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUrbanData.EvaporationFromTimeSeries"/> is disabled, this is also not used
            (since the <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.InitialLossRecoveryRate"/> is only applied in dry periods).
            </para>
            <para>
            Historically MIKE has set this to true and MIKE URBAN to false.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.ApplyEvaporationOnRain">
            <summary>
            When raining, 
            if true the evaporation is applied at the beginning of the time step, 
            correcting the net rain (in wet periods).
            <para>
            If false, evaporation is applied at the end of the time step on non-empty 
            storages in the catchment.
            </para>
            <para>
            In dry periods, this is not used. if  <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUrbanData.EvaporationFromTimeSeries"/> is disabled, this is also not used
            (since the <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentAbstractUrban.InitialLossRecoveryRate"/> is only applied in dry periods).
            </para>
            <para>
            Historically MIKE has set this to true and MIKE URBAN to false.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave._length">
            <summary>
            The average length of the catchment/channel.
            <para>
            The model assumes a prismatic flow chammel with rectangular cross section.
            The channel bottom width is computed from catchment area and length.
            </para>
            <para>
            Default: 10 m
            Unit: [m]
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.Length">
            <summary>
            The length of the channel.
            <para>
            The model assumes a prismatic flow chammel with rectangular cross section.
            The channel bottom width is computed from catchment area and length.
            </para>
            <para>
            This is only applicable when the catchment does not specify their length explicitly, see <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.Length"/>.
            </para>
            <para>
            Default: 10 m
            Unit: [m]
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave._fixedLengthWidthRatio">
            <summary>
            Flag indicating if the length-width ratio should be fixed.
            <para>
            When fixed, the length and width for each sub-catchment are calculated so
            that the length/width ratio for each sub-area is kept equal to the length/width
            ratio of the entire catchment
            </para>
            <para>
            When not set, the length of each subcatchment equals the length of the entire catchment, and 
            width of each subcatchment is calculated as the area fraction of the width of the entire catchment.
            </para>
            <para>
            Default: true
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.FixedLengthWidthRatio">
            <summary>
            Flag indicating if the length-width ratio should be fixed.
            <para>
            When fixed, the length and width for each sub-catchment are calculated so
            that the length/width ratio for each sub-area is kept equal to the length/width
            ratio of the entire catchment.
            </para>
            <para>
            When not set, the length of each subcatchment equals the length of the entire catchment, and 
            width of each subcatchment is calculated as the area fraction of the width of the entire catchment.
            </para>
            <para>
            This is only applicable when the catchment does not specify their length explicitly, see <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.Length"/>.
            </para>
            <para>
            Default: true
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave._slope">
            <summary>
            Average slope of the catchment.
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.Slope">
            <summary>
            Average slope of the catchment
            Default: 1
            Unit: [-]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave._lstSurfaces">
            <summary>
            List of surfaces (sub-catchments). There are five different surfaces
            that are defined by a different surface type <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.SurfaceType"/>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.__lstSurfaces">
            <summary>
            Serialization property, see comment for the <see cref="T:DHI.Mike1D.RainfallRunoffModule.DataContract.CatchmentKinematicWaveSurfaceData"/>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave._integratedHorton">
            <summary>
            True if the Integrated Horton method is used in the calculation
            for infiltration.
            Default: False
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.IntegratedHorton">
            <summary>
             True if the Integrated Horton method is used in the calculation
             for infiltration.
             Default: False
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave._lowFlowCriterion">
            <summary>
            Low flow limit for switching to dry period time step.
            The dry period time step will only be applied when
            the runoff from the rainfall is below the limit.
            Unit: [m3/s]
            Default: 0.0001
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.LowFlow">
            <summary>
            Low flow limit for switching to dry period time step.
            The dry period time step will only be applied when
            the runoff from the rainfall is below the limit.
            Unit: [m3/s]
            Default: 0.0001
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.TimeStepDry">
            <summary>
            Time step used during dry period
            Default: 12 hours
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.TimeStepDryPeriod">
            <summary>
            Time step used during dry period
            Unit: [s]
            Default: 12 hours
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.__TimeStepDryPeriod">
            <summary>
            Datamember for backwards compatibility with older data contracts.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave._lidRoutingAreaFractions">
            <summary> Fractional part of area of all LIDs </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave._lidFractionOfImperviousFlow">
            <summary> Fraction of impervious flow that is routed through the LIDs </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave._lidFractionOfPerviousFlow">
            <summary> Fraction of pervious flow that is routed through the LIDs </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave._nrHelper">
            <summary> Helper class for NewtonRaphson solver </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave._nrSolver">
            <summary> NewtonRaphson solver </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.ConvertHourToSec">
            <summary>
            Conversion factor for Hours to Seconds.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.SurfaceType">
            <summary>
            Surface types of the sub-catchments
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.SurfaceType.ImperviousSteep">
            <summary>
             0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.SurfaceType.ImperviousFlat">
            <summary>
             1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.SurfaceType.PerviousSmall">
            <summary>
             2
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.SurfaceType.PerviousMedium">
            <summary>
             3
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.SurfaceType.PerviousLarge">
            <summary>
             4
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.#ctor(System.String)">
            <summary>
            Constructor for CatchmentKinematicWave class
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.Validate">
            <summary>
            Validate that the catchment is set up correctly
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.Initialize(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize Rainfall Runoff model. Sets up static data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.Prepare(System.DateTime,System.DateTime,DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.VolumeInCatchment">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.Type">
            <summary>
            The type of catchment: NAM, Urban A etc
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.ResetEngineStateVariables">
            <summary>
            This routine resets certain state variables to zero before making calculations for the next time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.TakeTimeStep">
            <summary>
            Run the rainfall runoff model for the time step ending at the given time.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.DryTimeStepLimitToCheckPointHourSync(System.TimeSpan,System.DateTime)">
            <summary>
            Try to find a dry time step that hits a whole hour. It also hits
            a multiple of the wet <see cref="F:DHI.Mike1D.RainfallRunoffModule.Catchment._timeStep"/>
            <para>
            This is in order to synchronize the times between catchments, 
            to make all catchments try to output only every whole hour,
            to limit output to file, 
            </para>
            </summary>
            <param name="maxDryTimeStep">Dry time step maximum value</param>
            <param name="nextCheckPointTime">Next time to hit</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.CalculateStatistics">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.Surfaces">
            <summary>
            List of surfaces
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.GetSurfaceData(DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.SurfaceType)">
            <summary>
            Getter returning data that vary with each surface type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.Item(DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.SurfaceType)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.NRHelper">
            <summary>
            Helper class for the Newton-Raphson solver
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.StateUpdated">
            <summary>
            When state has been updated, this method can be called to update derived/computational variables
            <para>
            The only update in the subcatchment that requires this to be called, is when the <see cref="!:CatchmentSurface.Runoff"/> is updated.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface">
            <summary>
            SubCatchment class. used for Kinematic waves Rainfall Runoff
            model. A subCachment can be of five types: <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.SurfaceType"/>.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.SurfaceType">
            <summary>
            Surface type, <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.SurfaceType"/>.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface._areaFraction">
            <summary>
            Fraction of area that this surface is covering. 
            For most catchments where there is only one surface, this is 1.
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.AreaFraction">
            <summary>
            Area fraction.
            Default: depending on the surface type
            Unit: [-]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface._manningM">
            <summary>
            Manning number
            Default: depending on the surface type
            Unit: [m^(2/3)/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.ManningM">
            <summary>
            Manning number
            Default: depending on the surface type
            Unit: [m^(2/3)/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.Length">
            <summary>
            The length of the subcatchment/channel.
            <para>
            The model assumes a prismatic flow channel with rectangular cross section.
            The channel bottom width is computed from catchment area and length.
            </para>
            <para>
            If not defined, the average length of the base catchment is used.
            </para>
            <para>
            Default: undefined
            Unit: [m]
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.Slope">
            <summary>
            The slope of the catchment/channel.
            <para>
            If not defined, the average slope of the base catchment is used.
            </para>
            <para>
            Default: undefined
            Unit: [m]
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.Runoff">
            <summary>
            Runoff from the sub-catchment.
            State variable.
            Unit: [m3/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.RunoffOld">
            <summary>
            Runoff from the sub-catchment at previous time step
            Computational variable.
            Unit: [m3/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.EffectiveAreaFraction">
            <summary>
            Effective area fraction, subtracting area covered by LID's
            Default: Same as <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.AreaFraction"/> when no LID's
            Unit: dimensionless factor
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.KinematicFactor">
            <summary>
            Kinematic factor.
            Computational variable.
            Unit: [m^(4/3)/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.Width">
            <summary>
            Width of the sub-catchment.
            Computational variable.
            Unit: [m]
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface.RecalculateRunoff">
            <summary>
            When state has been updated on surface (the <see cref="F:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface.Depth"/>),
            recalculate runoff to match the new depth.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.DataContract.CatchmentKinematicWaveSurfaceData">
            <summary>
            DataContract "SurfaceData" transfer object
            <para>
            The data contract transfer object is required for backwards compatibility. 
            The original <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWaveSurface"/> has been split into 
            two classes, now having some members in a new base class <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentSurface"/>. 
            That changes the order of the datamembers in the .m1dx file 
            (members of base class occur before members of derived class), 
            and destroys reading of old m1dx files.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.DataContract.CatchmentKinematicWaveSurfaceData.AreaFraction">
            <summary>
            Area fraction.
            Default: depending on the surface type
            Unit: [-]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.DataContract.CatchmentKinematicWaveSurfaceData.ManningM">
            <summary>
            Manning number
            Default: depending on the surface type
            Unit: [m^(2/3)/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.DataContract.CatchmentKinematicWaveSurfaceData.WettingCapacity">
            <summary>
            Wetting capacity
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.DataContract.CatchmentKinematicWaveSurfaceData.StorageCapacity">
            <summary>
            Storage capacity
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.DataContract.CatchmentKinematicWaveSurfaceData.Horton">
            <summary>
            Horton, defined only for pervious surfaces.
            <see cref="F:DHI.Mike1D.RainfallRunoffModule.DataContract.CatchmentKinematicWaveSurfaceData.Horton"/>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.DataContract.CatchmentKinematicWaveSurfaceData.Infiltration">
            <summary>
            Infiltration calculator. This defines whether the surface is pervious.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentLinearReservoirData">
            <summary>
            Linear reservoir data interface.
            <para>
            The linear reservoir rainfal runoff model, also called Runoff C in MIKE URBAN
            Two model types are currently available: the Dutch (C1) and the French model (C2).
            </para>
            <para>
            Interface for linear reservoir catchment model inherits from <see cref="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentUrbanData"/> interface.
            </para>
            <para>
            This interface contains data and parameters for setting up a catchment model, and represents
            as such only setup data. Computational variables and methods are not included in this interface.
            It can be used to explore data and parameters required when setting up the catchment model.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentLinearReservoirData.Length">
            <summary>
            Length of the catchment used in the Lag time calculation
            if Lagtime is not given by the user.
            Unit: [m]
            Default: 10
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentLinearReservoirData.Slope">
            <summary>
            Slope of the catchment used in the Lag time calculation
            if Lagtime is not given by the user.
            Unit: [-]
            Default: 0.001
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentLinearReservoirData.Model">
            <summary>
             Model type.
             <para>
             NL model corresponds to C1
             FR model corresponds to C2
             </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentLinearReservoirData.EffectiveAreaFraction">
            <summary>
            Effective area (fraction of full area) of the catchement used by the Dutch model
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentLinearReservoirData.ImperviousArea">
            <summary>
            Impervious area is a factor which defines the part
            of the catchment considered to contribute to the runoff.
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentLinearReservoirData.InitialLossMax">
            <summary>
            Maximum value of initial loss magasin depth
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentLinearReservoirData.TimeConstant">
            <summary>
            The linear reservoir Time constant
            used in model NL
            Unit: [1/s]
            Default: 3e-3
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentLinearReservoirData.LagTime">
            <summary>
            Lag time is the reciprocal equivalent of the 
            linear reservoir time constant
            used in model FR
            Unit: [s]
            default: 300
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentLinearReservoirData.ReductionFactor">
            <summary>
            Hydrological reduction coefficient. The runoff reduction factor,
            accounts for water losses caused by e.g evapo-transpiration,
            imperfect imperviousness, etc. on the contributing area.
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentLinearReservoirData.Infiltration">
            <summary>
            True if the infiltration process is inlcuded.
            Default: False
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchmentLinearReservoirData.SetHortonInfiltration(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Set the paraneters for the Horton infiltration
            </summary>
            <param name="minRate">Infiltration rate at start [m/s]</param>
            <param name="maxRate">Infiltration rate at end [m/s]</param>
            <param name="wetTimeConstant">Time constant for wet period (horton's exponent) [1/s]</param>
            <param name="dryTimeConstant">Time constant for dry period (inverse Horton's equation) [1/s]</param>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir">
            <summary>
             Class for Linear Reservoir catchment model. See <see cref="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentLinearReservoirData"/> for parameters
             availabel when setting up the model.
             <para>
             This class implement the linear reservoir rainfal runoff, also called Runoff C in MIKE URBAN
             Two model types are currently available: the Dutch (C1) and the French model (C2).
             </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir._imperviousArea">
            <summary>
            Impervious area is a factor which defines the part
            of the catchment considered to contribute to the runoff.
            Unit: [-]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir._infiltrationTime">
            <summary>
            Time in seconds where infiltration has taken place. Grows over the entire simulation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir._bUrbanCatchment">
            <summary> Flag specifying whether catchment is urban (true) or rural (false) </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.UrbanRuralCatchmentLimit">
            <summary>
            Limit that determines if the catchment is urban or rural type.
            If the impervious area is smaller than this limit, the catchment is
            defined as Rural
            Else if the impervious area if greater or equal to the limit, the 
            catchment is defined as Urban.
            Unit: [-]
            Default: 0.2
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.#ctor(System.String)">
            <summary>
            Constructor of CatchmentLinearReservoir
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.ModelLinearReservoir(System.Double,System.Double)">
            <summary>
            Calculates the outflow of linear reservoir model
            </summary>
            <param name="netInflow">Net inflow</param>
            <param name="outflowAtPreviousTimeStep">Outflow at the previous time step</param>
            <returns>Outflow at the current time step</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.ModelDoubleLinearReservoir(System.Double,System.Double)">
            <summary>
            Calcualtes the outflow of a double linear reservoir model
            </summary>
            <param name="netInflow">Net inflow</param>
            <param name="outflowAtPreviousTimeStep">Outflow at the previous time step</param>
            <returns>Outflow at the current time step</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.DepthInfiltrationHorton(System.Double,System.Double)">
            <summary>
            Calculates the actual infiltration capacity
            </summary>
            <param name="startTime">start time</param>
            <param name="endTime">end time</param>
            <returns>Infiltration capacity in meters</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.CalculateLinearReservoirTimeConstant">
            <summary>
            Calculates the linear reservoir coefficient
            = exp(-t/Kc) where Kc is the inverse of time constant (NL)
            or the lag time divided 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.Initialize(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize Rainfall Runoff model. Sets up static data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.Prepare(System.DateTime,System.DateTime,DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.EffectiveArea">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.Type">
            <summary>
            The type of catchment: NAM, Urban A etc
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.Validate">
            <summary>
            Validate that the catchment is set up correctly
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.Model">
            <summary>
             Model type
             NL model corresponds to C1
             FR model corresponds to C2
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.EffectiveAreaFraction">
            <summary>
            Effective area (fraction of full area) of the catchement used by the Dutch model
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.ImperviousArea">
            <summary>
            Impervious area
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.TimeConstant">
            <summary>
            The linear reservoir Time constant
            used in model NL
            Unit: [1/s]
            Default: 3e-3
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.LagTime">
            <summary>
            Lag time is the reciprocal equivalent of the 
            linear reservoir time constant
            used in model FR
            Unit: [s]
            default: 300
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.Length">
            <summary>
            Length of the catchment used in the Lag time calculation
            if Lagtime is not given by the user.
            Unit: [m]
            Default: 10
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.Slope">
            <summary>
            Slope of the catchment used in the Lag time calculation
            if Lagtime is not given by the user.
            Unit: [-]
            Default: 0.001
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.Infiltration">
            <summary>
            True if the infiltration process is inlcuded.
            Default: False
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.SetHortonInfiltration(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Set the paraneters for the Horton infiltration
            </summary>
            <param name="minRate">Infiltration rate at start [m/s]</param>
            <param name="maxRate">Infiltration rate at end [m/s]</param>
            <param name="wetTimeConstant">Time constant for wet period (horton's exponent) [1/s]</param>
            <param name="dryTimeConstant">Time constant for dry period (inverse Horton's equation) [1/s]</param>
            <returns>Errors and warnings that may occurs</returns>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.ModelType">
            <summary>
             Model type enum
             NL: Dutch model (C1)
             FR: french model (C2)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.ModelType.NL">
            <summary>
            Dutch model (C1)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.ModelType.FR">
            <summary>
            FR: french model (C2)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.TakeTimeStep">
            <summary>
            This procedure forwards the calculation with one time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentLinearReservoir.VolumeInCatchment">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData">
            <summary>
             <para>
             Catchment NAM/RDI data interface
             </para>
             NAM is a lumped, conceptual rainfall-runoff model, simulating the overland-,
             inter-, and base-flow components as a function of the moisture 
             contents in four storages; snow, surface, root-zone and ground water.
             <para>
             This interface contains data and parameters for setting up a NAM model, and is
             as such a data class only. Computational variables are not included in this class.
             It can be used to explore data and parameters required when setting up the NAM model.
             </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.Autocal">
            <summary>
            Autocalibration
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.Initial">
            <summary>
            Initial conditions for NAM state variables.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.Additional">
            <summary>
            Additional parameters for the NAM catchment.
            These parameters are not used for the calculation, but can be used to 
            calculate parameters for the catchment
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.SurfaceStorageMax">
            <summary>
            Maximum surface/upper storage (Umax)
            Type: Storage Depth
            Unit: [mm]
            Default: 10.00
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.RootZoneStorageMax">
            <summary>
            Maximum storage in the root/lower zone (L_max)
            Type: Storage depth
            Unit: [mm]
            Default: 100.00
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.OverLandflowRunoffCoeff">
            <summary>
            Coefficient for overland flow runoff (CQOF). It expresses the part
            of the net rainfall that run off as over land flow.
            Type: Dimensionless
            Unit: []
            Default: 0.5
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.TimeConstantInterFlow">
            <summary>
            Time constant for the first linear reservoir routing of inter flow (CKIF)
            Type: Flow routing time constant
            Unit: [hour]
            Default: 1000
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.UseTimeConstantSecondReservoir">
            <summary>
            Flag specifying if to use an independent time constant for the 
            second linear reservoir routing (CK2), for overland flow.
            If set to false, the time constant for the first and the second 
            linear reservoir will be the same, i.e. using only <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.TimeConstantFirstReservoir"/>
            <para>
            Default: true
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.TimeConstantFirstReservoir">
            <summary>
            Time constant for the first linear reservoir routing (CK1), for overland and interflow.
            Type: Flow routing time constant
            Unit: [hour]
            Default: 10
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.TimeConstantSecondReservoir">
            <summary>
            Time constant for the second linear reservoir routing (CK2), for overland flow.
            Type: Flow routing time constant
            Unit: [hour]
            Default: 10
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ThresholdOverlandFlow">
            <summary>
            Root zone treshold for overland flow (TOF)
            Type: Dimensionless factor
            Unit: []
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ThresholdInterFlow">
            <summary>
            Root zone treshold for inter flow (TIF)
            Type: Dimensionless factor
            Unit: []
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ThresholdGroundWaterRecharge">
            <summary>
            Root zone treshold for recharging groundwater (TG)
            Type: Dimensionless factor
            Unit: []
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.TimeConstantBaseFlow">
            <summary>
            Time constant for the routing of base flow (CKBF)
            Type: Flow routing time constant
            Unit: [hour]
            Default: 2000
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.GwCAreaRatio">
            <summary>
            This variable holds the ratio between ground water reservoir and the catchment area (Carea).
            It is multiplied with the baseflow after updating the groundwater depth with infiltration.
            Type: Dimensionless factor
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.SpecificYield">
            <summary>
            Holds the specific yield for the groundwater reservoir (Sy).
            Type: Dimensionless factor
            Unit: []
            Default: 0.1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ConstGwDepthForZeroBaseFlow">
            <summary>
            The ground water depth at which the base flow equals zero (GWLBF0). Constant value, used when
            <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.UseSeasonalGwDepthForZeroBaseFlow"/> is false
            <para>
            Type: Ground water depth.
            Unit: [meter].
            Default: 10.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.UseSeasonalGwDepthForZeroBaseFlow">
            <summary>
            Flag telling if a seasonal variation of the ground water 
            depth corresponding to zero base flow should be used.
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.SeasonalRelativeGwDepth">
            <summary>
            Holds the relative seasonal depth used to calculated 
            the groundwater depth corresponding to a zero base flow. 
            Used when <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.UseSeasonalGwDepthForZeroBaseFlow"/>.
            Type: Dimensionless factor
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.MaxGwDepthForZeroBaseFlow">
            <summary>
            Holds the maximum groundwater depth corresponding to a zero base flow.
            Used when <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.UseSeasonalGwDepthForZeroBaseFlow"/>.
            Type: Ground water depth
            Unit: [meter]
            Default: 10
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.MinGwDepthForZeroBaseFlow">
            <summary>
            Holds the minimum groundwater depth corresponding to a zero base flow.
            Used when <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.UseSeasonalGwDepthForZeroBaseFlow"/>.
            Type: Ground water depth
            Unit: [meter]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.CapilarFluxParameter">
            <summary>
            Variable expressing at which ground water depth the capilar 
            flux is 1 mm/day when the lower zone is completely dry (GWLfl1).
            Type: Ground water depth
            Unit: [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.UseAbstraction">
            <summary>
            Flag telling if abstraction of ground water should be included.
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.LowerGwRechargeCoef">
            <summary>
            Variable holding the fraction of the infiltration to the ground water
            that enters the lower ground water storage (CQlow). If set to zero, 
            the lower ground water storage is not enabled.
            Type: Lower baseflow
            Unit: [percent]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.TimeConstantLowerBaseFlow">
            <summary>
            Variable holding the time constant for routing ground water in the lower ground water reservoir (CKlow).
            Type: Flow routing time constant
            Unit: [hour]
            Default: 10000
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.MinGwDepthForTranferToUpperStorage">
            <summary>
            Holds the minimum groundwater depth at which the groundwater is transfered to the upper storage (GWLmin).
            Type: Ground water depth
            Unit: [meter]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.IncludeSnow">
            <summary>
            This flag tells if snow is included in the calculation
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.IncludeElevationZones">
            <summary>
            This flag tells if the catchment should be divided into 
            elevation zones used when ice modelling is included.
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.UseSeasonalDegreeDayCoeff">
            <summary>
            This flag determines if a seasonal variation of the degree day coefficient should be used.
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.UseFullEvaporationOnSnow">
            <summary>
            Flag telling if the evaporation has to be reduced by the snow cover.
            If False (default MIKE 11) the evaporation will be reduced by the snow cover,
            if True (default MIKE URBAN), full evaporation occurs even on the ground where there is snow.
            <para>
            The procedure is only valid when one snow zone is defined. If more than one snow zone is defined
            this must be false.
            </para>
            <para>
            Type: bool.
            Default: False.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.SeasonalDegreeDayCoeffTimeSeries">
            <summary>
            This flag determines if the seasonal variation of the degree day
            coefficient is specified in a time series.
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.IncludeRadiation">
            <summary>
            This flag determines if a radiation coefficient should be use in the calculation.
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.IncludeRainfallDegreeDay">
            <summary>
            This flag decides if a rainfall degree day coefficient should be used.
            Default: false.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ConstDegreeDayCoef">
            <summary>
            Variable holding the constant degree day coefficient (Csnow).
            Type: Melting Coefficient
            Unit: [mm/Celcius/day]
            Default: 2.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.SeasonalDegreeDayCoeff">
            <summary>
            This array holds the seasonal variation of the degree day coefficient (Csnow).
            Type: melting Coefficient
            Unit: [mm/celcius/day]
            Default: 1, 1.5, 2, 3, 4, 4.5, 4.5, 4, 3, 2, 1.5, 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.BaseTemperature">
            <summary>
            Variable holding the base temperature defining if 
            the precipitation is snow or rain (T0).
            Type: temperature
            Unit: [celcius]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.RadiationCoeff">
            <summary>
            Variable holding the radiation coefficient (Crad);
            Type: Dimensionless factor
            Default: 0.0;
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.RainfallDegreeDayCoeff">
            <summary>
            Variable holding the rainfall degree day coefficient (Crain).
            Type: Rain Melting Coefficient per degree per time
            Unit: [/celcius/day]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.NumberOfSnowZones">
            <summary>
            Variable holding the number of inidividual snow zones.
            When set, all snow zone parameter arrays are recreated and reset to default values.
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ZoneElevation">
            <summary>
            Variables holding the elevations for the different zones.
            These values are not used during the calculation, but used
            elsewhere to calculate parameters in different snow zones.
            Type: Elevation
            Unit: [meter]
            Default: 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ZoneArea">
            <summary>
            Variables holding the areas of the different zones.
            Type: Catchment area
            Unit: [km2]
            Default: 0, not used in case of only one snow zone, the total catchment area is used instead.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ZoneMinimumStorage">
            <summary>
            Variables holding the smallest storage matching full coverage for the different zones
            Type: Storage depth
            Unit: [mm]
            Default: 100, if only one snow zone: 0.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ZoneMaximumStorage">
            <summary>
            Variables holding the maximum storage at the different zones.
            Excess storage is moved to lower snow zone.
            Type: Storage depth
            Unit: [mm]
            Default: 10000, if only one snow zone: 0.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ZoneMaxWaterInSnow">
            <summary>
            Variables holding the maximum amount of water contained in the snow.
            Type: Max Water
            Unit: [%]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ZoneDryTemperatureCorrection">
            <summary>
            Variables holding the dry temperature correction for the different zones.
            Type: Temperature correction
            Unit: [celcius]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ZoneWetTemperatureCorrection">
            <summary>
            Variables holding the wet temperature correction for the different zones.
            Type: Temperature correction
            Unit: [celcius]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ZonePrecipitationCorrection">
            <summary>
            Variables holding the precipitation correction for the different zones.
            Type: Precipitation correction
            Unit: [%]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.UseIrrigationModule">
            <summary>
            Flag telling if the irrigation module should be applied.
            Type: bool
            Default: False
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.InfiltrationRateAtFieldCapacity">
            <summary>
            Variable holding the infiltartion rate at field capacity (K0inf).
            Type: Infiltration
            Unit: [mm/h]
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.PercentageFromLocalGroundWater">
            <summary>
            Variable telling the percentage of irrigation source that originates from local ground water.
            Type: Dimensionless Factor
            Unit: []
            Default: 50
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.PercentageFromLocalRiver">
            <summary>
            Variable telling the percentage of irrigation source that originates from local river.
            Type: Dimensionless Factor
            Unit: []
            Default: 50
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.PercentageFromExternalRiver">
            <summary>
            Variable telling the percentage of irrigation source that originates from external river.
            Type: Dimensionless Factor
            Unit: []
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ExternalRiverName">
            <summary>
            Variable holding the name of the external river delivering irrigation water
            Type: River Name
            Default: Blank
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ExternalChainage">
            <summary>
            Variable holding the chainage of the external river delivering irrigation water.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.UseCropCoeffsAndLosses">
            <summary>
            Flag telling if seasonal crop coefficients and losses should be specified.
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.CropCoeffs">
            <summary>
            Variables holding the seasonal crop coefficientsas read from the file
            Type: Dimensionless factor
            Unit: []
            Default: 1
            <para>
            Used only when <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.UseCropCoeffsAndLosses"/> is set.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.LossesToGroundwater">
            <summary>
            Variables holding the seasonal losses in percent to groundwater
            Type: Dimensionless factor
            Unit: [%]
            Default: 0
            <para>
            Used only when <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.UseCropCoeffsAndLosses"/> is set.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.LossesToOverlandFlow">
            <summary>
            Variables holding the seasonal losses in percent to over land flow as read from the file
            Type: Dimensionless factor
            Unit: [%]
            Default: 0
            <para>
            Used only when <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.UseCropCoeffsAndLosses"/> is set.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.LossesToEvaporation">
            <summary>
            Variables holding the seasonal losses in percent due to evaporation as read from the file
            Type: Dimensionless factor
            Unit: [%]
            Default: 0
            <para>
            Used only when <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.UseCropCoeffsAndLosses"/> is set.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData">
            <summary>
             A lumped, conceptual rainfall-runoff model, simulating the overland-,
             inter-, and base-flow components as a function of the moisture 
             contents in four storages; snow, surface, root-zone and ground water.
             <para>
             This class contains data and parameters for setting up a NAM model, and is
             as such a data class only. Computational variables are not included in this class.
             It can be used to explore data and parameters required when setting up the NAM model.
             </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.#ctor(System.String,System.String)">
            <summary>
            Protected constructor
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._timeStepInHours">
            <summary>
            Time step used in the NAM rainfall runoff model
            Unit: [hours]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.Autocal">
            <summary>
            Autocalibration
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.Initial">
            <summary>
            Initial conditions for NAM state variables.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.Additional">
            <summary>
            Additional parameters for the NAM catchment.
            These parameters are not used for the calculation, but can be used to 
            calculate parameters for the catchment
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._surfaceStorageMax">
            <summary>
            Maximum surface/upper storage (Umax)
            Type: Storage Depth
            Unit: [mm]
            Default: 10.00
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._rootZoneStorageMax">
            <summary>
            Maximum storage in the root/lower zone
            Type: Storage depth
            Unit: [mm]
            Default: 100.00
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._overLandflowRunoffCoeff">
            <summary>
            Coefficient for overland flow runoff. It expresses the part
            of the net rainfall that run off as over land flow.
            Type: Dimensionless
            Unit: []
            Default: 0.5
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._timeConstantInterFlow">
            <summary>
            Time constant for the first linear reservoir routing of inter flow. For now it is identical to the time 
            constant for routing of the first over land flow.
            Type: Flow routing time constant
            Unit: [hour]
            Default: 1000
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._timeConstantFirstReservoir">
            <summary>
            Time constant for the first linear reservoir routing.
            Type: Flow routing time constant
            Unit: [hour]
            Default: 10
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._timeConstantSecondReservoir">
            <summary>
            Time constant for the second linear reservoir routing as used in the calculation.
            Type: Flow routing time constant
            Unit: [hour]
            Default: 10
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._thresholdOverlandFlow">
            <summary>
            Root zone treshold for overland flow
            Type: Dimensionless factor
            Unit: []
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._thresholdInterFlow">
            <summary>
            Root zone treshold for inter flow
            Type: Dimensionless factor
            Unit: []
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._thresholdGroundWaterRecharge">
            <summary>
            Root zone treshold for recharging groundwater
            Type: Dimensionless factor
            Unit: []
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._timeConstantBaseFlow">
            <summary>
            Time constant for the routing of base flow
            Type: Flow routing time constant
            Unit: [hour]
            Default: 2000
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._gwCAreaRatio">
            <summary>
            This variable holds the ratio between ground water reservoir and the catchment area.
            It is multiplied with the baseflow after updating the groundwater depth with infiltration.
            Type: Dimensionless factor
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._specificYield">
            <summary>
            Holds the specific yield for the groundwater reservoir as it is used in the calculaiton.
            Type: Dimensionless factor
            Unit: []
            Default: 0.1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._constGwDepthForZeroBaseFlow">
            <summary>
            Variable holding the ground water depth at which the base flow equals zero.
            Type: Ground water depth
            Unit: [meter]
            Default: 10
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._useSeasonalGwDepthForZeroBaseFlow">
            <summary>
            Flag telling if a seasonal variation of the ground water 
            depth corresponding to zero base flow should be used.
            Default: false
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._seasonalRelativeGwDepth">
            <summary>
            Holds the relative seasonal depth used to calculated 
            the groundwater depth corresponding to a zero base flow.
            Type: Dimensionless factor
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._maxGwDepthForZeroBaseFlow">
            <summary>
            Holds the maximum groundwater depth corresponding to a zero base flow.
            Type: Ground water depth
            Unit: [meter]
            Default: 10
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._minGwDepthForZeroBaseFlow">
            <summary>
            Holds the minimum groundwater depth corresponding to a zero base flow.
            Type: Ground water depth
            Unit: [meter]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._capilarFluxParameter">
            <summary>
            Variable expressing at which ground water depth the capilar 
            flux is 1 mm/day when the lower zone is completely dry.
            Type: Ground water depth
            Unit: [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._useAbstraction">
            <summary>
            Flag telling if abstraction of ground water should be included.
            Default: false
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._lowerGwRechargeCoef">
            <summary>
            Variable holding the percent of the infiltration to the ground water
            that enters the lower ground water storage.
            Type: Lower baseflow
            Unit: [%]
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._timeConstantLowerBaseFlow">
            <summary>
            Variable holding the time constant for routing ground water in the lower ground water reservoir.
            Type: Flow routing time constant
            Unit: [hour]
            Default: 10000
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._minGwDepthForTranferToUpperStorage">
            <summary>
            Holds the minimum groundwater depth at which the groundwater is transfered to the upper storage.
            Type: Ground water depth
            Unit: [meter]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._includeSnow">
            <summary>
            This flag tells if snow is included in the calculation
            Default: false
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._includeElevationZones">
            <summary>
            This flag tells if the catchment should be divided into 
            elevation zones used when ice modelling is included.
            Default: false
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._useSeasonalDegreeDayCoeff">
            <summary>
            This flag determines if a seasonal variation of the degree day coefficient should be used.
            Default: false
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._seasonalDegreeDayCoeffTimeSeries">
            <summary>
            This flag determines if the seasonal variation of the degree day
            coefficient is specified in a time series.
            Default: false
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._includeRadiation">
            <summary>
            This flag determines if a radiation coefficient should be use in the calculation.
            Default: false
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._includeRainfallDegreeDay">
            <summary>
            This flag decides if a rainfall degree day coefficient should be used.
            Default: false.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._constDegreeDayCoef">
            <summary>
            Variable holding the constant degree day coefficient as read from the file.
            Type: Melting Coefficient
            Unit: [mm/Celcius/day]
            Default: 2.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._seasonalDegreeDayCoeff">
            <summary>
            This array holds the seasonal variation of the degree day coefficient as read from the file.
            Type: melting Coefficient
            Unit: [mm/celcius/day]
            Default: 1, 1.5, 2, 3, 4, 4.5, 4.5, 4, 3, 2, 1.5, 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._baseTemperature">
            <summary>
            Variable holding the base temperature defining if 
            the precipitation is snow or rain
            Type: temperature
            Unit: [celcius]
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._radiationCoeff">
            <summary>
            Variable holding the radiation coefficient;
            Type: Dimensionless factor
            Unit: []
            Default: 0.0;
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._rainfallDegreeDayCoeff">
            <summary>
            Variable holding the rainfall degree day coefficient.
            Type: Rain Melting Coefficient per degree per time
            Unit: [/celcius/day]
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._numberOfSnowZones">
            <summary>
            Variable holding the number of inidividual snow zones.
            Default: 10
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._zoneElevation">
            <summary>
            Variables holding the elevations for the different zones. 
            Type: Elevation
            Unit: [meter]
            Default: 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._zoneArea">
            <summary>
            Variables holding the areas of the different zones.
            Type: Catchment area
            Unit: [km2]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._zoneMinimumStorage">
            <summary>
            Variables holding the minimum storage at full coverage for the different zones
            Type: Storage depth
            Unit: [mm]
            Default: 100
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._zoneMaximumStorage">
            <summary>
            Variables holding the maximum storage at the different zones
            Type: Storage depth
            Unit: [mm]
            Default: 10000
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._zoneMaxWaterInSnow">
            <summary>
            Variables holding the maximum amount of water contained in the snow.
            Type: Max Water
            Unit: [%]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._zoneDryTemperatureCorrection">
            <summary>
            Variables holding the dry temperature correction for the different zones.
            Type: Temperature correction
            Unit: [celcius]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._zoneWetTemperatureCorrection">
            <summary>
            Variables holding the wet temperature correction for the different zones.
            Type: Temperature correction
            Unit: [celcius]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._zonePrecipitationCorrection">
            <summary>
            Variables holding the precipitation correction for the different zones.
            Type: Precipitation correction
            Unit: [%]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._bUseFullEvaporationOnSnow">
            <summary>
            Flag telling if the evaporation has to be reduced by the snow cover.
            If False (default MIKE 11) the evaporation will be reduced by the snow cover,
            if True (default MIKE URBAN), full evaporation occurs even on the ground where there is snow
            Type: bool
            Default: False
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._useIrrigationModule">
            <summary>
            Flag telling if the irrigation module should be applied.
            Type: bool
            Default: False
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._infiltrationRateAtFieldCapacity">
            <summary>
            Variable holding the infiltartion rate at field capacity.
            Type: Infiltration
            Unit: [mm/hour]
            Default: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._percentageFromLocalGroundWater">
            <summary>
            Variable telling the percentage of irrigation source that originates from local ground water.
            Type: Dimensionless Factor
            Unit: []
            Default: 50
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._percentageFromLocalRiver">
            <summary>
            Variable telling the percentage of irrigation source that originates from local river.
            Type: Dimensionless Factor
            Unit: []
            Default: 50
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._percentageFromExternalRiver">
            <summary>
            Variable telling the percentage of irrigation source that originates from external river.
            Type: Dimensionless Factor
            Unit: []
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._externalRiverName">
            <summary>
            Variable holding the name of the external river delivering irrigation water
            Type: River Name
            Default: Blank
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._externalChainage">
            <summary>
            Variable holding the chainage of the external river delivering irrigation water.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._useCropCoeffsAndLosses">
            <summary>
            Flag telling if seasonal crop coefficients and losses should be specified.
            Default: false
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._cropCoeffs">
            <summary>
            Variables holding the seasonal crop coefficients
            Type: Dimensionless factor
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._lossesToGroundwater">
            <summary>
            Variables holding the seasonal losses in percent to groundwater
            Type: Dimensionless factor
            Unit: [%]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._lossesToOverlandFlow">
            <summary>
            Variables holding the seasonal losses in percent to over land flow as read from the file
            Type: Dimensionless factor
            Unit: [%]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData._lossesToEvaporation">
            <summary>
            Variables holding the seasonal losses in percent due to evaporation as read from the file
            Type: Dimensionless factor
            Unit: [%]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.TimeStep">
            <summary>
            Time step used by the rainfall runoff model
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.SurfaceStorageMax">
            <summary>
            Maximum surface/upper storage (Umax)
            Type: Storage Depth
            Unit: [mm]
            Default: 10.00
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.RootZoneStorageMax">
            <summary>
            Maximum storage in the root/lower zone (L_max)
            Type: Storage depth
            Unit: [mm]
            Default: 100.00
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.OverLandflowRunoffCoeff">
            <summary>
            Coefficient for overland flow runoff (CQOF). It expresses the part
            of the net rainfall that run off as over land flow.
            Type: Dimensionless
            Unit: []
            Default: 0.5
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.TimeConstantInterFlow">
            <summary>
            Time constant for the first linear reservoir routing of inter flow (CKIF)
            Type: Flow routing time constant
            Unit: [hour]
            Default: 1000
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.TimeConstantFirstReservoir">
            <summary>
            Time constant for the first linear reservoir routing (CK1), for overland and interflow.
            Type: Flow routing time constant
            Unit: [hour]
            Default: 10
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.UseTimeConstantSecondReservoir">
            <summary>
            Flag specifying if to use an independent time constant for the 
            second linear reservoir routing (CK2), for overland flow.
            If set to false, the time constant for the first and the second 
            linear reservoir will be the same, i.e. using only <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.TimeConstantFirstReservoir"/>
            <para>
            Default: true
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.TimeConstantSecondReservoir">
            <summary>
            Time constant for the second linear reservoir routing (CK2), for overland flow.
            Type: Flow routing time constant
            Unit: [hour]
            Default: 10
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.ThresholdOverlandFlow">
            <summary>
            Root zone treshold for overland flow (TOF)
            Type: Dimensionless factor
            Unit: []
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.ThresholdInterFlow">
            <summary>
            Root zone treshold for inter flow (TIF)
            Type: Dimensionless factor
            Unit: []
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.ThresholdGroundWaterRecharge">
            <summary>
            Root zone treshold for recharging groundwater (TG)
            Type: Dimensionless factor
            Unit: []
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.TimeConstantBaseFlow">
            <summary>
            Time constant for the routing of base flow (CKBF)
            Type: Flow routing time constant
            Unit: [hour]
            Default: 2000
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.GwCAreaRatio">
            <summary>
            This variable holds the ratio between ground water reservoir and the catchment area (Carea).
            It is multiplied with the baseflow after updating the groundwater depth with infiltration.
            Type: Dimensionless factor
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.SpecificYield">
            <summary>
            Holds the specific yield for the groundwater reservoir (Sy).
            Type: Dimensionless factor
            Unit: []
            Default: 0.1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.ConstGwDepthForZeroBaseFlow">
            <summary>
            The ground water depth at which the base flow equals zero (GWLBF0). Constant value, used when
            <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.UseSeasonalGwDepthForZeroBaseFlow"/> is false
            <para>
            Type: Ground water depth.
            Unit: [meter].
            Default: 10.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.UseSeasonalGwDepthForZeroBaseFlow">
            <summary>
            Flag telling if a seasonal variation of the ground water 
            depth corresponding to zero base flow should be used.
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.SeasonalRelativeGwDepth">
            <summary>
            Holds the relative seasonal depth used to calculated 
            the groundwater depth corresponding to a zero base flow. 
            Used when <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.UseSeasonalGwDepthForZeroBaseFlow"/>.
            Type: Dimensionless factor
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.MaxGwDepthForZeroBaseFlow">
            <summary>
            Holds the maximum groundwater depth corresponding to a zero base flow.
            Used when <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.UseSeasonalGwDepthForZeroBaseFlow"/>.
            Type: Ground water depth
            Unit: [meter]
            Default: 10
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.MinGwDepthForZeroBaseFlow">
            <summary>
            Holds the minimum groundwater depth corresponding to a zero base flow.
            Used when <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.UseSeasonalGwDepthForZeroBaseFlow"/>.
            Type: Ground water depth
            Unit: [meter]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.CapilarFluxParameter">
            <summary>
            Variable expressing at which ground water depth the capilar 
            flux is 1 mm/day when the lower zone is completely dry (GWLfl1).
            Type: Ground water depth
            Unit: [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.UseAbstraction">
            <summary>
            Flag telling if abstraction of ground water should be included.
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.LowerGwRechargeCoef">
            <summary>
            Variable holding the fraction of the infiltration to the ground water
            that enters the lower ground water storage (CQlow). If set to zero, 
            the lower ground water storage is not enabled.
            Type: Lower baseflow
            Unit: [percent]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.TimeConstantLowerBaseFlow">
            <summary>
            Variable holding the time constant for routing ground water in the lower ground water reservoir (CKlow).
            Type: Flow routing time constant
            Unit: [hour]
            Default: 10000
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.MinGwDepthForTranferToUpperStorage">
            <summary>
            Holds the minimum groundwater depth at which the groundwater is transfered to the upper storage (GWLmin).
            Type: Ground water depth
            Unit: [meter]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.IncludeSnow">
            <summary>
            This flag tells if snow is included in the calculation
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.IncludeElevationZones">
            <summary>
            This flag tells if the catchment should be divided into 
            elevation zones used when ice modelling is included.
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.UseSeasonalDegreeDayCoeff">
            <summary>
            This flag determines if a seasonal variation of the degree day coefficient should be used.
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.UseFullEvaporationOnSnow">
            <summary>
            Flag telling if the evaporation has to be reduced by the snow cover.
            If False (default MIKE 11) the evaporation will be reduced by the snow cover,
            if True (default MIKE URBAN), full evaporation occurs even on the ground where there is snow
            Type: bool
            Default: False
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.SeasonalDegreeDayCoeffTimeSeries">
            <summary>
            This flag determines if the seasonal variation of the degree day
            coefficient is specified in a time series.
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.IncludeRadiation">
            <summary>
            This flag determines if a radiation coefficient should be use in the calculation.
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.IncludeRainfallDegreeDay">
            <summary>
            This flag decides if a rainfall degree day coefficient should be used.
            Default: false.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.ConstDegreeDayCoef">
            <summary>
            Variable holding the constant degree day coefficient (Csnow).
            Type: Melting Coefficient
            Unit: [mm/Celcius/day]
            Default: 2.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.SeasonalDegreeDayCoeff">
            <summary>
            This array holds the seasonal variation of the degree day coefficient (Csnow).
            Type: melting Coefficient
            Unit: [mm/celcius/day]
            Default: 1, 1.5, 2, 3, 4, 4.5, 4.5, 4, 3, 2, 1.5, 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.BaseTemperature">
            <summary>
            Variable holding the base temperature defining if 
            the precipitation is snow or rain (T0).
            Type: temperature
            Unit: [celcius]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.RadiationCoeff">
            <summary>
            Variable holding the radiation coefficient (Crad);
            Type: Dimensionless factor
            Default: 0.0;
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.RainfallDegreeDayCoeff">
            <summary>
            Variable holding the rainfall degree day coefficient (Crain).
            Type: Rain Melting Coefficient per degree per time
            Unit: [/celcius/day]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.NumberOfSnowZones">
            <summary>
            Variable holding the number of inidividual snow zones.
            When set, all snow zone parameter arrays are recreated and reset to default values.
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.ZoneElevation">
            <summary>
            Variables holding the elevations for the different zones.
            These values are not used during the calculation, but used
            elsewhere to calculate parameters in different snow zones.
            Type: Elevation
            Unit: [meter]
            Default: 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.ZoneArea">
            <summary>
            Variables holding the areas of the different zones.
            Type: Catchment area
            Unit: [km2]
            Default: 0, not used in case of only one snow zone, the total catchment area is used instead.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.ZoneMinimumStorage">
            <summary>
            Variables holding the minimum storage for full coverage for each zone
            Type: Storage depth
            Unit: [mm]
            Default: 100, if only one snow zone: 0.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.ZoneMaximumStorage">
            <summary>
            Variables holding the maximum storage at the different zones
            Type: Storage depth
            Unit: [mm]
            Default: 10000, if only one snow zone: 0.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.ZoneMaxWaterInSnow">
            <summary>
            Variables holding the maximum amount of water contained in the snow.
            Type: Max Water
            Unit: [%]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.ZoneDryTemperatureCorrection">
            <summary>
            Variables holding the dry temperature correction for the different zones.
            Type: Temperature correction
            Unit: [celcius]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.ZoneWetTemperatureCorrection">
            <summary>
            Variables holding the wet temperature correction for the different zones.
            Type: Temperature correction
            Unit: [celcius]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.ZonePrecipitationCorrection">
            <summary>
            Variables holding the precipitation correction for the different zones.
            Type: Precipitation correction
            Unit: [%]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.UseIrrigationModule">
            <summary>
            Flag telling if the irrigation module should be applied.
            Type: bool
            Default: False
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.InfiltrationRateAtFieldCapacity">
            <summary>
            Variable holding the infiltartion rate at field capacity (K0inf).
            Type: Infiltration
            Unit: [mm/h]
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.PercentageFromLocalGroundWater">
            <summary>
            Variable telling the percentage of irrigation source that originates from local ground water.
            Type: Dimensionless Factor
            Unit: []
            Default: 50
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.PercentageFromLocalRiver">
            <summary>
            Variable telling the percentage of irrigation source that originates from local river.
            Type: Dimensionless Factor
            Unit: []
            Default: 50
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.PercentageFromExternalRiver">
            <summary>
            Variable telling the percentage of irrigation source that originates from external river.
            Type: Dimensionless Factor
            Unit: []
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.ExternalRiverName">
            <summary>
            Variable holding the name of the external river delivering irrigation water
            Type: River Name
            Default: Blank
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.ExternalChainage">
            <summary>
            Variable holding the chainage of the external river delivering irrigation water.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.UseCropCoeffsAndLosses">
            <summary>
            Flag telling if seasonal crop coefficients and losses should be specified.
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.CropCoeffs">
            <summary>
            Variables holding the seasonal crop coefficientsas read from the file
            Type: Dimensionless factor
            Unit: []
            Default: 1
            <para>
            Used only when <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.UseCropCoeffsAndLosses"/> is set.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.LossesToGroundwater">
            <summary>
            Variables holding the seasonal losses in percent to groundwater
            Type: Dimensionless factor
            Unit: [%]
            Default: 0
            <para>
            Used only when <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.UseCropCoeffsAndLosses"/> is set.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.LossesToOverlandFlow">
            <summary>
            Variables holding the seasonal losses in percent to over land flow as read from the file
            Type: Dimensionless factor
            Unit: [%]
            Default: 0
            <para>
            Used only when <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.UseCropCoeffsAndLosses"/> is set.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.LossesToEvaporation">
            <summary>
            Variables holding the seasonal losses in percent due to evaporation as read from the file
            Type: Dimensionless factor
            Unit: [%]
            Default: 0
            <para>
            Used only when <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamData.UseCropCoeffsAndLosses"/> is set.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentNamAdditional">
            <summary>
            Class containing additional parameters for <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentNam"/>.
            These parameters are not used for the calculation, but are used to 
            calculate parameters for the catchment
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNamAdditional.#ctor">
            <summary>
            Default constructor, setting default values.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamAdditional.LevelForReferenceTemperature">
            <summary>
            Varable holding the elevation for the reference temperature station.
            Type: elevation, Unit: [meter], Default: 0.0.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamAdditional.DryTemperatureLapseRate">
            <summary>
            Variable hoding the dry temperature lapse rate.
            Type: Temperature lapse rate, Unit: [celcius/100 meter], Default: -0.6.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamAdditional.WetTemperatureLapseRate">
            <summary>
            Variable holding the wet temperature lapse rate.
            Type: Temperature lapse rate, Unit: [celcius/100 meter], Default: -0.4.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamAdditional.LevelForReferencePrecipitation">
            <summary>
            Variable holding the elevation of the reference precipitation station.
            Type: Elevation, Unit: [meter], Default: 0.0.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamAdditional.PrecipitationCorrectionRate">
            <summary>
            Variable holding the precipitation correction for the different snow zones.
            Type: Precipitation Correction, Unit: [%/100m], Default: 2.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNamAdditional.CalculateTemperatureCorrections(DHI.Mike1D.RainfallRunoffModule.CatchmentNam)">
            <summary>
            Calculates and updates the wet and dry temperature correction values for each snow zone, from
            the <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamAdditional.WetTemperatureLapseRate"/>, <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamAdditional.DryTemperatureLapseRate"/> and 
            <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamAdditional.LevelForReferenceTemperature"/>.
            <para>
            The <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ZoneElevation"/> must be defined. It updates 
            the <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ZoneDryTemperatureCorrection"/> and
            the <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ZoneWetTemperatureCorrection"/>.
            </para>
            </summary>
            <param name="nam">NAM catchment to update</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNamAdditional.CalculatePrecipitationCorrections(DHI.Mike1D.RainfallRunoffModule.CatchmentNam)">
            <summary>
            Calculates and updates the precipitation correction values for each snow zone, from
            the <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamAdditional.PrecipitationCorrectionRate"/> and 
            <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamAdditional.LevelForReferencePrecipitation"/>.
            <para>
            The <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ZoneElevation"/> must be defined. It updates 
            the <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.ZonePrecipitationCorrection"/>
            </para>
            </summary>
            <param name="nam">NAM catchment to update</param>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial">
            <summary>
            Initial values that is required by the NAM catchment model.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.RelativeSurfaceStorageContent">
            <summary>
            Initial relative water content in the surface storage. 
            Relative to <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.SurfaceStorageMax"/>
            <para>
            Type: Dimensionless, Unit: [], Default: 0.0
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.RelativeRootZoneStorageContent">
            <summary>
            Initial relative water content in the root zone.
            Relative to <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.RootZoneStorageMax"/>
            <para>
            Type: Dimensionless, Unit: [], Default: 0.0
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.OverlandFlow">
            <summary>
            Initial overland flow
            <para>
            Type: Discharge, Unit: [m3/s], Default: 0.0
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.OverlandFlowFirstReservoir">
            <summary>
            Initial overland flow from first reservoir
            <para>
            Type: Discharge, Unit: [m3/s], Default: 0.0
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.OverLandFirstReservoirStorage">
            <summary>
            Initial amount of water stored in the first overland reservoir.
            <para>
            Type: Height, Unit: [mm], Default: 0.0
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.OverLandSecondReservoirStorage">
            <summary>
            Initial amount of water stored in the second overland reservoir.
            <para>
            Type: Height, Unit: [mm], Default: 0.0
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.InterFlow">
            <summary>
            Initial interflow
            <para>
            Type: Discharge, Unit: [m3/s], Default: 0.0
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.InterFlowFirstReservoir">
            <summary>
            Initial interflow from first reservoir
            <para>
            Type: Discharge, Unit: [m3/s], Default: 0.0
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.GroundWaterDepth">
            <summary>
            Initial ground water depth.
            <para>
            Type: Ground water depth, Unit: [m], Default: 10.0
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.LowerBaseFlow">
            <summary>
            Initial lower base flow
            <para>
            Type: Discharge, Unit: [m3/s], Default: 0.0
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.NumberOfSnowZones">
            <summary>
            Variable holding the number of snow zones. Setting this variable should update the 
            <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.SnowStorage"/> and <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.WaterRetention"/> accordingly, or at least
            make sure that this number of snow zones as a minimum is available.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.SnowStorage">
            <summary>
            Initial snow storage used when zonal approach is used. The amount of water present in the form of snow or ice.
            <para>
            Type: Water content as snow, Unit: [mm], Default: 0.0, Size: <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.NumberOfSnowZones"/>
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.WaterRetention">
            <summary>
            Initial water retention used when zonal approach is used, the amount of water (melted) that are retained within the snow.
            <para>
            Type: Water content as water (melted) in snow, Unit: [mm], Default: 0.0, Size: <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData.NumberOfSnowZones"/>
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.FinalConditions(DHI.Mike1D.RainfallRunoffModule.CatchmentNam)">
            <summary>
            Apply some final conditions and modificatins
            <para>
            This is currently used to set initial conditions of derived values
            for hotstart, such as capillary flux, from the hotstart file, making
            such values equal to the hotstart value, even though this has no
            effect on the runoff results.
            </para>
            </summary>
            <param name="nam">Nam catchment to set conditions to.</param>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial">
            <summary>
            Default initial conditions for NAM. 
            <list type="bullet">
            <item>
              Groundwater depth can either be set directly, or it can be calculated from a baseflow. 
              Use the <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.UseInitialBaseFlow"/> to decide which to use.
            </item>
            <item>
              <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.OverLandFirstReservoirStorage"/> and <see cref="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.get_OverLandSecondReservoirStorage"/>
              are calculated by the NAM catchment, from <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.OverlandFlowFirstReservoir"/>, <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.OverlandFlow"/>
              and other paramters within NAM (see <see cref="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalcInitialOverlandFirstReservoirStorageFromFlow"/> and
              <see cref="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalcInitialOverlandSecondReservoirStorageFromFlow"/>), 
              i.e. they can not be set individually. This is historically the default behavior.
            </item>
            </list>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial._relativeSurfaceStorageContent">
            <summary>
            Initial relative water content in the surface storage
            Type: Dimensionless
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial._relativeRootZoneStorageContent">
            <summary>
            Initial relative water content in the root zone
            Type: Dimensionless
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial._overlandFlow">
            <summary>
            Initial overland flow
            Type: Discharge
            Unit: [m3/s]
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial._overlandFlowFirstReservoir">
            <summary>
            Initial overland flow from first reservoir
            Type: Discharge
            Unit: [m3/s]
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial._interFlow">
            <summary>
            Initial interflow
            Type: Discharge
            Unit: [m3/s]
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial._interFlowFirstReservoir">
            <summary>
            Initial interflow from first reservoir
            Type: Discharge
            Unit: [m3/s]
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial._baseFlow">
            <summary>
            Initial base flow
            Type: Discharge
            Unit: [m3/s]
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial._useInitialBaseFlow">
            <summary>
             Flag telling if an initial baseflow is specified. When called from MIKE11 it is true, if called from Mouse it is false.
             Type: flag.
             Unit: [].
             Default: true.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial._groundWaterDepth">
            <summary>
            Initial groundwater depth
            Type: ground water depth
            Unit: [m]
            Default: 10.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial._lowerBaseFlow">
            <summary>
            Initial lower base flow
            Type: Discharge
            Unit: [m3/s]
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial._snowStorage">
            <summary>
            Initial snow storage used when zonal approach is used.
            Type: Snow Water Content
            Unit: [mm]
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial._waterRetention">
            <summary>
            Initial water retention used when zonal approach is used.
            Type: Snow Cover
            Unit: [mm]
            Default: 0.0
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.#ctor(DHI.Mike1D.RainfallRunoffModule.CatchmentNam,System.Int32)">
            <summary>
            Default constructor
            </summary>
            <param name="catchmentNam">Catchment that the initial conditions belongs to</param>
            <param name="numberOfSnowZones"> </param>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.RelativeSurfaceStorageContent">
            <summary>
            Initial relative water content in the surface storage
            Type: Dimensionless
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.RelativeRootZoneStorageContent">
            <summary>
            Initial relative water content in the root zone
            Type: Dimensionless
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.OverlandFlow">
            <summary>
            Initial overland flow
            Type: Discharge
            Unit: [m3/s]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.OverlandFlowFirstReservoir">
            <summary>
            Initial overland flow from first reservoir
            Type: Discharge
            Unit: [m3/s]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.OverLandFirstReservoirStorage">
            <summary>
            Initial amount of water stored in the first overland reservoir.
            Unit: [mm]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.OverLandSecondReservoirStorage">
            <summary>
            Initial amount of water stored in the second overland reservoir.
            Unit: [mm]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.InterFlow">
            <summary>
            Initial interflow
            Type: Discharge
            Unit: [m3/s]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.InterFlowFirstReservoir">
            <summary>
            Initial interflow from first reservoir
            Type: Discharge
            Unit: [m3/s]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.BaseFlow">
            <summary>
            Initial base flow
            Type: Discharge
            Unit: [m3/s]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.UseInitialBaseFlow">
            <summary>
             Flag telling the ground water storage is initialised by a baseflow and ground water depth is derived from the baseflow, or
             if initialised by an initial groundwater depth and the base flow is derived from the depth.
             <para>When called from MIKE11 it is true, if called from Mouse it is false.</para>
             <para>Default: true</para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.GroundWaterDepth">
            <summary>
            Initial ground water depth. If <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.UseInitialBaseFlow"/>,
            the ground water depth is calculated from the base flow.
            Type: Ground water depth
            Unit: [m]
            Default: 10.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.LowerBaseFlow">
            <summary>
            Initial lower base flow
            Type: Discharge
            Unit: [m3/s]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.NumberOfSnowZones">
            <summary>
            Variable holding the number of snow zones. Setting this variable updates the 
            <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.SnowStorage"/> and <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentNamInitial.WaterRetention"/> 
            accordingly.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.SnowStorage">
            <summary>
            Initial snow storage used when zonal approach is used.
            Type: Snow Water Content 
            Unit: [mm]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.WaterRetention">
            <summary>
            Initial water retention used when zonal approach is used.
            Type: Max water
            Unit: [%]
            Default: 0.0
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitial.FinalConditions(DHI.Mike1D.RainfallRunoffModule.CatchmentNam)">
            <inhertitdoc/>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitialFromHotstart">
            <inhertitdoc/>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitialFromHotstart.#ctor(DHI.Mike1D.RainfallRunoffModule.RRHotstartCatchmentData,DHI.Mike1D.RainfallRunoffModule.CatchmentNam,DHI.Mike1D.Generic.IDiagnostics)">
            <inhertitdoc/>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitialFromHotstart.FinalConditions(DHI.Mike1D.RainfallRunoffModule.CatchmentNam)">
            <inhertitdoc/>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitialFromHotstart.LoadFromHotFile(System.Double,DHI.Mike1D.Generic.IQuantity,System.Double,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Load value from hot start file, use default value if hot start quantity was not found.
            </summary>
            <param name="defaultValue">Value used, if hot start quantity was not found.</param>
            <param name="quantity">Hot start quantity to get value from</param>
            <param name="hotValueFactor">Factor to multiply value from hotstart with. Hotstart values are in SI</param>
            <param name="diagnostics">Where to report errors</param>
            <returns>Value</returns>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitialFromHotstart.RelativeSurfaceStorageContent">
            <inhertitdoc/>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitialFromHotstart.RelativeRootZoneStorageContent">
            <inhertitdoc/>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitialFromHotstart.OverlandFlow">
            <inhertitdoc/>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitialFromHotstart.OverlandFlowFirstReservoir">
            <inhertitdoc/>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitialFromHotstart.OverLandFirstReservoirStorage">
            <inhertitdoc/>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitialFromHotstart.OverLandSecondReservoirStorage">
            <inhertitdoc/>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitialFromHotstart.InterFlow">
            <inhertitdoc/>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitialFromHotstart.InterFlowFirstReservoir">
            <inhertitdoc/>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitialFromHotstart.GroundWaterDepth">
            <inhertitdoc/>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitialFromHotstart.LowerBaseFlow">
            <inhertitdoc/>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitialFromHotstart.NumberOfSnowZones">
            <inhertitdoc/>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitialFromHotstart.SnowStorage">
            <inhertitdoc/>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNamInitialFromHotstart.WaterRetention">
            <inhertitdoc/>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentNam">
            <summary>
             A lumped, conceptual rainfall-runoff model, simulating the overland-,
             inter-, and base-flow components as a function of the moisture 
             contents in four storages; snow, surface, root-zone and ground water.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.Validate(DHI.Mike1D.Generic.IDiagnostics,System.Boolean)">
            <summary>
            Check that the NAM catchment has been properly initialised
            To be called at the end of Initialize() using <paramref name="isInitializing"/> true.
            Validate() is called before Initialize()
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._rainfallFromForcing">
            <summary>
            This is the rainfall that must be applied during the calculation time step measured in mm/hour.
            unit: [mm/hour]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._abstractionFromForcing">
            <summary>
            Abstraction through abstraction boundary source
            unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._evaporationFromForcing">
            <summary>
            This is the evaporation that must be applied during the calculation time step.
            unit: [mm/hour]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._radiationFromForcing">
            <summary>
            This is the radiation from a time series that must be applied during the calculation time step.
            Unit: [Einstein/m2/d] 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._degreeDayCoeffFromForcing">
            <summary>
            This is the degree day coefficient from a time series that must be applied during the calculation time step.
            Unit: [mm/Celcius/d]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._irrigationFromForcing">
            <summary>
            This is the irrigation from a time series that must be applied during the calculation time step.
            Unit: [mm/hour]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._surfaceStorage">
            <summary>
            State variable holding the amount stored in the surface/upper storage
            Type: Storage depth
            Unit: [mm]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._rootZoneStorage">
            <summary>
            State variable holding the amount stored in the root/lower zone.
            Type: Infiltration
            Unit: [mm]
            Default: 0.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._groundWaterDepth">
            <summary>
            State variable holding the depth of the groundwater below surface.
            Type: Ground water depth.
            Unit: [meter]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._baseFlow">
            <summary>
            State variable holding the base flow in the latest time step.
            Type: Discharge
            Unit: [mm/hour]
            Default: 0.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._baseFlowLower">
            <summary>
            State variable holding the base flow from the lower groundwater reservoir in the latest time step.
            Type: Discharge
            Unit: [mm/hour]
            Default: 0.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._interFlowFirstReservoir">
            <summary>
            State variable holding the interflow routed through the first linear reservoir.
            Unit: [mm/hour]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._interFlowOutflow">
            <summary>
            State variable holding the interflow routed through the second linear reservoir.
            Unit: [mm/hour]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._overLandFirstReservoirFlow">
            <summary>
            State variable holding the overland flow routed through the first of two linear reservoirs.
            Unit: [mm/hour]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._overLandOutflow">
            <summary>
            State variable holding information on the overland flow routed through the second of two linear reservoirs.
            Unit: [mm/hour]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._overLandFirstReservoirStorage">
            <summary>
            State variable holding the amount stored in the first reservoir routing the overland flow.
            Unit: [mm]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._overLandSecondReservoirStorage">
            <summary>
            State variable holding the amount stored in the second reservoir routing the overland flow.
            Unit: [mm]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._snowStorage">
            <summary>
            State variable holding the amount of snow stored.
            Unit: [mm]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._snowWaterRetention">
            <summary>
            State variable holding the water retention in the snow
            Unit: [mm]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._effectiveLossesToGroundwater">
            <summary>
            Variables holding the seasonal losses in percent to groundwater,
            computational variable, if not included, it contains 0 everywhere
            <para>
            Type: Dimensionless factor
            Unit: [%]
            Default: 0
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._effectiveLossesToOverlandFlow">
            <summary>
            Variables holding the seasonal losses in percent to over land flow,
            computational variable, if not included, it contains 0 everywhere
            Type: Dimensionless factor
            Unit: [%]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._effectiveLossesToEvaporation">
            <summary>
            Variables holding the seasonal losses in percent due to evaporation,
            computational variable, if not included, it contains 0 everywhere
            Type: Dimensionless factor
            Unit: [%]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._interFlowInflow">
            <summary>
            Variable holding the amount of water that enters the first interflow reservoir during one time step
            Unit: [mm]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._netRainfall">
            <summary>
            Variable holding the net rainfall during one time step, 
            where the net rainfall in this context is the excess water
            from the surface storage (and not the net-rainfall as 
            is output in the results).
            Type:Rainfall
            Unit: [mm/timestep]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._infiltrationToGroundWater">
            <summary>
            Variable holding the amount that infiltrates to the ground water during the one time step
            Type: Infiltration
            Unit: [mm]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._actualEvaporation">
            <summary>
            Variable holding the actual evaporation.
            Type: Evaporation
            Unit: [mm/hour]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._overLandInflow">
            <summary>
            Variable holding the amount of water that enters the overland first reservoir during one time step
            Unit: [mm/timestep]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._capilarFlux">
            <summary>
            Variable holding the total amount of water undergoing capillar movement during one time step.
            Unit: [mm]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._totalRunoff">
            <summary>
            Variable holding the total runoff from the catchment.
            Unit: [mm/hour]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._interAndBaseFlow">
            <summary>
            Variable holding the sum of the interflor and the groundwaterflow.
            Unit: [mm/hour]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._totalInfiltration">
            <summary>
            Variable holding the total amount of water that infiltrates during one time step.
            Unit: [mm/timestep]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._snowTemperature">
            <summary>
            Variable holding the temperature in the snow zone.
            Unit: [Celcius]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._snowPrecipitation">
            <summary>
            Variable holding the amount of precipitation falling in each zone. It is determined as rainfall from forcing multiplied with the zone correction.
            Unit: [mm/hour]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._snowCombinedDegreeDayCoeff">
            <summary>
            This variable holds the combined degree day coefficient, i.e. the degree day coefficient and the rain degree day coeffient
            multiplied with the precipitation.
            Unit: [mm/Celcius/day]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._snowAreaCoverage">
            <summary>
            Variable holding the fraction of the catchment that is covered with snow.
            Unit: [dimensionless]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam._evaporationFromSnow">
            <summary>
            This variable holds the evaporation taking place from a snow covered surface measured in mm/hour.
            Unit: [mm/hour]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.MaxSliceSizeForInfiltration">
            <summary>
            Max heigth of 'slices' when infiltrating the net rainfall
            Type: Storage depth
            Unit: [mm]
            Default: 5.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.MinOverlandFlowForNonLinearRouting">
            <summary>
            The minimum flow for which non linear routing is applied for overland flow.
            Type: Over land flow
            Unit: [mm/hour]
            Default 0.4
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.ConstForNonLinearRouting">
            <summary>
            This constat is used when the time constant is modified in order
            to use non linear routing of overland flow.
            Type: Dimensionless
            Unit: []
            Default: -0.4
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.#ctor(System.String)">
            <summary>
             Construct NAM catchment
            </summary>
            <param name="name">name of catchment and model ID</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.#ctor(System.String,System.String)">
            <summary>
             Construct NAM catchment
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.Validate">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.Initialize(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize Rainfall Runoff model. Sets up static data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.InitialiseStateVariableTable">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.Type">
            <summary>
            The type of catchment: NAM, Urban A etc
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.VolumeInCatchmentAtStart">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.VolumeInCatchment">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.Prepare(System.DateTime,System.DateTime,DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Prepare Rainfall Runoff model. Sets up dynamic data so that the model is ready for first time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalcInitialGWDepthFromBaseflow(System.Double)">
            <summary>
            Calculates an initial ground water depth from a base flow
            </summary>
            <param name="baseFlow">Base flow</param>
            <returns>Initial ground water depth</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalcInitialOverlandFirstReservoirStorageFromFlow">
            <summary>
            Calculate initial <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.OverLandFirstReservoirStorage"/> from <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.OverLandFirstReservoirFlow"/> 
            (and <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.OverLandOutflow"/>), i.e. these must be set first.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalcInitialOverlandSecondReservoirStorageFromFlow">
            <summary>
            Calculate initial <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.OverLandSecondReservoirStorage"/> from <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.OverLandOutflow"/> 
            (and <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.OverLandFirstReservoirFlow"/>), i.e. these must be set first.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.Update(System.DateTime)">
            <summary>
             Update internal state of catchment to time Time()
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.TakeTimeStep">
            <summary>
            This procedure forwards the NAM calculation with one time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalculateStatistics">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalculateYearlyStatistics">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.ResetEngineStateVariables">
            <summary>
            This routine resets certain state variables to zero before making calculations for the next time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.UpdateForcings(System.DateTime)">
            <summary>
            This routine updates the forcings that are used in several sub-routines:
            rainfall, evaporation, temperature, radiation, degree day coefficient and irrigation.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.SnowModule(System.DateTime)">
            <summary>
            This routime forwards the snow module one time step. The calculated runoff
            from snow is applied as input to the upper storage together with rain and evaporation.
            </summary>
            <param name="timeNew">The actual time during the simulation</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.GetAreaCoverage(System.Double,System.Double)">
            <summary>
            This function returns the new value of the snow coverage
            </summary>
            <param name="minimumStorageforFullCoverage">The minimim storage for full coverage</param>
            <param name="presentStorage">The present value of the snow cover</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.GetDegreeDayCoeff(System.DateTime)">
            <summary>
            This routine returns the degree day coefficient. It is either taken from a time series,
            based on a tabulated seasonal variation or simply a constant value.
            </summary>
            <param name="simTime">The actual time during the simlation.</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.GetDegreeCoeffFromTable(System.DateTime)">
            <summary>
            This routine returns the degree day coefficient based on a tabulated seasonal variation.
            </summary>
            <param name="simTime">Actual simulation time</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.GetRainfallDegreeDayCoeff">
            <summary>
            This routine returns the rainfall degree day coefficient. If the rainfall degree day
            coefficient is applied it takes the value from the data file otherwise it returns zero.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.GetRadiationCoeff">
            <summary>
            This routine returns the radiationcoefficient.
            If radiation is applied it takes the value from the data file otherwise it returns zero.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.UpdateUpperStorageBasedOnForcings(System.DateTime)">
            <summary>
            This rutine updates the content in the upper storage base on rainfall and evaporation. 
            If the snow module is active it is based on the runoff from the snow and the evaporation from the snow.
            In situations where irrigation module is active the amount of applied irrigation water
            and the associated losses are taken into account. Theses losees will include losses to groundwater,
            overland flow and evaporation. The evaporation losses will replace the evaporation losses otherwise specified.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.InputToUpperStorage">
            <summary>
            This function returns the rainfall/inflow that must be applied to the upper storage.
            If snow is included the variable _runofffromSnow is applied otherwise the RainfallFromForcing is used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.InfiltrateUsingIrrigationModule">
            <summary>
            This routine infiltrates from surface storage when irrigation module is activated.
            In these situations the infiltration rate at field capacity determines the infiltration 
            to lower zone and the ground water. The upper storage is also updated by subtracting
            the infiltrated amount as well as the evaporation.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalculateInterFlowToBeRoutedAndAdjustUpperStorage">
            <summary>
            This routine calculates the amount that must be routed as interflow and subtracts it from the upper storage accordingly. 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalculateNetRainfallAndAdjustUpperStorage">
            <summary>
            This routine updates the net rainfall by evaluating the amount stored in the upper storage. 
            If the net rainfall is positive the amount is subtracted from the upper storage. If the net rainfall is negative the upper storage will equal zero.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.IrrigationLossesAndNetRainfallAsOverLandFlow(System.DateTime)">
            <summary>
            In situations where the irrigation module is active the net rain fall must be routed as overland flow.
            Further the irrigation losses as over land flow is added to the amount that must be routed as overland flow.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.DistributeNetRainFall">
            <summary>
            This routine distributes the net rainfall. It is done by dividing the total net
            rainfall available into several 'slices' which are thus distributed among overland
            flow, infiltration to the rootzone and infiltration to the ground water reservoir.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalculateOfActualEvaporation">
            <summary>
            This routine calculates the actual evaporation. Initialy it is set equal to either the _evaporationFromForcing
            or the _evaporationFromSnow (the later is used when the snow module is active).
            In situations when the net rainfall is negative evaporation will take place from the rootzone.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.AdjustRootZoneContentAndActualEvaporation(System.Double)">
            <summary>
            This routine adjust actual evaporation and root zone content when evaporation takes place from the rootzone
            </summary>
            <param name="deficit"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalculateCapilarFlux">
            <summary>
            This routine calculates the capilar flux form the ground water to the lower zone. In case the maximum
            content of the lower zone is exceeded the excess water is stored in the upper storage. If the maximum
            content of the upper storage is exceeded the excess water is routed as overflow.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalculateNewGroundWaterDepth(System.DateTime)">
            <summary>
            Calculates the ground water depth from a mass balance calculation.
            The mass balance includes infiltration, transport to secondary ground water
            reservoir, capilar fluxes and pumping. Further, the massbalance includes
            operational lossses that infiltrates to the groundwater and irrigation water abstracted from the groundwater.
            </summary>
            <param name="timeNew">The time as a DateTime type</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalculateBaseFlow(System.Boolean)">
            <summary>
            This routine calculates the base flow. If the groundwater depth is smaller the groundwater depth matching zero
            flow the baseflow equals zero. This corresponds to the situation where the groundwater table is above the depth 
            at which the baseflow stops.
            </summary>
            <param name="initialCalculation">Flag telling if this routine is called during initialisation or during calculation.
              True means it is called during initialisation, false means during calculation. It is true when NAM is called from MOUSE.
              When called from MIKE11 it is false since here an initial baseflow is specified.</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalculateGwDepthForZeroBaseFlow(System.DateTime)">
            <summary>
            This routine finds the ground water depth at which there is zero base flow.
            This depth can be either constant or vary through out the year.
            </summary>
            <param name="x">The time as a DateTime type</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalculateLowerBaseFlow">
            <summary>
            This routine calculates the discharge from the lower ground water storage.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.TransferGroundWaterToSurfaceStorage">
            <summary>
            This procedure transfer excess water in the ground water to the upper storage. In case the maximum
            limit for the upper storage is exceeded the excess water is routed as over land flow.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.RoutingOverLandFlow">
            <summary>
            This routine routes the over land flow through two reservoirs.
            It calculates the overland flow routing constants, ck1 and  ck2, 
            dependent of the depth of overland flow, i.e. non-linear routing 
            of flow of OF > OFMIN  
            General parameter values :
               OFMIN = 0.4 mm/h  
               alfa  = -0.4   (for Manning equation ) 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.DetermineRoutingCoeffFactorForOverLandFlow">
            <summary>
            This routine determines the factor that must be mulitiplied with the routing time constants
            in order to get the final constants for the two linear reservoirs.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalcTimeConstantFirstReservoir">
            <summary>
            This functione returns the final time constant needed to route overland flow through the first linear reservoir.
            Unit: [hour]
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalcTimeConstantSecondReservoir">
            <summary>
            This functione returns the final time constant needed to route overland flow through the second linear reservoir.
            Unit: [hour]
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.RoutingInterFlow">
            <summary>
            Routing of interflow through two reservoirs. Be aware that it is not possible to have individual
            timeconstants for the two reservoirs when routing interflow. So the routing constant when 
            routing through the second reservoir is the same as when routing through the first reservoir.
            In case it will be changed it is easy to implement. Just use 'TimeConstantSecondreservoir' when routing
            through the seond reservoir.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CalculateDerivedStateVariables">
            <summary>
            This routine calulates the total runoff, the irrigation supply (if irrigation module is active) and combined interflow and groundwater flow.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.TransferToStateVariableTable">
            <summary>
            This routine stores the calculated variables in variables ready for export. The values in these state variable 
            corresponds to the values written to the result file. All discharge variables are subject to a unit conversion. 
            During the calculation discharges are calculated using the unit mm/hour and must therefor be converted into m3/s. 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.LinearRouting(System.Double,System.Double,System.Double)">
            <summary>
            This routine makes a linear routing.
            </summary>
            <param name="c1">Routing coefficient</param>
            <param name="qOld">Pevious value of outflow from reservoir</param>
            <param name="qNew">Present inflow to reservoir</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.RouteExcessWaterInSurfaceStorageAsOverFlow">
            <summary>
            This routine will take any excess water in the surface storage and route it as overflow.
            After this the surface storage will equal the maximum allowed surface storage.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.GetEvaporation">
            <summary>
            This function returns the evaporation/outflow that must be applied to the upper storage.
            If snow is included the variable _evaporationFromSnow is applied otherwise the _evaporationFromForcing is used.
            Unit: [mm/hour]
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.GetActRain">
            <summary>
            This function returns the actual rain on the catchment. If snow is not included it returns 
            the rainfall specified in the boundary. In case the snow module is activated the actual rain
            is  calculated by adding the precipitaions on the different zones.
            Unit: [mm/hour]
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.GetMonthNumbers(System.DateTime,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            This routine finds the numbers of the months and the nuber of days that
            must be used to interpolate in data representing a seasonal variation.
            </summary>
            <param name="simTime">Present simulation time</param>
            <param name="m1">The first month that must be used for interpolation in seasonal data.</param>
            <param name="m2">The second month hat must be used for interpolation in seasonal data.</param>
            <param name="day">The number of days that must be used for interpolation in seasonal data.</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.TimeValueGetterRR(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.IQuantity@)">
            <summary>
            Get value setter for the specified data quantity
            </summary>
            <param name="quantity">Requested Quantity</param>
            <param name="actualQuantity">Actual quantity, may differ in description</param>
            <returns>A value getter delegate that can set the value</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.GetRequiredTypes">
            <summary>
            Returns a list of CatchmentSourceBoundaryTypes that need to be set. 
            The list will always contains Rainfall and Evaporation if they have not been set yet.
            The list should be empty when this is called for M11, because the 
            source boundaries have already been set.
            </summary>
            <returns>A list of CatchmentSourceBoundaryTypes</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.ApplyBoundary(DHI.Mike1D.BoundaryModule.CatchmentSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.IBoundarySource)">
            <summary>
             Apply source boundary to the catchment. The boundary will be set depending on the type.
             It will throw an exception if type in not correct or if Discharge type is used.
             <para>
             If a boundoary source is already set, it will be overridden.
             </para>
             </summary>
            <param name="catchmentSourceBoundaryType"></param>
            <param name="catchmentSourceBoundary">Boundary to apply</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.ApplyBoundary(DHI.Mike1D.BoundaryModule.GlobalSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.GlobalGeoLocatedSource)">
            <summary>
            Apply boundary for Global source boundary type
            </summary>
            <param name="type"></param>
            <param name="geoLocatedSource"></param>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.BoundaryAbstraction">
            <summary>
            Abstraction boundary. 
            The boundary must cover the entire simulation period. 
            Unit: [m/s], for accumulated types (abstraction-depth): [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.BoundaryRainfall">
            <summary>
             Rainfall boundary
             The boundary must cover the entire simulation period. 
             Unit: [m/s], for accumulated types: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.BoundaryEvaporation">
            <summary>
            Evaporation boundary
            The boundary must cover the entire simulation period. 
            Unit: [m/s], for accumulated types: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.BoundaryTemperature">
            <summary>
            Temperature boundary
            The boundary must cover the entire simulation period. 
            Unit: [C] celcius.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.BoundarySourceIrrigation">
            <summary>
            Irrigation boundary
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.BoundaryRadiation">
            <summary>
            Radiation boundary
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.BoundaryDayCoeff">
            <summary>
            Day cofficient boundary
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.SurfaceStorage">
            <summary>
            State variable holding the amount stored in the surface/upper storage
            Type: Storage depth
            Unit: [mm]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.RootZoneStorage">
            <summary>
            State variable holding the amount stored in the root/lower zone.
            Type: Infiltration
            Unit: [mm]
            Default: 0.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.GroundWaterDepth">
            <summary>
            State variable holding the depth of the groundwater below surface.
            Type: Ground water depth.
            Unit: [meter]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.BaseFlowLower">
            <summary>
            State variable holding the base flow from the lower groundwater reservoir in the latest time step.
            Type: Discharge
            Unit: [mm/hour]
            Default: 0.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.InterFlowFirstReservoir">
            <summary>
            State variable holding the interflow routed through the first linear reservoir.
            Unit: [mm/hour]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.InterFlowOutflow">
            <summary>
            State variable holding the interflow routed through the second linear reservoir.
            Unit: [mm/hour]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.OverLandFirstReservoirFlow">
            <summary>
            State variable holding information on the overland flow routed through the first of two linear reservoirs.
            Unit: [mm/hour]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.OverLandOutflow">
            <summary>
            State variable holding information on the overland flow routed through the second of two linear reservoirs.
            Unit: [mm/hour]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.OverLandFirstReservoirStorage">
            <summary>
            State variable holding the amount stored in the first reservoir routing the overland flow.
            Unit: [mm]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.OverLandSecondReservoirStorage">
            <summary>
            State variable holding the amount stored in the second reservoir routing the overland flow.
            Unit: [mm]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.SnowStorage">
            <summary>
            State variable holding the amount of snow stored.
            Unit: [mm]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.SnowWaterRetention">
            <summary>
            State variable holding the water retention
            Unit: [%]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.ActualEvaporation">
            <summary>
            Variable holding the actual evaporation.
            Type: Evaporation
            Unit: [m/s]
            <para>
            Computational variable; setting has no effect on the computations,
            it affects only the value/output in the first time step.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.TotalInfiltration">
            <summary>
            Variable holding the total amount of water that infiltrates.
            Unit: [m/s]
            <para>
            Computational variable; setting has no effect on the computations,
            it affects only the value/output in the first time step.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.InfiltrationToGroundWater">
            <summary>
            Variable holding the  amount of water that infiltrates to the ground water.
            Unit: [m/s]
            <para>
            Computational variable; setting has no effect on the computations,
            it affects only the value/output in the first time step.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.CapilarFlux">
            <summary>
            Variable holding the total amount of water undergoing capillar movement.
            Unit: [m/s]
            <para>
            Computational variable; setting has no effect on the computations,
            it affects only the value/output in the first time step.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.SnowQMelt">
            <summary>
            Discharge from each snow zone from melting
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.YearlyCapFlux">
            <summary>
            Yearly capilary flux
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.YearlyActualEvaporation">
            <summary>
            Yearly actual evaporation
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.YearlyRainfall">
            <summary>
            Yearly rainfall
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.YearlyIrrigation">
            <summary>
            Yearly irrigation
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.YearlyGroundWaterAbstraction">
            <summary>
            Yearly ground water abstraction
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.YearlyPotentialEvaporation">
            <summary>
            Yearly potential evaporation
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.YearlyInfiltrationToGroundWater">
            <summary>
            Yearly infiltration to groundwater
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.YearlyOverlandFlow">
            <summary>
            Yearly overland flow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.YearlyBaseFlow">
            <summary>
            Yearly base flow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.YearlyInterFlow">
            <summary>
            Yearly interflow
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.OnDeserializingMethod(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Before deserializing, set default values
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentNam.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)">
            <summary>
            When deserialized, the CatchmentNamInitial back-pointer 
            needs to be re-established as it was before serialization.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData">
            <summary>
            Catchment UHM data interface.
            <para>
            This interface contains data and parameters for setting up a UHM model, <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM"/>, and is
            as such a data interface only. Computational variables are not included in this interface.
            It can be used to explore data and parameters required when setting up the UHM model.
            </para>
            <para>
            The UHM catchment is based on a unit hydrograph, defined as e.g. <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.Hydrograph"/>, 
            where the time and flow are both dimensionless. The time is scaled such that the peak
            of the hydrograph matches the lagtime (see <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.LagTimeType"/>), and
            the flow is scaled to assure no mass loss.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.AreaReductionFactor">
            <summary>
            Area reduction fator
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.BaseFlow">
            <summary>
            Base flow
            Unit: [m3/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.LossModel">
            <summary>
            Loss model type
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.InitialLoss">
            <summary>
            Initial loss
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.ConstantLoss">
            <summary>
            Constant loss
            Unit: [m/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.RunoffCoefficient">
            <summary>
            Runoff coefficient used in proportional loss method
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.HydrographType">
            <summary>
            Define the type of hydrograph to be used for this catchment
            <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.HydrographTypes"/>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.Hydrograph">
            <summary>
            User defined hydrograph. 
            <para>
            Enabled when <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.HydrographType"/> is <see cref="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.HydrographTypes.UserDefined"/>.
            </para>
            <para>
            Set to null to use instead the <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.HydrographTsFileName"/> and <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.HydrographTsItemNumber"/>
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.HydrographTsFileName">
            <summary>
            User defined hydrograph time series filename.
            <para>
            Enabled when <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.HydrographType"/> is <see cref="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.HydrographTypes.UserDefined"/>
            and <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.Hydrograph"/> is null.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.HydrographTsItemNumber">
            <summary>
            Item to use in <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.HydrographTsFileName"/>
            Note: this index is 1-based
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.MaxNumberOfCells">
            <summary>
            Maximum number of cells in hydrograph routing. To disable maximum, set to zero. A sound value
            is 200-400.
            <para>
            If the maximum is enforced,
            the advanced routing method will be used. The advanced routing is a higher order advection scheme, 
            <see cref="T:DHIMath.Numerics.AdvectiveTransport"/>.
            </para>
            <para>
            The advanced routing/advection scheme is computationally somewhat more expensive than the simple routing, 
            so the number of advanced routing cells will be half of <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.MaxNumberOfCells"/>.
            </para>
            </summary>
            <remarks>
            When lagtime is large, (<see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.LagTime"/> or <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.Length"/>, depending on <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.LagTimeType"/>),
            the number of computational cells can also be very large. UHM is used for catchments of size from a few km2 to 10000 km2
            and even larger. The length can be up to several hundred kilometers and lagtimes in the order of days. Assuming a
            lagtime of, say 10 days, that can give a hydrograph time of 30 days, and with a time step of 1 minute, that
            will produce more than 40000 computational cells, which are evaluated in each time step. This has a performance impact
            both in terms of computation time and memory consumption.
            <para>
            In general, for fair accuracy using the UHM model, no more than a hundred computational cells are required.
            </para>
            <para>
            There are two approaches for limiting the number of computational cells:
            <list type="bullet">
              <item><description>Increase the time step. In case of a lagtime of 10 days, timestep of one or two hours could be applied. 
                This is computationally very efficient. 
                The downside is that the loss is very rudimentary modelled, and may result in larger losses than desired.
                E.g. a short, intense rain over one minute, used in a two hour time step may be completely absorbed by losses.</description></item>
              <item><description>Create less cells, and apply the advanced routing between the cells.</description> </item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.CurveNumber">
            <summary>
            Curve number
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.InitialAMC">
            <summary>
            Antecedant Moisture Conditions
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.InitialAbstractionDepth">
            <summary>
            Initial abstraction depth
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.LagTimeType">
            <summary>
            Lag time calculation type
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.LagTime">
            <summary>
            Lag time
            Unit: [s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.LagTimeCurveNumber">
            <summary>
            Curve number used in the lag time calculations
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.Length">
            <summary>
            For the SUH the length represents the length of 
            the main stream from the outlet to the dicide
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.Slope">
            <summary>
            Slope of the catchment
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.PeakingCoefficient">
            <summary>
            Peaking coefficient used by SUH standard hydrograph model
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.WatershedCoefficient">
            <summary>
            Watershed Coefficient is the Basin factor used for the standard SUH calculations
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.LengthToCentroid">
            <summary>
            Represents the length of main stream from the outlet to 
            a point nearest the watershed centroid.
            Used in the calculations of the SUH lag time
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.AlamedaStreamSlope">
            <summary>
            Stream Slope used for the Alameda SUH calculations
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentUHMData.AlamedaWatershedFactor">
            <summary>
            Watershed Coefficient is the Basin factor used for the Alameda SUH calculations
            Unit: [-]
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM">
            <summary>
             Class for the UHM rainfall runoff model
             <para>
             The UHM catchment is based on a unit hydrograph, defined as e.g. <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.Hydrograph"/>, 
             where the time and flow are both dimensionless. The time is scaled such that the peak
             of the hydrograph matches the lagtime (see <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LagTimeType"/>), and
             the flow is scaled to assure no mass loss.
             </para>
             </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.AreaReductionFactor">
            <summary>
            Area reduction fator
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.BaseFlow">
            <summary>
            Base flow
            Unit: [m3/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LossModel">
            <summary>
            Loss model type
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.InitialLoss">
            <summary>
            Initial loss
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.ConstantLoss">
            <summary>
            Constant loss
            Unit: [m/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.RunoffCoefficient">
            <summary>
            Runoff coefficient used in proportional loss method
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.CurveNumber">
            <summary>
            Curve number
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.InitialAMC">
            <summary>
            Antecedant Moisture Conditions
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.InitialAbstractionDepth">
            <summary>
            Initial abstraction depth
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.MaxNumberOfCells">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.HydrographType">
            <summary>
            Define the type of hydrograph to be used for this catchment
            <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.HydrographTypes"/>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.Hydrograph">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.HydrographTsFileName">
            <summary>
            User defined hydrograph time series filename.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.HydrographTsItemNumber">
            <summary>
            Item to use in <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.HydrographTsFileName"/>
            Note: this index is 1-based
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LagTimeType">
            <summary>
            Lag time calculation type
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LagTime">
            <summary>
            Lag time
            Unit: [s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LagTimeCurveNumber">
            <summary>
            Curve number used in the lag time calculations
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.Length">
            <summary>
            For the SUH the length represents the length of 
            the main stream from the outlet to the dicide
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.Slope">
            <summary>
            Slope of the catchment
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.PeakingCoefficient">
            <summary>
            Peaking coefficient used by SUH standard hydrograph model
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.WatershedCoefficient">
            <summary>
            Watershed Coefficient is the Basin factor used for the standard SUH calculations
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LengthToCentroid">
            <summary>
            Represents the length of main stream from the outlet to 
            a point nearest the watershed centroid.
            Used in the calculations of the SUH lag time
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.AlamedaStreamSlope">
            <summary>
            Stream Slope used for the Alameda SUH calculations
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.AlamedaWatershedFactor">
            <summary>
            Watershed Coefficient is the Basin factor used for the Alameda SUH calculations
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.Cells">
            <summary>
            List of <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.Cell"/> sorted from downstream to upstream. 
            <para>
            The first cell will discharge in the coming time step, the second
            cell in two time steps, etc. So each cell is one timestep further
            from discharging. The time offset for a cell is the number (index+1) of the cell 
            in this list times the time step size.
            </para>
            <para>
            State is contained inside each <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.Cell"/>
            </para>
            <para>
            Created during prepare
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.DailyRain">
            <summary>
            Rain within 24 hours, reset every 24 hours. Used for loss calculations
            <para>
            State variable. Only applicable for the SCS loss models
            </para>
            <para>
            Unit: [m]
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.ExcessDailyRain">
            <summary>
            Excess rain within 24 hours, reset every 24 hours. Used for loss calculations
            <para>
            State variable. Only applicable for the SCS loss models
            </para>
            <para>
            Unit: [m]
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.AccumulatedRain">
            <summary>
            Accumulated rain since start of simulation. Used for loss calculations.
            <para>
            State variable.
            </para>
            <para>
            Unit: [m]
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.AmcNumber">
            <summary>
            Antecedant Moisture Condition number. Used by the <see cref="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LossModels.SCSLoss"/> method.
            <para>
            State variable.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM._maximumRetention">
            <summary>
            in [m]. Derived from actCurveNumber
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM._currentLoss">
            <summary>
            Derived from initialLoss or _maximumRention
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM._rainfallFromForcing">
            <summary>
            Rainfall that must be applied during the calculation time step measured in m/s.
            unit: [m/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM._excessRain">
            <summary>
            in [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.Runoff">
            <summary>
            Runoff.
            <para>
            Unit: [m3/s]
            </para>
            <para>
            This is a computational variable. Setting this has no effect 
            (apart from when writing initial conditions to result file)
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM._routingCourantNumber">
            <summary>
            Courant number for advanced advection scheme: Velocity of 
            routing between each grid cell. Always less than one.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.#ctor(System.String)">
            <summary>
             Contructor of the UHM rainfall runoff model.
            </summary>
            <param name="name">Name of the catchment</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.Validate">
            <summary>
            Validate the UHM runoff model
            </summary>
            <returns>diagnostics items</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.Initialize(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize Rainfall Runoff model. Sets up static data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.Type">
            <summary>
            The type of catchment: NAM, Urban A etc
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.Prepare(System.DateTime,System.DateTime,DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.GetHydrograph(System.Double@,System.Double,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Get/create dimensionless hydrograph. 
            <para>
            The <paramref name="actualLagTime"/> is updated when using the SUH hydrograph types.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.ConvertHydrographTime(System.Double@,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Convert the dimensionless hydrograph (as returned from <see cref="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.GetHydrograph(System.Double@,System.Double,DHI.Mike1D.Generic.IDiagnostics)"/>) to contain actual times, based on lagtime etc.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.CreateCells(System.Collections.Generic.IList{DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.DimensionlessHydrographPoint},DHI.Mike1D.RainfallRunoffModule.RRParameters)">
            <summary>
            Create computational cells from <paramref name="hydrograph"/>. 
            They are stored in <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.Cells"/>.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.GetUserDefinedHydrograph(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Get the user defined hydrograph. This method loads data from
            time series.
            </summary>
            <param name="diagnostics">Diagnostics</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.CalculateLagTime(System.Double@,System.Double@,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Calculate the lag time for the available types: <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LagTimeTypes"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.ConvertLengthToUS(System.Double)">
            <summary>
            Converts a length in meters to miles
            </summary>
            <param name="length">length in meters [m]</param>
            <returns>length in miles [miles]</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.GetSCSTriangularHydrograph">
            <summary>
            Generates a SCS triangular hydrograph.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.GetSCSDimensionlessHydrograph">
            <summary>
            This procedure initialises the SCS dimensionless hydrograph,
            scales it and stores unit hydrograph values with the time step
            <para>
            Info on the SCS dimentionless hydrograph to be found in:
            
            Soil Conservation Service. U.S. Department of Agriculture.
            Washington D.C. (1972): SCS National Engineering Handbook,
            Section 4, Hydrology.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.GetSUHStandardDimensionlessHydrograph(System.Double@,System.Double,System.Double)">
            <summary>
            Snyder Unit Hydrograph as described in reference:
            "Applied hydrology" ven Te Chow et al. (McGraw Hill)
            pp. 224-228
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.TakeTimeStep">
            <summary>
            Take an UHM rainfall runoff time step
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.AddBaseFlowToRunoff">
            <summary>
            Add base flow to the runoff
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.VolumeInCatchment">
            <summary>
            Volume of water stored in catchment after previous TakeTimeStep()
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.ComputeSCSLoss">
            <summary>
            This procedure calculates the excess rain of a given event
            based on the SCS curve number method.
            
            The method is fully described in:
            
            Soil Conservation Service. U.S. Department of Agriculture.
            Washington D.C. (1972): SCS National Engineering Handbook,
            Section 4, Hydrology.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.ComputeSCSGeneralisedLoss">
            <summary>
            This procedire calculates the excess rain of a given event based
            on the SCS curve number method.
            It is an adapted version named TP108 requested by users in New Zealand.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.ComputeProportionalLoss">
            <summary>
            Compute loss by calculating the excess of rainfall by the rational method.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.TransferToStateVariableTable">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.ComputeConstantInitialLoss">
            <summary>
            This method calculates the excess rainfall as the rainfall exceeding
            a given initial loss for the event.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.UpdateForcings(System.DateTime)">
            <summary>
            Update forcing get the accumulated value for the rainfall
            </summary>
            <param name="simTime"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.UnitHydrographCalculation">
            <summary>
            Perform the unit hydrograph calculations, calculates the runoff and advances a time step iterator
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.UnitHydrographCalculationTransport">
            <summary>
            Perform the unit hydrograph calculations, calculates the runoff
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.GetRequiredTypes">
            <summary>
            Get the type of boundary required by this catchment
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.ApplyBoundary(DHI.Mike1D.BoundaryModule.CatchmentSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.IBoundarySource)">
            <summary>
             Apply a boundary to this catchment
            </summary>
            <param name="catchmentSourceBoundaryType"></param>
            <param name="catchmentSourceBoundary"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.ApplyBoundary(DHI.Mike1D.BoundaryModule.GlobalSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.GlobalGeoLocatedSource)">
            <summary>
             Apply a boundary to this catchment
            </summary>
            <param name="type"></param>
            <param name="globalSourceBoundary"></param>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.HydrographTypes">
            <summary>
            Hydrograph types
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.HydrographTypes.SCSTriangular">
            <summary>
            SCS triangular predefined hydrograph
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.HydrographTypes.SCSDimensionless">
            <summary>
            SCS dimensionless predefined hydrograph
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.HydrographTypes.SUHStandard">
            <summary>
            Snyder's Synthetic Unit Hydrograph, standard
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.HydrographTypes.SUHAlameda">
            <summary>
            Snyder's Synthetic Unit Hydrograph, Alameda version
            <para>
            As part of a watershed study program completed in 1994, Alameda County, California developed 
            site-specific equations to be used in conjunction with the Snyder Unit Hydrograph.
            The site-specific equations are documented in the September 1994 Hydrologic Modeling Evaluation 
            Summary Report for Alameda County, California prepared by Alameda County Public Works Agency.
            There are two SUH equations that were modified as part of the Alameda County watershed study program.
            The first equation replaces the basin lag tpR and the second equation replaces peaking factor Cp.
            The site specific equations should be used with caution outside of Alameda County, California.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.HydrographTypes.UserDefined">
            <summary>
            User defined hydrograph, stored in <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.HydrographTsFileName"/> and <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.HydrographTsItemNumber"/>.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LossModels">
            <summary>
            Loss model types
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LossModels.ConstantInitialLoss">
            <summary>
            Constant initial loss
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LossModels.ProportionalLoss">
            <summary>
            Propertional loss (The Rational Method)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LossModels.SCSLoss">
            <summary>
            U.S. Soil Conservation Service (SCS) method of 1972.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LossModels.SCSGeneralisedLoss">
            <summary>
            Generalisation of the U.S. Soil Conservation Service (SCS) method of 1972.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LagTimeTypes">
            <summary>
            Lag time
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LagTimeTypes.UserDefined">
            <summary>
            User defined lag time
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LagTimeTypes.SCSFormula">
            <summary>
            Lag time by U.S. Soil Conservation Service (SCS) method of 1972.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LagTimeTypes.StandardSUH">
            <summary>
            Lag time of Snyder's Synthetic Unit Hydrograph method
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.LagTimeTypes.AlamedaSUH">
            <summary>
            Lag time of Snyder's Synthetic Unit Hydrograph method, Alameda version
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.StateUpdated">
            <summary>
            When state has been updated, this method can be called to update derived/computational variables
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.Cell">
            <summary>
            Cell structure: a cell contains a relative area and
            a unit volume of water in the cell
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.Cell.UnitArea">
            <summary>
            Relative area of the cell. All areas must sum to 1
            <para>
            Computational variable, calculated from the time-area curve during <see cref="M:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.Prepare(System.DateTime,System.DateTime,DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.IDiagnostics)"/>
            </para>
            <para>
            Unit: [-]
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.Cell.Volume">
            <summary>
            Unit volume (depth) of water contained in the cell. The unit volume is a depth [m] over the entire catchment.
            <para>
            State variable.
            </para>
            <para>
            Unit: [m]
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.DimensionlessHydrographPoint">
            <summary>
            Class to describe a dimensionless hydrograph cell,
            specifying the time for a flow.
            <para>
            Both the time and the flow is dimensionless. 
            Time is scaled such that the peak of the hydrograph
            matches the lagtime
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.DimensionlessHydrographPoint.#ctor(System.Double,System.Double)">
            <summary>
            Default constructor
            </summary>
            <param name="time"></param>
            <param name="dimensionlessFlow"></param>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.DimensionlessHydrographPoint.Time">
            <summary>
            Time of flow
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentUHM.DimensionlessHydrographPoint.DimensionlessFlow">
            <summary>
            Dimensionless flow
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.GriddedValueBuffer">
            <summary>
            Class for buffering grid (dfs2) values, loading only 
            a few values at a time.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GriddedValueBuffer.Initialize(System.String,System.Nullable{DHI.Mike1D.Generic.TimeSeries.TsItemValueType})">
            <summary>
            Initialize buffer, open dfs2 file.
            </summary>
            <param name="dfs2File"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GriddedValueBuffer.Prepare(System.DateTime)">
            <summary>
            Prepare for simulation
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GriddedValueBuffer.UpdateBuffer">
            <summary>
            Update buffer, read one time step from the file and store it in the buffer.
            </summary>
            <returns>True if buffer was updated, false if no more time steps was available in file</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GriddedValueBuffer.Cleanup(System.DateTime)">
            <summary>
            Clean up buffer before the <paramref name="time"/> specified, 
            leaving one value before the <paramref name="time"/>, such that 
            interpolation can take place also at <paramref name="time"/>.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GriddedValueBuffer.GetValue(System.DateTime,System.Collections.Generic.List{DHI.Mike1D.BoundaryModule.GriddedWeight})">
            <summary>
            Get a value at <paramref name="time"/>, and
            weighted as specified.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GriddedValueBuffer.GetNextTransitionTime(System.DateTime)">
            <summary>
            Next transition time is always <paramref name="date"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GriddedValueBuffer.UpdateBuffer(System.DateTime)">
            <summary>
            Buffer all needed times for next time step 
            </summary>
            <param name="time"></param>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.GriddedValueBoundarySource">
            <summary>
            Helper class, implementing an <see cref="T:DHI.Mike1D.BoundaryModule.IBoundarySource"/>
            for a boundary extracting weighted values directly from a grid.
            <para>
            Using the <see cref="T:DHI.Mike1D.RainfallRunoffModule.GriddedValueBuffer"/> as value provider.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GriddedValueBoundarySource.#ctor(DHI.Mike1D.RainfallRunoffModule.GriddedValueBuffer,System.Collections.Generic.List{DHI.Mike1D.BoundaryModule.GriddedWeight})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.GriddedValueBoundarySource.BoundaryID">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GriddedValueBoundarySource.GetValue(System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GriddedValueBoundarySource.GetValueWithoutDWF(System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GriddedValueBoundarySource.GetAccumulatedValue(System.DateTime,System.DateTime)">
            <summary>
            Returns the mid-point value
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.GriddedValueBoundarySource.Components">
            <summary>
            Not supported
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GriddedValueBoundarySource.GetValue(System.Int32,System.DateTime)">
            <summary>
            Not supported
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GriddedValueBoundarySource.GetAccumulatedValue(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Not supported
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GriddedValueBoundarySource.GetNextTransitionTime(System.DateTime)">
            <summary>
            Get next transistion time of <see cref="T:DHI.Mike1D.RainfallRunoffModule.GriddedValueBuffer"/>, 
            which just returns the <paramref name="date"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GriddedValueBoundarySource.Validate(System.DateTime,System.DateTime)">
            <summary>
            Not supported
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.GriddedValueBoundarySource.Prepare(System.DateTime,System.DateTime,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Not supported
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.GriddedValueBoundarySource.Modifier">
            <summary>
            Not supported
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.HortonMode">
            <summary>
             Horton mode
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.HortonMode.Unknown">
            <summary>
             Unknown
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.HortonMode.Wet">
            <summary>
             Wet Horton mode
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.HortonMode.Dry">
            <summary>
             Dry Horton mode
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.Horton">
            <summary>
            Horton class holds the parameters used for calculation
            infiltration using the Hortons infiltration.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Horton.F0">
            <summary>
            Infiltration rate at start
            Unit: [m/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Horton.Fc">
            <summary>
            Infiltration rate at end
            Unit: [m/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Horton.Kwet">
            <summary>
            Time constant for wet period (horton's exponent)
            Unit: [1/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Horton.Kdry">
            <summary>
            Time constant for dry period (inverse Horton's equation)
            Unit: [1/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Horton.IntegratedHorton">
            <summary>
             True if the Integrated Horton method is used in the calculation
             for infiltration.
             Default: False
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Horton.Prepare">
            <summary>
            Reset horton parameters
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Horton._hortonMode">
            <summary>
            Horton mode can be Wet or Dry. <see cref="F:DHI.Mike1D.RainfallRunoffModule.Horton._hortonMode"/>
            Initially: Wet
            Computational variable.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Horton.HortonMode">
            <summary>
            Horton mode can be Wet or Dry. See <see cref="T:DHI.Mike1D.RainfallRunoffModule.HortonMode"/>
            <para>
            State variable. Should not be updated manually.
            </para>
            <para>
            Initially: Wet
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Horton.Ft">
            <summary>
            Infiltration rate at current time step.
            Unit: [m/s]
            Computational variable.
            <para>
            This is stored and used when switching from
            dry to wet mode, in order to get a smooth transition
            of infiltration rates.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Horton.Twet">
            <summary>
            Time of the wet Horton mode.
            Applicable only when <see cref="P:DHI.Mike1D.RainfallRunoffModule.Horton.HortonMode"/> is <see cref="F:DHI.Mike1D.RainfallRunoffModule.HortonMode.Wet"/>
            <para>
            A value of zero matches the start infiltration rate.
            </para>
            Unit: [s]
            State variable.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Horton.Tdry">
            <summary>
            Time of the dry Horton mode.
            Applicable only when <see cref="P:DHI.Mike1D.RainfallRunoffModule.Horton.HortonMode"/> is <see cref="F:DHI.Mike1D.RainfallRunoffModule.HortonMode.Dry"/>
            <para>
            When approaching infinity, the start infiltration rate has been recovered
            </para>
            Unit: [s]
            State variable.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Horton.SwitchHortonModeTo(DHI.Mike1D.RainfallRunoffModule.HortonMode)">
            <summary>
            Switch Horton mode. Automatically calculating new Horton times, i.e.
            when switching from dry to wet mode, the value of <see cref="F:DHI.Mike1D.RainfallRunoffModule.Horton.Twet"/>
            is calculated to match the same infiltration as the current value of <see cref="F:DHI.Mike1D.RainfallRunoffModule.Horton.Tdry"/>,
            and vice versa.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Horton.CalculateInfiltration(System.Double,System.Double,System.Double)">
            <summary>
            Take a Horton Timestep, returning the Infiltration Depth of the time step.
            <para>
            If <paramref name="currentDepth"/> and <paramref name="netRainfallrate"/> is zero, a dry mode time step is performed, 
            otherwise if any of those is larger than zero, a wet mode time step is performed.
            </para>
            The <paramref name="currentDepth"/> is also used as depth available for infiltration, in case of <see cref="P:DHI.Mike1D.RainfallRunoffModule.Horton.IntegratedHorton"/>
            is set, i.e. the returned infiltration depth is limited by this parameter.
            </summary>
            <param name="dt">Time step</param>
            <param name="netRainfallrate">Current rainfall rate.</param>
            <param name="currentDepth">Current depth, depth available for infiltration.</param>
            <returns>For Standard Horton: the potential infiltration
            For integrated Horton: the actual infiltration</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Horton.InfiltrationDepthWet(System.Double)">
            <summary>
            Integrate the wet Infiltration rate from 0 to time, giving a total infiltration depth in [m] since time zero of wet period
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Horton.InfiltrationDepthWet(System.Double,System.Double@)">
            <summary>
            Integrate the wet Infiltration rate from 0 to time, giving a total infiltration depth in [m] since time zero of wet period
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentInfiltrationCalculator">
            <summary>
            Common interface for calculating infiltration
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchmentInfiltrationCalculator.CalculateInfiltration(System.Double,System.Double,System.Double)">
            <summary>
            Take a Horton Timestep, returning the Infiltration Depth of the time step.
            <para>
            If <paramref name="depth"/> and <paramref name="netRainfallRate"/> is zero, a dry mode time step is performed, 
            otherwise if any of those is larger than zero, a wet mode time step is performed.
            </para>
            The <paramref name="depth"/> is also used as depth available for infiltration 
            i.e. the returned infiltration depth may be limited by this parameter.
            </summary>
            <param name="dt">Time step [s]</param>
            <param name="netRainfallRate">Current rainfall rate. [m/s]</param>
            <param name="depth">Current depth, depth available for infiltration. [m]</param>
            <returns>Infiltration rate [m/s]</returns>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentRunController">
            <summary>
            Controlling the time stepping of a standalone rainfall runoff simulation is done by this interface. 
            The interface specifies a list of ICatchment that needs explicit time stepping control. 
            These catchments will be updated synchronously, and each update will raise a post 
            time step event in the <see cref="T:DHI.Mike1D.RainfallRunoffModule.Catchments"/> class. 
            Furthermore the post time step event of the <see cref="T:DHI.Mike1D.RainfallRunoffModule.Catchments"/> class is 
            raised at all times returned by the <see cref="M:DHI.Mike1D.RainfallRunoffModule.ICatchmentRunController.TimeOfNextUpdate"/> method. 
            This interface is required in order to support at the same time updating 
            catchments to a specified time, as well as updating them per time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchmentRunController.TimeOfNextUpdate">
            <summary>
            Returns the time where the catchments need to be updated to, or 
            more correctly, the time where the <see cref="E:DHI.Mike1D.RainfallRunoffModule.Catchments.PostTimeStepEvent"/>
            will be raised. The catchments needs to be updated by a using component.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentRunController.PerTimeStepUpdate">
            <summary>
            List of catchments that needs explicit updates, 
            synchronizing of their time steps is handled by the
            <see cref="M:DHI.Mike1D.RainfallRunoffModule.Catchments.RunUntil(System.DateTime)"/> method.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentRunControllerPerTimestep">
            <summary>
            A <see cref="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentRunController"/> that will make sure all catchments
            performs all time steps.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentRunControllerPerTimestep.#ctor(System.DateTime,System.Collections.Generic.IList{DHI.Mike1D.RainfallRunoffModule.ICatchment})">
            <summary>
            Create new controller
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentRunControllerPerTimestep.TimeOfNextUpdate">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentRunControllerPerTimestep.PerTimeStepUpdate">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID">
            <summary>
            Interface for a stormwater Low-Impact-Development structure.
            <para>
            A stormwater LID is a small scale hydrologic structure, that 
            can store, detain, infiltrate (and/or similar) water close to
            where the water origin from.
            </para>
            <para>
            The stormwater LID is attached to a catchment. It can overtake some
            of the catchment area (<see cref="P:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.TotalCollectingArea"/> and <see cref="P:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.Area"/>).
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.Name">
            <summary>
             Name of the LID
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.Area">
            <summary>
            Area of LID. 
            <para>
            This is the area used for rain and evaporation, i.e.
            if set to 0.5 times the catchment area, then half of the 
            rain falls on the catchment and half of the rain on the LIDs directly.
            </para>
            <para>
            The sum of all <see cref="P:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.Area"/> for
            all LIDs within a single catchment must be less than the area
            of the catchment they belong to.
            </para>
            <para>
            For some LIDs (e.g. rain barrel), this area is zero.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.TotalCollectingArea">
            <summary>
            Total collecting area is the area from which water is routed through the LIDS, 
            either because rain is falling directly on the LIDs (<see cref="P:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.Area"/>) or 
            when catchment rain (after losses) is routed to the LIDs. 
            <para>
            This area is used by the catchment to figure out how much water should be 
            routed to the LIDs, effectively splitting the catchment area in 3 parts:
            <code>
               catchment-No-LID-Area       = ICatchment.Area - sum(IStormwaterLID.TotalCollectingArea)
               catchment-Route-To-LID-Area = sum(IStormwaterLID.TotalCollectingArea - IStormwaterLID.Area)
               LID-area                    = sum(IStormwaterLID.Area)
            </code>
            The sum of all 3 contributions is the area of the catchment.
            </para>
            <para>
            The <see cref="P:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.TotalCollectingArea"/> cannot be smaller than <see cref="P:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.Area"/>.
            </para>
            <para>
            The sum of all <see cref="P:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.TotalCollectingArea"/> for all LIDs within a single catchment 
            must be less than the area of the catchment they belong to.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.FractionOfLIDFlowToRoute">
            <summary>
            Fraction of runoff flow from the LIDs that are routed by the catchment. 
            The remainder will be added directly to the catchment runoff (not routed).
            <para>
            The different catchment types may treat this differently. 
            </para>
            <para>
            Default value: 1.
            Unit: [fraction]
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.Validate(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Validate LID
             ///</summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.Initialize(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize LID
             ///</summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.Prepare(DHI.Mike1D.RainfallRunoffModule.RRParameters,System.DateTime,System.DateTime,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Prepare LID
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.ApplyBoundary(DHI.Mike1D.BoundaryModule.CatchmentSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.IBoundarySource)">
            <summary>
             Apply a boundary to this catchment
            </summary>
            <param name="catchmentSourceBoundaryType"></param>
            <param name="catchmentSourceBoundary">Catchment boundary source</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.ApplyBoundary(DHI.Mike1D.BoundaryModule.GlobalSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.GlobalGeoLocatedSource)">
            <summary>
             Apply a boundary to this catchment
            </summary>
            <param name="type">Type of global boundary</param>
            <param name="geoLocatedSource">local boundary source</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.PrepareForTimeStep">
            <summary>
            Take time step
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.AddInflow(System.Double)">
            <summary>
            Add inflow (run-on from catchment to LID)
            </summary>
            <param name="inflow"> Inflow [m3/s] </param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.PerformTimeStep(System.DateTime,System.DateTime)">
            <summary>
            Take time step
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.Finish">
            <summary>
            Finalize 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.Runoff">
            <summary>
            Runoff from LID at the current time step
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.FlowStat">
            <summary> Flow statistics and mass balance </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.#ctor">
            <summary>
            Private constructor to support singleton pattern
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.Instance">
            <summary>
            Get the singleton license checker instance
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.LicenseChecker">
            <summary>
            Provides access to the DHI license system through LicManCliWrapper2004.dll
            </summary>
            <remarks>
            This class is implemented as internal class in several modules that all require
            license checking functionality. Please update all LicenseChecker classes simultaneously.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.LicenseChecker.SelectLicense(System.String)">
            <summary>
            Add a DHI license identifier to the list of license that will be requested.
            </summary>
            <param name="licenseType"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.LicenseChecker.RequestLicense(System.Int32)">
            <summary>
            Request licenses. Calls DHI.Generic.MikeZero.License.LicenseWrapper.RequestLicenseWin()
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.LicenseChecker.GetMaxNodes">
            <summary>
            Get maximum number of nodes supported by the active license (returns MaxNode1).
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.LicenseChecker.ConfirmLicense">
            <summary>
            Confirm that all license are still valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.LicenseChecker.ReleaseLicense">
            <summary>
            Release all licenses.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.LicenseChecker.GetLicenseErrorDiagnosticsItem(System.Int32)">
            <summary>
            Convert a license error code to an error string
            </summary>
            <param name="rc"></param>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.LicenseWrapperSimple">
            <summary>
            A wrapper for making procedure calls in the DHI license managment DLL.
            This file is based on DHI.Generic.MIKEZero.LicenseWrapper.cs.
            Compared to that file, the following has been changed:
            1) Thread safety has been removed.
            2) Caching of license checkout has been removed 
            3) Access to maximum node count information has been added
            
            The changes have been implemented in order to be able to check the same license 
            multiple times (DHI.Generic.MIKEZero.LicenseWrapper.cs has a 1 minute window)
            and point 3 above.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.LicenseWrapperSimple._ReleaseAllLicensesApp">
            <summary>
            Releases all licenses checked out by the process.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.LicenseWrapperSimple._ReleaseAllLicensesApp(System.String,System.String)">
            <summary>
            Releases specific licenses checked out by the process.
            </summary>
            <param name="moduleName">Module name.</param>
            <param name="subModuleName">Submodule name.</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.LicenseWrapperSimple._RequestLicenseApp(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Requests licenses for the specific module and submodule.
            </summary>
            <param name="rndNum">Random number used for scrambling of data.</param>
            <param name="moduleName">Module name.</param>
            <param name="subModuleName">Submodule name.</param>
            <param name="versionMajor">Major version number.</param>
            <param name="versionMinor">Minor version number.</param>
            <param name="maxNode1">Unspecified.</param>
            <param name="maxNode2">Unspecified.</param>
            <param name="maxNode3">Unspecified.</param>
            <param name="maxNode4">Unspecified.</param>
            <param name="startTimer">Non-zero, if wait-timer should be started.</param>
            <returns>0, if the function succeeded, otherwise number indicating error.</returns>        
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.LicenseWrapperSimple.ConfirmAllLicensesWin">
            <summary>
            Verifies, whether all requested licenses are still avialable.
            </summary>
            <returns>0, if all the licenses are still avialable, otherwise number indicating
            error.</returns>        
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.LicenseWrapperSimple.ReleaseAllLicensesWin">
            <summary>
            Releases all licenses checked out by the process.
            </summary>        
            <remarks>The method is thread safe.</remarks>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.LicenseWrapperSimple.ReleaseLicenseWin(System.String,System.String)">
            <summary>
            Releases specific licenses checked out by the process.
            </summary>
            <param name="moduleName">Module name.</param>
            <param name="subModuleName">Submodule name.</param>   
            <remarks>The method is thread safe.</remarks>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.LicenseWrapperSimple.RequestLicenseWin(System.Int32,System.String,System.String,System.Int64,System.Int64,System.Int64,System.Int64,System.String,System.String,System.Int32)">
            <summary>
            Requests licenses for the specific module and submodule.
            </summary>
            <param name="rndNum">Random number used for scrambling of data.</param>
            <param name="moduleName">Module name.</param>
            <param name="subModuleName">Submodule name.</param>
            <param name="versionMajor">Major version number.</param>
            <param name="versionMinor">Minor version number.</param>
            <param name="maxNode1">Unspecified.</param>
            <param name="maxNode2">Unspecified.</param>
            <param name="maxNode3">Unspecified.</param>
            <param name="maxNode4">Unspecified.</param>
            <param name="startTimer">Non-zero, if wait-timer should be started.</param>
            <returns>0, if the function succeeded, otherwise number indicating error.</returns>        
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LicenseCheckerSingleton.LicenseWrapperSimple.GetMaxNodesByModuleName(System.String,System.Int64@,System.Int64@,System.String@,System.String@)">
            <summary>
             Get maximum number of nodes for a specified license.
            </summary>
            <param name="moduleName"></param>
            <param name="maxNode1"></param>
            <param name="maxNode2"></param>
            <param name="maxNode3"></param>
            <param name="maxNode4"></param>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.BioRetentionCell">
            <summary>
            Bio-retention Cells are depressions that comprise vegetation grown in 
            an engineered soil mixture sited above a gravel drainage bed. 
            They offer storage, infiltration and evaporation of both direct 
            rainfall and runoff captured from surrounding areas. 
            Rain gardens, street planters, and green roofs are all different 
            types of bio-retention cells.
            <para>
            if disabling the storage by setting <code>Storage.Height</code> to zero, 
            this effectively models the Rain Garden LID type. 
            The infiltration to outer soil is in this case the percolation, 
            <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.Perc"/>.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.BioRetentionCell.Surface">
            <summary> Surface parameters </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.BioRetentionCell.Soil">
            <summary> Soil parameters </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.BioRetentionCell.Storage">
            <summary> Storage parameters </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.BioRetentionCell.HasStorage">
            <summary>
            Boolean indicating if storage is present (<see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.Height"/> is positive)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.BioRetentionCell.Validate(DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.BioRetentionCell.Prepare(DHI.Mike1D.RainfallRunoffModule.RRParameters,System.DateTime,System.DateTime,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.BioRetentionCell.PrepareForTimeStep">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.BioRetentionCell.PerformTimeStep(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.GreenRoof">
            <summary>
            Green Roofs offers filtering, absorbing, delaying rainfall. 
            <para>
            They are built of a lightweight soil media, a drainage layer, 
            a coverage planted surface which can allow minimum additional storage. 
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.GreenRoof.Surface">
            <summary> Surface parameters </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.GreenRoof.Soil">
            <summary> Soil parameters </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.GreenRoof.DrainMat">
            <summary> Drain mat parameters </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.GreenRoof.Validate(DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.GreenRoof.Prepare(DHI.Mike1D.RainfallRunoffModule.RRParameters,System.DateTime,System.DateTime,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.GreenRoof.PrepareForTimeStep">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.GreenRoof.PerformTimeStep(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.InfiltrationTrench">
            <summary>
            Infiltration Trenches are narrow waterways filled with gravel that 
            capture runoff from upslope impervious areas. 
            They offer storage capacity and additional time 
            for captured runoff to infiltrate the inherent soil underneath. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.InfiltrationTrench.Surface">
            <summary> Surface parameters </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.InfiltrationTrench.Storage">
            <summary> Storage parameters </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.InfiltrationTrench.Validate(DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.InfiltrationTrench.Prepare(DHI.Mike1D.RainfallRunoffModule.RRParameters,System.DateTime,System.DateTime,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.InfiltrationTrench.PrepareForTimeStep">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.InfiltrationTrench.PerformTimeStep(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.IStormwaterLIDFlowStat">
            <summary>
            Interface for a LID containing flow statistics
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase">
            <summary>
            Base class for LID classes, holding commom parameters
            and functionality.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.MinRunoff">
            <summary>
            Limit for runoff/flow rate [m/s] before it is considered as a flow.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.MperSecToMmperHour">
            <summary>
            Conversion factor from m/s to mm/hour
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.Name">
            <summary>
            Name/Id of LID
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.Area">
            <summary>
            Area covered by LID. Accumulated for all LID units handled by this instance.
            <para>
            This is the area used for rain and evaporation, i.e.
            if set to 0.5 times the catchment area, then half of the 
            rain falls on the catchment and half of the rain on the LIDs directly.
            </para>
            <para>
            The sum of all <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.Area"/> for
            all LIDs within a single catchment must be less than the area
            of the catchment they belong to.
            </para>
            <para>
            For some LIDs (e.g. rain barrel), this area is zero.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.TotalCollectingArea">
            <summary>
            Total collecting area is the area from which water is routed through the LIDS, 
            either because rain is falling directly on the LIDs (<see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.Area"/>) or 
            when catchment rain (after losses) is routed to the LIDs. 
            <para>
            This area is used by the catchment to figure out how much water should be 
            routed to the LIDs, effectively splitting the catchment area in 3 parts:
            <code>
               catchment-No-LID-Area       = ICatchment.Area - sum(IStormwaterLID.TotalCollectingArea)
               catchment-Route-To-LID-Area = sum(IStormwaterLID.TotalCollectingArea - IStormwaterLID.Area)
               LID-area                    = sum(IStormwaterLID.Area)
            </code>
            The sum of all 3 contributions is the area of the catchment.
            </para>
            <para>
            The <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.TotalCollectingArea"/> cannot be smaller than <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.Area"/>.
            </para>
            <para>
            The sum of all <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.TotalCollectingArea"/> for all LIDs within a single catchment 
            must be less than the area of the catchment they belong to.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.Width">
            <summary>
            Width of a single unit
            <para>
            Used for routing calculations
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.NumberOfUnits">
            <summary>
            Number of LID units handled by this LID instance
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.FractionOfLIDFlowToRoute">
            <summary>
            Fraction of runoff flow from the LIDs that are routed by the catchment. 
            The remainder will be added directly to the catchment runoff (not routed).
            <para>
            The different catchment types may treat this differently. 
            </para>
            <para>
            Default value: 1.
            Unit: [fraction]
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.InitialSaturation">
            <summary>
            Initial saturation fraction.
            <para>
            For storage, this fraction is used to calculate the initial storage depth.
            </para>
            <para>
            Default value: 0.
            Unit: [fraction].
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase._initialSaturation">
            <summary>
            Initial saturation fraction.
            <para>
            For storage, this fraction is used to calculate the initial storage depth.
            </para>
            <para>
            Default value: 0.
            Unit: [fraction].
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.ReportPath">
            <summary>
            Path and name for report file.
            <para>
            If null or empty, no report file is created.
            </para>
            <para>
            Use only for testing and validating model - file can become quite big.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase._reportPath">
            <summary>
            Path and name for report file.
            <para>
            If null or empty, no report file is created.
            </para>
            <para>
            Use only for testing and validating model - file can become quite big.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase._inflow">
            <summary> Inflow [m3/s] </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase._evapPot">
            <summary> Potential evaporation rate [m/s], from boundary </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase._runoff">
            <summary> Runoff from LID [m3/s] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.FlowStat">
            <summary> Flow statistics and mass balance </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase._flowStat">
            <summary> Flow statistics and mass balance </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase._boundarySourceRainfall">
            <summary> Boundary for rainfall </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase._boundarySourceEvaporation">
            <summary> Boundary for evaporation </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase._reportWriter">
            <summary> Result file writer </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.ApplyBoundary(DHI.Mike1D.BoundaryModule.CatchmentSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.IBoundarySource)">
            <summary>
             Apply a boundary to this catchment
            </summary>
            <param name="catchmentSourceBoundaryType"></param>
            <param name="catchmentSourceBoundary">Catchment boundary source</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.ApplyBoundary(DHI.Mike1D.BoundaryModule.GlobalSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.GlobalGeoLocatedSource)">
            <summary>
             Apply a boundary to this catchment
            </summary>
            <param name="type">Type of global boundary</param>
            <param name="geoLocatedSource">local boundary source</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.Initialize(DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.Prepare(DHI.Mike1D.RainfallRunoffModule.RRParameters,System.DateTime,System.DateTime,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.Finish">
            <summary>
            Finish simulations
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.Runoff">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.AddInflow(System.Double)">
            <summary>
            Add inflow (run-on from catchment to LID)
            </summary>
            <param name="inflow"> Inflow [m3/s] </param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.GetEvapRates(System.Double@,System.Double,System.Double)">
            <summary>
            Computes evaporation rate from layer.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.Limit(System.Double@,System.Double,System.Double)">
            <summary>
            Limit <paramref name="val"/> between <paramref name="minValue"/> and <paramref name="maxValue"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.PrepareForNewReportFile(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Check report file directory and delete existing file, if present.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDBase.PrepareForNewReportFile(DHI.Mike1D.Generic.IDiagnostics,DHI.Mike1D.Generic.IFilePath,System.String)">
            <summary>
            Check report file directory and delete existing file, if present.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.LIDFlowStat">
            <summary>
            Class handling flow-statistics of LID
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDFlowStat.VolumeInitial">
            <summary> Amount of water initially in the LID [m3] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDFlowStat.VolumeCurrent">
            <summary> Amount of water currently in the LID [m3] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDFlowStat.Rain">
            <summary> Amount of water raining on LID [m3] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDFlowStat.Evaporation">
            <summary> Amount of water evaporating from LID [m3] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDFlowStat.Infiltration">
            <summary> Amount of water that has infiltrated from LID [m3] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDFlowStat.InflowAccumulated">
            <summary> Amount of water running into LID (runon) [m3] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDFlowStat.RainAccumulated">
            <summary> Amount of water raining on LID [m3] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDFlowStat.EvaporationAccumulated">
            <summary> Amount of water evaporating from LID [m3] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDFlowStat.SurfaceFlowAccumulated">
            <summary> Amount of water flowing off surface of LID [m3] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDFlowStat.DrainFlowAccumulated">
            <summary> Amount of water being drained from LID [m3] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDFlowStat.InfiltrationAccumulated">
            <summary> Amount of water that has infiltrated from LID [m3] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDFlowStat.MassChecksumAccumulated">
            <summary> Mass checksum (mass error) [m3] </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.LIDExtension">
            <summary>
            Extension class for LID related methods
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDExtension.SurfaceDepth(DHI.Mike1D.RainfallRunoffModule.IStormwaterLID)">
            <summary>
            Get surface depth of lid, independent of type. 
            <para>
            If lid does not have a surface layer, an exception is thrown
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDExtension.SetSurfaceDepth(DHI.Mike1D.RainfallRunoffModule.IStormwaterLID,System.Double)">
            <summary>
            Set surface depth of lid, independent of type. 
            <para>
            If lid does not have a surface layer, an exception is thrown
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDExtension.StorageDepth(DHI.Mike1D.RainfallRunoffModule.IStormwaterLID)">
            <summary>
            Get storage depth of lid, independent of type. 
            <para>
            If lid does not have a storage layer, an exception is thrown
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDExtension.SetStorageDepth(DHI.Mike1D.RainfallRunoffModule.IStormwaterLID,System.Double)">
            <summary>
            Set storage depth of lid, independent of type. 
            <para>
            If lid does not have a storage layer, an exception is thrown
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDExtension.SoilMoisture(DHI.Mike1D.RainfallRunoffModule.IStormwaterLID)">
            <summary>
            Get soil/pavement moisture of lid, independent of type. 
            <para>
            If lid does not have a soil/pavement layer, an exception is thrown
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDExtension.SetSoilMoisture(DHI.Mike1D.RainfallRunoffModule.IStormwaterLID,System.Double)">
            <summary>
            Set soil/pavement moisture of lid, independent of type. 
            <para>
            If lid does not have a soil/pavement layer, an exception is thrown
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.LIDResultFileWriter">
            <summary>
            Class for writing LID results to file (dfs0)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDResultFileWriter.StartTime">
            <summary>
            Start time of file
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDResultFileWriter.Init(System.String,System.DateTime)">
            <summary>
            Initiate file
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDResultFileWriter.AddItem(System.String,DHI.Generic.MikeZero.eumQuantity)">
            <summary>
            Add item to file
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDResultFileWriter.Prepare">
            <summary>
            Prepare file. For dfs0 that will create the file on disc
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDResultFileWriter.AddValue(System.Double,System.Double)">
            <summary>
            Add value to file
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDResultFileWriter.Finish">
            <summary>
            Close file
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.IStormwaterLIDDrainMat">
            <summary>
            Interface for a LID containing a drain-mat layer
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.IStormwaterLIDDrainMat.DrainMat">
            <summary> Drain mat parameters </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerDrainMat">
            <summary>
            Drain mat LID layer
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerDrainMat.Thickness">
            <summary>
            Height of storage layer
            <para>
            Default value: 0.
            Unit: [meter].
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerDrainMat.Porosity">
            <summary>
            Storage porosity; void volume fraction of total volume.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerDrainMat.ManningM">
            <summary>
            Manning´s M for drainage flow.
            <para>
            It uses the slope in <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.Slope"/>.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerDrainMat.Depth">
            <summary> Depth of storage [m]. State variable </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerDrainMat.Evap">
            <summary> Evaporation flux from storage [m/s].</summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerDrainMat.Drain">
            <summary> Drain flux from storage [m/s].</summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerDrainMat._dmAlpha">
            <summary> Helper variable, containing <code>ManningM*sqrt(Slope)</code>. If zero, drainage material layer drains instantly. </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerDrainMat.Volume">
            <summary>
            Volume of water per area [m] contained in storage
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerDrainMat.GetVolume(System.Double)">
            <summary>
            Volume of water per area [m] contained in storage for a given depth
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerDrainMat.Validate(DHI.Mike1D.Generic.IDiagnostics,System.String)">
            <summary>
            Validate drain mat layer
            </summary>
            <param name="diagnostics">Diagnostics error to report to</param>
            <param name="name">Name of LID</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerDrainMat.Prepare(System.Double)">
            <summary>
            Prepare drain mat layer
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerDrainMat.GetDrainMatOutflow(System.Double,System.Double,System.Double)">
            <summary>
            Drainage material outflow [m/s]
            </summary>
            <param name="soilPerc">Percolation, infiltration from soil to storage [m/s]</param>
            <param name="width">Width of all units (accumulated)</param>
            <param name="area">Area of all units (accumulated)</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerDrainMat.Limit">
            <summary>
            Limit drain mat state to acceptable values.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.IStormwaterLIDPavement">
            <summary>
            Interface for a LID containing a pavement layer
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.IStormwaterLIDPavement.Pavement">
            <summary> Pavement parameters </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerPavement">
            <summary>
            Pavement LID layer
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerPavement.Thickness">
            <summary>
            Thickness of pavement layer [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerPavement.Porosity">
            <summary>
            Pavement porosity; void volume fraction of total volume.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerPavement.ImperviousFraction">
            <summary>
            Fraction of impervious paver material of total area; 0 for continuous porous pavement systems
            <para>
            Unit: [fraction]
            Default value: 0 (all is pervious)
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerPavement.Permeability">
            <summary>
            Permeability [m/s] of the concrete or asphalt used in continuous systems or 
            hydraulic conductivity of the fill material (gravel or sand) used in modular systems . 
            <para>
            The permeability of new porous concrete or asphalt is high (>2450 mm/hr) but over time 
            the fine particles in the runoff tend to clog the pavement, reducing the permeability of the structure.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerPavement.CloggingFactor">
            <summary>
            Volume of voids that are clogged due to fine particles accumulation. 
            <para>
            Use a value of 0 to ignore clogging
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerPavement.Moisture">
            <summary>
            Moisture fraction, volume of pore water relative to total volume (as a fraction). 
            <para>
            This fraction is always between zero and <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerPavement.Porosity"/>.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerPavement.MoistureOld">
            <summary>
            Moisture fraction of last time step
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerPavement.Evap">
            <summary> Evaporation rate [m/s]. <para>Evaporation only takes place if the upper layer is unsaturated</para> </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerPavement.Perc">
            <summary> Percolation rate. [m/s] <para>Speed of the water through the pavement, effectively used as infiltration rate from soil to lower layer </para></summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerPavement.Volume">
            <summary>
            Volume of water per area [m] contained in pavement
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerPavement.GetVolume(System.Double)">
            <summary>
            Volume of water per area [m] contained in pavement for a given moisture
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerPavement.Validate(DHI.Mike1D.Generic.IDiagnostics,System.String)">
            <summary>
            Validate pavement layer parameters
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerPavement.GetPavementPermRate(System.Double)">
            <summary>
            Computes reduced permeability of a pavement layer due to clogging.
            </summary>
            <param name="accumulatedInflow">Inflow to storage (or LID) since start of simulation in [m]</param>
            <returns>the reduced permeability of the pavement layer (m/s).</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerPavement.Limit">
            <summary>
            Limit state variables to allowed range,
            between zero and <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerPavement.Porosity"/>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.IStormwaterLIDSoil">
            <summary>
            Interface for a LID containing a soil layer
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.IStormwaterLIDSoil.Soil">
            <summary> Soil parameters </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil">
            <summary>
            Soil LID layer
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.Thickness">
            <summary>
            Thickness of soil layer [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.Porosity">
            <summary>
            Soil porosity; void volume fraction of total volume.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.FieldCapacity">
            <summary>
            Volume of pore water relative to total volume after the soil has been allowed to drain fully (as a fraction). 
            Below this level, infiltration/vertical drainage of water through the soil layer does not occur. 
            <para>
            This is a fraction, which must always be less than the <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.Porosity"/>, and
            larger than the <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.WiltingPoint"/>.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.WiltingPoint">
            <summary>
            Volume of bound water relative to total volume, i.e. water content in a fully dried soil (as a fraction). 
            The moisture content of the soil cannot fall below this limit. 
            <para>
            This is a fraction, which must always be less than the <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.Porosity"/>, and
            the <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.FieldCapacity"/>.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.FlowType">
            <summary>
            Type of flow calculations used in soil
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.FlowType.Capacity">
            <summary>
            Capacity based, using <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.InfiltrationCapacity"/> and <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.LeakageCapacity"/>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.FlowType.Conductivity">
            <summary>
            Conductivity based, using the Green Ampt method
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.FlowMethod">
            <summary>
            Flag specifying which method to use for soil infiltration and percolation (leakage).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.InfiltrationCapacity">
            <summary>
            Capacity to infiltrate from surface to soil, in [m/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.LeakageCapacity">
            <summary>
            Capacity to percolate (leak/infiltrate) from soil to storage, in [m/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.GaConductivity">
            <summary>
            Conductivity of soil [m/s], used by the Green Ampt infiltration method
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.GaConductivityCoefficient">
            <summary>
            Coefficient for conductivity of soil, used by the Green Ampt infiltration method.
            <para>
            Also called conductivity slope
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.GaSuctionHead">
            <summary>
            Suction head of soil [m], used by the Green Ampt infiltration method
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.Moisture">
            <summary>
            Moisture fraction, volume of pore water relative to total volume (as a fraction). 
            <para>
            This fraction is always between <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.WiltingPoint"/> and
            the <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.Porosity"/>.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.MoistureOld">
            <summary>
            Moisture fraction of last time step
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.Evap">
            <summary> Evaporation rate [m/s]. <para>Evaporation only takes place if the upper layer is unsaturated</para> </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.Perc">
            <summary> Percolation rate. [m/s] <para>Speed of the water through the soil, effectively used as infiltration rate from soil to lower layer </para></summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.GaInfil">
            <summary>
            Green Ampt infiltration computational variables and state
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.Volume">
            <summary>
            Volume of free water per area [m] contained in soil. Bound water (below <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.WiltingPoint"/>) is not included
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.GetVolume(System.Double)">
            <summary>
            Volume of free water per area [m] contained in soil for a given moisture. Bound water (below <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.WiltingPoint"/>) is not included
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.Validate(DHI.Mike1D.Generic.IDiagnostics,System.String)">
            <summary>
            Validate surface parameters
            </summary>
            <param name="diagnostics">Diagnostics object</param>
            <param name="name">Name/ID of LID unit</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.Prepare(DHI.Mike1D.Generic.IDiagnostics,System.Double,System.String)">
            <summary>
            Prepare soil layer
            </summary>
            <param name="diagnostics">Diagnostics object</param>
            <param name="initialSaturation">Initial saturation fraction</param>
            <param name="name">Name of LID</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.GetSoilPercRate(System.Double)">
            <summary>
            Computes percolation rate of water through a LID's soil layer.
            </summary>
            <param name="dt">Time step in seconds</param>  
            <returns>Percolation rate within soil layer (m/s)</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.Limit">
            <summary>
            Limit state variables to allowed range,
            between <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.WiltingPoint"/> and <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSoil.Porosity"/>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.IStormwaterLIDStorage">
            <summary>
            Interface for a LID containing a storage layer
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.IStormwaterLIDStorage.Storage">
            <summary> Storage parameters </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.LIDDrainageType">
            <summary>
            Drainage capacity is a rate per area [m/s] and can be scaled by
            different areas. 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LIDDrainageType.LIDArea">
            <summary>
            Drainage is based on LID area, <see cref="P:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.Area"/>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LIDDrainageType.TotalCollectingArea">
            <summary>
            Drainage is based on total collecting area, <see cref="P:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.TotalCollectingArea"/>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage">
            <summary>
            Storage LID layer
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.Height">
            <summary>
            Height of storage layer
            <para>
            Default value: 0.
            Unit: [meter].
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.Porosity">
            <summary>
            Storage porosity; void volume fraction of total volume.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.Conductivity">
            <summary>
            Infiltration rate, The maximum rate at which water can flow out the bottom of the storage.
            <para>
            In case a <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.CloggingFactor"/> 
            has been enabled, the rate declines over time.
            </para>
            <para>
            Default value: 0.
            Unit: [m/s].
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.CloggingFactor">
            <summary>
            Volume of voids that are clogged due to fine particles accumulation. 
            <para>
            Use a value of 0 to ignore clogging
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.DrainageCapacity">
            <summary>
            Capacity for drain [m/s]
            <para>
            The actual drain flow depends on the <see cref="P:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.Area"/>.
            </para>
            <para>
            If <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.DrainageExponent"/> &gt; 0, then drain flow also depends on the head.
            </para>
            <para>
            Default value: 0.
            Unit: [meter/second].
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.DrainageBase">
            <summary>
            Drainage capacity is a rate per area [m/s] and can be scaled by
            different areas. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.DrainageExponent">
            <summary>
            Exponent for drain flow calculations [-]
            <para>
            The drain capacity flow is multiplied with <code>Math.Pow(head, DrainageExponent)</code>
            </para>
            <para>
            If <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.DrainageExponent"/> is zero, then drain flow is constant and independent on the head.
            </para>
            <para>
            Default value: 0.
            Unit: [-].
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.DrainageOffset">
            <summary>
            Offset where drainage starts.
            <para>
            Height of any underdrain piping above the bottom of the storage
            </para>
            <para>
            Default value: 0.
            Unit: [meter].
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.Depth">
            <summary> Depth of storage [m]. State variable </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.Evap">
            <summary> Evaporation flux from storage [m/s].</summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.Infil">
            <summary> Infiltration flux from storage [m/s].</summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.Drain">
            <summary> Drain flux from storage [m/s].</summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.Volume">
            <summary>
            Volume of water per area [m] contained in storage
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.GetVolume(System.Double)">
            <summary>
            Volume of water per area [m] contained in storage for a given depth
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.Validate(DHI.Mike1D.Generic.IDiagnostics,System.String)">
            <summary>
            Validate surface parameters
            </summary>
            <param name="diagnostics">Diagnostics object</param>
            <param name="name">Name/ID of LID unit</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.GetStorageInfilRate(System.Double)">
            <summary>
            native soil beneath a LID.
            </summary>
            <param name="accumulatedInflow">Inflow to storage (or LID) since start of simulation in [m]</param>
            <returns>infiltration rate (m/s)</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.GetStorageDrainRate(System.Double)">
            <summary>
            computes underdrain flow rate in a LID's storage layer.
            </summary>
            <param name="head">head of water above underdrain (m)</param>
            <returns>flow in underdrain (m/s)</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.Limit">
            <summary>
            Limit state variables to allowed range,
            between zero and <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerStorage.Height"/>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.IStormwaterLIDSurface">
            <summary>
            Interface for a LID containing a surface layer
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.IStormwaterLIDSurface.Surface">
            <summary> Surface parameters </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface">
            <summary>
            Surface LID layer.
            <para>
            To enable surface routing, both the <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.ManningM"/>
            and the <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.Slope"/> must be set.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.StorageHeight">
            <summary>
            Height of surface storage [m]. Above this depth, overflow occurs.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.VegetationFraction">
            <summary>
            The fraction of the surface storage that is filled with vegetation.
            <para>
            Default value: 0.
            Unit: [m].
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.ManningM">
            <summary>
            Manning´s M for overland flow over the surface.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.Slope">
            <summary>
            Slope of surface (fraction). 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.Depth">
            <summary>
            Depth of surface storage [m]. State variable
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.DepthOld">
            <summary>
            Depth of surface storage in last time step[m].
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.SurfaceAlpha">
            <summary> Helper variable, containing <code>ManningM*sqrt(Slope)</code>. If zero, routing is disabled. </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface._surfaceAlpha">
            <summary> Helper variable, containing <code>ManningM*sqrt(Slope)</code>. If zero, routing is disabled. </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.Evap">
            <summary> Evaporation rate from surface [m/s] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.Infil">
            <summary> Infiltration rate from surface to lower layer [m/s] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.Outflow">
            <summary> Outflow rate (overflow/runoff) from surface [m/s] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.Volume">
            <summary>
            Volume of water per area [m] contained on surface
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.GetVolume(System.Double)">
            <summary>
            Volume of water per area [m] contained on surface for a given depth
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.UsesRouting">
            <summary>
            Bool indicating if routing is enabled (<see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.SurfaceAlpha"/> is greater than zero). 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.Validate(DHI.Mike1D.Generic.IDiagnostics,System.Double,System.String)">
            <summary>
            Validate surface parameters
            </summary>
            <param name="diagnostics">Diagnostics object</param>
            <param name="width">Width of a single LID unit</param>
            <param name="name">Name/ID of LID unit</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.Prepare">
            <summary>
            Prepare surface
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.PrepareSurfaceRouting">
            <summary>
            Whenever <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.ManningM"/> or <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.Slope"/> is updated,
            this needs to be called.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.getSurfaceOutflowRate(System.Double,System.Double,System.Double)">
            <summary>
            Computes outflow rate [m/s], based on Mannings equation.
            <para>
            If routing is disabled, this returns zero.
            </para>
            </summary>
            <param name="dt">Time step in sconds</param>
            <param name="width">Width of all units (accumulated)</param>
            <param name="area">Area of all units (accumulated)</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.getSurfaceOverflow(System.Double)">
            <summary>
            Finds surface overflow rate [m/s], assuming all water above <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.StorageHeight"/>
            is diverted.
            <para>
            If routing is enabled, this returns zero.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.Limit">
            <summary>
            Limit state variables to allowed range,
            cannot be negative
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.LidTypes">
            <summary>
            Types of LID's supported by the standard LID implementation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LidTypes.BioRetentionCell">
            <summary> Bio-retention cell </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LidTypes.PorousPavement">
            <summary> Porous Pavement </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LidTypes.InfiltrationTrench">
            <summary> Infiltration trench </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LidTypes.RainBarrel">
            <summary> Rain barrel </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LidTypes.VegSwale">
            <summary> Swale  </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LidTypes.RainGarden">
            <summary> Rain Garden - a special version of the <see cref="F:DHI.Mike1D.RainfallRunoffModule.LID.LidTypes.BioRetentionCell"/> </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.LidTypes.GreenRoof">
            <summary> Green Roof </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.PorousPavement">
            <summary>
            Porous Pavement systems are excavated areas filled with gravel 
            and paved over with a porous concrete or asphalt mix. 
            Normally all rainfall will immediately pass through the pavement 
            into the gravel storage layer below it where it can infiltrate at 
            natural rates into the site´s native soil. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.PorousPavement.Surface">
            <summary> Surface parameters </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.PorousPavement.Pavement">
            <summary> Pavement parameters </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.PorousPavement.Storage">
            <summary> Storage parameters </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.PorousPavement.Validate(DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.PorousPavement.Prepare(DHI.Mike1D.RainfallRunoffModule.RRParameters,System.DateTime,System.DateTime,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.PorousPavement.PrepareForTimeStep">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.PorousPavement.PerformTimeStep(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel">
            <summary>
            Rain Barrels are containers that collect roof runoff during storm events and can either 
            release or re-use the rain water during dry periods.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.BarrelStorage">
            <summary>
            Storage properties of barrel
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.BarrelStorage.Height">
            <summary>
            Height of barrel storage
            <para>
            Default value: 0.
            Unit: [meter].
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.BarrelStorage.DrainageCapacity">
            <summary>
            Capacity for drain [m/s]
            <para>
            The actual drain flow depends on the <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.BarrelArea"/>.
            </para>
            <para>
            If <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.BarrelStorage.DrainageExponent"/> &gt; 0, then drain flow also depends on the head.
            </para>
            <para>
            Default value: 0.
            Unit: [meter/second].
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.BarrelStorage.DrainageExponent">
            <summary>
            Exponent for drain flow calculations [-]
            <para>
            The drain capacity flow is multiplied with <code>Math.Pow(head, DrainageExponent)</code>
            </para>
            <para>
            If <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.BarrelStorage.DrainageExponent"/> is zero, then drain flow is constant and independent on the head.
            </para>
            <para>
            Default value: 0.
            Unit: [-].
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.BarrelStorage.DrainageOffset">
            <summary>
            Offset where drainage starts.
            <para>
            Height of any underdrain piping above the bottom of the barrel
            </para>
            <para>
            Default value: 0.
            Unit: [meter].
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.BarrelStorage.DrainageDelay">
            <summary>
            Delay in drainage, i.e. time after end of rain before 
            drainage starts.
            <para>
            Default value: 0.
            Unit: [s].
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.BarrelStorage.DrainageInfiltrationFactor">
            <summary>
            Factor specifying how much of the drain flow that is infiltrated. 
            <para>
            A factor of 1 means that all drain flow is infiltrated and no drain flow
            is returned as runoff. A factor of 0 means that all drain flow is returned
            as runoff.
            </para>
            <para>
            Default value: 0.
            Unit: [s].
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.BarrelStorage.Depth">
            <summary>
            Current depth of storage. State variable [meter].
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.BarrelStorage.Drain">
            <summary>  Current storage drain flux [m/s]  </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.BarrelStorage.Infiltration">
            <summary> Current Infiltration flux [m/s] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.BarrelStorage.Volume">
            <summary>
            Volume of water per area [m] contained in storage - same as <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.BarrelStorage.Depth"/>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.Name">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.DHI#Mike1D#RainfallRunoffModule#IStormwaterLID#Area">
            <summary>
            Area of RainBarrel is zero (area on which it rains directly).
            See <see cref="P:DHI.Mike1D.RainfallRunoffModule.IStormwaterLID.Area"/> for details.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.TotalCollectingArea">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.BarrelArea">
            <summary>
            Area of (all) barrels handled by this instance.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.FractionOfLIDFlowToRoute">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.InitialSaturation">
            <summary>
            Initial saturation fraction.
            <para>
            For storage, this fraction is used to calculate the initial storage depth.
            </para>
            <para>
            Default value: 0.
            Unit: [fraction].
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.Storage">
            <summary>
            Storage of barrel
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.ReportPath">
            <summary>
            Path and name for report file.
            <para>
            If null or empty, no report file is created.
            </para>
            <para>
            Use only for testing and validating model - file can become quite big.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel._reportPath">
            <summary>
            Path and name for report file.
            <para>
            If null or empty, no report file is created.
            </para>
            <para>
            Use only for testing and validating model - file can become quite big.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.Runoff">
            <summary>
            Current runoff from LID [m3/s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel._inflow">
            <summary> Inflow [m3/s] </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel._surfaceOutflow">
            <summary> Runover [m/s] </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel._runOff">
            <summary> Runoff [m3/s] </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel._dryTime">
            <summary> Time without inflow [s] </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.FlowStat">
            <summary> Flow statistics and mass balance </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel._flowStat">
            <summary> Flow statistics and mass balance </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.Validate(DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.Initialize(DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.Prepare(DHI.Mike1D.RainfallRunoffModule.RRParameters,System.DateTime,System.DateTime,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.ApplyBoundary(DHI.Mike1D.BoundaryModule.CatchmentSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.IBoundarySource)">
            <summary>
            No effect, rain barrels does not accept any boundaries
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.ApplyBoundary(DHI.Mike1D.BoundaryModule.GlobalSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.GlobalGeoLocatedSource)">
            <summary>
            No effect, rain barrels does not accept any boundaries
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.PrepareForTimeStep">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.AddInflow(System.Double)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.PerformTimeStep(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.getStorageDrainRate(System.Double,System.Double,System.Double)">
            <summary>
            Computes underdrain flow rate in a LID's storage layer.
            </summary>
            <param name="head">head of water above underdrain (m)</param>
            <param name="drainageCapacity">Capacity in  [m/s]</param>
            <param name="drainageExponent">Exponent to head</param>
            <returns>flow in underdrain (m/s)</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.RainBarrel.Finish">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.LID.VegetativeSwale">
            <summary>
            Vegetative Swales are waterways or depressed areas with sloping sides 
            covered with grass and other vegetation. They slow down the conveyance 
            of collected runoff and allow it more time to infiltrate to inherent 
            soil beneath it.  
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.LID.VegetativeSwale.MinWidth">
            <summary>
            Minimum width of swale, used for both top-width and bottom width
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.VegetativeSwale.Surface">
            <summary> Surface parameters </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.VegetativeSwale.SoilInfiltrationCapacity">
            <summary> Infiltration capacity to surrounding soil </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.VegetativeSwale.SurfaceSideSlope">
            <summary> 
            Swale side slope (run over rise). A zero means vertical sides
            <para>
            Note that this is a run-over-rise, i.e. an "inverse slope". 
            The rise is the surface storage height (<see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.StorageHeight"/>)
            and is always non-zero. A zero <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.VegetativeSwale.SurfaceSideSlope"/> will model
            vertical walls (zero run).
            </para>
            <para>
            The slope must be small enough for the sides not to cover the entire width
            of the swale. There must be a least 25 cm of flat bottom, and the slope will
            be corrected accordingly.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.LID.VegetativeSwale.SurfaceDepressionStorageHeight">
            <summary> 
            Height of surface depressions. Below this height runoff (routing) does not take place.
            
            <para>
            This height must be less than <see cref="P:DHI.Mike1D.RainfallRunoffModule.LID.LIDLayerSurface.StorageHeight"/>
            </para>
            <para>
            Default value: 0.
            Unit: [m].
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.VegetativeSwale.Validate(DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.VegetativeSwale.Prepare(DHI.Mike1D.RainfallRunoffModule.RRParameters,System.DateTime,System.DateTime,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.VegetativeSwale.PrepareForTimeStep">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.VegetativeSwale.PerformTimeStep(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.VegetativeSwale.SwaleVolume">
            <summary>
            Volume and surface area of swale for current water depth.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.VegetativeSwale.SwaleVolume(System.Double@)">
            <summary>
            Volume and surface area of swale for current water depth.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.VegetativeSwale.SwaleVolume(System.Double)">
            <summary>
            Volume and surface area of swale for specified water depth.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.VegetativeSwale.SwaleVolume(System.Double,System.Double@)">
            <summary>
            Volume and surface area of swale for specified water depth.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.LID.VegetativeSwale.SwaleDepth(System.Double)">
            <summary>
            Get depth water in swale for a given volume 
            </summary>
            <param name="volume">Volume to calculate depth for. Must be less than volume of full swale</param>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData">
            <summary>
             Access to catchment data
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.DateTimeFormatString">
            <summary>
            String for formatting DateTime's
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.DateFormatString">
            <summary>
            String for formatting Date's
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.Catchments">
            <summary>
             Get collection of catchments 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.TimeStepMultiplier">
            <summary>
            For Mike 11 setups, rainfall runoff models use a time step multiplier
            relative to the HD module time step
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.Parameters">
            <summary>
            Set default parameters for all catchments
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.RuntimeDiagnostics">
            <summary>
             Set the runtime diagnostics. Errors and warnings are added to the runtime diagnostics during rum time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.WriteRRStatFileFlag">
            <summary>
            If true, then a RRStat.txt file is created with a summary of rainfall runoff data for
            all catchments. The RRStat.txt file is only created if a stand-alone RR simulation is performed.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.LCRV">
            <summary>
            Internal method
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.AdditionalData">
            <summary>
            Internal method. Additional data from the MIKE 1D data object. Set during initialize.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.Validate">
            <summary>
            Validates the object
            </summary>
            <returns>An IDiagnostics containing errors, warning, and hints</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.Validate(DHI.Mike1D.Generic.IDiagnostics,DHI.Mike1D.BoundaryModule.IBoundaryData)">
            <summary>
            Validates the catchment with boundaries
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.Initialize(DHI.Mike1D.BoundaryModule.IBoundaryData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize rainfall runoff models
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.Initialize(DHI.Mike1D.BoundaryModule.IBoundaryData,DHI.Mike1D.ADDataAccess.ADComponentData,DHI.Mike1D.STDataAccess.STData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize rainfall runoff models
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.Prepare(System.DateTime,System.DateTime,DHI.Mike1D.Generic.Diagnostics)">
            <summary>
             Prepare rainfall runoff models
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.ReleaseLicense">
            <summary>
            Release all RR licenses
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.WriteRRStatFile(System.DateTime,System.DateTime,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Write RR stat file
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.Finish">
            <summary>
            Finish simulation. Calls finish on all cathcments that require finalization.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.WriteState(DHI.Mike1D.ModelState.ModelStateWriter)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData.ReadState(DHI.Mike1D.ModelState.ModelStateReader)">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.Catchments">
            <summary>
             A collection of Rainfall Runoff catchments
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchments._griddedSourceTypeMap">
            <summary>
            Map for gridded data. Set up in initialize and used and cleared in prepare
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchments.CurrentTime">
            <summary>
            Time of which all catchments has been updated to.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchments._catchmentNameMap">
            <summary>
            Map of all catchment, key'ed by their name. Only initialized
            when the Find method is used.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchments.StopwatchPostTimeStepEvent">
            <summary>
            Stop watch, timing post time step event
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchments.CalibrationPlotOutputFolder">
            <summary>
            Folder for calibration plots.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.Initialize(DHI.Mike1D.BoundaryModule.IBoundaryData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize Rainfall Runoff models. Sets up static data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.Initialize(DHI.Mike1D.BoundaryModule.IBoundaryData,DHI.Mike1D.ADDataAccess.ADComponentData,DHI.Mike1D.STDataAccess.STData,DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize Rainfall Runoff models. Sets up static data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.CalculateGridWeights(DHI.Mike1D.RainfallRunoffModule.Catchments.GriddedSourceData,DHI.Mike1D.RainfallRunoffModule.Catchment,DHI.Mike1D.Generic.IDiagnostics,System.Boolean)">
            <summary>
            Calculate weights for catchment, returns null if failed.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.Prepare(System.DateTime,DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.Diagnostics)">
            <summary>
             Prepare Rainfall Runoff models. Sets up dynamic data so that the model is ready for first time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.Prepare(System.DateTime,System.DateTime,DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.Diagnostics,DHI.Mike1D.Generic.IConnection)">
            <summary>
             Prepare Rainfall Runoff models. Sets up dynamic data so that the model is ready for first time step.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.Catchments.TimeEvent">
            <summary>
             Delegate that is used when triggering a TimeStepPerfomed event.
            </summary>
            <param name="time"></param>
        </member>
        <member name="E:DHI.Mike1D.RainfallRunoffModule.Catchments.PreTimeStepEvent">
            <summary>
            An event that is called everytime a timestep is to be performed.
            </summary>
        </member>
        <member name="E:DHI.Mike1D.RainfallRunoffModule.Catchments.PostTimeStepEvent">
            <summary>
            An event that is called everytime a timestep was successfully performed.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.TriggerPreTimeStepEvent(System.DateTime)">
            <summary>
            Function that triggers the PreTimeStepEvent event.
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.TriggerPostTimeStepEvent(System.DateTime)">
            <summary>
            Function that triggers the PostTimeStepEvent event.
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.RunUntil(System.DateTime)">
            <summary>
            Performs time steps until the time is reached
            </summary>
            <param name="stoptime">Time to run until</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.StopRainfallRunoffSimulation">
            <summary>
             Set a flag that will force the simulation to stop after the current time step
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchments.Count">
            <summary>
              Number of grid points
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchments.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchments.TsBuffer">
            <summary>
            The TsBuffer used by this collection of catchments
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.Add(DHI.Mike1D.RainfallRunoffModule.ICatchment)">
            <summary>
            Add a catchment to the collection
            </summary>
            <param name="catchment"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.Clear">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchments.Item(System.Int32)">
            <summary>
            Get a catchment via its index
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.IndexOf(DHI.Mike1D.RainfallRunoffModule.ICatchment)">
            <summary>
            Searches for the specified catchment and returns the zero-based index of the item, or -1 if not found
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.Insert(System.Int32,DHI.Mike1D.RainfallRunoffModule.ICatchment)">
            <summary>
            Insert catchment into list at specified index
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.RemoveAt(System.Int32)">
            <summary>
            Remove catchment at specified index.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.Remove(DHI.Mike1D.RainfallRunoffModule.ICatchment)">
            <summary>
            Remove catchment.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.Find(System.String)">
            <summary>
            Get a catchment via its model id
            </summary>
            <param name="modelId">Model id</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.FindAll(System.String)">
            <summary>
            Get a catchment via its name. Returns null if no catchment has this name.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.Contains(DHI.Mike1D.RainfallRunoffModule.ICatchment)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.CopyTo(DHI.Mike1D.RainfallRunoffModule.ICatchment[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.SortCombinedLast">
            <summary>
            Sort such that combined catchment occur last in the list
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.Sort(System.Collections.Generic.IComparer{DHI.Mike1D.RainfallRunoffModule.ICatchment})">
            <summary>
            Sort the catchments using the specified comparer.
            <para>
            Remember to sort combined catchments as the last ones
            </para>
            <para>
            Sort is implemented explicitly to avoid overhead in updating the search maps when sorting methods uses the <see cref="P:DHI.Mike1D.RainfallRunoffModule.Catchments.Item(System.Int32)"/> directly.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.Sort(System.Comparison{DHI.Mike1D.RainfallRunoffModule.ICatchment})">
            <summary>
            Sort the catchments using the specified comparison.
            <para>
            Remember to sort combined catchments as the last ones
            </para>
            <para>
            Sort is implemented explicitly to avoid overhead in updating the search maps when sorting methods uses the <see cref="P:DHI.Mike1D.RainfallRunoffModule.Catchments.Item(System.Int32)"/> directly.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.ResetSearchMaps">
            <summary>
            This will clear the search maps used for finding catchment based on model id or catchment names
            <para>
            If doing intensive operations on the index setter, <see cref="P:DHI.Mike1D.RainfallRunoffModule.Catchments.Item(System.Int32)"/>, it is a good idea to reset the search maps (from a performance point of view).
            Also, if the search maps some some reason gets out-of-sync, this is a backdoor for resetting the search map.
            </para> 
            <para>
            The search maps will be rebuild whenever one of the methods requiring them is called.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.AddToMaps(DHI.Mike1D.RainfallRunoffModule.ICatchment)">
            <summary>
            Add catchment to search maps
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.RemoveFromMaps(DHI.Mike1D.RainfallRunoffModule.ICatchment)">
            <summary>
            Remove catchment from search maps
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.CatchmentNameMapAdd(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{DHI.Mike1D.RainfallRunoffModule.ICatchment}},DHI.Mike1D.RainfallRunoffModule.ICatchment)">
            <summary>
            Add catchment to the catchmentNameMap
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.CatchmentNameMapRemove(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{DHI.Mike1D.RainfallRunoffModule.ICatchment}},DHI.Mike1D.RainfallRunoffModule.ICatchment)">
            <summary>
            Remove catchment to the catchmentNameMap
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchments.RuntimeDiagnostics">
            <summary>
            Diagnostics instance for the Catchments. Used during runtime.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchments.LastTimeStepPerformedEvent">
            <summary>
             Gets Last Time Step Performed Event
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchments.MinTimeStep">
            <summary>
            Minimum time step step used in RunUntil
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchments.MaxTimeStep">
            <summary>
            Maximum time step step used in RunUntil
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.Catchments.RunController">
            <summary>
            Controller used for executing simulation
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.Validate">
            <summary>
            Validates the object
            </summary>
            <returns>An IDiagnostics containing errors, warning, and hints</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.Validate(DHI.Mike1D.Generic.IDiagnostics,DHI.Mike1D.BoundaryModule.IBoundaryData)">
            <summary>
            Validates the object
            </summary>
            <returns>An IDiagnostics containing errors, warning, and hints</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.Catchments.Finish">
            <summary>
            Finish simulation. Calls finish on catchments requiring finalization.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.Catchments.GriddedSourcesTypeData">
            <summary>
            Helper class 
            1) collecting gridded sources for each type (rainfall, evap etc.) and 
            2= mapping from CatchmentId to <see cref="T:DHI.Mike1D.RainfallRunoffModule.Catchments.GriddedSourceData"/> and catchment weights
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchments.GriddedSourcesTypeData.CatchmentIdMap">
            <summary>
            Map from CatchmentId to CatchmentGriddedWeights and the GriddedSource it belongs to
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchments.GriddedSourcesTypeData.GriddedSourceTsProcMap">
            <summary>
            Map from Gridded Source to <see cref="T:DHI.Mike1D.RainfallRunoffModule.Catchments.GriddedSourceData"/>.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.Catchments.GriddedSourceData">
            <summary>
            Helper class, collecting common data for each gridded source.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchments.GriddedSourceData.GriddedSource">
            <summary>
            The gridded source as specified in the boundary system
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchments.GriddedSourceData.TsProcData">
            <summary>
            Time series processing data
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.Catchments.GriddedSourceData.CanCalculateGridWeights">
            <summary>
            True if the <see cref="F:DHI.Mike1D.RainfallRunoffModule.Catchments.GriddedSourceData.GridWeightCalculator"/> can calculate weights.
            Typically false if the grid is not well-defined.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.Catchments.GridTsProcData">
            <summary>
            Helper class, containing boundary items and gridded weights, that is 
            to be processed (in pairs)
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.Catchments.SmallestTimeComparer">
            <summary>
            Class for comparing date time on the smallest time
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentFromTimeSeries">
            <summary>
             Load a time seris as a catchment
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentFromTimeSeries.#ctor(System.String)">
            <summary>
             Contstructor
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentFromTimeSeries.TimeOfNextUpdate">
            <summary>
            Return the time of next update. Used for PostTimeStepEvent event in Catchments.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentFromTimeSeries.TransferToStateVariableTable">
            <summary>
            This routine stores the calculated variables in variables ready for export. The values in these state variable 
            corresponds to the values written to the result file. All discharge variables are subject to a unit conversion. 
            During the calculation discharges are calculated using the unit mm/hour and must therefor be converted into m3/s. 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentFromTimeSeries.Update(System.DateTime)">
            <summary>
             Update internal state of catchment to time Time()
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentFromTimeSeries.TakeTimeStep">
            <summary>
            This procedure forwards the calculation with one time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentFromTimeSeries.Initialize(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize Rainfall Runoff model. Sets up static data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentFromTimeSeries.Type">
            <summary>
            The type of catchment: NAM, Urban A etc
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentFromTimeSeries.Prepare(System.DateTime,System.DateTime,DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Prepare Rainfall Runoff model. Sets up dynamic data so that the model is ready for first time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentFromTimeSeries.TimeValueGetterRR(DHI.Mike1D.Generic.IQuantity,DHI.Mike1D.Generic.IQuantity@)">
            <summary>
            Get value setter for the specified data quantity
            </summary>
            <param name="quantity">Requested Quantity</param>
            <param name="actualQuantity">Actual quantity. May differ on the description</param>
            <returns>A value getter delegate that can set the value</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentFromTimeSeries.GetRequiredTypes">
            <summary>
            Get the type of boundary required by this catchment
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentFromTimeSeries.ApplyBoundary(DHI.Mike1D.BoundaryModule.CatchmentSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.IBoundarySource)">
            <summary>
             Apply a boundary to this catchment
            </summary>
            <param name="catchmentSourceBoundaryType"></param>
            <param name="catchmentSourceBoundary"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentFromTimeSeries.ApplyBoundary(DHI.Mike1D.BoundaryModule.GlobalSourceBoundaryTypes,DHI.Mike1D.BoundaryModule.GlobalGeoLocatedSource)">
            <summary>
             Apply a boundary to this catchment
            </summary>
            <param name="type"></param>
            <param name="geoLocatedSource"></param>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentFromTimeSeries.FilePath">
            <summary>
             Set file path of time series
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ICatchment">
            <summary>
             Interface to Rainfall Runoff catchments. Specific catchments can inherit from the 
             abstract Catchment class instead of implementing this interface directly.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchment.Initialize(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize Rainfall Runoff model. Sets up static data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchment.Prepare(System.DateTime,System.DateTime,DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Prepare Rainfall Runoff model. Sets up dynamic data so that the model is ready for first time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchment.Type">
            <summary>
            Type of model used in catchment
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchment.Area">
            <summary>
             Total area of catchment
             Unit: [m2]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchment.CurrentTime">
            <summary>
            Return the time of the current state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchment.TimeOfNextUpdate">
            <summary>
            Return the time of next update. Used for PostTimeStepEvent event in Catchments.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchment.PerformTimeStep">
            <summary>
            This procedure forwards the calculation with one time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchment.Update(System.DateTime)">
            <summary>
            This procedure forwards the calculation such that the state includes the specified time
            </summary>
        </member>
        <member name="E:DHI.Mike1D.RainfallRunoffModule.ICatchment.PostTimeStepEvent">
            <summary>
            An event that is called everytime a timestep was successfully performed.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchment.CatchmentName">
            <summary>
             Catchment name. 
             <para>
             The name is not unique, there may be several catchment models for one catchment, 
             however all catchments with the same name should/must share the same catchment geometry.
             </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchment.ModelId">
            <summary>
             Catchment model ID. Unique id. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchment.Name">
            <summary>
             Same as <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchment.ModelId"/> - for backward compatibility.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchment.MinTime">
            <summary>
             Minimum time to which Time can be set. The catchment must caches values from MinTime to the
             max value of Time.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchment.TSBuffer">
            <summary>
             Set the TSBuffer to use in this catchment
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchment.CatchmentGeometry">
            <summary>
            Get and set the list of coordinates of the catchment
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchment.CenterPoint">
            <summary>
             Get and set the central point of the catchment
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchment.TimeStep">
            <summary>
             Time step op catchment
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchment.ObservedData">
            <summary>
            Observed data. Used for creating calibration plots and for auto-calibration reference data.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchment.YearlyRunoff">
            <summary>
            Return dictionary of runoff as a function of year
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchment.ResetBoundaries">
            <summary>
            Remove boundaries applied in previous runs
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentCombined">
            <summary>
            Catchment that combines several other catchments and
            need knowlege of other catchments.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchmentCombined.Initialize(DHI.Mike1D.RainfallRunoffModule.Catchments,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize Rainfall Runoff model. Sets up static data.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentADComponent">
            <summary>
            Interface for a catchment that supports AD component and AD related inflow
            from boundaries.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchmentADComponent.InitializeAD(DHI.Mike1D.ADDataAccess.ADComponentData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize AD/component part of catchment model.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentSTComponent">
            <summary>
            Interface for a catchment that supports AD component and AD related inflow
            from boundaries.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchmentSTComponent.InitializeST(DHI.Mike1D.STDataAccess.STData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize AD/component part of catchment model.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ICatchments">
            <summary>
             Interface to Rainfall Runoff Model catchments
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchments.Initialize(DHI.Mike1D.BoundaryModule.IBoundaryData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize Rainfall Runoff models. Sets up static data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchments.Prepare(System.DateTime,DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.Diagnostics)">
            <summary>
             Prepare Rainfall Runoff models. Sets up dynamic data so that the model is ready for first time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchments.Find(System.String)">
            <summary>
             Find a catchment by catchment model id (unique)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.ICatchments.FindAll(System.String)">
            <summary>
             Find a catchment by catchment name
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentsToTimeSeries">
            <summary>
             Bridge to save catchment output to dfs0 file
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentsToTimeSeries.#ctor(DHI.Mike1D.RainfallRunoffModule.ICatchments)">
            <summary>
             Save a collection of catchments to a dfs0 file (a DHI Timeseries Object)
            </summary>
            <param name="catchments"></param>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentsToTimeSeries.StartTime">
            <summary>
             dfs0 file start time
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentsToTimeSeries.EndTime">
            <summary>
             dfs0 file end time
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentsToTimeSeries.TimeStep">
            <summary>
             dfs0 file time step
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentsToTimeSeries.Validate">
            <summary>
            Validate parameters to check that state is valid before saving file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentsToTimeSeries.CreateTimeSeries">
            <summary>
            Create time series from catchment
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentsToTimeSeries.FilePath">
            <summary>
            FilePath specifying the name of the persistance storage
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentsToTimeSeries.SaveRunoffAndNetRainfall">
            <summary>
            Save catchment to dfs0 time series
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentsToTimeSeries.SaveAll">
            <summary>
            Save all quantities from catchments to dfs0 time series
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentTimeAreaData">
            <summary>
            Time Area data interface.
            <para>
            The time area rainfall runoff model is also called "Urban A"
            </para>
            <para>
            Interface for time area catchment model inherits from <see cref="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentUrbanData"/> interface.
            </para>
            <para>
            This interface contains data and parameters for setting up a catchment model, and represents
            as such only setup data. Computational variables and methods are not included in this interface.
            It can be used to explore data and parameters required when setting up the catchment model.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentTimeAreaData.Method">
            <summary>
            The Time Area method to be used.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentTimeAreaData.AllowTimeStepJump">
            <summary>
             Flag specifying if it is allowed or not to advance 
             the time during dry period.
             Default: true, default true from MU, default false from M11
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentTimeAreaData.ImperviousArea">
            <summary>
            Impervious area is a factor which defines the part
            of the catchment considered to contribute to the runoff.
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentTimeAreaData.ConcentrationTime">
            <summary>
            Concentration time used to defined the number of cells of this catchment.
            Unit: [s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentTimeAreaData.InitialLossMax">
            <summary>
            Maximum value of initial loss magasin depth
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentTimeAreaData.ReductionFactor">
            <summary>
            Hydrological reduction coeeficient. The runoff reduction factor,
            accounts for water losses caused by e.g evapo-transpiration,
            imperfect imperviousness, etc. on the contributing area.
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentTimeAreaData.TimeAreaCoefficient">
            <summary>
            Time Area curve coefficient, used by TA function
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentTimeAreaData.TimeAreaCurveType">
            <summary>
            Time area curve type. 
            <para>
            If set to <see cref="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.TimeAreaCurveTypes.UserDefined"/>,
            the actual curve must be specified in the <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentTimeAreaData.TimeAreaCurve"/> table.
            All other values indicate predefined curves.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentTimeAreaData.TimeAreaCurve">
            <summary>
            Time area curve, user defined, must be specified in case <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchmentTimeAreaData.TimeAreaCurveType"/> 
            is <see cref="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.TimeAreaCurveTypes.UserDefined"/>.
            <para>
            The curve is dimensionless, 
            time (X) values between 0 and 1 and area (Y) values between 0 and 1.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea">
            <summary>
             Class for Time Area catchment model. See <see cref="T:DHI.Mike1D.RainfallRunoffModule.ICatchmentTimeAreaData"/> for parameters
             availabel when setting up the model.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.MUCompatibility">
            <summary>
            Flag setting up MU compatibility
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea._bHasDischarged">
            <summary>
            Flag specifying if last time step had a positive runof
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea._method">
            <summary>
            Time area method:
            <see cref="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.MethodType.UseTimeAreaFunction"/> uses a coefficient to calculate
            the area of the cells and <see cref="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.MethodType.UseTimeAreaCurve"/> uses
            user-defined curves.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.Method">
            <summary>
            The Time Area method to be used:
            TimeAreaCurve    corresponds to 1
            TimeAreaFunction corresponds to 2
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea._bTimeJumpAllowed_User">
            <summary>
            True if the model jumping in time during dry period,
            this is a user defined value TRUE by default. (this parameter
            is set to FALSE when coming from M11 bridge)
            Default MIKE URBAN: True
            Default MIKE 11: False
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.AllowTimeStepJump">
            <summary>
             Parameter that allows or not to advance 
             the time during dry period.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea._imperviousArea">
            <summary>
            Impervious area is a factor which defines the part
            of the catchment considered to contribute to the runoff.
            Unit: [-]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.ImperviousArea">
            <summary>
            The impervious area is a factor which defines the part
            of the catchment considered to contribute to the runoff.
            Unit: [-]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea._concentrationTime">
            <summary>
            Concentration time used to defined the number of cells of this catchment.
            Unit: [s]
            Default: 420
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.ConcentrationTime">
            <summary>
            Concentration time used to defined the number of cells of this catchment.
            Unit: [s]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea._taCurveCoefficient">
            <summary>
            Time Area curve coefficient, used by TA function
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.TimeAreaCoefficient">
            <summary>
            Time Area curve coefficient, used by TA function
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.TimeAreaCurveType">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.TimeAreaCurve">
            <inheritdoc />
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea._taCurve">
            <summary>
            XYTable holding the TA curve.
            Units:
            time [-] value between 0 and 1
            area [-] value between 0 and 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea._timeOfNextRainStart">
            <summary>
            DateTime when the the actual rain state ends.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea._timeJump">
            <summary>
            Time duration of the time Jump
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea._lstCells">
            <summary>
            List of <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.Cell"/> sorted from downstream to upstream.
            Created during prepare
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.Cells">
            <summary>
            List of <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.Cell"/> sorted from downstream to upstream.
            <para>
            State is contained inside each <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.Cell"/>
            </para>
            <para>
            Created during prepare
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea._numberOfCells">
            <summary>
            Number of cells that needs to be defined for this catchment.
            This parameter depends on the time step length and the <see cref="P:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.ConcentrationTime"/>.
            Initialized ruing prepare
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.#ctor(System.String)">
            <summary>
             Constructor of CatchmentTimeArea
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.Initialize(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Initialize Rainfall Runoff model. Sets up static data.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.Type">
            <summary>
            The type of catchment: NAM, Urban A etc
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.Prepare(System.DateTime,System.DateTime,DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
             Prepare Rainfall Runoff model. Sets up dynamic data so that the model is ready for first time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.PrepareCells">
            <summary>
            Prepare cells depending on <see cref="T:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.MethodType"/>.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.GetAreaWithTAFunction(System.Double)">
            <summary>
            Returns the AREA (0.0 - 1.0)
            from the Time-Area cure calculated from 
            the function x^a given time (0.0 - 1.0)
            
            Coeff a = 0.5 corresponds to divergent triangle,  TA curve number 2
            Coeff a = 1.0 corresponds to rectangular,         TA curve number 1
            Coeff a = 2.0 corresponds to convergent triangle, TA curve number 3
            
            Convergent = on the "peak"
            </summary>
            <param name="time">Relative time</param>
            <returns>Relative area</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.GetAreaWithTACoeff(System.Double)">
            <summary>
            Returns the AREA value (0.0 - 1.0)
            from the given Time-Area curve number at relative
            time (0.0 - 1.0). The value of the relative area will
            be linearly interpolated if missing in the TA curve.
            </summary>
            <param name="time">Relative time</param>
            <returns>Relative area</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.TakeTimeStep">
            <summary>
            This procedure forwards the Time-Area calculation with one time step.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.ComputeInitialLossfromSurfaceStorage">
            <summary>
            Compute losses from surface storage
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.VolumeInCatchment">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.RecoverInitialLoss">
            <summary>
            Recovers initial loss. This method recover loss between two wet periods. 
            If two successive wet periods occurs, the loss taken into account in the 
            second wet period will depend on time between this two periods. The initial
            loss are stored into an initial loss magasin which is emptied at a rate equal to
            _initialLossRecoverRate.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.BCOutilRainState">
            <summary>
            This methods updates the rain state, and checks when the next rain state starts 
            and ends. This is usefull for the jumping procedure.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.FindTimeRainStarts(System.DateTime)">
            <summary>
            Finds when the next rain starts, assuming it is not raining
            at <paramref name="startTime"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.CalculateStatistics">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.StateUpdated">
            <summary>
            When state has been updated, this method can be called to update derived/computational variables
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.MethodType">
            <summary>
             Enum of time area methods. Two methods are available:
             Time-Area curve or Time-Area coefficient.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.MethodType.UseTimeAreaFunction">
            <summary>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.MethodType.UseTimeAreaCurve">
            <summary>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.TimeAreaCurveTypes">
            <summary>
            Type of time-area curve
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.TimeAreaCurveTypes.UserDefined">
            <summary>
            User defined curve, must be specified in 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.TimeAreaCurveTypes.RectangularCatchment">
            <summary>
            Rectangular catchment 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.TimeAreaCurveTypes.DivergentCatchment">
            <summary>
            Divergent catchment, widest at its outlet 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.TimeAreaCurveTypes.ConvergentCatchment">
            <summary>
            Convergent catchment, widest at its head
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.Cell">
            <summary>
            Cell structure: a cell contains a relative area and
            a unit volume of water in the cell
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.Cell.Area">
            <summary>
            Relative area of the cell. All areas must sum to 1
            <para>
            Computational variable, calculated from the time-area curve during <see cref="M:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.Prepare(System.DateTime,System.DateTime,DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.IDiagnostics)"/>
            </para>
            <para>
            Unit: [-]
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.CatchmentTimeArea.Cell.Volume">
            <summary>
            Unit volume (depth) of water contained in the cell. The unit volume is a depth [m] over the entire catchment.
            <para>
            State variable.
            </para>
            <para>
            Unit: [m]
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.RRExtensions">
            <summary>
            Static class containing extension methods related to 
            <see cref="N:DHI.Mike1D.RainfallRunoffModule"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RRExtensions.CreateMonthlyAbstractionBoundary(DHI.Mike1D.RainfallRunoffModule.ICatchmentNamData,System.Double[])">
            <summary>
            Sets up monthly abstraction for nam, assuming the abstraction values are in
            mm/month.
            </summary>
            <param name="nam"></param>
            <param name="monthlyAbstractionInMm">Abstraction values in mm/month</param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RRExtensions.IsImpervious(DHI.Mike1D.RainfallRunoffModule.CatchmentKinematicWave.SurfaceType)">
            <summary>
            Returns true when the surface is impervious
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RRExtensions.FindAll(DHI.Mike1D.RainfallRunoffModule.ICatchments,System.String,DHI.Mike1D.Generic.IQuantity)">
            <summary>
            Find all catchments with the specified name, and providing the specified quantity
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RRExtensions.Find(DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData,System.String)">
            <summary>
            Find the catchment with the given model ID.
            Returns null if not found.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RRExtensions.FindAll(DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData,System.String)">
            <summary>
            Get a catchment via its name. Returns null if no catchment has this name.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RRExtensions.Find(DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData,System.String,DHI.Mike1D.Generic.IQuantity)">
            <summary>
            Find the first catchment with the given name and offering quantity.
            Returns null if none found.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RRExtensions.FindAll(DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData,System.String,DHI.Mike1D.Generic.IQuantity)">
            <summary>
            Find all catchments with the specified name, and offering the specified quantity.
            Returns null if none found.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RRExtensions.UHMRescaleTimeStep(DHI.Mike1D.RainfallRunoffModule.RainfallRunoffData,System.Int32)">
            <summary>
            Rescale time step for UHM catchments such that the number of computational 
            cells do not get too big. A "decent" range of value for <paramref name="maxNumberOfCells"/> is 100-200.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RRExtensions.CalculateWeights(DHI.Spatial.Algorithm.GridWeightCalculator,DHI.Mike1D.RainfallRunoffModule.ICatchment,DHI.Mike1D.Generic.IDiagnostics,System.Boolean,System.Boolean)">
            <summary>
            Calculate grid weights for catchment.
            <para>
            If catchment has a geometry (<see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchment.CatchmentGeometry"/>), that is being used for the calculations. 
            If it does not have a geometry, but it has a <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchment.CenterPoint"/>, the centerpoint is used.
            </para>
            </summary>
            <param name="gwc">Grid weight calculator, having definition of grid and grid origin</param>
            <param name="catchment">Catchment to calculate weights for</param>
            <param name="exact">Flag indicating whether to use the exact intersection approach or the fast automatic approach of the <see cref="T:DHI.Spatial.Algorithm.GridWeightCalculator"/></param>
            <returns>List of weights. Null if catchment does not have geometry information or geometry is outside of grid</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RRExtensions.NTSGeometry(DHI.Mike1D.RainfallRunoffModule.ICatchment,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Create an NTS geometry from the <see cref="P:DHI.Mike1D.RainfallRunoffModule.ICatchment.CatchmentGeometry"/>.
            <para>
            Depending on the coordinates, the returned IGeometry is
            either a NTS Polygon or NTS MultiPolygon.
            </para> 
            </summary>
            <param name="catchment">Catchment</param>
            <param name="diagnostics">Diagnostics object for error messages</param>
            <returns>Geometry, or null if geometry is not a valid polygon</returns>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.RRParameters">
            <summary>
            Class containing parameters for all RR models.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.RRParameters.UseHotstart">
            <summary>
            Flag indicating whether to use hot start or not.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.RRParameters.HotstartInfos">
            <summary>
            List of hot start file connections.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.RRParameters.AdditionalData">
            <summary>
            Internal method. Additional data from the MIKE 1D data object. Set during initialize.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.RRHotstartFiles">
            <summary>
            Structure to store hot start files in the form of <see cref="T:DHI.Mike1D.ResultDataAccess.IResultData"/>
            objects, and a hot start time.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RRHotstartFiles.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="numHotstartFiles"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RRHotstartFiles.GetCatchmentData(System.String)">
            <summary>
            Get the catchment hotstart data for the provided catchment id.
            </summary>
            <param name="catchmentId">Id of catchment to find hotstart data for</param>
            <returns>Catchment hotstart data, or null if not existing</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RRHotstartFiles.AddHotstartFile(DHI.Mike1D.ResultDataAccess.IResultData,System.DateTime,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Add a hot start <see cref="T:DHI.Mike1D.ResultDataAccess.IResultData"/> file.
            </summary>
            <param name="resultData"></param>
            <param name="hotstartTime">Time of hotstart. It is assumed that the time is 
              included by the hot start file, otherwise an error is produced.</param>
            <param name="diagnostics"> </param>
        </member>
        <member name="F:DHI.Mike1D.RainfallRunoffModule.RRHotstartFiles._rrHotstartFileMap">
            <summary>
            Map of hot start file objects, key'ed by the RRParameters that they originate from.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RRHotstartFiles.GetOrCreate(DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Create an <see cref="T:DHI.Mike1D.RainfallRunoffModule.RRHotstartFiles"/> object matching the provided <see cref="T:DHI.Mike1D.RainfallRunoffModule.RRParameters"/>,
            load it from buffer if it has been created once before.
            </summary>
            <param name="rrpar">RR parameters to use</param>
            <param name="diagnostics">Diagnostics for errors</param>
            <returns>A new RR hot start file object</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RRHotstartFiles.Create(DHI.Mike1D.RainfallRunoffModule.RRParameters,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Create an <see cref="T:DHI.Mike1D.RainfallRunoffModule.RRHotstartFiles"/> object matching the provided <see cref="T:DHI.Mike1D.RainfallRunoffModule.RRParameters"/>
            </summary>
            <param name="rrpar">RR parameters to use</param>
            <param name="diagnostics">Diagnostics for errors</param>
            <returns>A new RR hot start file object</returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RRHotstartFiles.DisposeHotstartData(DHI.Mike1D.RainfallRunoffModule.RRParameters)">
            <summary>
            When done with the hot start data, this will dispose of the data there.
            </summary>
            <param name="rrpar"></param>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.RRHotstartCatchmentData">
            <summary>
            Class interfacing to hotstart data for one catchment.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.RRHotstartCatchmentData.ResultData">
            <summary>
            Result data objects used for hotstart.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.RRHotstartCatchmentData.GetValue(DHI.Mike1D.Generic.IQuantity,System.Double@)">
            <summary>
            Get value for quantity. The quantity item type must match, while the
            quantity id may differ up til 3 characters.
            </summary>
            <param name="quantity">Quantity</param>
            <param name="value">Value for quantity</param>
            <returns>True if value found, false if not</returns>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.StateVariables">
            <summary>
            Enumerable helper class that provides fast lookup to a set containing StateVariable
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.StateVariables.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.StateVariables.Item(DHI.Mike1D.RainfallRunoffModule.IDs)">
            <summary>
            Accessor
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.StateVariables.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.StateVariables.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.StateVariable">
            <summary>
            A class that provides linear interpolation between to values of a state variable. 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.StateVariable.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.StateVariable.#ctor(DHI.Generic.MikeZero.eumItem,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.StateVariable.#ctor(DHI.Generic.MikeZero.eumItem,System.String,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.StateVariable.#ctor(DHI.Mike1D.Generic.PredefinedQuantity)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.StateVariable.#ctor(DHI.Mike1D.Generic.PredefinedQuantity,System.Int32)">
            <summary>
            Constructor, including a zone number.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.StateVariable.UpdateState(System.Double)">
            <summary>
            Update the state variable
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.StateVariable.Np1">
            <summary>
            Value of the state varibale at at time Np1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.StateVariable.N">
            <summary>
            Value of the state varibale at at time N
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.StateVariable.Act">
            <summary>
            The value of the state variable after interpolation (actual value)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.RainfallRunoffModule.StateVariable.Quantity">
            <summary>
            Quantity of this state variable
            </summary>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.StateVariable.Interpolate(System.Double)">
            <summary>
            Perform interpolation
            </summary>
            <param name="ratio"></param>
        </member>
        <member name="M:DHI.Mike1D.RainfallRunoffModule.StateVariable.Initialize">
            <summary>
            Initialize values at time N and actual value (both set equal to the value to time Np1)
            </summary>
        </member>
        <member name="T:DHI.Mike1D.RainfallRunoffModule.IDs">
            <summary>
            IDs of state variables.
            </summary>
        </member>
    </members>
</doc>
