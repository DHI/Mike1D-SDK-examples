<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DHI.Mike1D.StructureModule</name>
    </assembly>
    <members>
        <member name="T:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir">
            <summary>
            Abstract class that holds some of the more general broad crested weir algorithms.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ValvedStructure">
            <summary>
            Structure with valve regulation. The valve overrules the otherwise calculated flow.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.Structure">
            <summary>
            Base class for all structures. The class is abstract since an instance of it wouldn't make sence
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IStructure">
            <summary>
            Base interface for all structures.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructure.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructure.UpdatedWaterLevels(System.Double,System.Double)">
            <summary>
            After a time step (or iteration) has finished, update the discharge to the actual value, based
            on the final water levels and the discharge derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructure.Validate">
            <summary>
            Writes errors, warnings and hints into their respective member classes. The member objects are initially cleared.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructure.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Set up structure and set runtime diagnostics object
            </summary>
            <param name="crossSectionData">Cross section data to get cross section on each side of the structure</param>
            <param name="isLinkStructure">True for link-structures on structure reaches, where no upstream/downstream volume and cross section data is available </param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructure.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.BoundaryModule.IBoundaryData,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Set up structure and set runtime diagnostics object
            </summary>
            <param name="boundaryData">Boundary data to get time series information</param>
            <param name="crossSectionData">Cross section data to get cross section on each side of the structure</param>
            <param name="isLinkStructure">True for link-structures on structure reaches, where no upstream/downstream volume and cross section data is available </param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
            TODO: Put SimulationStart into arguments here
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructure.Prepare(DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Set up structure and set runtime diagnostics object
            </summary>
            <param name="hdParameters">HD parameters used for preparing the structure cross sections.</param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.IDInUserUnit">
            <summary>
            Used to get a consistent description of the structure. The ID comes in user units. Used e.g. when 
            reporting errors, warnings and hints.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.ID">
            <summary>
            Name of the structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.TopoID">
            <summary>
            TopoID used when structure is searching for neighbouring cross sections in the reach.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.Location">
            <summary>
            Location of structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.Implicit">
            <summary>
            Flag to control if the structure is implicit or explicit. If the structure is explicit
            (Implicit == false) then the derivatives of the dicharge are always zero.
            Default value: true
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.Type">
            <summary>
            Structure type, unique for each type of structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.InvertLevelUpstream">
            <summary>
            Invert level up stream. 
            The invert level is the level where water starts 
            flowing in to the structure from the upstream side. 
            It does not necessarily flow through the structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.InvertLevelDownstream">
            <summary>
            Invert level down stream
            The invert level is the level where water starts 
            flowing in to the structure from the downstream side. 
            It does not necessarily flow through the structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.Length">
            <summary>
            Length of the structure.
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.dDischargedDownStreamWaterLevel">
            <summary>
            Calculated Discharge derivative with UpStreamWaterLevel. Upstream is relative to the direction of chainage.
            Unit: [m^2/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.dDischargedUpStreamWaterLevel">
            <summary>
            Calculated Discharge derivative with DownStreamWaterLevel. Downstream is relative to the direction of chainage.
            Unit: [m^2/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.Discharge">
            <summary>
            Calculated Discharge
            Unit: [m^3/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.UpstreamWaterLevel">
            <summary>
            Upstream water level. Upstream refers to the direction of chainage. The water level is set by use of
            <see cref="M:DHI.Mike1D.StructureModule.IStructure.SetWaterLevels(System.Double,System.Double)">SetWaterLevels</see>
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.DownstreamWaterLevel">
            <summary>
            Downstream water level.Downstream refers to the direction of chainge. The water level is set by use of
            <see cref="M:DHI.Mike1D.StructureModule.IStructure.SetWaterLevels(System.Double,System.Double)">SetWaterLevels</see>
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.RunTimeDiagnostics">
            <summary>
            The getter is used to get a list of errors. OBSOLETE
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.StructureType">
            <summary>
            Type of structure
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.SideStructureBank">
            <summary>
            Bank side that side-structure is located on
            <para>
            If side structure contains reservoir, and has 
            the <see cref="P:DHI.Mike1D.StructureModule.ReservoirData.Coordinate"/> set, 
            this is not used (and should be set to <see cref="F:DHI.Mike1D.StructureModule.SideStructureBank.Undefined"/>).
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructure.SideStructureReservoir">
            <summary>
            Reservoir at end of side structure. Null if not side structure, or no reservoir is defined
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Structure.ZeroWaterLevelDifference">
            <summary>
            The constant is used to define the lower limit for which we will try to calculate the flow and typically 
            more problematic the flow derivatives. 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.#ctor">
            <summary>
            Protected constructor
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Structure._location">
            <summary>
            Location in the network
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Structure._id">
            <summary>
            Identification name of the structure
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Structure._topoID">
            <summary>
            Identification used to find referenced cross sections
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Structure._implicit">
            <summary>
            If _implicit == false, then the derivatives are always zero.
            Default value: true.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Structure._upstreamWaterLevel">
            <summary>
            Upstream water level, as set by <see cref="M:DHI.Mike1D.StructureModule.Structure.SetWaterLevels(System.Double,System.Double)"/>
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Structure._downstreamWaterLevel">
            <summary>
            Downstream water level, as set by <see cref="M:DHI.Mike1D.StructureModule.Structure.SetWaterLevels(System.Double,System.Double)"/>
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Structure._flowDir">
            <summary>
            FlowDir is used to determine which parameters to use for the flow calculations. 
            Derived by the <see cref="M:DHI.Mike1D.StructureModule.Structure.SetWaterLevels(System.Double,System.Double)"/>.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Structure._flowArea">
            <summary>
            Flow area through structure. Used by most (but not all) structures.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Structure._q">
            <summary>
            Flow through the structure. The flow is calculated in the derived classes when the 
            SetWaterLevels method is called.
            Unit: [m3/sec]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Structure._dqdhUpstream">
            <summary>
            The derivative of flow through the structure with upstream water level. The flow is 
            calculated in the derived classes when the SetWaterLevels method is called.
            Unit: [m2/sec]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Structure._dqdhDownstream">
            <summary>
            The derivative of flow through the structure with downstream water level. The flow is 
            calculated in the derived classes when the SetWaterLevels method is called.
            Unit: [m2/sec]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Structure._controlStategyId">
            <summary>
            If the structure is being controlled, then _controlStategyId contains the ID of the
            active control strategy
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Structure._runTimeDiagnostics">
            <summary>
            Diagnostics are written into this Diagnostics during calculations.
            Set during <see cref="!:Initialize(DHI.Mike1D.CrossSectionModule.CrossSectionData,bool,DHI.Mike1D.Generic.IDiagnostics)"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.SetControlStrategyId(System.Int32)">
            <summary>
            Set control strategy ID manually.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.Validate">
            <summary>
            Writes errors, warnings and hints into their respective member classes. The member objects are initially cleared.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Set up structure and set runtime diagnostics object
            </summary>
            <param name="crossSectionData">Cross section data to get cross section on each side of the structure</param>
            <param name="isLinkStructure"> </param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.BoundaryModule.IBoundaryData,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Set up structure and set runtime diagnostics object
            </summary>
            <param name="boundaryData">Boundary data to get time series information</param>
            <param name="crossSectionData">Cross section data to get cross section on each side of the structure</param>
            <param name="isLinkStructure"> </param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.Description">
            <summary>
            Return a string that describes this structure. Includes structure type and ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.Prepare(DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.Prepare(System.DateTime,DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Set up structure and set runtime diagnostics object
            </summary>
            <param name="startTime">Simulation start time</param>
            <param name="hdParameters">HD parameters used for preparing the structure cross sections.</param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            <para>
            Override in extending classes to do something usefull.
            </para>
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.SetWaterLevels(System.Double,System.Double,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.SetInputWaterLevels(System.Double,System.Double)">
            <summary>
            Set the <see cref="F:DHI.Mike1D.StructureModule.Structure._upstreamWaterLevel"/>, <see cref="F:DHI.Mike1D.StructureModule.Structure._downstreamWaterLevel"/> and <see cref="F:DHI.Mike1D.StructureModule.Structure._flowDir"/>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.UpdatedWaterLevels(System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.SwitchFlowDirection(System.Double@,System.Double@,System.Double@)">
            <summary>
            Switches sign and derivatives. Should be used when flow direction is against increasing chainage
            </summary>
            <param name="q">Flow</param>
            <param name="dqdhUps">Derivative of flow with respect to upstream water level</param>
            <param name="dqdhDws">Derivative of flow with respect to downstream water level</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.Linearisation(System.Double@,System.Double@,System.Double@,System.Double,System.Double)">
            <summary>
            Makes linearisation for heads smaller than delH.
            
            Note that it is assumed that the <paramref name="flow"/> is positive
            so this should be called before taking flow direction into account.
            </summary>
            <param name="flow">Calculated POSITIVE flow for a head equal to delH</param>
            <param name="dQdHups">Derivative of flow with respect to upstream water level</param>
            <param name="dQdHdws">Derivative of flow with respect to downstream water level</param>
            <param name="delH">Heaqds below or equal to delH is linearised</param>
            <param name="head">Actual head across the structure</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.GetFlowCoefficient(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculation of fractions of the different flow types
            </summary>
            <param name="prevCoeff"></param>
            <param name="lim">Actual value</param>
            <param name="upper">Upper limit</param>
            <param name="lower">Lower limit</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.SetZeroFlow">
            <summary>
            Sets the conditions for zero flow
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.Dispose">
            <summary>
            Frees the licenses held.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.ExplicitStructureSupport">
            <summary>
            DEBUG: This method is called from Validate() if _implitcit == false to check if
            the structure supports being Explicit.
            Once all structures support explicit operation this method can be deleted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.GetCrossSections(DHI.Mike1D.Generic.ILocation,System.String,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.CrossSectionModule.ICrossSection@,DHI.Mike1D.CrossSectionModule.ICrossSection@)">
            <summary>
            Find upstream and downstream cross section from <paramref name="crossSectionData"/>
            at <paramref name="location"/>. 
            If none exists, create an return a <see cref="M:DHI.Mike1D.CrossSectionModule.CrossSectionData.GetVeryLargeCrossSection"/>
            </summary>
            <param name="location">Location to find cross sections at</param>
            <param name="topoID">Topo id to use when finding cross sections</param>
            <param name="crossSectionData">Cross section data to find cross sections in</param>
            <param name="reverseDirection">Boolean indicating if the structure direction is reversed</param>
            <param name="upstreamCrossSection">The upstream cross section</param>
            <param name="downstreamCrossSection">The downstream cross section</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.Offers">
            <summary>
             A list of quantities available from this structure
            </summary>
            <returns></returns>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Structure._offers">
            <summary>
            List of quantities that are offered
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Structure._accepts">
            <summary>
            List of quantities that are accepted
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.Accepts">
            <summary>
            List of data types that is accepted, i.e., that you can get a ValueSetter for.
            </summary>
            <returns>List of data types accepted</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.ValueFractionGetter(System.Int32)">
            <summary>
            Get value fraction setter for the specified data quantity
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Offers"/></param>
            <returns>A value getter delegate that can set the value</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.ValueGetter(System.Int32)">
            <summary>
            Get value setter for the specified data quantity
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Offers"/></param>
            <returns>A value getter delegate that can set the value</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.ValueGetterBoxed(System.Int32)">
            <summary>
            Get value setter for the specified data quantity
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Offers"/></param>
            <returns>An interface providing functionality to get the value</returns>
            <remarks>This will usually just be boxing the DDoubleGetter - for COM interop compatibility</remarks>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.ValueSetter(System.Int32)">
            <summary>
            Get value setter for the specified data type
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Accepts"/></param>
            <returns>A value setter delegate that can set the value</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structure.ValueSetterBoxed(System.Int32)">
            <summary>
            Get value setter for the specified data type
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Accepts"/></param>
            <returns>An interface providing functionality to set the value</returns>
            <remarks>This will usually just be boxing the DDoubleGetter - for COM interop compatibility</remarks>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.Location">
            <summary>
            Location property.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.ID">
            <summary>
            Structure ID
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.TopoID">
            <summary>
            String used to identified cross sections
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.Implicit">
            <summary>
            Flag to control if the structure is implicit or explicit. If the structure is explicit
            (Implicit == false) then the derivatives of the dicharge are always zero.
            Default value: true
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.StructureType">
            <summary>
            Type of structure
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.SideStructureBank">
            <summary>
            Bank side that side-structure is located on
            <para>
            If side structure contains reservoir, and has 
            the <see cref="P:DHI.Mike1D.StructureModule.ReservoirData.Coordinate"/> set, 
            this is not used (and should be set to <see cref="F:DHI.Mike1D.StructureModule.SideStructureBank.Undefined"/>).
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.SideStructureReservoir">
            <summary>
            Reservoir at end of side structure. Null if not side structure, or no reservoir is defined
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.FlowArea">
            <summary>
            Flow area through structure. Used by most (but not all) structures.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.Type">
            <summary>
            Structure type, unique for each type structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.IDInUserUnit">
            <summary>
            Used to get a consistent description of the structure. The ID comes in user units. Used e.g. when 
            reporting errors, warnings and hints.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.UpstreamWaterLevel">
            <summary>
            Upstream water level. Upstream refers to the direction of chainage. The water level is set by use of
            <see cref="M:DHI.Mike1D.StructureModule.Structure.SetWaterLevels(System.Double,System.Double)">SetWaterLevels</see>
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.DownstreamWaterLevel">
            <summary>
            Downstream water level.Downstream refers to the direction of chainage. The water level is set by use of
            <see cref="M:DHI.Mike1D.StructureModule.Structure.SetWaterLevels(System.Double,System.Double)">SetWaterLevels</see>
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.Discharge">
            <summary>
            Calculated Discharge. The value is calculated by <see cref="M:DHI.Mike1D.StructureModule.Structure.SetWaterLevels(System.Double,System.Double)">SetWaterLevels</see>.
            Unit: [m^3/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.dDischargedUpStreamWaterLevel">
            <summary>
            Calculated Discharge derivative with UpStreamWaterLevel. Upstream is relative to the direction of chainage.
            The value is calculated by <see cref="M:DHI.Mike1D.StructureModule.Structure.SetWaterLevels(System.Double,System.Double)">SetWaterLevels</see>.
            Unit: [m^2/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.dDischargedDownStreamWaterLevel">
            <summary>
            Calculated Discharge derivative with DownStreamWaterLevel. Downstream is relative to the direction of chainage.
            The value is calculated by <see cref="M:DHI.Mike1D.StructureModule.Structure.SetWaterLevels(System.Double,System.Double)">SetWaterLevels</see>.
            Unit: [m^2/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.Length">
            <summary>
            Length of the structure.
            Unit: [m]
            Default value: 0m
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.RunTimeDiagnostics">
            <summary>
            The getter is used to get a list of errors.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.InvertLevelUpstream">
            <summary>
            Invert level up stream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.InvertLevelDownstream">
            <summary>
            Invert level down stream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structure.ExtensionData">
            <summary>
            Property used by (de)serializer, when it can not find proper target for
            a data field. Support of forward compatible data contracts. 
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IValvedStructure">
            <summary>
            Structure with valve regulation. The valve overrules the otherwise calculated flow.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IValvedStructure.Valve">
            <summary>
            Type of valve giving the direction of flow that is possible.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ValvedStructure._valveType">
            <summary>
            Type of the valve
            Default: None
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ValvedStructure.#ctor">
            <summary>
            Constructor for the Valved structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ValvedStructure.ValveDecidesFlow">
            <summary>
            Decides whether the valve will decide the flow and sets the flow to zero in case the valve
            forbids flow.
            </summary>
            <returns>A boolean indicating whether the flow is decided by the valve</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ValvedStructure.ZeroFlowDueToValve(DHI.Mike1D.StructureModule.FlowDir)">
            <summary>
            Decides wheather the valve will prevent flow given the flow direction.
            </summary>
            <param name="flowDir"></param>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ValvedStructure.Valve">
            <summary>
            Type of the valve
            Default: None
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IBCWeir">
            <summary>
            
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IHeadLossStructure">
            <summary>
            Interface implemented by structures that have head loss factors as part of their input.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHeadLossStructure.HeadLossInflowPositiveFlow">
            <summary>
            Inflow head loss factor for positive flow.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHeadLossStructure.HeadLossOutflowPositiveFlow">
            <summary>
            Outflow head loss factor for positive flow.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHeadLossStructure.HeadLossFreeOverflowPositiveFlow">
            <summary>
            Free overflow factor for positive flow.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHeadLossStructure.HeadLossInflowNegativeFlow">
            <summary>
            Inflow head loss factor for negative flow.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHeadLossStructure.HeadLossOutflowNegativeFlow">
            <summary>
            Outflow head loss factor for negative flow.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHeadLossStructure.HeadLossFreeOverflowNegativeFlow">
            <summary>
            Free overflow factor for negative flow.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHeadLossStructure.StructureIterationCentering">
            <summary>
            Used when making relaxation when iterating to find the subcritical solution for structures solved using the energy equation.
            When it equals 1 no relaxation is made.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ILinearZeroVariation">
            <summary>
             Interface that must be implemented by all structures that uses the Linear zero variation approach. The interface
             allows setting of Delhs at the collection level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ILinearZeroVariation.Delhs">
            <summary>
            Level from where the variation is forced to be linear.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ISolvesEnergyEquation">
            <summary>
            Interface that must be implemented if the structure solves the energy equation and if the structures are to 
            be part of a parallel structure.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ISolvesEnergyEquation.SetWaterLevels(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets up- and down-stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
            <param name="upstreamVelocity">Upstream water velocity [m/s]</param>
            <param name="downstreamVelocity">Downstream water velocity [m/s]</param>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISolvesEnergyEquation.PartOfCompositeFlow">
            <summary>
            Part of the flow in a parallel strucutre that passes through this structure.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IMinimumHeadlossStructure">
            <summary>
             Interface that must be implemented by all structures that use a minimum headloss. The interface
             allows setting of the minimum headloss at the collection level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IMinimumHeadlossStructure.MinimumHeadloss">
            <summary>
            Level from where the variation is forced to be linear.
            Currently this is set for all head loss structures from
            the <see cref="P:DHI.Mike1D.StructureModule.StructureParameters.MinimumHeadloss"/>,
            but it is prepared for individual structure values.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IIteratingStructure">
            <summary>
            Maximum number of iterations in a structure to obtain convergence of the discharge.
            Default value = 100
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IIteratingStructure.MaximumIterations">
            <summary>
            Maximum number of iterations in a structure to obtain convergence of the discharge.
            Default value = 100
            <para>
            Currently this is set for all structures from
            the <see cref="P:DHI.Mike1D.StructureModule.StructureParameters.MaximumIterationsInStructure"/>,
            but it is prepared for individual structure values.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.SMALLEST_ALLOWED_AREA">
            <summary>
            The smallest area allowed.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir._headLossInflowPositiveFlow">
            <summary>
            Inflow head loss factor for positive flow.
            Default value = 0.5.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir._headLossOutflowPositiveFlow">
            <summary>
            Outflow head loss factor for positive flow.
            Default value = 1.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir._headLossFreeOverflowPositiveFlow">
            <summary>
            Free overflow factor for positive flow.
            Default value = 1.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir._headLossInflowNegativeFlow">
            <summary>
            Inflow head loss factor for negative flow.
            Default value = 0.5.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir._headLossOutflowNegativeFlow">
            <summary>
            Outflow head loss factor for negative flow.
            Default value = 1.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir._headLossFreeOverflowNegativeFlow">
            <summary>
            Free overflow factor for negative flow.
            Default value = 1.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir._structureIterationCentering">
            <summary>
            Used when making relaxation when iterating to find the subcritical solution for structures solved using the energy equation.
            When it equals 1 no relaxation is made.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir._delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir._minimumHeadloss">
            <summary>
            Minimum head loss across a structure.
            Default value = 0.1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir._maxiumumSubmergedIterations">
            <summary>
            Maximum number of iterations allowed when the two nonlinear energy equations are solved iteratively.
            Default value: 100
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir._submergedIterationTolerance">
            <summary>
            Discharge iteration tolerance.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir._upstreamCrossSection">
            <summary>
            Upstream cross section data. The cross section data is the processed level, with, area.
            
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir._downstreamCrossSection">
            <summary>
            Downstream cross section data. The cross section data is the processed level, with, area.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir._partOfCompositeFlow">
            <summary>
            When the culvert is part of a composite structure Q1=Q2 will differ from Qs.
            Qs=Q1*_partOfCompositeFlow;
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.SetWaterLevels(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets up- and down-stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
            <param name="upstreamVelocity">Upstream water velocity [m/s]</param>
            <param name="downstreamVelocity">Downstream water velocity [m/s]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Prepare the weir: Set the cross sections on each side of the weir.
            </summary>
            <param name="crossSectionData">Cross section data to get cross section on each side of the structure</param>
            <param name="isLinkStructure"> </param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.Prepare(DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.Prepare(System.DateTime,DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.BroadCrestedWeirFlow">
            <summary>
            Calculates the flow over a broadcrested weir. The method handels the zero variation issues
            and passes the real calculation parts to BroadCrestedWeirFlowInner
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.BroadCrestedWeirFlowInner(System.Double,System.Double)">
            <summary>
            Calculates the critical flow through the structure and the submerged flow through the structure and 
            sets the discharge to the smallest of the two. The two discharge with up- and -down- stream waterlevel
            derivatives are also calculated.
            </summary>
            <param name="x">Upstream water level (Upstream relative to flow direction not neccesarily to chainage) [m]</param>
            <param name="y">Downstream water level (Downstream relative to flow direction not neccesarily to chainage) [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.CalculateCriticalConditions(System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            Critical -discharge, -discharge derivative and -water level is calculated from the upstream water level
            and the data of the specific weir. 
            </summary>
            <param name="x">Actual upstream waterlevel [m]</param>
            <param name="criticalDischarge">The critical discharge [m^3/s]</param>
            <param name="dCriticalDischargedInflowWaterLevel">The critical discharge with upstream water level derivative [m^2/s]</param>
            <param name="criticalWaterLevel">Water level at the structure crest under critical conditions [m]</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.CalculateVelocity(System.Double,System.Double)">
            <summary>
            The velocity is calculated from discharge and area. The method serves as a unified way 
            of handling the zero devision problem.
            </summary>
            <param name="discharge">Discharge [m^3/s]</param>
            <param name="area">Area [m^2]</param>
            <returns>Velocity [m/s]</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.CalculateSubmergedDischarge(System.Double@,System.Double@,System.Double@,System.Double@,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculates the flow trough the structure under the assumption that the flow is submerged
            </summary>
            <param name="structureDischarge">On input it includes the first guess to the solution. On output the flow through the strucutre</param>
            <param name="structureWaterLevel">On input it includes the first guess to the solution. On output the water level at the strucutre</param>
            <param name="dStructureDischargedInFlow">Calculated discharge with upstream water level derivative. Output.</param>
            <param name="dStructureDischargedOutFlow">Calculated discharge with downstream water level derivative. Output.</param>
            <param name="criticalWaterLevel">Critical water level. Input</param>
            <param name="inFlowWaterLevel">Upstream water level. Input.</param>
            <param name="inflowHeadLoss">Inflow head loss coefficient for the given flow direction. Input.</param>
            <param name="outFlowWaterLevel">Downstream water level. Input.</param>
            <param name="outFlowHeadLoss">Outflow head loss coefficient for the given flow direction. Input.</param>
            <param name="inflowArea">Area of inflow cross section</param>
            <param name="outflowArea">Area of outflow cross section</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.CalculateZetaInflow(System.Double,System.Double,System.Double)">
            <summary>
            Calculation of the absolute head loss coefficient at contractions
            </summary>
            <param name="headLossCoefficient">Coefficient as specified in GUI</param>
            <param name="velocity">Upstream velocity</param>
            <param name="structureVelocity">Velocity through structure</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.CalculateZetaOutflow(System.Double,System.Double,System.Double)">
            <summary>
            Calculation of the absolute head loss coefficient at expansions
            </summary>
            <param name="headLossCoefficient">Coefficient as specified in GUI</param>
            <param name="velocity">Upstream velocity</param>
            <param name="structureVelocity">Velocity through structure</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.GetArea(System.Double)">
            <summary>
            Flow area
            </summary>
            <param name="structureWaterLevel"></param>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.HeadLossInflowPositiveFlow">
            <summary>
            Inflow head loss factor for positive flow.
            Default value = 0.5.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.HeadLossOutflowPositiveFlow">
            <summary>
            Outflow head loss factor for positive flow.
            Default value = 1.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.HeadLossFreeOverflowPositiveFlow">
            <summary>
            Free overflow factor for positive flow.
            Default value = 1.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.HeadLossInflowNegativeFlow">
            <summary>
            Inflow head loss factor for positive flow.
            Default value = 0.5.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.HeadLossOutflowNegativeFlow">
            <summary>
            Free overflow factor for negative flow.
            Default value = 1.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.HeadLossFreeOverflowNegativeFlow">
            <summary>
            Free overflow factor for negative flow.
            Default value = 1.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.StructureIterationCentering">
            <summary>
            Free overflow factor for negative flow.
            Default value = 1.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.Delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.MinimumHeadloss">
            <summary>
            Minimum headloss across a structure.
            Default value = 0.1
            <para>
            Currently this is set for all head loss structures from
            the <see cref="P:DHI.Mike1D.StructureModule.StructureParameters.MinimumHeadloss"/>,
            but it is prepared for individual structure values.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.MaximumIterations">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.IterationTolerance">
            <summary>
            Iteration tolerance.
            Default 0.0001
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.UpstreamCrossSection">
            <summary>
            Upstream cross section data. The cros section data is the processed level, with, area.
            Set up during initialize, from cross section database. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.DownstreamCrossSection">
            <summary>
            Downstream cross section data. The cros section data is the processed level, with, area.
            Set up during initialize, from cross section database. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.PartOfCompositeFlow">
            <summary>
            When the culvert is part of a composite structure Q1=Q2 will differ from Qs.
            Qs=Q1*_partOfCompositeFlow;
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.FlowArea">
            <summary>
             Flow area in the structure. Uses WaterLevelInStructure which is updated when
             SetWaterLevels() is called.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.AbstractBroadCrestedCWeir.WaterLevelInStructure">
            <summary>
             Water level in the structure at the latest call to SetWaterLevels()
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.AreaOfIntersectingPolygons">
            <summary>
            Area of Intersection of Polygons
            Algorithm based on http://cap-lore.com/MathPhys/IP/
            This version was translated from the java version at http://www.cap-lore.com/MathPhys/IP/PolygonIntersect.java
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.AreaOfIntersectingPolygons.IntersectionArea(System.Collections.Generic.List{DHI.Mike1D.Generic.XYPair},System.Collections.Generic.List{DHI.Mike1D.Generic.XYPair})">
            <summary>
            Area of intersection of two polygons
            Result is accurate to within the accuracy of a float, even though 
            all internal datatypes are double
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.DisCoefType">
            <summary>
            Enumeration describing Loss factor Ratio Dis Coef Type, 0 - Contraction m = (1-M), 1 - Opening m = M
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DisCoefType.Contraction">
            <summary>
            0 - Contraction, m = (1-M)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DisCoefType.Opening">
            <summary>
            1 - Opening, m = M
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.BridgeSmoothType">
            <summary>
            Enumeration describing Bridge Table smoothing filer, 0 - no filter, 1-3 different filters, -1 Max filter
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeSmoothType.Max">
            <summary>
            Max
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeSmoothType.None">
            <summary>
            No filter
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeSmoothType.First">
            <summary>
            First - cent = 1, line = 1, corn = 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeSmoothType.Second">
            <summary>
            Second - cent = 4, line = 1, corn = 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeSmoothType.Third">
            <summary>
            Third - cent = 4, line = 2, corn = 1
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.BridgeTableType">
            <summary>
            Enumeration indicating the bridge table type.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeTableType.DFS2">
            <summary>
            DFS2
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeTableType.ASCII">
            <summary>
            ASCII
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.BridgeType">
            <summary>
            Enumeration indicating the bridge type.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeType.FHWA">
            <summary>
            FHWA WSPRO
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeType.USBPR">
            <summary>
            USBPR
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeType.HR">
            <summary>
            Arch bridge (Hydraulic Research)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeType.Nagler">
            <summary>
            BridgeBase Piers (Nagler)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeType.Yarnell">
            <summary>
            BridgeBase Piers (Yarnell)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeType.Energy">
            <summary>
            Energy Equation bridge
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeType.Table">
            <summary>
            Bridge read from table
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeType.Biery_and_Delleur">
            <summary>
            Bridge read from table
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.OverflowType">
            <summary>
            Enumeration indicating the bridge overflow type.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverflowType.FHWA_3">
            <summary>
            FHWA
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverflowType.MIKE11_weir">
            <summary>
            MIKE11_weir
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverflowType.Energy">
            <summary>
            Energy
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.SubmergenceType">
            <summary>
            Enumeration indicating the bridge UseSubmergence type.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SubmergenceType.FHWA_2">
            <summary>
            FHWA
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SubmergenceType.MIKE11_culvert">
            <summary>
            MIKE11_weir
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SubmergenceType.Energy">
            <summary>
            Energy
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.SpurType">
            <summary>
            Enumeration indicating the bridge spur type.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SpurType.Straight">
            <summary>
            Straight
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SpurType.Ellipse">
            <summary>
            Ellipse
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.EntranceType">
            <summary>
            Enumeration indicating the bridge entrance type.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EntranceType.Corner">
            <summary>
            Corner
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EntranceType.Wingwall">
            <summary>
            Wingwall
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.BridgeSubmergence">
            <summary>
            Submergence
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeSubmergence.Method">
            <summary>
            Bridge submergence method
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeSubmergence.ContractionLoss">
            <summary>
            Contraction loss
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeSubmergence.ExpansionLoss">
            <summary>
            Expansion loss
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeSubmergence.CoefficientDischarge">
            <summary>
            Coefficient discharge
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.BridgeOverflow">
            <summary>
            Overflow
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeOverflow.Method">
            <summary>
            Bridge overflow method
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeOverflow.Length">
            <summary>
            Bridge overflow length
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.BridgeGeometry">
            <summary>
            BridgeGeometry
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeGeometry.IsStagnationPointsSet">
            <summary>
            IsStagnationPointsSet, specifies if stagnationpoints are set
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeGeometry.UseDefaultStagnationPoints">
            <summary>
            Use default stagnation points
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeGeometry.StagnationPointDownStreamLeft">
            <summary>
            Stagnation point downstream left
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeGeometry.StagnationPointDownStreamRight">
            <summary>
            Stagnation point downstream right
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeGeometry.StagnationPointUpStreamLeft">
            <summary>
            Stagnation point upstream left
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeGeometry.StagnationPointUpStreamRight">
            <summary>
            Stagnation point upstram right
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeGeometry.dataX_up">
            <summary>
            X data upstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeGeometry.xm1_up">
            <summary>
            Marker 1 upstream
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry">
            <summary>
            CrossSectionBridgeGeometry
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.modifiedResistValue">
            <summary>
            Modified resistance value, converting a Mannings_n to a Mannings_M. Chezy is unchanged.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.WaterWayLength">
            <summary>
            Water way length
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.WaterWayLengthLeft">
            <summary>
            Water way length left
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.WaterWayLengthRight">
            <summary>
            Waterway length right
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.Datum">
            <summary>
            Datum
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.DatumDownstream">
            <summary>
            Datum downstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.UseSlope">
            <summary>
            Use slope
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.Slope">
            <summary>
            Slope
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.dataZ_up">
            <summary>
            Z data upstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.relRes_up">
            <summary>
            Relative resistance upstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.xm3_up">
            <summary>
            Marker 3 upstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.xm4_up">
            <summary>
            Marker 4 upstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.xm5_up">
            <summary>
            Marker 5 upstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.dataX_do">
            <summary>
            X data downstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.dataZ_do">
            <summary>
            Z data downstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.relRes_do">
            <summary>
            Relative resistance downstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.xm1_do">
            <summary>
            Marker 1 downstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.xm3_do">
            <summary>
            Marker 3 downstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.xm4_do">
            <summary>
            Marker 4 downstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.xm5_do">
            <summary>
            Marker 5 downstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.pierBp">
            <summary>
            Pier bp
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.resistType">
            <summary>
            Resistance type, must be either <see cref="F:DHI.Mike1D.Generic.ResistanceFormulation.Manning_M"/> or <see cref="F:DHI.Mike1D.Generic.ResistanceFormulation.Manning_n"/>.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.resistValue">
            <summary>
            Resistance value
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.skewnessAngle">
            <summary>
            SkewnessAngle
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.cosSkewnessAngle">
            <summary>
            CosSkewnessAngle
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.centerSkewness">
            <summary>
            CenterSkewness
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.spurDykesTypeLeft">
            <summary>
            SpurDykesTypeLeft
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CrossSectionBridgeGeometry.spurDykesTypeRight">
            <summary>
            SpurDykesTypeRight
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ArchPierBridgeGeometry">
            <summary>
            ArchPierBridgeGeometry
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ArchPierBridgeGeometry.bottomCurvature">
            <summary>
            BottomCurvature
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ArchPierBridgeGeometry.topCurvature">
            <summary>
            TopCurvature
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ArchPierBridgeGeometry.nArches">
            <summary>
            NArches
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ArchPierBridgeGeometry.openWidth">
            <summary>
            OpenWidth
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ArchPierBridgeGeometry.openWidthSub">
            <summary>
            OpenWidthSub
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ArchPierBridgeGeometry.radiusCurvature">
            <summary>
            RadiusCurvature
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ArchPierBridgeGeometry.ba">
            <summary>
            Ba
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ArchPierBridgeGeometry.ha">
            <summary>
            Ha
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ArchPierBridgeGeometry.minRadius">
            <summary>
            MinRadius
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ArchPierBridgeGeometry.archCon1">
            <summary>
            ArchCon1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ArchPierBridgeGeometry.archCon2">
            <summary>
            ArchCon2
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.BridgeTabulated">
            <summary>
            Tabulated bridge structure, having only the table of discharges and no geometry.:
            <list type="bullet">
             <item>Q    = f(Hups, Hdws)</item>
            </list>
            The arguments (<see cref="!:BridgeBase.RowHeader"/>) and (<see cref="!:BridgeBase.ColumnHeader"/>) will always contain water levels,
            while the output (<see cref="!:BridgeBase.Table"/>) will be discharge values.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeTabulated._delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeTabulated.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeTabulated.FlowAtBridgeStructureM11(System.Double,System.Double)">
            <summary>
            This function calculates the discharge and the derivatives of the discharge
            with respect to up- and downstream water levels like its being done in M11.
            </summary>
            <param name="upsH">Upstream water level [m]</param>
            <param name="dwsH">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeTabulated.ReadBridgeTable(System.String,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Read bridge table from file
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeTabulated.ReadBridgeTableDFS2(System.String,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Read bridge table from file
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeTabulated.ReadBridgeTableASCII(System.String,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Read bridge table from file
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeTabulated.AllocateTable(System.Int32,System.Int32)">
            <summary>
            Allocate table of certain sizes
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeTabulated.TableType">
            <summary>
            Table input filetype
            0 - DFS2
            1 - ASCII
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeTabulated.RowHeader">
            <summary>
            Holds the header for the rows, the downstream water levels.
            Type : Water level 
            Unit: [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeTabulated.ColumnHeader">
            <summary>
            Holds the header for the columns, the upstream water levels.
            Type : Water level
            Unit: [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeTabulated.Table">
            <summary>
            Holds the discharge table
            Type : Discharge
            Unit: [m3/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeTabulated.BridgeTableFilePath">
            <summary>
            Holds the filename and path of the bridge table file
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeTabulated.NumberOfRows">
            <summary>
            Number of rows in the table
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeTabulated.NumberOfCols">
            <summary>
            Number of columns in the table
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeTabulated.WaterLevelDatum">
            <summary>
            Datum to be applied to all water levels specified in the table.
            Type: water level
            Unit: [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeTabulated.Type">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeTabulated.Delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.BridgeBase">
            <summary>
            BridgeBase structures, supporting the following type of tables:
            <list type="bullet">
             <item>Q    = f(Hups, Hdws)</item>
            </list>
            The arguments (<see cref="!:RowHeader"/>) and (<see cref="!:ColumnHeader"/>) will always contain water levels,
            while the output (<see cref="!:Table"/>) will be discharge values.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IBridgeStructure">
            <summary>
            Bridge structure interface
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IBridgeStructure.AllocateTable(System.Int32,System.Int32)">
            <summary>
            allocates <see cref="P:DHI.Mike1D.StructureModule.IBridgeStructure.Table"/>, <see cref="P:DHI.Mike1D.StructureModule.IBridgeStructure.RowHeader"/> and
            <see cref="P:DHI.Mike1D.StructureModule.IBridgeStructure.ColumnHeader"/> with the specified sizes.
            Furthermore allocated _tableSmooth for smoothing the Table
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IBridgeStructure.SetInvertLevel">
            <summary>
            Set up invert level
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IBridgeStructure.CheckBridgeCombinations">
            <summary>
            Check bridge combinations
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.GridSizeUpStream">
            <summary>
            Slotsize of table upstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.GridSizeDownStream">
            <summary>
            Slotsize of table downstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.TableType">
            <summary>
            Table input filetype
            0 - DFS2
            1 - ASCII
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.WaterLevelDatum">
            <summary>
            Datum to be applied to all water levels specified in the table.
            Type: water level
            Unit: [meter]
            Default: 0.0
            </summary> 
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.ColumnHeader">
            <summary>
            Holds the header for the columns
            Type : Water level
            Unit: [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.RowHeader">
            <summary>
            Holds the header for the rows
            Type : Water level 
            Unit: [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.Table">
            <summary>
            Holds the table
            Type : Discharge
            Unit: [m3/s]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.TableSmooth">
            <summary>
            Holds the smoothed table
            Type : Water level or discharge depending on the chosen calculation mode
            Unit: [m3/s] or [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.BridgeTableFilePath">
            <summary>
            Holds the smoothed table
            Type : Water level or discharge depending on the chosen calculation mode
            Unit: [m3/s] or [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.MaximumWaterDepthAboveXSFactor">
            <summary>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.SmoothBridgeSurface">
            <summary>
            Enum describing Bridge Table smoothing filer, 0 - no filter, 1-3 different filters, -1 - Max filter
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.SmoothBridgeSurfaceIterations">
            <summary>
            Number of iterations the smoothing filter is applied
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.ConvTubeNumber">
            <summary>
            Number of tubes for conveyance tube analyses.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.UseFHWAReachLength">
            <summary>
            The reach length for the FHWA method is determined based on an equal
            conveyance tube analysis. If the reach length should only be based on
            the physical distance from the adjacent cross section to the bridge
            the variable 'USE_FHWA_REACH_LENGTH' may be used.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.TableIteration">
            <summary>
            Variable defining maximum number of iterations for precalculating tables.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.UseAlpha">
            <summary>
            The velocity distribution coefficient for bridge calculations is set to unity per default.
            The coefficient may be calculated based on conveyance distribution.
            Default value: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.Method">
            <summary>
            Bridge Method - FHWA, USBPR, Energy, HR, Nagler, Yarnell
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.BridgeSubmergence">
            <summary>
            Submergence
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.BridgeOverflow">
            <summary>
            Overflow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.BridgeGeometry">
            <summary>
            BridgeGeometry
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.Bottomlevel">
            <summary>
            Bottom level
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.Toplevel">
            <summary>
            Top level
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.DisCoefType">
            <summary>
            Loss factor Ratio Dis Coef Type, 0 - Contraction m = (1-M), 1 - Opening m = M
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.CulvertID">
            <summary>
            The culvert used otherwise null
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.WeirID">
            <summary>
            The weir used otherwise null
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.UseSubmergence">
            <summary>
            Boolean telling whether to use submergence
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.UseOverflow">
            <summary>
            Boolean telling whether to use overflow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.UseSkewness">
            <summary>
            Boolean telling whether to use Skewness
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.UseEccentricity">
            <summary>
            Boolean telling whether to use Eccentricity
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.IsMultiWayOpen">
            <summary>
            Boolean telling whether to use IsMultiWayOpen
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.IsAsymmetric">
            <summary>
            Boolean telling whether to use IsAsymmetric
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.UseSpurDykes">
            <summary>
            Boolean telling whether to use SpurDykes
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.UsePiers">
            <summary>
            Boolean telling whether to use Piers
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.UsePiersPiles">
            <summary>
            Boolean telling wheter to use Piers Piles
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.BaseCoef">
            <summary>
            BaseCoefficient tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.Froude">
            <summary>
            Froude tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.Entrance">
            <summary>
            Entrance tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.Piers">
            <summary>
            Piers tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.Dykes1">
            <summary>
            Dykes1 tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.Dykes2">
            <summary>
            Dykes2 tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.Eccentricity">
            <summary>
            Eccentricity tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.Alpha">
            <summary>
            Alpha tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.Skew">
            <summary>
            Skew tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.BackRat">
            <summary>
            Back water ratio table
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.Beta">
            <summary>
            Beta tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.Theta">
            <summary>
            Theta tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.Submerged">
            <summary>
            Submerged tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.Road1">
            <summary>
            Road1 tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.Road2">
            <summary>
            Road2 tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.SubFac">
            <summary>
            SubFac tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.UsePreProcessedBridgeTable">
            <summary>
            Use preprocessed bridge tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.TablesGenerated">
            <summary>
            Boolean telling if the tables are generated
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBridgeStructure.EnchroachmentRegenerate">
            <summary>
            Boolean telling if Enchroachment regenerate
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeBase._upstreamCrossSection">
            <summary>
            Upstream Cross Section
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeBase._downstreamCrossSection">
            <summary>
            Downstream Cross Section
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BridgeBase._upstreamPointsX">
            <summary>
            X, Z and Rel for upstream and downstrem crosssection.
            Instead of using xsection.BaseCrossSection.Points[i].X
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.initializeOnCreate(DHI.Mike1D.StructureModule.BridgeType)">
            <summary>
            Set up intial values on create
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.#ctor(DHI.Mike1D.StructureModule.BridgeType)">
            <summary>
            Constructor method for the BridgeBase structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.#ctor">
            <summary>
            Constructor method for the BridgeBase structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.#ctor(System.String)">
            <summary>
            Constructor method for the BridgeBase structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.SetInvertLevel">
            <summary>
            Set up invert level
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.BoundaryModule.IBoundaryData,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Set up structure and set runtime diagnostics object
            </summary>
            <param name="boundaryData">Boundary data to get time series information</param>
            <param name="crossSectionData">Cross section data to get cross section on each side of the structure</param>
            <param name="isLinkStructure"> </param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.CalcFHWAOverflow(System.Double)">
            <summary>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.CalcFHWAUnderflow(System.Boolean,System.Double)">
            <summary>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.CalcUSBPR">
            <summary>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.CalcBieryDelleur">
            <summary>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.CalcHydraulicResearch">
            <summary>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.CalcYarnell">
            <summary>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.CalcNagler">
            <summary>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.CalcEnergyUnderflow(System.Double)">
            <summary>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.CalcEnergyOverflow(System.Double)">
            <summary>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.AllocateTable(System.Int32,System.Int32)">
            <summary>
            Allocate table of certain sizes
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.Validate">
            <summary>
            Validation of data for a BridgeBase structure.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.CheckBridgeCombinations">
            <summary>
            Check bridge combinations
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BridgeBase.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)">
            <summary>
            When deserialized, the BridgeBase class 
            needs to be re-established as it was before serialization.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.Method">
            <summary>
            Enum <see cref="T:DHI.Mike1D.StructureModule.BridgeType"/> defining the Bridge method used
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.BridgeSubmergence">
            <summary>
            Submergence
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.BridgeOverflow">
            <summary>
            Overflow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.BridgeGeometry">
            <summary>
            BridgeGeometry
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.Toplevel">
            <summary>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.Bottomlevel">
            <summary>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.DisCoefType">
            <summary>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.UseSubmergence">
            <summary>
            Boolean telling whether to use submergence
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.UseOverflow">
            <summary>
            Boolean telling whether to use overflow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.UseSkewness">
            <summary>
            Boolean telling whether to use Skewness
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.UseEccentricity">
            <summary>
            Boolean telling whether to use Eccentricity
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.IsMultiWayOpen">
            <summary>
            Boolean telling whether to use IsMultiWayOpen
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.IsAsymmetric">
            <summary>
            Boolean telling whether to use IsAsymmetric
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.UseSpurDykes">
            <summary>
            Boolean telling whether to use SpurDykes
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.UsePiers">
            <summary>
            Boolean telling whether to use Piers
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.UsePiersPiles">
            <summary>
            Boolean telling wheter to use Piers Piles
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.__BaseCoef">
            <summary>
            BaseCoefficient tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.__Froude">
            <summary>
            Froude tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.__Entrance">
            <summary>
            Entrance tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.__Piers">
            <summary>
            Piers tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.__Dykes1">
            <summary>
            Dykes1 tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.__Dykes2">
            <summary>
            Dykes2 tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.__Eccentricity">
            <summary>
            Eccentricity tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.__Alpha">
            <summary>
            Alpha tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.__Skew">
            <summary>
            Skew tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.BackRat">
            <summary>
            Back water ratio table
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.__Beta">
            <summary>
            Beta tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.__Theta">
            <summary>
            Theta tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.__Submerged">
            <summary>
            Submerged tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.__Road1">
            <summary>
            Road1 tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.__road2">
            <summary>
            Road2 tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.__SubFac">
            <summary>
            SubFac tables
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.UsePreProcessedBridgeTable">
            <summary>
            Online or offline bridge equations.
            (calculate on the fly or read from table)
            Default: true
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.TablesGenerated">
            <summary>
            Boolean telling if the tables are generated
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.EnchroachmentRegenerate">
            <summary>
            Boolean telling if Enchroachment regenerate
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.CulvertID">
            <summary>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.WeirID">
            <summary>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.GridSizeUpStream">
            <summary>
            Slotsize of table upstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.GridSizeDownStream">
            <summary>
            Slotsize of table downstream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.TableSmooth">
            <summary>
            Holds the smoothed table
            Type : Water level or discharge depending on the chosen calculation mode
            Unit: [m3/s] or [meter]
            Default: 0.0
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:DHI.Mike1D.StructureModule.BridgeBase.MaximumWaterDepthAboveXSFactor" -->
        <!-- Badly formed XML comment ignored for member "P:DHI.Mike1D.StructureModule.BridgeBase.ResistanceFormulation" -->
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase._invertUs">
            <summary>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase._invertDs">
            <summary>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.invert">
            <summary>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.SmoothBridgeSurface">
            <summary>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.SmoothBridgeSurfaceIterations">
            <summary>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.ConvTubeNumber">
            <summary>
            Number of tubes for conveyance tube analyses.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.UseFHWAReachLength">
            <summary>
            The reach length for the FHWA method is determined based on an equal
            conveyance tube analysis. if the reach length should only be based on
            the physical distance from the adjacent cross section to the bridge
            the variable 'USE_FHWA_REACH_LENGTH' may be used.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.TableIteration">
            <summary>
            Variable defining maximum number of iterations for precalculating tables.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.UseAlpha">
            <summary>
            The velocity distribution coefficient for bridge calculations is set to unity per default.
            The coefficient may be calculated based on conveyance distribution.
            Default value: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BridgeBase.Collection">
            <summary>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.BridgeBase.BridgeSubTable">
            <summary>
            BridgeSubTable class to help serializer
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.BridgeSection">
            <summary>
            BridgeSection containing 
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.CrossSectionHydraulicParameters">
            <summary>
            CrossSection Hydraulic parameters containing 
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.BridgeParameters">
            <summary>
            Bridge parameters containing 
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.BridgeSectionHydraulicParameters">
            <summary>
            BridgeSection Hydraulic parameters containing 
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.EnergyBridge">
            <summary>
            EnergyBridge structures, supporting the following type of tables:
            <list type="bullet">
             <item>Q    = f(Hups, Hdws)</item>
            </list>
            The arguments (<see cref="!:BridgeBase.RowHeader"/>) and (<see cref="!:BridgeBase.ColumnHeader"/>) will always contain water levels,
            while the output (<see cref="!:BridgeBase.Table"/>) will be discharge values.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.EnergyBridge.#ctor">
            <summary>
            Constructor method for the Bridge structure
            </summary>
            <summary>
            Constructor method for the Bridge structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.EnergyBridge.#ctor(System.String)">
            <summary>
            Constructor method for the Bridge structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.EnergyBridge.IsSubmerged">
            <summary>
            IsSubmerged
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyBridge.Type">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.FHWAMode">
            <summary>
            FHWABridgeGeometry
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWAMode.I_mode">
            <summary>
            I_mode
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWAMode.II_mode">
            <summary>
            II_mode
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWAMode.III_mode">
            <summary>
            III_mode
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWAMode.IV_mode">
            <summary>
            IV_mode
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.FHWABridgeGeometry">
            <summary>
            FHWABridgeGeometry
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.ModeLeft">
            <summary>
            ModeLeft
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.ModeRight">
            <summary>
            ModeRight
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.SlopeLeft">
            <summary>
            SlopeLeft
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.SlopeRight">
            <summary>
            SlopeRight
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.WaterWayLevelLeft">
            <summary>
            WaterWayLevelLeft
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.WaterWayLevelRight">
            <summary>
            WaterWayLevelRight
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.SpurDykesLengthLeft">
            <summary>
            SpurDykesLengthLeft
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.SpurDykesLengthRight">
            <summary>
            SpurDykesLengthRight
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.SpurDykesOffsetLeft">
            <summary>
            SpurDykesOffsetLeft
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.SpurDykesOffsetRight">
            <summary>
            SpurDykesOffsetRight
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.SpurDykesAngleLeft">
            <summary>
            SpurDykesAngleLeft
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.SpurDykesAngleRight">
            <summary>
            SpurDykesAngleRight
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.EntranceTypeLeft">
            <summary>
            EntranceTypeLeft
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.EntranceTypeRight">
            <summary>
            EntranceTypeRight
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.EntranceAngleLeft">
            <summary>
            EntranceAngleLeft
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.EntranceAngleRight">
            <summary>
            EntranceAngleRight
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.EntranceRadiusLeft">
            <summary>
            EntranceRadiusLeft
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.EntranceRadiusRight">
            <summary>
            EntranceRadiusRight
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.EntranceWidthLeft">
            <summary>
            EntranceWidthLeft
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FHWABridgeGeometry.EntranceWidthRight">
            <summary>
            EntranceWidthRight
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.FHWABridge">
            <summary>
            FHWABridge structures, supporting the following type of tables:
            <list type="bullet">
             <item>Q    = f(Hups, Hdws)</item>
            </list>
            The arguments (<see cref="!:BridgeBase.RowHeader"/>) and (<see cref="!:BridgeBase.ColumnHeader"/>) will always contain water levels,
            while the output (<see cref="!:BridgeBase.Table"/>) will be discharge values.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.FHWABridge.#ctor">
            <summary>
            Constructor method for the Bridge structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.FHWABridge.#ctor(System.String)">
            <summary>
            Constructor method for the Bridge structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.FHWABridge.IsSubmerged">
            <summary>
            IsSubmerged
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.FHWABridge.Type">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.BieryDelleurBridge">
            <summary>
            BieryDelleurBridge structures, supporting the following type of tables:
            <list type="bullet">
             <item>Q    = f(Hups, Hdws)</item>
            </list>
            The arguments (<see cref="!:BridgeBase.RowHeader"/>) and (<see cref="!:BridgeBase.ColumnHeader"/>) will always contain water levels,
            while the output (<see cref="!:BridgeBase.Table"/>) will be discharge values.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BieryDelleurBridge.#ctor">
            <summary>
            Constructor method for the Bridge structure
            </summary>
            <summary>
            Constructor method for the Bridge structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BieryDelleurBridge.#ctor(System.String)">
            <summary>
            Constructor method for the Bridge structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BieryDelleurBridge.IsSubmerged">
            <summary>
            IsSubmerged
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BieryDelleurBridge.Type">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.HRBridge">
            <summary>
            HRBridge structures, supporting the following type of tables:
            <list type="bullet">
             <item>Q    = f(Hups, Hdws)</item>
            </list>
            The arguments (<see cref="!:BridgeBase.RowHeader"/>) and (<see cref="!:BridgeBase.ColumnHeader"/>) will always contain water levels,
            while the output (<see cref="!:BridgeBase.Table"/>) will be discharge values.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HRBridge.#ctor">
            <summary>
            Constructor method for the Bridge structure
            </summary>
            <summary>
            Constructor method for the Bridge structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HRBridge.#ctor(System.String)">
            <summary>
            Constructor method for the Bridge structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HRBridge.IsSubmerged">
            <summary>
            IsSubmerged
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HRBridge.Type">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.NaglerBridge">
            <summary>
            NaglerBridge structures, supporting the following type of tables:
            <list type="bullet">
             <item>Q    = f(Hups, Hdws)</item>
            </list>
            The arguments (<see cref="!:BridgeBase.RowHeader"/>) and (<see cref="!:BridgeBase.ColumnHeader"/>) will always contain water levels,
            while the output (<see cref="!:BridgeBase.Table"/>) will be discharge values.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.NaglerBridge.#ctor">
            <summary>
            Constructor method for the Bridge structure
            </summary>
            <summary>
            Constructor method for the Bridge structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.NaglerBridge.#ctor(System.String)">
            <summary>
            Constructor method for the Bridge structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.NaglerBridge.IsSubmerged">
            <summary>
            IsSubmerged
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.NaglerBridge.Type">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.USBPRBridge">
            <summary>
            USBPRBridge structures, supporting the following type of tables:
            <list type="bullet">
             <item>Q    = f(Hups, Hdws)</item>
            </list>
            The arguments (<see cref="!:BridgeBase.RowHeader"/>) and (<see cref="!:BridgeBase.ColumnHeader"/>) will always contain water levels,
            while the output (<see cref="!:BridgeBase.Table"/>) will be discharge values.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.USBPRBridge.#ctor">
            <summary>
            Constructor method for the Bridge structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.USBPRBridge.#ctor(System.String)">
            <summary>
            Constructor method for the Bridge structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.USBPRBridge.IsSubmerged">
            <summary>
            IsSubmerged
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.USBPRBridge.Type">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.YarnellBridge">
            <summary>
            Bridge structures, supporting 3 different types of tables:
            <list type="bullet">
             <item>Q    = f(Hups, Hdws)</item>
             <item>Hups = f(Hdws, Q)</item>
             <item>Hdws = f(Hups, Q)</item>
            </list>
            The first argument (<see cref="!:RowHeader"/>) will always contain water levels,
            while the second argument (<see cref="!:ColumnHeader"/> can be either water level
            or discharge values, and opposite for the output (<see cref="!:Table"/>), depending
            on the <see cref="!:CalculationMode"/>.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.YarnellBridge.#ctor">
            <summary>
            Constructor method for the Bridge structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.YarnellBridge.#ctor(System.String)">
            <summary>
            Constructor method for the Bridge structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.YarnellBridge.IsSubmerged">
            <summary>
            IsSubmerged
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.YarnellBridge.Type">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.CompositStructure">
            <summary>
            Composit structure is a structure which contains one or more structures at the same location.
            Uses the Composite Pattern.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ICompositStructure">
            <summary>
            Collection of structures at the same location. Interface used by the engines.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ICompositStructure.PrepareTimeStep(System.DateTime,System.DateTime)">
            <summary>
            Prepare structure for time step
            <para>
            This method need only be called in case structures are being 
            controlled and i.e. a gate is closing with a specified speed and needs to know time.
            </para>
            </summary>
            <param name="timeN">Time at beginning of time step </param>
            <param name="timeNp1">Time at end of time step </param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ICompositStructure.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down-stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ICompositStructure.SetWaterLevels(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets up- and down-stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
            <param name="upstreamVelocity">Upstream water velocity [m/s]</param>
            <param name="downstreamVelocity">Downstream water velocity [m/s]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ICompositStructure.Validate">
            <summary>
            Writes errors, warnings and hints into their respective member classes. The member objects are initially cleared.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ICompositStructure.Prepare">
            <summary>
            Prepare for simulation
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICompositStructure.ID">
            <summary>
            
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICompositStructure.dDischargedDownStreamWaterLevel">
            <summary>
            Calculated Discharge derivative with UpStreamWaterLevel. Upstream is relative to the direction of chainage.
            Unit: [m^2/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICompositStructure.dDischargedUpStreamWaterLevel">
            <summary>
            Calculated Discharge derivative with DownStreamWaterLevel. Downstream is relative to the direction of chainage.
            Unit: [m^2/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICompositStructure.Discharge">
            <summary>
            Get discharge across structure. SetWaterLevels() calculates the discharge so it must be called first.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICompositStructure.Location">
            <summary>
            Location of the structure
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICompositStructure.Diagnostics">
            <summary>
            The getter is used to get a list of errors.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICompositStructure.Structures">
            <summary>
            Getter to the list of structures
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICompositStructure.InvertLevelUpstream">
            <summary>
            Invert level upstream
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICompositStructure.InvertLevelDownstream">
            <summary>
            Invert level downstream
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICompositStructure.TotalIterations">
            <summary>
            Total number of composit structure iterations.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CompositStructure._structures">
            <summary>
            List of structures that completes the composit structure. 
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CompositStructure.SetWaterLevels(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets up- and down-stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
            <param name="upstreamVelocity">Upstream water velocity [m/s]</param>
            <param name="downstreamVelocity">Downstream water velocity [m/s]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CompositStructure.CalculatePositiveDischarge(System.Double,System.Double)">
            <summary>
            Calculate "positive" discharge, i.e. discharge that follows the water level slope,
            Discharge for energy loss structures (<see cref="T:DHI.Mike1D.StructureModule.ISolvesEnergyEquation"/>) are always "positive".
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CompositStructure.PrepareTimeStep(System.DateTime,System.DateTime)">
            <summary>
            Prepare structure for time step
            <para>
            This method need only be called in case structures are being 
            controlled and i.e. a gate is closing with a specified speed and needs to know time.
            </para>
            </summary>
            <param name="timeN">Time at beginning of time step </param>
            <param name="timeNp1">Time at end of time step </param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CompositStructure.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CompositStructure.Structures">
            <summary>
            Getter to the list of structures
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CompositStructure.MaximumIterations">
            <summary>
            Maximum number of iterations 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CompositStructure.Location">
            <summary>
            Location property.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CompositStructure.Discharge">
            <summary>
            Calculated Discharge. The value is calculated by <see cref="M:DHI.Mike1D.StructureModule.CompositStructure.SetWaterLevels(System.Double,System.Double)">SetWaterLevels</see>.
            Unit: [m^3/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CompositStructure.dDischargedUpStreamWaterLevel">
            <summary>
            Calculated Discharge derivative with UpStreamWaterLevel. Upstream is relative to the direction of chainage.
            The value is calculated by <see cref="M:DHI.Mike1D.StructureModule.CompositStructure.SetWaterLevels(System.Double,System.Double)">SetWaterLevels</see>.
            Unit: [m^2/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CompositStructure.dDischargedDownStreamWaterLevel">
            <summary>
            Calculated Discharge derivative with DownStreamWaterLevel. Downstream is relative to the direction of chainage.
            The value is calculated by <see cref="M:DHI.Mike1D.StructureModule.CompositStructure.SetWaterLevels(System.Double,System.Double)">SetWaterLevels</see>.
            Unit: [m^2/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CompositStructure.Diagnostics">
            <summary>
            Validate composite structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CompositStructure.CompositeStructureSolver.LUSolver(System.Int32,System.Int32,System.Double[],System.Int32[],System.Double[])">
            <summary>
            Solves the linear system A*x = b. Uses a LU factorization, i.e., solving P*L*U*x = b
            </summary>
            <param name="n">in. Size of system, n x n</param>
            <param name="nrhs">in. Number of right hand sides</param>
            <param name="a">in/out. Pointer to array of doubles of size n x n (in unmanaged memory) containing elements of A in column major order. When done, overwritten with the LU factors</param>
            <param name="ipiv">out. Pointer to array if integers (in unmanaged memory) of size n. outputs the pivot indices P</param>
            <param name="b">in/out. Pointer to array of doubles of size n (in unmanaged memory). In is right hand side b, out is solution x.</param>
            <returns>Integer with status. 0 on succes. negative if input arguments had an illegal value. positive, system is exactly singular.</returns>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CompositStructure.CompositeStructureSolver._es">
            <summary>
            Array of indices to energy structures
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CompositStructure.CompositeStructureSolver.NumberOfEnergyStructures(DHI.Mike1D.StructureModule.IStructures)">
            <summary>
            Count then umber of energy structures
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CompositStructure.CompositeStructureSolver.CalculatePositiveDischarge(System.Double,System.Double,System.Double@)">
            <summary>
            Calculate "positive" discharge, i.e. discharge that follows the water level slope,
            Discharge for energy loss structures (<see cref="T:DHI.Mike1D.StructureModule.ISolvesEnergyEquation"/>) are always "positive".
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CompositStructure.CompositeStructureSolver.CountActivePositiveDischarge(System.Double,System.Double)">
            <summary>
            Count structures with "positive" discharge, i.e. discharge that follows the water level slope.
            Discharge for energy loss structures (<see cref="T:DHI.Mike1D.StructureModule.ISolvesEnergyEquation"/>) are always "positive".
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.CompositStructures">
            <summary>
            List of composite structures
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ICompositStructures">
            <summary>
            
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICompositStructures.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICompositStructures.Count">
            <summary>
            
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CompositStructures.EvaluateCompositStructureN(System.Int32,System.Double,System.Double)">
            <summary>
            Evaluate structures. Used by MIKE 21 Structs.
            </summary>
            <param name="index"></param>
            <param name="dUpStreamH"></param>
            <param name="dDownStreamH"></param>
            <returns>Discharge</returns>
            <returns>dDischargedUpStreamWaterLevel</returns>
            <returns>dDischargedDownStreamWaterLevel</returns>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ICulvertSectionBase">
            <summary>
            Common data interface for culvert sections
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvertSectionBase.Closed">
            <summary>
            Flag indicating whether the section is open or closed. Close sections have vertical 
            walls (constant width) from the topmost point and upwards.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ICulvertSectionGeometries">
            <summary>
            Common interface containing data for all culvert geometry types.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ICulvertSectionRectangular">
            <summary>
            Describes a rectangular culvert section.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvertSectionRectangular.Height">
            <summary>
            Height of the section;
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvertSectionRectangular.Width">
            <summary>
            Width of the section.
            Unit: [m]
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ICulvertSectionCircular">
            <summary>
            Describes a circular culvert section.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvertSectionCircular.Diameter">
            <summary>
            Inner diameter of the section.
            Unit: [m]
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ICulvertSectionCrossSection">
            <summary>
            Class handling a culvert geometry from cross section database.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvertSectionCrossSection.GeometryCrossSectionLocation">
            <summary>
            Location of cross section data for geometry. 
            <para>
            If null, the location of the structure in the network is used (<see cref="P:DHI.Mike1D.StructureModule.IStructure.Location"/>).
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvertSectionCrossSection.GeometryCrossSectionTopoId">
            <summary>
            TopoID of cross section data for weir geometry. 
            <para>
            If null, the topo id of the structure in the network is used (<see cref="P:DHI.Mike1D.StructureModule.IStructure.TopoID"/>).
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ICulvertSectionTable">
            <summary>
            A table section is either in level-width or depth-width format, decided by the
            <see cref="T:DHI.Mike1D.StructureModule.CulvertSectionGeometries"/> value.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvertSectionTable.Data">
            <summary>
            Level width data. Lookups are always made using WidthFromDepth so no need for distingtion between 
            depth/width data and level/width data is needed.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvertSectionGeometries.GeometryType">
            <summary>
            Type of geometry currently enabled.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.CulvertSectionGeometries">
            <summary>
            Common class containing data for all culvert geometry types.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionGeometries.Validate(DHI.Mike1D.StructureModule.ICulvertSectionGeometries)">
            <summary>
            Validate geometry
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionGeometries.GeometryType">
            <summary>
            Type of geometry currently enabled.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionGeometries.Diameter">
            <summary>
            Inner diameter of the section.
            Unit: [m]
            Default: 0;
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionGeometries.Width">
            <summary>
            Width of the section.
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionGeometries.Height">
            <summary>
            Height of the section;
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionGeometries.Data">
            <summary>
            Level width data. Lookups are always made using WidthFromDepth so no need for distingtion between 
            depth/width data and level/width data is needed.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionGeometries.Closed">
            <summary>
            Flag indicating wheather the culvert section is open or closed.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionGeometries.GeometryCrossSectionLocation">
            <summary>
            Location of cross section data for culvert geometry. If null, the location of the structure in the network is used.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionGeometries.GeometryCrossSectionTopoId">
            <summary>
            TopoID of cross section data for weir geometry. 
            <para>
            If null, the topo id of the structure in the network is used (<see cref="P:DHI.Mike1D.StructureModule.IStructure.TopoID"/>).
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IStructureHasPreferredTimeStep">
            <summary>
            Base interface for all structures.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructureHasPreferredTimeStep.PreferredDt(System.TimeSpan,DHI.Mike1D.HDParameterDataAccess.TimeStepping,System.Double)">
            <summary>
            The preferred time span for the next time step. Used when adaptive time stepping is active.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.#ctor">
            <summary>
            Private constructor to support singleton pattern
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.InstanceDamBreak">
            <summary>
            Get the singleton license checker instance
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.LicenseChecker">
            <summary>
            Provides access to the DHI license system through LicManCliWrapper2004.dll
            </summary>
            <remarks>
            This class is implemented as internal class in several modules that all require
            license checking functionality. Please update all LicenseChecker classes simultaneously.
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.LicenseChecker.SelectLicense(System.String)">
            <summary>
            Add a DHI license identifier to the list of license that will be requested.
            </summary>
            <param name="licenseType"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.LicenseChecker.RequestLicense(System.Int32)">
            <summary>
            Request licenses. Calls DHI.Generic.MikeZero.License.LicenseWrapper.RequestLicenseWin()
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.LicenseChecker.GetMaxNodes">
            <summary>
            Get maximum number of nodes supported by the active license (returns MaxNode1).
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.LicenseChecker.ConfirmLicense">
            <summary>
            Confirm that all license are still valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.LicenseChecker.ReleaseLicense">
            <summary>
            Release all licenses.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.LicenseChecker.GetLicenseErrorDiagnosticsItem(System.Int32)">
            <summary>
            Convert a license error code to an error string
            </summary>
            <param name="rc"></param>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.LicenseWrapperSimple">
            <summary>
            A wrapper for making procedure calls in the DHI license managment DLL.
            This file is based on DHI.Generic.MIKEZero.LicenseWrapper.cs.
            Compared to that file, the following has been changed:
            1) Thread safety has been removed.
            2) Chaching of license checkout has been removed 
            3) Access to maximum node count information has been added
            
            The changes have been implemented in order to be able to check the same license 
            multiple times (DHI.Generic.MIKEZero.LicenseWrapper.cs has a 1 minute window)
            and point 3 above.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.LicenseWrapperSimple._ReleaseAllLicensesApp">
            <summary>
            Releases all licenses checked out by the process.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.LicenseWrapperSimple._ReleaseAllLicensesApp(System.String,System.String)">
            <summary>
            Releases specific licenses checked out by the process.
            </summary>
            <param name="moduleName">Module name.</param>
            <param name="subModuleName">Submodule name.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.LicenseWrapperSimple._RequestLicenseApp(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Requests licenses for the specific module and submodule.
            </summary>
            <param name="rndNum">Random number used for scrambling of data.</param>
            <param name="moduleName">Module name.</param>
            <param name="subModuleName">Submodule name.</param>
            <param name="versionMajor">Major version number.</param>
            <param name="versionMinor">Minor version number.</param>
            <param name="maxNode1">Unspecified.</param>
            <param name="maxNode2">Unspecified.</param>
            <param name="maxNode3">Unspecified.</param>
            <param name="maxNode4">Unspecified.</param>
            <param name="startTimer">Non-zero, if wait-timer should be started.</param>
            <returns>0, if the function succeeded, otherwise number indicating error.</returns>        
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.LicenseWrapperSimple.ConfirmAllLicensesWin">
            <summary>
            Verifies, whether all requested licenses are still avialable.
            </summary>
            <returns>0, if all the licenses are still avialable, otherwise number indicating
            error.</returns>        
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.LicenseWrapperSimple.ReleaseAllLicensesWin">
            <summary>
            Releases all licenses checked out by the process.
            </summary>        
            <remarks>The method is thread safe.</remarks>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.LicenseWrapperSimple.ReleaseLicenseWin(System.String,System.String)">
            <summary>
            Releases specific licenses checked out by the process.
            </summary>
            <param name="moduleName">Module name.</param>
            <param name="subModuleName">Submodule name.</param>   
            <remarks>The method is thread safe.</remarks>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.LicenseWrapperSimple.RequestLicenseWin(System.Int32,System.String,System.String,System.Int64,System.Int64,System.Int64,System.Int64,System.String,System.String,System.Int32)">
            <summary>
            Requests licenses for the specific module and submodule.
            </summary>
            <param name="rndNum">Random number used for scrambling of data.</param>
            <param name="moduleName">Module name.</param>
            <param name="subModuleName">Submodule name.</param>
            <param name="versionMajor">Major version number.</param>
            <param name="versionMinor">Minor version number.</param>
            <param name="maxNode1">Unspecified.</param>
            <param name="maxNode2">Unspecified.</param>
            <param name="maxNode3">Unspecified.</param>
            <param name="maxNode4">Unspecified.</param>
            <param name="startTimer">Non-zero, if wait-timer should be started.</param>
            <returns>0, if the function succeeded, otherwise number indicating error.</returns>        
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LicenseCheckerSingleton.LicenseWrapperSimple.GetMaxNodesByModuleName(System.String,System.Int64@,System.Int64@,System.String@,System.String@)">
            <summary>
             Get maximum number of nodes for a specified license.
            </summary>
            <param name="moduleName"></param>
            <param name="maxNode1"></param>
            <param name="maxNode2"></param>
            <param name="maxNode3"></param>
            <param name="maxNode4"></param>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IStormwaterInlet">
            <summary>
            Storm water inlet data interface.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStormwaterInlet.AddQQRelation(System.Double,DHI.Mike1D.Generic.XYTable)">
            <summary>
            Add a QQ relation for the specified slope. Must be added in order of increasing
            slope.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStormwaterInlet.ClearQQRelations">
            <summary>
            Clear all QQ Relations
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStormwaterInlet.Freeboard">
            <summary>
            Freeboard is the distance between the invert level of the inlet to the maximum 
            downstream water level. If the downstream water level exceeds the inlet level
            minus the freeboard, then the inlet functions as an orifice instead of
            a storm water inlet.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStormwaterInlet.InvertLevel">
            <summary>
            Invert level of the inlet.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStormwaterInlet.NumberOfInlets">
            <summary>
            Number of inlets. The flow through the Stormwater Inlet structure is the flow through a single inlet 
            multiplied by the number of inlets.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStormwaterInlet.Height">
            <summary>
            Height of the inlet when it functions as an orifice.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStormwaterInlet.Width">
            <summary>
            Width of the inlet when it functions as an orifice
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStormwaterInlet.UserDefinedSlope">
            <summary>
            If UserDefinedSlope is set, then this value is used for the slope of the source
            pipe instead of the actual slope from the network geometry.
            <para>
            Set to <see cref="F:System.Double.MinValue"/> to disable the use of it.
            </para> 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStormwaterInlet.Blockage">
            <summary>
            Blockage is the ratio of flow in the inlet that is blocked by debris.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStormwaterInlet.OnGradeInlet">
            <summary>
            When true then the stormwater inlet is of the OnGrade type where inlet discharge
            is a function of the upstream discharge and the slope of the upstream reaches.
            If false, then the inlet discharge is a function of the upstream water level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStormwaterInlet.DepthQRelation">
            <summary>
            Table of Q values in the inlet as a function of depth in the source node.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStormwaterInlet.Slopes">
            <summary>
            List of slopes in the source pipe. These slopes are matching the values in the <see cref="P:DHI.Mike1D.StructureModule.IStormwaterInlet.QqRelations"/>.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStormwaterInlet.QqRelations">
            <summary>
            List of Q values in the inlet as a function of q in the source pipe.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.StormwaterInlet">
            <summary>
            Storm water inlet class.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.StormwaterInlet._sourceDischargeGetter">
            <summary>
            Getter for the discharge through the node where the water for the inlet is coming from.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StormwaterInlet.ClearQQRelations">
            <summary>
            Clear all QQ relations and slopes
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StormwaterInlet.AddQQRelation(System.Double,DHI.Mike1D.Generic.XYTable)">
            <summary>
            Add a QQ relation for the specified slope. Must be added in order of increasing
            slope
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StormwaterInlet.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Set up structure and set runtime diagnostics object
            </summary>
            <param name="crossSectionData">Cross section data to get cross section on each side of the structure</param>
            <param name="isLinkStructure"> </param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StormwaterInlet.Validate">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StormwaterInlet.SetSlope(System.Double)">
            <summary>
            Set the slope of source of the water coming in through the inlet.
            </summary>
            <param name="slope"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StormwaterInlet.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StormwaterInlet.ExplicitStructureSupport">
            <summary>
            DEBUG: This method is called from Prepare() if _implitcit == false to check if
            the structure supports being Explicit.
            Once all structures support explicit operation this method can be deleted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StormwaterInlet.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StormwaterInlet.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StormwaterInlet.Freeboard">
            <summary>
            Freeboard is the distance between the invert level of the inlet to the maximum 
            downstream water level. If the downstream water level exceeds the inlet level
            minus the freeboard, then the inlet functions as an orifice instead of
            a storm water inlet.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StormwaterInlet.InvertLevel">
            <summary>
            Invert level of the inlet.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StormwaterInlet.NumberOfInlets">
            <summary>
            Number of inlets. The flow through the Stormwater Inlet structure is the flow through a single inlet 
            multiplied by the number of inlets.
            Default: 1.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StormwaterInlet.Height">
            <summary>
            Height of the inlet when it functions as an orifice.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StormwaterInlet.Width">
            <summary>
            Width of the inlet when it functions as an orifice
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StormwaterInlet.UserDefinedSlope">
            <summary>
            If UserDefinedSlope is set, then this value is used for the slope of the source
            pipe instead of the actual slope from the network geometry.
            <para>
            Set to <see cref="F:System.Double.MinValue"/> to disable the use of it.
            </para> 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StormwaterInlet.Blockage">
            <summary>
            Blockage is the ratio of flow in the inlet that is blocked by debris.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StormwaterInlet.OnGradeInlet">
            <summary>
            When true then the stormwater inlet is of the OnGrade type where inlet discharge
            is a function of the upstream discharge and the slope of the upstream reaches.
            If false, then the inlet discharge is a function of the upstream water level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StormwaterInlet.DepthQRelation">
            <summary>
            Table of Q values in the inlet as a function of depth in the source node.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StormwaterInlet.QqRelations">
            <summary>
            List of Q values in the inlet as a function of q in the source pipe.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StormwaterInlet.Slopes">
            <summary>
            List of slopes in the source pipe. These slopes are matching the values in the <see cref="P:DHI.Mike1D.StructureModule.StormwaterInlet.QqRelations"/>.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StormwaterInlet.SourceDischargeGetter">
            <summary>
            Getter for the discharge through the source node.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StormwaterInlet.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StormwaterInlet.InvertLevelUpstream">
            <summary>
            Invert level up stream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StormwaterInlet.InvertLevelDownstream">
            <summary>
            Invert level down stream
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IDamBreakBase">
            <summary>
            Dambreak base parameters.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakBase.FailureTrigger">
            <summary>
             Type of failure trigger
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakBase.FailOnWaterLevel">
            <summary>
             Upstream water level of failure
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakBase.FailOnDateTime">
            <summary>
             Date of failure
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakBase.FailOnHoursAfterStart">
            <summary>
            Hours of simulation start of failure
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakBase.FailureMode">
            <summary>
             Specifies how the dam break failure evolves
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakBase.CrestLevel">
            <summary>
             Level of dam (before breach)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakBase.CrestWidth">
            <summary>
             Width of dam (before breach)
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.DamBreakBase">
            <summary>
            Base class for DamBreak and DamBreakNWS
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ITimeStructure">
            <summary>
            A structure that needs to know time.
            <para>
            This is usually required by controllable structures, in order to 
            i.e. close gate, moving the gate with a specified speed.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ITimeStructure.Prepare(System.DateTime,DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Set up structure and set runtime diagnostics object
            </summary>
            <param name="startTime">Start time of simulation </param>
            <param name="hdParameters">HD parameters used for preparing the structure cross sections.</param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ITimeStructure.PrepareTimeStep(System.DateTime,System.DateTime)">
            <summary>
            Prepare structure for time step
            </summary>
            <param name="timeN">Time at beginning of time step </param>
            <param name="timeNp1">Time at end of time step </param>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakBase._failureTrigger">
            <summary>
             Type of failure trigger
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakBase._failureMode">
            <summary>
             Specifies how the dam break failure evolves
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakBase._crestLevel">
            <summary>
             Level of dam (before breach)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakBase._crestWidth">
            <summary>
             Width of dam (before breach)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakBase._timeN">
            <summary> Time N </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakBase._timeNp1">
            <summary> Time N+1 = current time </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakBase._timeOfLastWrite">
            <summary> Time that state results was written last time </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakBase._writer">
            <summary> Writer, for writing state results </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakBase._reportPath">
            <summary>
            The directory of the text output file is taken from this file path. It is set from the
            boundary data connection during Initialize().
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakBase._breachIsOpen">
            <summary>
            Flag indicating if breach is open
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakBase._simStartTime">
            <summary>
            Start time of simulation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakBase._boundary">
            <summary>
            Breach level, breach width, and breach slope are stored as components (in that order) in the
            StructureSourceBoundary.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.#ctor(System.String)">
            <summary>
             Constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.BoundaryModule.IBoundaryData,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.Prepare(DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.Prepare(System.DateTime,DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.Finish">
            <summary>
            Finish use of dambreak structure.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.PrepareTimeStep(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.WriteStatePipeCollapseEvent">
            <summary>
            Write "pipe collapsed" event to state file
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.WriteStateWeirFlowHeader">
            <summary>
            Write weir-flow header to state file
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.ExplicitStructureSupport">
            <summary>
            DEBUG: This method is called from Prepare() if _implitcit == false to check if
            the structure supports being Explicit.
            Once all structures support explicit operation this method can be deleted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.CheckForBreach(System.DateTime,System.DateTime)">
            <summary>
            Check if dambreak structuer should start breach within this time span
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.StartBreach">
            <summary>
            Start the breach now (matching time Np1). This can be called to manually
            start the breach at a certain time. It must be called in between time steps,
            and not in the middle of a time step
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.StartBreach(System.Int32)">
            <summary>
            Start the breach now (matching time Np1). This can be called to manually
            start the breach at a certain time. It must be called in between time steps,
            and not in the middle of a time step
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.StartBreach(System.DateTime)">
            <summary>
            Start breach
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.GetControlAction(System.String)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.GetCurrentValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.ResetControlledState">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakBase.FindAndAssignBoundary(DHI.Mike1D.BoundaryModule.IBoundaryData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Find and assign structure boundaries relevant to this structure.
            </summary>
            <param name="boundaryData"></param>
            <param name="diagnostics"></param>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakBase.FailureTrigger">
            <summary>
             Type of failure trigger
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakBase.FailOnWaterLevel">
            <summary>
             Upstream water level of failure
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakBase.FailOnDateTime">
            <summary>
             Date of failure
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakBase.FailOnHoursAfterStart">
            <summary>
            Hours of simulation start of failure
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakBase.FailureMode">
            <summary>
             Specifies how the dam break failure evolves
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakBase.CrestLevel">
            <summary>
             Level of dam (before breach)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakBase.CrestWidth">
            <summary>
             Width of dam (before breach)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakBase.ReportPath">
            <summary>
            The directory of the text output file is taken from this file path. It is set from the
            boundary data connection during Initialize().
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakBase.InvertLevelUpstream">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakBase.InvertLevelDownstream">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakBase.SimulationStartTime">
            <summary>
            Simulation start time. 
            <para>
            Used in case <see cref="P:DHI.Mike1D.StructureModule.DamBreakBase.FailureTrigger"/> is <see cref="F:DHI.Mike1D.StructureModule.DamBreakFailureTrigger.HoursAfterStart"/>.
            </para>
            <para>
            Also used to write information to the DamBreak state text output file.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IDamBreakNWS">
            <summary>
            Dambreak data for the NWS dam break class.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakNWS.CrestWidthForApproachCorrection">
            <summary>
            Special crest width used when calculating the approach correction.
            Usually (default value) <see cref="P:DHI.Mike1D.StructureModule.IDamBreakNWS.CrestWidthForApproachCorrection"/> is equal to 
            <see cref="P:DHI.Mike1D.StructureModule.DamBreakBase.CrestWidth"/> but in special circumstances it is necessary 
            to control the approach correction directly through this width. 
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.DamBreakNWS">
            <summary>
            Dambreak class.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakNWS.#ctor(System.String)">
            <summary>
             Constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakNWS.PrepareTimeStep(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakNWS.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakNWS.WriteStateWeirFlowHeader">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakNWS.Validate">
            <summary>
            Generates errors, warnings.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakNWS.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakNWS.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.BoundaryModule.IBoundaryData,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Set up structure and set runtime diagnostics object
            </summary>
            <param name="boundaryData"></param>
            <param name="crossSectionData">Cross section data to get cross section on each side of the structure</param>
            <param name="isLinkStructure"> </param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakNWS.ResetControlledState">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakNWS.CrestWidthForApproachCorrection">
            <summary>
            Special crest width used when calculating the approach correction.
            Usually (default value) <see cref="P:DHI.Mike1D.StructureModule.DamBreakNWS.CrestWidthForApproachCorrection"/> is equal to 
            <see cref="P:DHI.Mike1D.StructureModule.DamBreakBase.CrestWidth"/> but in special circumstances it is necessary 
            to control the approach correction directly through this width. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakNWS.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.DamBreakNWS.DamBreakNWSFlowMode">
            <summary>
            Enumerator used to specify the current type of flow in the DamBreak
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakNWS.DamBreakNWSFlowMode.Pipe">
            <summary>
            Flow through pipe
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakNWS.DamBreakNWSFlowMode.Breach">
            <summary>
            Flow through breach (initial breach flow or pipe has broken down)
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.DamBreachWeir">
            <summary>
            DamBreachWeir is a pertubated SquareBroadCrestedWeir where sloping sides contribute to the
            area of the SquareBroadCrestedWeir (ie the weir is not square).
            <para>
            This class is used internally by <see cref="T:DHI.Mike1D.StructureModule.DamBreak"/> and <see cref="T:DHI.Mike1D.StructureModule.DamBreakErosion"/>
            during the simulation. It does not contain any setup/parameter data.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.SquareBroadCrestedWeir">
            <summary>
            A square broad-crested weir.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SquareBroadCrestedWeir._sillLevel">
            <summary>
            The level of the sill just upstream of the gate.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SquareBroadCrestedWeir._width">
            <summary>
            Width of weir
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquareBroadCrestedWeir.#ctor">
            <summary>
            Constructor. Sets the default values.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquareBroadCrestedWeir.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquareBroadCrestedWeir.Prepare(DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquareBroadCrestedWeir.CalculateCriticalConditions(System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="criticalDischarge"></param>
            <param name="dCriticalDischargedInflowWaterLevel"></param>
            <param name="criticalWaterLevel"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquareBroadCrestedWeir.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquareBroadCrestedWeir.GetArea(System.Double)">
            <summary>
            Get the flow area 
            </summary>
            <param name="waterLevel"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquareBroadCrestedWeir.GetDepth(System.Double)">
            <param name="waterLevel"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquareBroadCrestedWeir.GetInvertLevel">
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquareBroadCrestedWeir.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SquareBroadCrestedWeir.SillLevel">
            <summary>
             Sill level
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SquareBroadCrestedWeir.Width">
            <summary>
            Width of ther squared broad crested weir
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SquareBroadCrestedWeir.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SquareBroadCrestedWeir.InvertLevelUpstream">
            <summary>
            Invert level up stream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SquareBroadCrestedWeir.InvertLevelDownstream">
            <summary>
            Invert level down stream
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreachWeir.SetLimitPointList(DHI.Mike1D.CrossSectionModule.CrossSectionPointList)">
            <summary>
             Points that limits the size of the breach in the downward direction. 
             If LimitPointList is set, then points limit the area of the breach 
             (used when the area of the breach is calculated)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreachWeir.InitializeLimitCrossSection(System.Double)">
            <summary>
            Move the points in the limit cross section in the x-direction such that
            the breach center is at coordinate 0, and constrain limit cross section
            to below dam crest level
            </summary>
            <param name="breachCenter"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreachWeir.GetLimitLevelAtPosition(System.Double)">
            <summary>
            Calculate depth a position x. If the limit cross section is not defined, then the depth is
            equal to waterLevel - bottomLevel.
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreachWeir.GetBreachWidth(System.Double)">
            <summary>
             Calculate breach width at waterlevel within the limits of the limit cross section
            </summary>
            <param name="waterLevel"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreachWeir.CalculatePolyLineIntersectionPoints(System.Collections.Generic.List{DHI.Mike1D.Generic.XYPair},System.Collections.Generic.List{DHI.Mike1D.Generic.XYPair})">
            <summary>
            Calculate intersections point of two poly lines
            </summary>
            <param name="polyLine1"></param>
            <param name="polyLine2"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreachWeir.SetBottomLevel">
            <summary>
             Set the breach bottom level. If there is no limit cross section, then
             bottom level is equal to sill level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreachWeir.BottomLevel">
            <summary>
            Bottom level of the breach. If there is no limit cross section, then bottom level is equal to 
            sill level of the weir.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.DamBreakFailureTrigger">
            <summary>
            Method of how to trigger dam break failure
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakFailureTrigger.Manual">
            <summary>
            Trigger Dam Break failure manually, which must be implemented by user code
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakFailureTrigger.HoursAfterStart">
            <summary>
            Trigger Dam Break failure a given number of hours after simulation start
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakFailureTrigger.DateTime">
            <summary>
            Trigger Dam Break failure at a specific date and time
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakFailureTrigger.WaterLevel">
            <summary>
            Trigger Dam Break failure when a specific upstream water level is reached
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.DamBreakFailureMode">
            <summary>
            Method of how the dam break evolves
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakFailureMode.TimeSeries">
            <summary>
            Failure described by a time series
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakFailureMode.Erosion">
            <summary>
            Erosion failure
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakFailureMode.NWSPipe">
            <summary>
            NWS pipe failure described by a time series that includes pipe obvert level
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakFailureMode.NWSBreach">
            <summary>
            NWS pipe failure described by a time series
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.DamBreak">
            <summary>
            Dambreak class.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IDamBreak">
            <summary>
            
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreak.Erosion">
            <summary>
            Erosion parameters
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreak.LimitCrossSectionTopoID">
            <summary>
             Topo ID of limiting cross section
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreak.LimitCrossSectionLocation">
            <summary>
             Location of limiting cross section. The limiting cross section limits the size of the breach
             in the downward direction. If LimitCrossSectionLocation is set, then the cross section at that location is 
             used to limit the breach (used when the area of the breach is calculated)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreak.LimitCrossSectionBreachCenter">
            <summary>
             Position of center of breach relative to the limit cross section
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreak._headLossInflowPositiveFlow">
            <summary>
            Inflow head loss factor for positive flow.
            Default value = 0.5.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreak._headLossOutflowPositiveFlow">
            <summary>
            Outflow head loss factor for positive flow.
            Default value = 1.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreak._freeOutflowCorrectionCoefficientPositiveFlow">
            <summary>
            Free overflow factor for positive flow.
            Default value = 1.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreak._headLossInflowNegativeFlow">
            <summary>
            Inflow head loss factor for negative flow.
            Default value = 0.5.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreak._headLossOutflowNegativeFlow">
            <summary>
            Outflow head loss factor for negative flow.
            Default value = 1.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreak._freeOutflowCorrectionCoefficientNegativeFlow">
            <summary>
            Free overflow factor for negative flow.
            Default value = 1.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreak._structureIterationCentering">
            <summary>
            Used when making relaxation when iterating to find the subcritical solution for structures solved using the energy equation.
            When it equals 1 no relaxation is made.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreak._maximumNumberOfIterations">
            <summary>
            Maximum number of iterations allowed when the two nonlinear energy equations are solved iteratively.
            Default value: 100
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreak.#ctor(System.String)">
            <summary>
             Constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreak.PrepareTimeStep(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreak.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreak.WriteStateWeirFlowHeader">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreak.Validate">
            <summary>
            Generates errors, warnings.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreak.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreak.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.BoundaryModule.IBoundaryData,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Set up structure and set runtime diagnostics object
            </summary>
            <param name="boundaryData"></param>
            <param name="crossSectionData">Cross section data to get cross section on each side of the structure</param>
            <param name="isLinkStructure"> </param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreak.Prepare(DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreak.ResetControlledState">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreak.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreak.LimitCrossSectionTopoID">
            <summary>
             Topo ID of limiting cross section
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreak.LimitCrossSectionLocation">
            <summary>
             Location of limiting cross section. The limiting cross section limits the size of the breach
             in the downwar direction. If LimitCrossSectionLocation is set, then the cross section at that location is 
             used to limit the breach (used when the area of the breach is calculated)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreak.LimitCrossSectionBreachCenter">
            <summary>
             Position of center of breach relative to the limit cross section
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreak.Erosion">
            <summary>
            Erosion parameters
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreak.HeadLossInflowPositiveFlow">
            <summary>
            Inflow head loss factor for positive flow.
            Default value = 0.5.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreak.HeadLossOutflowPositiveFlow">
            <summary>
            Outflow head loss factor for positive flow.
            Default value = 1.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreak.HeadLossFreeOverflowPositiveFlow">
            <summary>
            Free overflow factor for positive flow.
            Default value = 1.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreak.HeadLossInflowNegativeFlow">
            <summary>
            Inflow head loss factor for positive flow.
            Default value = 0.5.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreak.HeadLossOutflowNegativeFlow">
            <summary>
            Free overflow factor for negative flow.
            Default value = 1.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreak.HeadLossFreeOverflowNegativeFlow">
            <summary>
            Free overflow factor for negative flow.
            Default value = 1.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreak.StructureIterationCentering">
            <summary>
            Used when making relaxation when iterating to find the subcritical solution for structures solved using the energy equation.
            When it equals 1 no relaxation is made.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreak.MaximumIterations">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreak.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ErosionFailureModes">
            <summary>
            Method of how to trigger dam break failure
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ErosionFailureModes.BreachFailure">
            <summary>
            Fail by breach weir erosion
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ErosionFailureModes.PipeFailure">
            <summary>
            Fail by erosion of pipe flow through breach
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ErosionFlowModes">
            <summary>
            Method of how to trigger dam break failure
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ErosionFlowModes.Weir">
            <summary>
            Flow through weir
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ErosionFlowModes.Pipe">
            <summary>
            Flow through pipe
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IDamBreakErosion">
            <summary>
            Parameters for erosion based dam break.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.UpstreamSlope">
            <summary>
            Erosion failure upstream slope.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.DownstreamSlope">
            <summary>
            Erosion failure downstream slope.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.TopWidth">
            <summary>
            Top width of the dam when using erosion based breach failure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.GrainDiameter">
            <summary>
            Erosion failure grain diameter.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.SpecificGravity">
            <summary>
            Erosion failure specific gravity.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.Porosity">
            <summary>
            Erosion failure porosity
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.CriticalShearStress">
            <summary>
            Erosion failure critical shear stress. If the shear stress exceeds the critical shear stress, 
            then the material in the breach erodes away.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.SideErosionIndex">
            <summary>
            Erosion failure side erosion index. The side erosion index is a proportionality 
            factor that determines the amount of erosion of the breach sides. The higher the
            side index, the more material is eroded away from the breach sides.
            Generally in the [0.5; 1.0] range.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.FinalBottomLevel">
            <summary>
            Final bottom breach level of erosion failure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.FinalBottomWidth">
            <summary>
            Final bottom breach width of erosion failure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.BreachSlope">
            <summary>
            Final bottom breach slope of erosion failure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.InitialBreachFailureLevel">
            <summary>
            Initial level of breach when erosion failure is initiated at the breach crest.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.InitialBreachFailureWidth">
            <summary>
            Initial width of breach when erosion failure is initiated at the breach crest.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.PipeLevel">
            <summary>
            Level at which the pipe is located (initially).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.PipeDiameter">
            <summary>
            Initial diameter of the pipe.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.PipeRoughness">
            <summary>
            Pipe roughness, used to calculate the Darcy friction factor. 
            Increased roughness decrease discharge through the pipe.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.PipeFailureCollapseRatio">
            <summary>
            Collapse Ratio (D/y) > 0: When the ratio between the diameter of the pipe 
            and the distance from the top of the dam to the top of the pipe is larger 
            than the collapse ratio the pipe collapses. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.PipeFailureVolumeLossRatio">
            <summary>
            Volume Loss Ratio 0 - 1: When the dam collapses some of the material may 
            be carried out without depositing on the bed of the breach. The volume 
            loss ratio is the fraction of the material to be washed out immediately
            after collapse. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.PipeFailureCalibrationCoefficient">
            <summary>
            Pipe failure calibration coefficient
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDamBreakErosion.FailureMode">
            <summary>
            Erosion failure mode
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.DamBreakErosion">
            <summary>
            Helper class for DamBreak to handle erosion based failure of a dam.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakErosion._pipeLevel">
            <summary>
            Level at which the pipe is located (initially).
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DamBreakErosion._erodedPipeDiameter">
            <summary>
            Actual (eroded) diameter of the pipe breach.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DamBreakErosion.Validate(System.String,System.Double)">
            <summary>
            Generates errors, warnings.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.FailureMode">
            <summary>
            Erosion failure mode is either catastrophic failure of a pipe or slower erosion 
            of a breach weir.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.UpstreamSlope">
            <summary>
            Erosion failure Upstream slope.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.DownstreamSlope">
            <summary>
            Erosion failure downstream slope.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.TopWidth">
            <summary>
            Top width of the dam when using erosion based breach failure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.GrainDiameter">
            <summary>
            Erosion failure grain diameter.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.SpecificGravity">
            <summary>
            Erosion failure specific gravity.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.Porosity">
            <summary>
            Erosion failure porosity
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.CriticalShearStress">
            <summary>
            Erosion failure critical shear stress. If the shear stress exceeds the critical shear stress, 
            then the material in the breach erodes away.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.SideErosionIndex">
            <summary>
            Erosion failure side erosion index. The side erosion index is a proportionality 
            factor that determines the amount of erosion of the breach sides. The higher the
            side index, the more material is eroded away from the breach sides.
            Generally in the [0.5; 1.0] range.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.FinalBottomLevel">
            <summary>
            Final bottom breach level of erosion failure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.FinalBottomWidth">
            <summary>
            Final bottom breach width of erosion failure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.BreachSlope">
            <summary>
            Final bottom breach slope of erosion failure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.InitialBreachFailureLevel">
            <summary>
            Initial level of breach when erosion failure is initiated at the breach crest.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.InitialBreachFailureWidth">
            <summary>
            Initial width of breach when erosion failure is initiated at the breach crest.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.PipeLevel">
            <summary>
            Level at which the pipe is located (initially).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.PipeDiameter">
            <summary>
            Initial diameter of the pipe.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.PipeRoughness">
            <summary>
            Roughness of the pipe. Increased roughness decrease discharge through the pipe.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.PipeFailureCalibrationCoefficient">
            <summary>
            The calibration coefficient is a proportionality factor on the 
            change in pipe diameter dure to erosion.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.FlowMode">
            <summary>
            Current flow mode is either through a pipe in the dam or free flow across a weir
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DamBreakErosion.ErodedPipeRadius">
            <summary>
            Actual (eroded) diameter of the pipe breach.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.Gate">
            <summary>
            Abstract gate. The gate is a controllable structure.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IGate">
            <summary>
            Common interface for gate structures
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IGate.Width">
            <summary>
            Width of the weir opening. Width is perpendicular to the flow direction, i.e. "across the river"
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IGate.SillLevel">
            <summary>
            Level of the sill of the gate.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IGate.ActualGateLevel">
            <summary>
            Actual gate level.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            <para>
            this is not a setup parameter, but a run parameter, 
            which will change during the run (if the gate is controlled).
            If the gate is not controlled, this can be used to change
            the gate (manual/user defined control).
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IGate.InitialGateLevel">
            <summary>
            Gate level.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IGate.MaxSpeed">
            <summary>
            The maximum allowed rate of change of the gate level.
            Type: River Structure Geometry / Time
            Unit: [m]
            Default: 0.001
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IGate.MaxValue">
            <summary>
            Maximum gate level. The gate can not be raised above this level.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IGate.UseMaxValue">
            <summary>
            Flag telling if the maximum gate level specified in _maxValue should be used
            Type: boolean
            Unit: [m]
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IGate.Multiplicator">
            <summary>
            Multiplicator or "number of structures" of this type. 
            Used for modelling more structures at the same
            location with the same geometry in one go.
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Gate._sillLevel">
            <summary>
            Level of the sill of the gate.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Gate._width">
            <summary>
            Width of the weir opening. Width is perpendicular to the flow direction, i.e. "across the river"
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Gate._initialGateLevel">
            <summary>
            Initial value of the gate level.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Gate._maxValue">
            <summary>
            Maximum gate level. The gate can not be raised above this level.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Gate._useMaxValue">
            <summary>
            Flag telling if the maximum gate level specified in _maxValue should be used
            Type: boolean
            Unit: [m]
            Default: false
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Gate._maxSpeed">
            <summary>
            The maximum allowed rate of change of the gate level.
            Type: River Structure Geometry / Time
            Unit: [m]
            Default: 0.001
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Gate._multiplicator">
            <summary>
            Multiplicator or "number of structures" of this type. 
            Used for modelling more structures at the same
            location with the same geometry in one go.
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Gate._actualGateLevel">
            <summary>
            Gate level.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Gate._timeOfPreviousGateLevelChange">
            <summary>
            Time of previous gate level change
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Gate._previousGateLevel">
            <summary>
            Previous gate level. Used when control is active, to assure the correct speed of the gate.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Gate._useDynamicMinGateLevel">
            <summary>
             Use the controllable minimum gate level
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Gate._useDynamicMaxGateLevel">
            <summary>
             Use the controllable maximum gate level
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Gate._dynamicMaxGateLevel">
            <summary>
             Controllable minimum gate level
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Gate._dynamicMinGateLevel">
            <summary>
             Controllable maximum gate level
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Gate.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Gate.PrepareTimeStep(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Gate.ControlOpen(System.Int32)">
            <summary>
            Control the gate, Open it
            </summary>
            <param name="controlStrategyId">Control strategy id, used for keeping track of which strategy 
            is currently active. The strategy id can be outputted to result file.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Gate.ControlClose(System.Int32)">
            <summary>
            Control the gate, close it
            </summary>
            <param name="controlStrategyId">Control strategy id, used for keeping track of which strategy 
            is currently active. The strategy id can be outputted to result file.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Gate.ControlSetGateLevel(System.Double,System.Int32)">
            <summary>
            Control the gate, set gate level to specified value
            </summary>
            <param name="newGateLevel">New gate level. Cannot be lower than <see cref="P:DHI.Mike1D.StructureModule.Gate.SillLevel"/>.</param>
            <param name="controlStrategyId">Control strategy id, used for keeping track of which strategy 
            is currently active. The strategy id can be outputted to result file.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Gate.ControlSetMinLevel(System.Double,System.Int32)">
            <summary>
            Control the gate, set min gate level to specified value
            </summary>
            <param name="newMinGateLevel">New minimum gate level. Cannot be lower than <see cref="P:DHI.Mike1D.StructureModule.Gate.SillLevel"/>.</param>
            <param name="controlStrategyId">Control strategy id, used for keeping track of which strategy 
            is currently active. The strategy id can be outputted to result file.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Gate.ControlSetMaxLevel(System.Double,System.Int32)">
            <summary>
            Control the gate, set max gate level to specified value
            </summary>
            <param name="newMaxGateLevel">New maximum gate level. Cannot be lower than <see cref="P:DHI.Mike1D.StructureModule.Gate.SillLevel"/>.</param>
            <param name="controlStrategyId">Control strategy id, used for keeping track of which strategy 
            is currently active. The strategy id can be outputted to result file.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Gate.ResetControlledState">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Gate.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Gate.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Gate.GetControlAction(System.String)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Gate.GetCurrentValue(System.String)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Gate.SillLevel">
            <summary>
            Level of the sill of the gate.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Gate.Width">
            <summary>
            Width of the weir opening. Width is perpendicular to the flow direction, i.e. "across the river"
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Gate.InitialGateLevel">
            <summary>
            Initial value of the gate level.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Gate.MaxValue">
            <summary>
            Maximum gate level. The gate can not be raised above this level.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Gate.UseMaxValue">
            <summary>
            Flag telling if the maximum gate level specified in _maxValue should be used
            Type: boolean
            Unit: [m]
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Gate.MaxSpeed">
            <summary>
            The maximum allowed rate of change of the gate level.
            Type: River Structure Geometry / Time
            Unit: [m]
            Default: 0.001
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Gate.Multiplicator">
            <summary>
            Multiplicator or "number of structures" of this type. 
            Used for modelling more structures at the same
            location with the same geometry in one go.
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Gate.ActualGateLevel">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Gate.UseControlledMaxGateLevel">
            <summary>
             Use the controllable maximum gate level
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Gate.UseControlledMinGateLevel">
            <summary>
             Use the controllable minimum gate level
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Gate.DynamicMinGateLevel">
            <summary>
             Controllable minimum gate level
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Gate.DynamicMaxGateLevel">
            <summary>
             Controllable maximum gate level
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Gate.UseMomentumEquation">
            <summary>
            Flag to de-activate structure completely. If this flag is set, then
            the momentum equation will be used to set the coefficents in HDStructureGridPoint
            instead of the structure.  The flag is cleared the next time Control() is called.
            <para>
            This is used in HDStructureGridPoint to determine if the structure should be active 
            or or if the coefficients should be set using a HDQGridPoint.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IDischargeStructure">
            <summary>
            Simple constant discharge structure, that may be controlled
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDischargeStructure.InitialDischarge">
            <summary>
            Constant/Initial value of the discharge.
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDischargeStructure.MaxDischargeSpeed">
            <summary>
            The maximum allowed rate of change of the discharge level.
            Default: double.MaxValue
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDischargeStructure.UseMaxDischarge">
            <summary>
            Flag specifying whether the discharge is to be limited by
            the <see cref="P:DHI.Mike1D.StructureModule.IDischargeStructure.MaxDischarge"/>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDischargeStructure.MaxDischarge">
            <summary>
            Maximum discharge level. The discharge can not be raised above this level.
            Default: double.MaxValue
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IDischargeStructure.Multiplicator">
            <summary>
            Multiplicator or "number of structures" of this type. 
            Used for modelling more structures at the same
            location with the same geometry in one go.
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.DischargeStructure">
            <summary>
            Simple constant discharge structure. 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DischargeStructure._useMaxDischarge">
            <summary>
             Use the controllable maximum discharge level
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DischargeStructure._multiplicator">
            <summary>
            Multiplicator or "number of structures" of this type. 
            Used for modelling more structures at the same
            location with the same geometry in one go.
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DischargeStructure._discharge">
            <summary>
            Discharge for a single structure. 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DischargeStructure._previousDischarge">
            <summary>
            Last timestep discharge for a single structure. 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.DischargeStructure._controlTargetDischarge">
            <summary>
            Target discharge (the discharge to achieve) for control
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DischargeStructure.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Set up structure and set runtime diagnostics object
            </summary>
            <param name="crossSectionData">Cross section data to get cross section on each side of the structure</param>
            <param name="isLinkStructure"> </param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DischargeStructure.Prepare(DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DischargeStructure.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DischargeStructure.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DischargeStructure.PrepareTimeStep(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DischargeStructure.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level. For DischargeGate, SetWaterLevels() does nothing else 
            than implements limits on discharge if _upstreamWaterLevelMinMaxTable != null.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DischargeStructure.Validate">
            <summary>
            Writes errors, warnings and hints into their respective member classes. The member objects are initially cleared.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DischargeStructure.ResetControlledState">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DischargeStructure.ControlSetDischarge(System.Double,System.Int32)">
            <summary>
            Set the discharge to use
            </summary>
            <param name="newDischarge">New discharge</param>
            <param name="controlStrategyId">Control strategy id currently used.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DischargeStructure.ControlClose(System.Int32)">
            <summary>
            Close gate, set the discharge to zero
            </summary>
            <param name="controlStrategyId">Control strategy id currently used.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DischargeStructure.ControlOpen(System.Int32)">
            <summary>
            Close gate, set the discharge to max
            </summary>
            <param name="controlStrategyId">Control strategy id currently used.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DischargeStructure.ControlSetMinDischarge(System.Double,System.Int32)">
            <summary>
            Set the minimum discharge allowed when controlling the discharge
            </summary>
            <param name="newMinDischarge">New min discharge</param>
            <param name="controlStrategyId">Not used.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DischargeStructure.ControlSetMaxDischarge(System.Double,System.Int32)">
            <summary>
            Set the maximum discharge allowed when controlling the discharge
            </summary>
            <param name="newMaxDischarge">New max discharge</param>
            <param name="controlStrategyId">Not used.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DischargeStructure.GetControlAction(System.String)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.DischargeStructure.GetCurrentValue(System.String)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DischargeStructure.InitialDischarge">
            <summary>
            Initial value of the discharge.
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DischargeStructure.MaxDischargeSpeed">
            <summary>
            The maximum allowed rate of change of the discharge level.
            Default: double.MaxValue
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DischargeStructure.MaxDischarge">
            <summary>
            Maximum discharge. The discharge (absolute value) can not be raised above this level.
            Default: double.MaxValue
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DischargeStructure.UseMaxDischarge">
            <summary>
             Use the controllable maximum discharge level
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DischargeStructure.Multiplicator">
            <summary>
            Multiplicator or "number of structures" of this type. 
            Used for modelling more structures at the same
            location with the same geometry in one go.
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DischargeStructure.ActualDischarge">
            <summary>
            Discharge for a single structure. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DischargeStructure.ControlledMinDischarge">
            <summary>
            Minimum limit on discharge controllable from outside.
            Only used if _useControlledMinDischarge == true
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DischargeStructure.UseControlledMinDischarge">
            <summary>
             Use the controllable minimum discharge
             <para>
             Automatically set when controlling minimum discharge
             </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DischargeStructure.ControlledMaxDischarge">
            <summary>
            Maximum limit on discharge controllable from outside.
            Only used if _useControlledMaxDischarge == true
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DischargeStructure.UseControlledMaxDischarge">
            <summary>
             Use the controllable maximum discharge
             <para>
             Automatically set when controlling maximum discharge
             </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DischargeStructure.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DischargeStructure.InvertLevelUpstream">
            <summary>
            Invert level up stream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DischargeStructure.InvertLevelDownstream">
            <summary>
            Invert level down stream
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ADComponentSensorDescriptionInfo">
            <summary>
            Struct for recording errors between Nwk11 structure bridge and Sim11 bridge.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ADComponentSensorDescriptionInfo.ComponentIndex">
            <summary> ComponentIndes </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ADComponentSensorDescriptionInfo.SensorDescription">
            <summary> SensorDescription </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ADComponentSensorDescriptionInfo.StructureId">
            <summary> ID of structure </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ADComponentSensorDescriptionInfo.OperandNo">
            <summary> Operand number </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ADComponentSensorDescriptionInfo.Priority">
            <summary> Priority </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ADComponentConstantInfo">
            <summary>
            Struct for conversion of units for constants between Nwk11 structure bridge and Sim11 bridge.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ADComponentConstantInfo.ComponentIndex">
            <summary> ComponentIndes </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ADComponentConstantInfo.Constant">
            <summary> SensorDescription </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.Nwk11StructureBridge">
            <summary>
            The Nwk11 bridge is used for reading and writing data from the Mike11 network file.
            </summary>
            <summary>
            The Nwk11 bridge is used for reading and writing data from the Mike11 network file.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.INwk11StructureBridge">
            <summary>
            The Nwk11 bridge is used for reading and writing data from the Mike11 network file.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.INwk11StructureBridge.Open">
            <summary>
            Reads in the _structureSection and populates the _structureCollection.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.INwk11StructureBridge.Open(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Reads in the _structureSection and populates the _structureCollection.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.INwk11StructureBridge.Save">
            <summary>
            Saves the data of the _structureCollection into the _structureSection.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.INwk11StructureBridge.StructureSection">
            <summary>
            Section pointer to the section that includes the structure sections
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.INwk11StructureBridge.PfsStructureSection">
            <summary>
            The section that includes the structure sections
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.INwk11StructureBridge.PfsHandle">
            <summary>
            Reference file pointer. The handle is used when writing Pfs files.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.GetControlStructureData">
            <summary>
            Reads datasection for the control structures.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.CheckAndCreateDynamicControl(DHI.Math.Expression.ExpressionFactory,DHI.Mike1D.StructureModule.IStructure)">
            <summary>
            Check if we should use the discharge/gate level of this structure to limit the 
            discharge/gate level of another structure in the network.
            If yes, then we create an appropriate control.
            </summary>
            <param name="exprFactory"> </param>
            <param name="gate"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.CreateSensorExpression(System.Int32,System.Int32,DHI.Math.Expression.ExpressionFactory,DHI.Mike1D.StructureModule.Nwk11StructureBridge.M11SensorType,DHI.PFS.PFSKeyword,System.Int32,DHI.Mike1D.StructureModule.IStructure,DHI.PFS.PFSSection,System.String,DHI.Mike1D.StructureModule.Nwk11StructureBridge.M11OperatorType,System.Int32,System.String)">
            <summary>
            Creates an expression-tree for a "point" in M11 (used for control points and input to logical expressions).
            </summary>
            <param name="priority"></param>
            <param name="factory"></param>
            <param name="exprFactory"> </param>
            <param name="sensorType"></param>
            <param name="keyword">The keyword used to extract locations needed in expression</param>
            <param name="indexOfFirstLocation">Index of the first locatio on the keyword</param>
            <param name="gate"></param>
            <param name="summationSection">PFS section with summation information for Sum_Q sensors</param>
            <param name="summationPrefix">Prefix needed to access PFS keywords in summationSection</param>
            <param name="operatorType"></param>
            <param name="operatorParameterPosition">Position in keywork where operator paramters are located</param>
            <param name="actionId"></param>
            <returns></returns>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Nwk11StructureBridge._structureCollection">
            <summary>
            Member variable holding the reference to the Structure collection. 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Nwk11StructureBridge._structureSection">
            <summary>
            Section pointer to the section that includes the structure sections
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Nwk11StructureBridge._pfsHandle">
            <summary>
            Handle for the pfsFile. Used when saving the file.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Nwk11StructureBridge._structureIds">
            <summary> Set of structure id's currently loaded in the collection </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Nwk11StructureBridge.Number2WeirDictionary">
            <summary> Dictionary used to match weirs with bridges via their number</summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Nwk11StructureBridge.Number2CulvertDictionary">
            <summary> Dictionary used to match culverts with bridges via their number</summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.#ctor(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.ControlModule.ControlData)">
            <summary>
            Constructor. The constructor sets a reference to the structure collection that aggregates
            the list of structures filled by the bridge. 
            </summary>
            <param name="structureCollection">Reference to the Structure collection</param>
            <param name="controlData"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.#ctor(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.ControlModule.ControlData,DHI.PFS.PFSSection)">
            <summary>
            Constructor. The constructor sets a reference to the structure collection that aggregates
            the list of structures filled by the bridge. 
            </summary>
            <param name="structureCollection">Reference to the Structure collection</param>
            <param name="controlData"></param>
            <param name="structureSection">Structure Section</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.Open(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Open 
            </summary>
            <param name="diagnostics"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.Open">
            <summary>
            Reads in the _structureSection and populates the _structureCollection.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.GetLocation(DHI.PFS.PFSSection,System.String@,System.String@)">
            <summary>
            Reads the location given a weir data section. The content of the projection field, i.e. the
            fifth parameter for the location keyword
            </summary>
            <param name="pfsWeirDataSection">section handle for the "weir_data" section</param>
            <param name="topoID"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.GetValveForWeir(DHI.PFS.PFSSection,DHI.Mike1D.StructureModule.IValvedStructure)">
            <summary>
            Reads in the valve type for a weir. The value read is set in valvedStructure.
            </summary>
            <param name="pfsWeirDataSection">Section to read the data from</param>
            <param name="valvedStructure">ValvedStructure to read data into. Reference type parameter.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.GetCommonGateAttributes(DHI.PFS.PFSSection,DHI.Mike1D.StructureModule.IStructure)">
            <summary>
            reads data that are common to all operational gates.
            </summary>
            <param name="pfsGateDataSection">Present data section</param>
            <param name="gateStructure">Relevant gate</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.GetRegulatingStructureData">
            <summary>
            Reads datasection for the regulating structures.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.GetTabulatedData">
            <summary>
            Reads the data section for tabulated structures.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.GetEnergyBalanceData">
            <summary>
            Reads the data section for energy loss structures.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.Save">
            <summary>
            Saves the data of the _structureCollection into the _structureSection.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.WriteRadialGateData(DHI.PFS.PFSBuilder,DHI.Mike1D.StructureModule.IRadialGate)">
            <summary>
            Writes the data uniqe for a radial gate
            </summary>
            <param name="networkFile"></param>
            <param name="gate"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.WriteSluiceGateData(DHI.PFS.PFSBuilder,DHI.Mike1D.StructureModule.ISluiceGate)">
            <summary>
            Writes the data uniqe for a sluice gate
            </summary>
            <param name="networkFile"></param>
            <param name="gate"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.WriteHeadLossFactors(DHI.PFS.PFSBuilder,DHI.Mike1D.StructureModule.IHeadLossStructure)">
            <summary>
            Writes headloss factors
            </summary>
            <param name="networkFile"></param>
            <param name="gate"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Nwk11StructureBridge.GateTypeToGateTypeInt(DHI.Mike1D.StructureModule.IGate)">
            <summary>
            Returns an integer corresponding to the actual gate.
            </summary>
            <param name="gate"></param>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Nwk11StructureBridge.StructureSection">
            <summary>
            Section pointer to the section that includes the structure sections
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Nwk11StructureBridge.PfsStructureSection">
            <summary>
            Section pointer to the section that includes the structure sections
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Nwk11StructureBridge.PfsHandle">
            <summary>
            Reference file pointer. The handle is used when writing Pfs files.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ReservoirData">
            <summary>
            This class contains information about reservoirs connected to structures.
            In 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ReservoirData.Coordinate">
            <summary>
            Coordinate of reservoir. If left empty, a default 
            coordinate for the reservoir is calculated
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ReservoirData.WaterLevelSurfaceAreaTable">
            <summary>
            Table containing water level and reservoir volume.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.SquaredGatedBCWeir">
            <summary>
            Base implementation for a broadcrested weir with a rectangular opening.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SquaredGatedBCWeir._maxValue">
            <summary>
            Maximum value of gate level that a control can set in Control()
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SquaredGatedBCWeir._multiplicator">
            <summary>
            Multiplicator or "number of structures" of this type. 
            Used for modelling more structures at the same
            location with the same geometry in one go.
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SquaredGatedBCWeir._actualGateLevel">
            <summary>
            Gate level
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SquaredGatedBCWeir._useControlledMinGateLevel">
            <summary>
            Flag indicating if controllable minimum gate level is enforced
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SquaredGatedBCWeir._useControlledMaxGateLevel">
            <summary>
            Flag indicating if controllable maximum gate level is enforced
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SquaredGatedBCWeir._controlledMaxGateLevel">
            <summary>
            Controllable maximum gate level
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SquaredGatedBCWeir._controlledMinGateLevel">
            <summary>
            Controllable minimum gate level
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SquaredGatedBCWeir._previousGateLevel">
            <summary>
            Previous gate level. Used when control is active, to assure the correct speed of the gate.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SquaredGatedBCWeir._controlTargetGateLevel">
            <summary> Target level of gate, i.e. the level that the gate currently approaches. </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SquaredGatedBCWeir._controlIsActive">
            <summary> Flag indicating if gate control is active, i.e. gate is opening or closing </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.Validate">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.PrepareTimeStep(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.ControlSetGateLevel(System.Double,System.Int32)">
            <summary>
            Set new gate level
            </summary>
            <param name="newGateLevel">New gate level</param>
            <param name="controlStrategyId">Control strategy currently used.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.ControlSetMinMaxGateLevel(System.Double,System.Double,System.Int32)">
            <summary>
            Set the minimum and maximum gate level.
            </summary>
            <param name="newMinGateLevel">New minimum gate level</param>
            <param name="newMaxGateLevel">New maximum gate level</param>
            <param name="controlStrategyId">Not used (only the control strategy for the <see cref="M:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.ControlSetGateLevel(System.Double,System.Int32)"/> is stored)</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.ControlSetMinGateLevel(System.Double,System.Int32)">
            <summary>
            Set the minimum gate level.
            </summary>
            <param name="newMinGateLevel">New minimum gate level</param>
            <param name="controlStrategyId">Not used (only the control strategy for the <see cref="M:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.ControlSetGateLevel(System.Double,System.Int32)"/> is stored)</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.ControlSetMaxGateLevel(System.Double,System.Int32)">
            <summary>
            Set the maximum gate level.
            </summary>
            <param name="newMaxGateLevel">New maximum gate level</param>
            <param name="controlStrategyId">Not used (only the control strategy for the <see cref="M:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.ControlSetGateLevel(System.Double,System.Int32)"/> is stored)</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.GetControlAction(System.String)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.GetCurrentValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.ResetControlledState">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.InitialGateLevel">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.MaxValue">
            <summary>
            Maximum value of gate level that a control can set in Control()
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.UseMaxValue">
            <summary>
            True if gate level should be restricted by MaxValue in Control()
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.MaxSpeed">
            <summary>
            Maximum speed of gate movement
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.Multiplicator">
            <summary>
            Multiplicator or "number of structures" of this type. 
            Used for modelling more structures at the same
            location with the same geometry in one go.
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SquaredGatedBCWeir.ActualGateLevel">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.StructureModule.StructureDataFactory">
            <summary>
            Factory class for reading and writing structure data to storage
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureDataFactory.Open(DHI.Mike1D.Generic.IConnection)">
            <summary>
            Reads in the data specified by connection and populates the DataAccess.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureDataFactory.Save(DHI.Mike1D.StructureModule.StructureCollection)">
            <summary>
            Save the data to the storage specified by the data connection.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.StructureDataXmlBridge">
            <summary>
            Bridge for reading and writing structure data to xml file
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureDataXmlBridge.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StructureDataXmlBridge.FilePath">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.StructureModule.StructureExtensions">
            <summary>
            Class with extension methods for structures
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureExtensions.Description(DHI.Mike1D.StructureModule.IStructure)">
            <summary>
            Returns the description of the structure, if it is an <see cref="T:DHI.Mike1D.StructureModule.Structure"/>, 
            otherwise id + type
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureExtensions.IsSideStructure(DHI.Mike1D.StructureModule.IStructure)">
            <summary>
            Returns true if the structure is a side structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureExtensions.RemovableStructure(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.Generic.ILocation)">
            <summary>
            Returns true if the structure at that location is removable
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureExtensions.SetBaseFilePath(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.Generic.IFilePath)">
            <summary>
            Set base file path for all structures
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureExtensions.Initialize(DHI.Mike1D.StructureModule.IStructure,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Helper function for some unit tests. Do not use.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureExtensions.Initialize(DHI.Mike1D.StructureModule.IStructure,DHI.Mike1D.BoundaryModule.BoundaryData,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Helper function for some unit tests. Do not use.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.StructureTypes">
            <summary>
            Type of structure
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.StructureTypes.Regular">
            <summary>
             Regular structure, obstructing the flow in the river.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.StructureTypes.SideStructure">
            <summary>
            Side structure, working as a structure-outlet on the side of the river, where water will leave the system.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.StructureTypes.SideStructureWithReservoir">
            <summary>
            Side structure with an attached reservoir, water leaving the river will enter a reservoir.
            <para>
            The geometry of the side structure is specified in the <see cref="P:DHI.Mike1D.StructureModule.IStructure.SideStructureReservoir"/>
            </para>
            <para>
            This is an easy way of setting up a structure on a structure reach and connected to a basin.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.StructureTypes.SubStructure">
            <summary>
            Sub-structure is not an independent structure, but part of another structure or component.
            This type of structure is not added directly to the model, but are by the HD module considered as disabled. 
            The effect of this type of structure is included implicitly by the "user" of the sub-structure, 
            usually being another structure.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.SideStructureBank">
            <summary>
            Position of the side structure, on the left or right bank
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SideStructureBank.Undefined">
            <summary> Undefined, or defined by reservoir coordinate </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SideStructureBank.Left">
            <summary> Left bank </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SideStructureBank.Right">
            <summary> Right bank </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IQHStructure">
            <summary>
            QHStructure. A simple structure where discharge depends on upstream water level.
            The discharge is tabulated.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IQHStructure.HQRelation">
            <summary>
            QH relation for QH and QdeltaH pumps
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IQHStructure.Offset">
            <summary>
            Offset on QH relation, subtracted from water level before looking up in the <see cref="P:DHI.Mike1D.StructureModule.IQHStructure.HQRelation"/>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.QHStructure">
            <summary>
            QHStructure class. A simple structure where discharge depends on upstream water level.
            The discharge is tabulated.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.QHStructure.ExplicitStructureSupport">
            <summary>
            DEBUG: This method is called from Prepare() if _implitcit == false to check if
            the structure supports being Explicit.
            Once all structures support explicit operation this method can be deleted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.QHStructure.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.QHStructure.Validate">
            <summary>
            Writes errors, warnings and hints into their respective member classes. The member objects are initially cleared.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.QHStructure.HQRelation">
            <summary>
            QH relation for QH and QdeltaH pumps
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.QHStructure.Offset">
            <summary>
            Offset on QH relation, subtracted from the water level before looking up in the <see cref="P:DHI.Mike1D.StructureModule.QHStructure.HQRelation"/>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.QHStructure.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.QHStructure.InvertLevelUpstream">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.QHStructure.InvertLevelDownstream">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.StructureModule.CulvertSectionCircular">
            <summary>
            Computation class handling a circular culvert section.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.SectionGeometry">
            <summary>
            Base computational class for culvert sections.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SectionGeometry.FULL_TOLERANCE">
            <summary>
            Tolerance used when it is decided wheather a section is full.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SectionGeometry.MINIMUM_WIDTH">
            <summary>
            Smallest value returned as section width
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SectionGeometry.MIN_WETTED_PERIMITER">
            <summary>
            Smallest allowed wetted perimiter
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SectionGeometry.MIN_AREA">
            <summary>
            Smallest allowed area 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SectionGeometry._multiplicator">
            <summary>
            Number of sections
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SectionGeometry.GetArea(System.Double)">
            <summary>
            Returns the area given the depth.
            </summary>
            <param name="depth">depth to calculate area for</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SectionGeometry.GetWidth(System.Double)">
            <summary>
            Returns the width given the depth.
            </summary>
            <param name="depth">depth to calculate area for</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SectionGeometry.GetWettedPerimiter(System.Double)">
            <summary>
            Calculates the wetted perimiter for the given depth.
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Wetted perimiter for the given depth.</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SectionGeometry.GetHydraulicRadius(System.Double)">
            <summary>
            Calculates the hydraulic radius for the given depth. The method is virtual since it is
            overridden for open irregular sections.
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Hydraulic radius for the given depth</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SectionGeometry.GetConveyance(System.Double)">
            <summary>
            Calculates the conveyance for the given depth. 
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Conveyance</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SectionGeometry.GetCriticalDischarge(System.Double)">
            <summary>
            Calculates the critical flow for the given depth. The method is virtual since it is
            overridden for open irregular sections.
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Critical flow</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SectionGeometry.GetCriticalVelocityHeight(System.Double)">
            <summary>
            Calculates the critical velocity height for the given depth
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Critical velocity height</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SectionGeometry.GetVelocityHeight(System.Double,System.Double)">
            <summary>
            Calculates the Velocity height for the given depth
            </summary>
            <param name="discharge">Discharge</param>
            <param name="depth">Depth in section</param>
            <returns>Velocity height</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SectionGeometry.GetDepth(System.Int32,System.Int32)">
            <summary>
            Gets the i´th depth out of number depths. The function distibutes the depths in the Qh and hydraulic 
            parameters table. 
            </summary>
            <param name="index">0-based index</param>
            <param name="number">Number of levels in total</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SectionGeometry.OneMinusCos(System.Double)">
            <summary>
            Used for distributing levels close for arguments close to 0 and coarser for arguments 
            close to 1.
            </summary>
            <param name="arg">argument [0; 1]</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SectionGeometry.OneMinusCosSquared(System.Double)">
            <summary>
            Used for distributing levels close for arguments close to 0 and 1 and coarser for arguments 
            in between.
            </summary>
            <param name="arg">argument [0; 1]</param>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SectionGeometry.Multiplicator">
            <summary>
            Number of sections
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SectionGeometry.GeometryType">
            <summary>
            Geometry type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SectionGeometry.MaxDepth">
            <summary>
            Maximal depth of of the section.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SectionGeometry.MaxArea">
            <summary>
            Maximal area of of the section.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ISectionGeometry">
            <summary>
            Base interface for Culvert section geometries.
            <para>
            Methods in this class are used for calculating QH relations. If these
            are precalculated (from nwk11 file), these are not required.
            </para>
            <para>
            This interface contains computational methods only,
            no setup/input parameters exists in this interface.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ISectionGeometry.GetDepth(System.Int32,System.Int32)">
            <summary>
            Gets the i´th depth out of number depths. The function distibutes the depths in the Qh and hydraulic 
            parameters table. 
            </summary>
            <param name="index">0-based index</param>
            <param name="number">Number of levels in total</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ISectionGeometry.GetArea(System.Double)">
            <summary>
            Calculates the area for the given depth.
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Area for the given depth.</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ISectionGeometry.GetWidth(System.Double)">
            <summary>
            Calculates the width for the given depth.
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Width for the given depth.</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ISectionGeometry.GetWettedPerimiter(System.Double)">
            <summary>
            Calculates the wetted perimiter for the given depth.
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Wetted perimiter for the given depth.</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ISectionGeometry.GetHydraulicRadius(System.Double)">
            <summary>
            Calculates the hydraulic radius for the given depth
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Hydraulic radius for the given depth</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ISectionGeometry.GetConveyance(System.Double)">
            <summary>
            Calculates the conveyance for the given depth.
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Conveyance</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ISectionGeometry.GetCriticalDischarge(System.Double)">
            <summary>
            Calculates the critical flow for the given depth.
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Critical flow</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ISectionGeometry.GetCriticalVelocityHeight(System.Double)">
            <summary>
            Calculates the critical velocity height for the given depth
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Critical velocity height</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ISectionGeometry.GetVelocityHeight(System.Double,System.Double)">
            <summary>
            Calculates the critical velocity height for the given depth
            </summary>
            <param name="discharge">Discharge</param>
            <param name="depth">Depth in section</param>
            <returns>Critical velocity height</returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISectionGeometry.Closed">
            <summary>
            Flag indicating whether the section is open or closed. Close sections have vertical 
            walls (constant width) from the topmost point and upwards.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISectionGeometry.GeometryType">
            <summary>
            Geometry type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISectionGeometry.Multiplicator">
            <summary>
            Number of sections
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISectionGeometry.MaxDepth">
            <summary>
            Maximal depth of of the section.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISectionGeometry.MaxArea">
            <summary>
            Maximal area of the section
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CulvertSectionCircular._diameter">
            <summary>
            Inner diameter of the section.
            Unit: [m]
            Default: 0;
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionCircular.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionCircular.#ctor(System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="diameter">inner diameter</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionCircular.GetArea(System.Double)">
            <summary>
            Calculates the flow area for a given water depth. Depth is water level above invert.
            </summary>
            <param name="depth">water depth in section [m]</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionCircular.GetWidth(System.Double)">
            <summary>
            Calculates the width for a given water depth. Width is the width of the free surface and hence
            equal to dA/dh. Depth is water level above invert.
            </summary>
            <param name="depth">Water depth in section [m]</param>
            <returns>Flow width</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionCircular.GetWettedPerimiter(System.Double)">
            <summary>
            Calculates the wetted perimiter for the given depth.
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Wetted perimiter for the given depth.</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionCircular.GetDepth(System.Int32,System.Int32)">
            <summary>
            Gets the i´th depth out of number depths. The function distibutes the depths in the Qh and hydraulic 
            parameters table. 
            </summary>
            <param name="index">0-based index</param>
            <param name="number">Number of levels in total</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionCircular.GetTheta(System.Double)">
            <summary>
            Calculates theta. Origo is in the middle of the circle. Theta is calculated from  -pi/2. 
            Hence empty is 0, half filled is pi/2 and filled is pi.
            </summary>
            <param name="depth">level above invert</param>
            <returns>Half flow angle</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionCircular.IsFull(System.Double)">
            <summary>
            Decides whether cross section is full
            </summary>
            <param name="depth"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionCircular.Validate(DHI.Mike1D.StructureModule.ICulvertSectionCircular)">
            <summary>
            Validate circular section
            </summary>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionCircular.Diameter">
            <summary>
            Inner diameter of the section.
            Unit: [m]
            Default: 0;
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionCircular.MaxDepth">
            <summary>
            Maximal depth of of the section.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionCircular.MaxArea">
            <summary>
            Maximal area of the section
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.CulvertSectionCrossSection">
            <summary>
            Computation class handling a culvert geometry from cross section database.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.CulvertSectionIrregular">
            <summary>
            Computation class handling a irregular culvert section.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CulvertSectionIrregular._closed">
            <summary>
            Flag indicating wheather the culvert section is open or closed.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionIrregular.NoOfLevels">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionIrregular.Level(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionIrregular.Width(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionIrregular.WidthFromDepth(System.Double)">
            <summary>
            
            </summary>
            <param name="depth"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionIrregular.GetWidth(System.Double)">
            <summary>
            Calculates the width for a given water depth. Width is the width of the free surface and hence
            equal to dA/dh. Depth is water level above invert.
            </summary>
            <param name="depth">Water depth in section [m]</param>
            <returns>Flow width</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionIrregular.GetWettedPerimiter(System.Double)">
            <summary>
            Calculates the wetted perimiter for the given depth.
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Wetted perimiter for the given depth.</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionIrregular.GetDepth(System.Int32,System.Int32)">
            <summary>
            Gets the i´th depth out of number depths. The function distibutes the depths in the Qh and hydraulic 
            parameters table. 
            </summary>
            <param name="index">0-based index</param>
            <param name="number">Number of levels in total</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionIrregular.IsFull(System.Double)">
            <summary>
            Decides wheather
            </summary>
            <param name="depth"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionIrregular.GetHydraulicRadius(System.Double)">
            <summary>
            Calculates the hydraulic radius for the given depth
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Hydraulic radius for the given depth</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionIrregular.GetCriticalDischarge(System.Double)">
            <summary>
            Calculates the critical flow for the given depth. Overrides the base class implementation 
            for open irregular sections. For close sections the base class implementation is used.
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Critical flow</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionIrregular.GetCriticalVelocityHeight(System.Double)">
            <summary>
            Calculates the critical velocity height for the given depth. Overrides the base class implementation 
            for open irregular sections. For close sections the base class implementation is used.
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Critical velocity height</returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionIrregular.Closed">
            <summary>
            Flag indicating wheather the culvert section is open or closed.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionIrregular.MaxDepth">
            <summary>
            Maximal depth of of the section.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionCrossSection.GetArea(System.Double)">
            <summary>
            Calculates the flow area for a given water depth. Depth is water level above invert.
            </summary>
            <param name="depth">water depth in section [m]</param>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionCrossSection.GeometryCrossSectionLocation">
            <summary>
            Location of cross section data for geometry. 
            <para>
            If null, the location of the structure in the network is used (<see cref="P:DHI.Mike1D.StructureModule.IStructure.Location"/>).
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionCrossSection.GeometryCrossSectionTopoId">
            <summary>
            TopoID of cross section data for weir geometry. 
            <para>
            If null, the topo id of the structure in the network is used (<see cref="P:DHI.Mike1D.StructureModule.IStructure.TopoID"/>).
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionCrossSection.CrossSection">
            <summary>
            Cross section, set during initialize
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.Culvert">
            <summary>
            Models the flow through typically longer pipe between limiting cross sections (up- and down- stream). 
            The pipe my have any cross section geometry and may be either closed or open.
            <para>
            See <see cref="T:DHI.Mike1D.StructureModule.ICulvert"/> for parameters for setting up a culvert.
            </para>
            <para>
            The culvert such that critical flow conditions are calculated prior to calculation of the actual flow. The
            critical flow conditions are typically by activating the CalcCriticalConditions method from a 
            user interface The result of this procedure is stored as part of the culvert specification.
            See <see cref="M:DHI.Mike1D.StructureModule.Culvert.CalculateFlowConditions(System.Int32)">CalculateFreeOverFlowQhRelation</see> for more detail.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ICulvert">
            <summary>
            Models the flow through typically longer pipe between limiting cross sections (up- and down- stream). 
            The pipe my have any cross section geometry and may be either closed or open.
            
            The culvert such that critical flow conditions are calculated prior to calculation of the actual flow. The
            critical flow conditions are typically by activating the CalcCriticalConditions method from a 
            user interface The result of this procedure is stored as part of the culvert specification.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IPlotableStructure">
            <summary>
            A group of the structures supports structure plotting. Data associated with the plotting only are defined by this interface.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPlotableStructure.HorizontalOffSetFromMarker2">
            <summary>
            Horizontal offset of the structures compared to its limiting cross sections.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ICulvert.CalculateFlowConditions(System.Int32)">
            <summary>
            Call this method to produce Qh relations from culvert data.
            </summary>
            <param name="noOfLevels">No of levels to compute free overflow conditions for</param>
            <remarks>
            TODO: Needs testing, and documentation for when it can be called (needs cross sections?)
            </remarks>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvert.Length">
            <summary>
            Length of the culvert.
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvert.DownstreamInvertLevel">
            <summary>
            The invert level downstream.
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvert.HeadLossBendsNegativeFlow">
            <summary>
            Bends head loss factor for negative flow.
            Unit: []
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvert.HeadLossBendsPositiveFlow">
            <summary>
            Bends head loss factor for positive flow.
            Unit: []
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvert.HydraulicParameters">
            <summary>
            Hydraulic parameters for the given geometry.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvert.Mannings_n">
            <summary>
            Mannings n.
            Unit: [s/m^(1/3)]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvert.Multiplicator">
            <summary>
            Multiplicator or "number of culverts". Used for modelling more culverts in one go.
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvert.OrificeFlowCoefficientsNegativeFlow">
            <summary>
            Orifice flow coefficients for negative flow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvert.OrificeFlowCoefficientsPositiveFlow">
            <summary>
            Orifice flow coefficients for positive flow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvert.QhFlowtypeRelationsNegativeFlow">
            <summary>
            Q/h relations for negative flow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvert.QhFlowtypeRelationsPositiveFlow">
            <summary>
            Q/h relations for positive flow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvert.Geometry">
            <summary>
            Class describing the geometry of the culvert section
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ICulvert.UpstreamInvertLevel">
            <summary>
            The invert level upstream.
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert.UseNewCulvert">
            <summary>
            Flag specifying whether to use new or old culvert iteration procedure
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert.UpstreamExternalEnergyLevel">
            <summary>
            Flag indicating whether to use external energy level upstream, or whether to
            calculate it as part of the internal solution.
            <para>
            It is more stable to use set to true.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._upstreamInvertLevel">
            <summary>
            The invert level upstream.
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._downstreamInvertLevel">
            <summary>
            The invert level downstream.
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._length">
            <summary>
            Length of the culvert.
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._mannings_n">
            <summary>
            Mannings n.
            Unit: [s/m^(1/3)]
            Default: 0.013
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._multiplicator">
            <summary>
            Multiplicator or "number of culverts". Used for modelling more culverts in one go.
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._headLossBendsPositiveFlow">
            <summary>
            Bends head loss factor for positive flow.
            Unit: []
            Default value = 0.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._headLossBendsNegativeFlow">
            <summary>
            Bends head loss factor for negative flow.
            Unit: []
            Default value = 0.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._QhFlowtypeRelationsPositiveFlow">
            <summary>
            Q/h relations for positive flow
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._QhFlowtypeRelationsNegativeFlow">
            <summary>
            Q/h relations for negative flow
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._hydraulicParameters">
            <summary>
            Hydraulic parameters for the given geometry.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._orificeFlowCoefficientsPositiveFlow">
            <summary>
            Orifice flow coefficients for positive flow
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._orificeFlowCoefficientsNegativeFlow">
            <summary>
            Orifice flow coefficients for negative flow
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._headLossInflowPositiveFlow">
            <summary>
            Inflow head loss factor for positive flow.
            Default value = 0.5.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._headLossOutflowPositiveFlow">
            <summary>
            Outflow head loss factor for positive flow.
            Default value = 1.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._freeOutflowCorrectionCoefficientPositiveFlow">
            <summary>
            Free overflow factor for positive flow.
            Default value = 1.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._headLossInflowNegativeFlow">
            <summary>
            Inflow head loss factor for negative flow.
            Default value = 0.5.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._headLossOutflowNegativeFlow">
            <summary>
            Outflow head loss factor for negative flow.
            Default value = 1.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._freeOutflowCorrectionCoefficientNegativeFlow">
            <summary>
            Free overflow factor for negative flow.
            Default value = 1.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._structureIterationCentering">
            <summary>
            Used when making relaxation when iterating to find the subcritical solution for structures solved using the energy equation.
            When it equals 1 no relaxation is made.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._horizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._maxiumumSubmergedIterations">
            <summary>
            Maximum number of iterations allowed within the culvert flow calculations.
            Default value: 100
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._culvertSectionGeometry">
            <summary>
            Computational class, doing actual geometry computations, 
            derived from <see cref="P:DHI.Mike1D.StructureModule.Culvert.Geometry"/>, set up in 
            initialize and also if <see cref="M:DHI.Mike1D.StructureModule.Culvert.CalculateFlowConditions(System.Int32)"/>
            is called.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._invertLevel1">
            <summary>
            Help variable that holds either _upstreamInvertLevel or _downstreamInvertLevel dependend on the 
            actual flow direction.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._invertLevel2">
            <summary>
            Help variable that holds either _upstreamInvertLevel or _downstreamInvertLevel dependend on the 
            actual flow direction.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._headLossInflow">
            <summary>
            Help variable for inflow head loss factor. Used to store the either _headLossInflowPositiveFlow or 
            _headLossInflowNegativeFlow dependend on the flow direction.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._headLossOutflow">
            <summary>
            Help variable for outflow head loss factor. Used to store the either _headLossOutflowPositiveFlow or 
            _headLossOutflowNegativeFlow dependend on the flow direction.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._freeOutflowCorrectionCoefficient">
            <summary>
            Help variable for free over flow head loss factor. Used to store the either _headLossFreeOverflowPositiveFlow or 
            _headLossFreeOverflowNegativeFlow dependend on the flow direction.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._headLossBends">
            <summary>
            Help variable for bend head loss factor. Used to store the either _headLossBendsPositiveFlow or 
            _headLossInflowBendsFlow dependend on the flow direction.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._flowAreaOutflow">
            <summary>  Flow area for outflow of culvert.  </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._upstreamCrossSection">
            <summary>
            Upstream cross section data. The cros section data is the processed level, with, area.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._downstreamCrossSection">
            <summary>
            Downstream cross section data. The cros section data is the processed level, with, area.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._crossSection1">
            <summary>
            Help variable for the upstream cross section relative to the actual flow. References either 
            _upstreamCrossSection or _downstreamCrossSection dependend on the flow direction.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._crossSection2">
            <summary>
            Help variable for the downstream cross section relative to the actual flow. References either 
            _upstreamCrossSection or _downstreamCrossSection dependend on the flow direction.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._actualQhRelationTable">
            <summary>
            Q/h relations for the actual flow direction. References either _QhFlowtypeRelationsPositiveFlow or 
            _QhFlowtypeRelationsNegativeFlow dependend on the flow direction.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._actualOrificeFlowCoefficients">
            <summary>
            Orifice flow coefficients for the actual flow direction. References either 
            _orificeFlowCoefficientsPositiveFlow or _orificeFlowCoefficientsNegativeFlow
            dependent on the flow direction.
            </summary>    
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._partOfCompositeFlow">
            <summary>
            When the culvert is part of a composite structure Q1=Q2 will differ from Qs.
            Qs=Q1*_partOfCompositeFlow;
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.SetWaterLevels(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets up- and down-stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
            <param name="upstreamVelocity">Upstream water velocity [m/s]</param>
            <param name="downstreamVelocity">Downstream water velocity [m/s]</param>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._v1">
            <summary>
            Velocity estimate upstream relative to actual flow direction of the structure.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._A1">
            <summary>
            Area upstream relative to actual flow direction of the structure.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._sqrA1">
            <summary>
            Square of area upstream relative to actual flow direction of the structure.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._vw1">
            <summary>
            Wave speed upstream relative to actual flow direction of the structure.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._v2">
            <summary>
            Velocity estimate at cross section downstream (relative to actual flow direction).
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._A2">
            <summary>
            Area at cross section downstream (relative to actual flow direction).
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._sqrA2">
            <summary>
            Square of area at cross section downstream (relative to actual flow direction).
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._vw2">
            <summary>
            Wave speed at cross section downstream (relative to actual flow direction).
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._h1">
            <summary>
            Water level at cross section upstream (relative to actual flow direction)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._h2">
            <summary>
            Water level at cross section downstream (relative to actual flow direction);
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._hs1qTerm">
            <summary> Term for q in hs1 equation </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert._hs2qTerm">
            <summary> Term for q in hs2 equation </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Prepare the weir: Set the cross sections on each side of the weir.
            </summary>
            <param name="crossSectionData">Cross section data to get cross section on each side of the structure</param>
            <param name="isLinkStructure"> </param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.Prepare(DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.CalculateFlowConditions(System.Int32)">
            <summary>
            Call this method to produce Q-h relations and hydraulic parameters from culvert data.
            </summary>
            <param name="noOfLevels">No of levels to compute Q-h relations for</param>
            <remarks>
            TODO: Needs testing (for geometry of type: depth-width table and cross section), and documentation for when it can be called (needs cross sections?)
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.CulvertFlow(System.Double,System.Double)">
            <summary>
            CulvertFlow always assume <paramref name="h1"/> is larger
            than <paramref name="h2"/>, and will always produce
            a positive discharge, _q. 
            </summary>
            <param name="h1">Upstream water level</param>
            <param name="h2">Downstream water level, always smaller than h1</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.CriticalCulvertFlow(System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            Evaluates the critical flow conditions from a given water level. Table lookups in the input data.
            </summary>
            <param name="h">Upstream water level [m]</param>
            <param name="criticalDischarge">Critical discharge [m3/s]</param>
            <param name="dQCriticaldh">Discharge derivative with upstream water level</param>
            <param name="yS1Crit"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.SubmergedCulvertFlowDerivatives(System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Evaluate dqdh1 and dqdh2. Assumes hs1 and hs2 are constant.
            </summary>
            <param name="h1"></param>
            <param name="h2"></param>
            <param name="yS1Crit"></param>
            <param name="q"></param>
            <param name="dqdh1"></param>
            <param name="dqdh2"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.Evaluate(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            The system of non-linear equations [f1, f2, f3](Q, hs1, hs2)=[0, 0, 0] is solved iteratively using
            Newtons method. This method evaluates f2, f3, deltaQ, deltahs1, deltahs2 (f1 = deltaQ) for a given 
            values of h1, h2, Q, hs1 and hs2.
            The notations used in this method refers directly to the technical documentation. Upstream in the following
            refers to upstream relative to flow direction rather than to chainage.
            </summary>
            <param name="h1">Water level at the upstream cross section</param>
            <param name="h2">Water level at the downstream cross section</param>
            <param name="q">Structure discharge</param>
            <param name="hs1">Water level at the upstream culvert end</param>
            <param name="hs2">Water level at the downstream culvert end</param>
            <param name="deltaQ">Discharge residual. Out parameter.</param>
            <param name="deltahs1">.Residual for water level at upstream culvert inlet. Out parameter.</param>
            <param name="deltahs2">.Residual for water level at downstream culvert inlet Out parameter.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.Jacobian(System.Double[],System.Double[])">
            <summary>
            Calculate Jacobian.
            <para>
            Overriding default numerical Jacobian calculator, to 
            make better guess's on dQ and dhs1 and dhs2
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.NrSolve(System.Double[],System.Double[])">
            <summary>
            It is assumed that NrSolve is always called
            after a matching call to <see cref="M:DHI.Mike1D.StructureModule.Culvert.Evaluate(System.Double[],System.Double[])"/>,
            in order to reuse cached variables.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.CalculateZeta1(System.Double,System.Double)">
            <summary>
            Calculates the head loss factor from upstream cross section to culvert inlet.
            </summary>
            <param name="vstructure1">velocity at culvert inlet</param>
            <param name="v1">velocity at upstream cross section</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.CalculateZeta2(System.Double,System.Double)">
            <summary>
            Calculates the head loss factor from upstream cross section to culvert inlet.
            </summary>
            <param name="vs2">area at culvert inlet</param>
            <param name="v2">area at upstream cross section</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.GetWaterDepthAtCulvertInletForCriticalFlow(System.Double)">
            <summary>
            The QHRelations table and the HydraulicParameters table maps to one another. Hence the n´th value in the 
            HydraulicParameters maps to the n´th value in QHRelations. For closed cross sections the HydraulicParameters
            table is typically shorter than QHRelations. This reflects that the culvert is full and hence that the HydraulicParameters
            are invariant compared to their top value.
            </summary>
            <param name="upstreamWaterDepth">Depth above culvert inlet at the upstream cross section</param>
            <returns>Depth above inlet at the culvert inlet.</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.CalculateVelocity(System.Double,System.Double)">
            <summary>
            The velocity is calculated from discharge and area. The method serves as a unified way 
            of handling the zero devision problem.
            </summary>
            <param name="discharge">Discharge [^m^3/s]</param>
            <param name="area">Area [m^2]</param>
            <returns>Velocity [m/s]</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.Validate">
            <summary>
            Writes errors, warnings and hints into their respective member classes. The member objects are initially cleared.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.SolverMethod">
            <summary>
            How to solve the energy equation.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.UpstreamInvertLevel">
            <summary>
            The invert level upstream.
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.DownstreamInvertLevel">
            <summary>
            The invert level downstream.
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.Length">
            <summary>
            Length of the culvert.
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.Mannings_n">
            <summary>
            Mannings n.
            Unit: [s/m^(1/3)]
            Default: 0.013
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.Multiplicator">
            <summary>
            Multiplicator or "number of culverts". Used for modelling more culverts in one go.
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.MultiplicatorDischarge">
            <summary>
            Multiplicator or "number of culverts", that are multiplied by the discharge.
            This is set if <see cref="M:DHI.Mike1D.StructureModule.Culvert.CalculateFlowConditions(System.Int32)"/> is executed, since
            the returned tables does not take <see cref="P:DHI.Mike1D.StructureModule.Culvert.Multiplicator"/> into account.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.Geometry">
            <summary>
            The geometry of the culvert section.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.HeadLossBendsPositiveFlow">
            <summary>
            Bends head loss factor for positive flow.
            Unit: []
            Default value = 0.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.HeadLossBendsNegativeFlow">
            <summary>
            Bends head loss factor for negative flow.
            Unit: []
            Default value = 0.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.QhFlowtypeRelationsPositiveFlow">
            <summary>
            Q/h relations for positive flow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.QhFlowtypeRelationsNegativeFlow">
            <summary>
            Q/h relations for negative flow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.HydraulicParameters">
            <summary>
            Hydraulic parameters for the given geometry.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.OrificeFlowCoefficientsPositiveFlow">
            <summary>
            Orifice flow coefficients for positive flow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.OrificeFlowCoefficientsNegativeFlow">
            <summary>
            Orifice flow coefficients for negative flow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.HeadLossInflowPositiveFlow">
            <summary>
            Inflow head loss factor for positive flow.
            Default value = 0.5.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.HeadLossOutflowPositiveFlow">
            <summary>
            Outflow head loss factor for positive flow.
            Default value = 1.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.HeadLossFreeOverflowPositiveFlow">
            <summary>
            Free overflow factor for positive flow.
            Default value = 1.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.HeadLossInflowNegativeFlow">
            <summary>
            Inflow head loss factor for positive flow.
            Default value = 0.5.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.HeadLossOutflowNegativeFlow">
            <summary>
            Free overflow factor for negative flow.
            Default value = 1.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.HeadLossFreeOverflowNegativeFlow">
            <summary>
            Free overflow factor for negative flow.
            Default value = 1.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.StructureIterationCentering">
            <summary>
            Used when making relaxation when iterating to find the subcritical solution for structures solved using the energy equation.
            When it equals 1 no relaxation is made.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.HorizontalOffSetFromMarker2">
            <summary>
            Horizontal offset relative to up- and down- stream cross sections. Used when doing structure plotting.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.Delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.MaximumIterations">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.FlowAreaOutflow">
            <summary>  Flow area for outflow of culvert.  </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.UpstreamCrossSection">
            <summary>
            Upstream cross section data. The cros section data is the processed level, with, area.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.DownstreamCrossSection">
            <summary>
            Downstream cross section data. The cros section data is the processed level, with, area.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.TotalIterations">
            <summary>
            Total number of iterations in culvert structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.NonConvergedIterations">
            <summary>
            Total number of iterations in culvert structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.PartOfCompositeFlow">
            <summary>
            When the culvert is part of a composite structure Q1=Q2 will differ from Qs.
            Qs=Q1*_partOfCompositeFlow;
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.InvertLevelUpstream">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Culvert.InvertLevelDownstream">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.StructureModule.Culvert.SolverMethods">
            <summary>
            Ways to solve the energy equations in the culvert
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert.SolverMethods.SimpleIteration">
            <summary>
            Simple iteration, the traditional approach (MIKE 11)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert.SolverMethods.NRIteration">
            <summary>
            Using a Newton Raphson algorithm
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Culvert.SolverMethods.LMIteration">
            <summary>
            Using a Levember Marquardt minimization algorithm
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator">
            <summary>
            Helper class for computing culvert flow conditions, i.e.
            <list type="bullet">
            <item><see cref="P:DHI.Mike1D.StructureModule.Culvert.HydraulicParameters"/></item>
            <item><see cref="P:DHI.Mike1D.StructureModule.Culvert.QhFlowtypeRelationsPositiveFlow"/></item>
            <item><see cref="P:DHI.Mike1D.StructureModule.Culvert.QhFlowtypeRelationsNegativeFlow"/></item>
            </list>
            It may also update
            <list type="bullet">
            <item><see cref="P:DHI.Mike1D.StructureModule.Culvert.OrificeFlowCoefficientsPositiveFlow"/></item>
            <item><see cref="P:DHI.Mike1D.StructureModule.Culvert.OrificeFlowCoefficientsNegativeFlow"/></item>
            </list>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.#ctor(DHI.Mike1D.StructureModule.Culvert)">
            <summary>
            Create a new calculator, working on the specified culvert
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateFlowConditions(System.Int32)">
            <summary>
            Call this method to produce Qh relations from culvert data.
            </summary>
            <param name="noOfLevels">No of levels to compute free overflow conditions for</param>
            <remarks>
            TODO: Needs testing (for geometry of type: depth-width table and cross section), and documentation for when it can be called (needs cross sections?)
            </remarks>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.GetNumberOfLevelsFull(System.Int32)">
             <summary>
             Used by <see cref="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateFlowConditions(System.Int32)"/> only.
             
             Calculates the number of levels out of the total number of ordered qh relations that is 
             going to be used for resolving the depths where the structure area varies.
            
             For open culverts all levels results in different culvert inflow area. For a closed 
             culvert the inflow area only varies until the culvert inflow section is fully submerged.
             </summary>
             <param name="noOfLevels">Full number of Qh relations ordered by the user</param>
             <returns>no of levels used to resolve structure inflow geometry.</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.SetFirstOrificeCoefficients(System.Int32,DHI.Mike1D.StructureModule.ISectionGeometry)">
            <summary>
            Used by <see cref="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateFlowConditions(System.Int32)"/> only
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateHeadwaterFlow(System.Double,DHI.Mike1D.StructureModule.FlowDir,DHI.Mike1D.StructureModule.CulvertFlowType@,System.Boolean@)">
            <summary>
            Used by <see cref="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateFlowConditions(System.Int32)"/> only
            </summary>
            <param name="upstreamWaterLevel">Relative to invert1</param>
            <param name="flowDir"></param>
            <param name="culvertFlowType"></param>
            <param name="hasBeenFull"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.GetOrificeFlow(System.Double)">
            <summary>
            Used by <see cref="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateFlowConditions(System.Int32)"/> only
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.GetFullCulvertFlow(System.Double)">
            <summary>
            Used by <see cref="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateFlowConditions(System.Int32)"/> only
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateLargestDepth(DHI.Mike1D.StructureModule.FlowDir,System.Double)">
            <summary>
            Used by <see cref="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateFlowConditions(System.Int32)"/> only.
            
            Calculates the largest depth upstream of culvert inlet for which the qh relation should be calculates.
            </summary>
            <param name="flowDir"></param>
            <param name="largestNotFullLevel">Water level at upstream cross section</param>
            <returns>max value of ys1</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.GetUpstreamWaterLevel(System.Double,System.Double,System.Double,DHI.Mike1D.StructureModule.FlowDir,DHI.Mike1D.StructureModule.CulvertFlowType@)">
            <summary>
            Used by <see cref="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateFlowConditions(System.Int32)"/> only.
            
            Calculates the waterlevel at the actual upstream cross section. 
            </summary>
            <param name="depth">Depth in the actual inflow culvert section</param>
            <param name="criticalDischarge">Discharge</param>
            <param name="criticalVelocityHeight">critical velocity height</param>
            <param name="flowDir">Direction of flow relative to chainage</param>
            <param name="culvertFlowType">Type of culvert flow</param>
            <returns>Waterlevel at the actual upstream cross section.</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.hFullPipe(System.Double)">
            <summary>
            Used by <see cref="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateFlowConditions(System.Int32)"/> only.
            
            Calculate the water level at upstream cross section for a given flow 
            </summary>
            <param name="criticalDischarge"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateUpstreamWaterLevelFromInletDepth(System.Double,System.Double)">
            <summary>
            Used by <see cref="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateFlowConditions(System.Int32)"/> only.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.GetGeometricalSlope(DHI.Mike1D.StructureModule.FlowDir)">
            <summary>
            Used by <see cref="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateFlowConditions(System.Int32)"/> only.
            
            Calculates the slope of the culvert in the direction specified by the input argument flowDir
            </summary>
            <param name="flowDir">Direction relative to which the slope is calculated</param>
            <returns>Slope in flow direction</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateInletDepthFromCriticalOutletDepth(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Used by <see cref="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateFlowConditions(System.Int32)"/> only.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.GetVelocityHeight(System.Double,System.Double)">
            <summary>
            Used by <see cref="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateFlowConditions(System.Int32)"/> only.
            
            Calculates the velocity height given discharge and depth
            </summary>
            <param name="depth">Depth in section</param>
            <param name="discharge">discharge through section</param>
            <returns>Velocity height</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.GetEnergyHeightDerivative(System.Double,System.Double)">
            <summary>
            Used by <see cref="M:DHI.Mike1D.StructureModule.Culvert.FlowConditionsCalculator.CalculateFlowConditions(System.Int32)"/> only.
            
            Calculates the energy height derivative given discharge and depth
            </summary>
            <param name="depth">Depth in section</param>
            <param name="discharge">discharge through section</param>
            <returns>Energy height derivative</returns>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.HydraulicParameters">
            <summary>
            Table of corresponding depths, areas, hydraulic radi and conveyances.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IHydraulicParameters">
            <summary>
            Table of corresponding depths, areas, hydraulic radi and conveyances.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IHydraulicParameters.SetParameters(System.Collections.Generic.IList{DHI.Mike1D.StructureModule.IHydraulicParameterSet})">
            <summary>
            Set all hydraulic parametersets in the list. This is the only way to change the size of the list.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHydraulicParameters.Count">
            <summary>
            Number of elements in list
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHydraulicParameters.WidthAtTop">
            <summary>
             Width of cross section at top of tabulated depths and areas. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHydraulicParameters.Depths">
            <summary>
            Depths. The first depth need not be zero
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHydraulicParameters.Areas">
            <summary>
            Areas
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHydraulicParameters.Radii">
            <summary>
            Hydraulic radii
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHydraulicParameters.Conveyance">
            <summary>
            Conveyances
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HydraulicParameters.#ctor">
            <summary>
            Default empty constructor, the data lists are not initialized
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HydraulicParameters.#ctor(System.Collections.Generic.IList{DHI.Mike1D.StructureModule.IHydraulicParameterSet})">
            <summary>
            Default constructor, initializing the data lists.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HydraulicParameters.#ctor(System.Int32)">
            <summary>
            Default constructor, initializing the data lists.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HydraulicParameters.SetParameters(System.Collections.Generic.IList{DHI.Mike1D.StructureModule.IHydraulicParameterSet})">
            <summary>
            Sort and cache values for fast interpolation
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HydraulicParameters.GetArea(System.Double)">
            <summary>
            Get area of culvert geometry
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HydraulicParameters.GetAreaDerivative(System.Double)">
            <summary>
            Get area derivative of culvert geometry
            </summary>
            <param name="y">Depth in culvert</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HydraulicParameters.GetHydraulicRadiusToPower43(System.Double)">
            <summary>
            Looks up a hydraulic radius from a depth. The radius i powered to the 4/3 and returned.
            </summary>
            <param name="y">Depth in culvert</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HydraulicParameters.MoveParameterSetClosestToArea(System.Double,System.Int32@)">
            <summary>
            By interpolation the parameter set that has an area closest to fraction*max_area 
            is moved to excactly fraction*max_area.
            </summary>
            <param name="area">Area where the parameter set should be moved to</param>
            <param name="indexFull"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HydraulicParameters.Prepare">
            <summary>
            Prepare for simulation
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HydraulicParameters.Clone">
            <summary>
            Returns copy of the instance
            </summary>
            <returns>Copy of the instance</returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HydraulicParameters.Depths">
            <summary>
            Depths. The first depth need not be zero
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HydraulicParameters.Areas">
            <summary>
            Areas
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HydraulicParameters.Radii">
            <summary>
            Hydraulic radii
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HydraulicParameters.Conveyance">
            <summary>
            Conveyances
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HydraulicParameters.WidthAtTop">
            <summary>
             Width of cross section at top of tabulated depths and areas. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HydraulicParameters.Count">
            <summary>
            Number of elements in list
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.HydraulicParameterSet">
            <summary>
            Represents the "Hydraulic Parameters" table of a culvert. The table stores relations between depth at invert,
            area, radius and conveyance. The table must be kept in sync with the QhFlowtypeRelation table.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IHydraulicParameterSet">
            <summary>
            Represents the "Hydraulic Parameters" table of a culvert. The table stores relations between depth at invert,
            area, radius and conveyance. The table must be kept in sync with the QhFlowtypeRelation table.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHydraulicParameterSet.Area">
            <summary>
            Flow area for the given depth
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHydraulicParameterSet.Conveyance">
            <summary>
            Conveyance for the given depth
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHydraulicParameterSet.Radius">
            <summary>
            Hydraulic radius for the given depth
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHydraulicParameterSet.Y">
            <summary>
            Depth above invert
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.HydraulicParameterSet._y">
            <summary>
            Depth above invert
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.HydraulicParameterSet._area">
            <summary>
            Flow area for the given depth
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.HydraulicParameterSet._radius">
            <summary>
            Hydraulic radius for the given depth
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.HydraulicParameterSet._conveyance">
            <summary>
            Conveyance for the given depth
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HydraulicParameterSet.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HydraulicParameterSet.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="y">Depth at culvert invert.</param>
            <param name="area">Area in culvert corresponding to depth.</param>
            <param name="radius">Hydraulic radius in culvert corresponding to depth.</param>
            <param name="conveyance">Conveyance in culvert corresponding to depth.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HydraulicParameterSet.CompareTo(DHI.Mike1D.StructureModule.IHydraulicParameterSet)">
            <summary>
            Enables depth sorting.
            </summary>
            <param name="obj"></param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HydraulicParameterSet.Y">
            <summary>
            Depth above invert
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HydraulicParameterSet.Area">
            <summary>
            Flow area for the given depth
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HydraulicParameterSet.Radius">
            <summary>
            Hydraulic radius for the given depth
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HydraulicParameterSet.Conveyance">
            <summary>
            Conveyance for the given depth
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HydraulicParameterSet.ExtensionData">
            <summary>
            Property used by (de)serializer, when it can not find proper target for
            a data field. Support of forward compatible data contracts. 
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IOrificeFlowCoefficients">
            <summary>
            Table of orifice flow coefficients for culvert specification.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IOrificeFlowCoefficients.SetParameters(System.Collections.Generic.IList{DHI.Mike1D.StructureModule.IOrificeFlowCoefficientSet})">
            <summary>
            Set all hydraulic parametersets in the list.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IOrificeFlowCoefficients.Add(DHI.Mike1D.StructureModule.IOrificeFlowCoefficientSet)">
            <summary>
            Method to add one or more coefficients to end of list.
            Use with care, since it is an O(n) operation.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOrificeFlowCoefficients.Count">
            <summary>
            Number of coefficients
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOrificeFlowCoefficients.Item(System.Int32)">
            <summary>
            Get/set a coefficient set at the specified index
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IOrificeFlowCoefficientSet">
            <summary>
            Orifice flow coefficients for one water level. Part of culvert input specification.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOrificeFlowCoefficientSet.YOverD">
            <summary>
            Depth non dimensionalized with diameter for circular sections.
            Unit: []
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOrificeFlowCoefficientSet.Coefficient">
            <summary>
            Flow coefficient
            Unit: []
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IQhFlowTypeRelation">
            <summary>
            Relation between depth, critical and flow type.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IQhFlowTypeRelation.CriticalDischarge">
            <summary>
            Critical discharge;
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IQhFlowTypeRelation.FlowType">
            <summary>
            Type of flow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IQhFlowTypeRelation.Y">
            <summary>
            Depth above the inlet at the actual upstream (i.e. upstream relative to actual flow direction) cross section.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IQhFlowtypeRelations">
            <summary>
            Represents a table that ties water depth above culvert inlet at upstream cross section to 
            critical discharge and flow type.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IQhFlowtypeRelations.SetParameters(System.Collections.Generic.IList{DHI.Mike1D.StructureModule.IQhFlowTypeRelation})">
            <summary>
            Set all hydraulic parametersets in the list.  This is the only way to change the size of the list.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IQhFlowtypeRelations.Count">
            <summary>
            Number of coefficients
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IQhFlowtypeRelations.Item(System.Int32)">
            <summary>
            Get/set a coefficient set at the specified index
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IQhFlowtypeRelations.Depths">
            <summary>
            Gets all the Levels of the collection. The array of depths are depth above the inlet at the 
            upstream cross section.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.OrificeFlowCoefficients">
            <summary>
            Table of orifice flow coefficients for culvert specification.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OrificeFlowCoefficients.SetParameters(System.Collections.Generic.IList{DHI.Mike1D.StructureModule.IOrificeFlowCoefficientSet})">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OrificeFlowCoefficients.#ctor">
            <summary>
            Empty constructory
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OrificeFlowCoefficients.#ctor(DHI.Mike1D.StructureModule.IOrificeFlowCoefficients)">
            <summary>
            Copy constructor, transferring data from general interface
            to this object
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OrificeFlowCoefficients.Add(DHI.Mike1D.StructureModule.IOrificeFlowCoefficientSet)">
            <summary>
            Method to add one or more coefficients to end of list.
            Use with care, since it is an O(n) operation.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OrificeFlowCoefficients.GetCoefficient(System.Double)">
            <summary>
            Get the flow coefficint using inter- or extrapolation.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OrificeFlowCoefficients.Count">
            <summary>
            Number of coefficients
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OrificeFlowCoefficients.YOverDs">
            <summary>
            Gets all the YOverDs of the collection.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OrificeFlowCoefficients.Coefficients">
            <summary>
            Gets all the coefficients of the collection.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OrificeFlowCoefficients.Item(System.Int32)">
            <summary>
            Get/set a coefficient set at the specified index
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.OrificeFlowCoefficientSet">
            <summary>
            Orifice flow coefficients for one water level. Part of culvert input specification.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OrificeFlowCoefficientSet._yOverD">
            <summary>
            Depth non dimensionalized with diameter for circular sections.
            Unit: []
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OrificeFlowCoefficientSet._coefficient">
            <summary>
            Flow coefficient
            Unit: []
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OrificeFlowCoefficientSet.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OrificeFlowCoefficientSet.#ctor(System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="yOverD"></param>
            <param name="coefficient"></param>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OrificeFlowCoefficientSet.YOverD">
            <summary>
            Depth non dimensionalized with diameter for circular sections.
            Unit: []
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OrificeFlowCoefficientSet.Coefficient">
            <summary>
            Flow coefficient
            Unit: []
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OrificeFlowCoefficientSet.ExtensionData">
            <summary>
            Property used by (de)serializer, when it can not find proper target for
            a data field. Support of forward compatible data contracts. 
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.CulvertFlowType">
            <summary>
            Enumeration for clasification of culvert flow types.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CulvertFlowType.NoFlow">
            <summary>
            No flow through culvert. Occurs for y =0 and for when 
            the valve regulation flag prohibits flow in one or two directions.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CulvertFlowType.CriticalAtInlet">
            <summary>
            The flow is critical at the culvert inlet.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CulvertFlowType.CriticalAtOutlet">
            <summary>
            The flow is critical at the culvert outlet. A backwater curve using a fine
            resolution is calculated to relate the discharge to the upstream water level 
            in the river.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CulvertFlowType.Orifice">
            <summary>
            The flow at the culvert inlet has an orifice type formation. 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CulvertFlowType.Full">
            <summary>
            The culvert is fully wet with a free discharge at the outlet.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.QhFlowtypeRelation">
            <summary>
            Relation between depth, critical and flow type.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.QhFlowtypeRelation._y">
            <summary>
            Depth above the inlet at the actual upstream (i.e. upstream relative to actual flow direction) cross section.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.QhFlowtypeRelation._criticalDischarge">
            <summary>
            Critical discharge;
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.QhFlowtypeRelation._flowType">
            <summary>
            Type of flow
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.QhFlowtypeRelation.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.QhFlowtypeRelation.#ctor(System.Double,System.Double,DHI.Mike1D.StructureModule.CulvertFlowType)">
            <summary>
            Constructor.
            </summary>
            <param name="y">depth. Level above invert.</param>
            <param name="criticalDischarge">critical discharge</param>
            <param name="flowType">flow type</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.QhFlowtypeRelation.CompareTo(DHI.Mike1D.StructureModule.IQhFlowTypeRelation)">
            <summary>
            Allows the QhFlowtypeRelation table to be sorted after depth.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.QhFlowtypeRelation.Clone">
            <summary>
            Returns a copy of the instance
            </summary>
            <returns>Copy of instance</returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.QhFlowtypeRelation.Y">
            <summary>
            Depth above inlet
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.QhFlowtypeRelation.CriticalDischarge">
            <summary>
            Critical discharge;
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.QhFlowtypeRelation.FlowType">
            <summary>
            Type of flow
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.QhFlowtypeRelation.ExtensionData">
            <summary>
            Property used by (de)serializer, when it can not find proper target for
            a data field. Support of forward compatible data contracts. 
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.QhFlowtypeRelations">
            <summary>
            Represents a table that ties water depth above culvert inlet at upstream cross section to 
            critical discharge and flow type.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.QhFlowtypeRelations.#ctor(System.Collections.Generic.IList{DHI.Mike1D.StructureModule.IQhFlowTypeRelation})">
            <summary>
            Constructor
            </summary>
            <param name="qhFlowtypeRelationList"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.QhFlowtypeRelations.#ctor(DHI.Mike1D.StructureModule.IQhFlowtypeRelations)">
            <summary>
            Copy constructor, transferring data from general interface
            to this object
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.QhFlowtypeRelations.SetParameters(System.Collections.Generic.IList{DHI.Mike1D.StructureModule.IQhFlowTypeRelation})">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.QhFlowtypeRelations.GetCriticalDischarge(System.Double)">
            <summary>
            Looks up a critical discharge from a depth.
            </summary>
            <param name="y">Depth above the inlet at the upstream cross section</param>
            <returns>Critical discharge</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.QhFlowtypeRelations.GetCriticalDischargeDerivative(System.Double)">
            <summary>
            Gets all critical discharge derivative.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.QhFlowtypeRelations.Validate">
            <summary>
            Validates the data. The constraints are that the levels and the areas after sorting must be monotonically increasing.
            </summary>
            <returns>String that descripes the problem.</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.QhFlowtypeRelations.Validate(DHI.Mike1D.StructureModule.IQhFlowtypeRelations)">
            <summary>
            Validates the data. The constraints are that the levels and the critical discharges after sorting must be monotonically increasing.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.QhFlowtypeRelations.Clone">
            <summary>
            Returns copy of the instance
            </summary>
            <returns>Copy of the instance</returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.QhFlowtypeRelations.Count">
            <summary>
            Number of coefficients
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.QhFlowtypeRelations.Item(System.Int32)">
            <summary>
            Get/set a coefficient set at the specified index
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.QhFlowtypeRelations.Depths">
            <summary>
            Gets all the Levels of the collection. The array of depths are depth above the inlet at the 
            upstream cross section.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.QhFlowtypeRelations.CriticalDischarges">
            <summary>
            Gets all the critical discharges
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.QhFlowtypeRelations.FlowTypes">
            <summary>
            Gets all the flow types
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.CulvertSectionRectangular">
            <summary>
            Computation class handling a rectangular culvert section.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CulvertSectionRectangular._width">
            <summary>
            Width of the section.
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CulvertSectionRectangular._height">
            <summary>
            Height of the section;
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CulvertSectionRectangular._closed">
            <summary>
            Flag indicating wheather the culvert section is open or closed.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionRectangular.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionRectangular.#ctor(System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="width">inner width</param>
            <param name="height">inner height</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionRectangular.GetArea(System.Double)">
            <summary>
            Calculates the flow area for a given water depth. Depth is water level above invert.
            </summary>
            <param name="depth">Water depth in section [m]</param>
            <returns>Flow area</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionRectangular.GetWidth(System.Double)">
            <summary>
            Calculates the width for a given water depth. Width is the width of the free surface and hence
            equal to dA/dh. Depth is water level above invert.
            </summary>
            <param name="Depth">Water depth in section [m]</param>
            <returns>Flow width</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionRectangular.GetWettedPerimiter(System.Double)">
            <summary>
            Calculates the wetted perimiter for the given depth.
            </summary>
            <param name="depth">Depth in section</param>
            <returns>Wetted perimiter for the given depth.</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionRectangular.GetDepth(System.Int32,System.Int32)">
            <summary>
            Gets the i´th depth out of number depths. The function distibutes the depths in the Qh and hydraulic 
            parameters table. 
            </summary>
            <param name="index">0-based index</param>
            <param name="number">Number of levels in total</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionRectangular.IsFull(System.Double)">
            <summary>
            Decides wheather
            </summary>
            <param name="depth"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionRectangular.Validate(DHI.Mike1D.StructureModule.ICulvertSectionRectangular)">
            <summary>
            Validate rectangular section
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionRectangular.Width">
            <summary>
            Width of the section.
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionRectangular.Height">
            <summary>
            Height of the section;
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionRectangular.Closed">
            <summary>
            Flag indicating wheather the culvert section is open or closed.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionRectangular.MaxDepth">
            <summary>
            Maximal depth of of the section.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionRectangular.MaxArea">
            <summary>
            Maximal area of the section
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.CulvertSectionTypes">
            <summary>
            Enumeration indicating what flow regime the solution is in.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CulvertSectionTypes.Rectangular">
            <summary>
            Geometry specified from depth and width
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CulvertSectionTypes.Circular">
            <summary>
            Geometry specified from diameter
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CulvertSectionTypes.IrregularLevelWidth">
            <summary>
            Level width data given. Look up made using WidthFromDepth where the Level data 
            are subtracted the smallest level of the collection.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CulvertSectionTypes.IrregularDepthWidth">
            <summary>
            Depth width data given. 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CulvertSectionTypes.CrossSection">
            <summary>
            Level width data given. Data are syncronized with data from Cross section collection.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.CulvertSectionTable">
            <summary>
            Computation class handling a tabulated culvert section.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CulvertSectionTable._geometryType">
            <summary>
            Geometry type.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.CulvertSectionTable._levelWidths">
            <summary>
            Level width data. Lookups are always made using WidthFromDepth so no need for distingtion between 
            depth/width data and level/width data is needed.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionTable.#ctor(DHI.Mike1D.StructureModule.CulvertSectionTypes)">
            <summary>
            Constructor
            </summary>
            <param name="sectionGeometryType"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionTable.GetArea(System.Double)">
            <summary>
            Calculates the flow area for a given water depth. Depth is water level above invert.
            </summary>
            <param name="depth">water depth in section [m]</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.CulvertSectionTable.Validate(DHI.Mike1D.StructureModule.ICulvertSectionTable)">
            <summary>
            Validate TableSection and LevelWidth data
            </summary>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionTable.Data">
            <summary>
            Level width data. Lookups are always made using WidthFromDepth so no need for distingtion between 
            depth/width data and level/width data is needed.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionTable.MaxDepth">
            <summary>
            Maximal depth of of the section.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.CulvertSectionTable.MaxArea">
            <summary>
            Maximal area of the section
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.FindBridge">
            <summary>
            Bridge that wraps the nwk11 bridge and reads and writes all structure data to and from file.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IOwnBridge">
            <summary>
            Bridge that wraps the nwk11 bridge and reads and writes all structure data to and from file.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IOwnBridge.Open(DHI.Mike1D.Generic.Diagnostics)">
            <summary>
            Reads in the FilePath and populates the _structureCollection.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOwnBridge.FilePath">
            <summary>
            Name of the file to read/write
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FindBridge._nwk11StructureBridge">
            <summary>
            
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FindBridge._filePath">
            <summary>
            Section pointer to the section that includes the structure sections
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.FindBridge.#ctor(DHI.Mike1D.StructureModule.IStructureCollection)">
            <summary>
            Constructor. The constructor sets a reference to the structure collection that aggregates
            the list of structures filled by the bridge. 
            </summary>
            <param name="StructureCollect">Reference to the Structure collection</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.FindBridge.Open(DHI.Mike1D.Generic.Diagnostics)">
            <summary>
            Reads in the _filePath and populates the _structureCollection.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.FindBridge.FilePath">
            <summary>
            File path of input file
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.OwnBridge">
            <summary>
            Bridge that wraps the nwk11 bridge and reads and writes all structure data to and from file.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OwnBridge._filePath">
            <summary>
            Section pointer to the section that includes the structure sections
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OwnBridge.#ctor(DHI.Mike1D.StructureModule.IStructureCollection)">
            <summary>
            Constructor. The constructor sets a reference to the structure collection that aggregates
            the list of structures filled by the bridge. 
            </summary>
            <param name="StructureCollect">Reference to the Structure collection</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OwnBridge.Open(DHI.Mike1D.Generic.Diagnostics)">
            <summary>
            Reads in the _filePath and populates the _structureCollection.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OwnBridge.FilePath">
            <summary>
            
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.DHI_Mike1D_StructureModule">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DHI_Mike1D_StructureModule.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DHI_Mike1D_StructureModule.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DHI_Mike1D_StructureModule.Bridge">
            <summary>
              Looks up a localized string similar to Bridge: .
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.DHI_Mike1D_StructureModule.unknown">
            <summary>
              Looks up a localized string similar to  unknown.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.EnergyLoss">
            <summary>
            Calculation of the flow at energy loss structures.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IEnergyLoss">
            <summary>
            Energy loss structure interface
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IEnergyLoss.AbruptAlignmentChange">
            <summary>
            Angle in degress describing abrupt change in river alignment
            Type: angle
            Unit: [degress]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IEnergyLoss.GradualAlignmentChange">
            <summary>
            Angle in degress describing gradual change in river alignment
            Type: angle
            Unit: [degress]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IEnergyLoss.Roughness">
            <summary>
            Roughness for gradual change in river alignment
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IEnergyLoss.PosUserDefined">
            <summary>
            Energy loss coefficient for positive flow at user defined energy losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IEnergyLoss.NegUserDefined">
            <summary>
            Energy loss coefficient for negative flow at user defined energy losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IEnergyLoss.PosContraction">
            <summary>
            Energy loss coefficient for positive flow at flow contraction losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IEnergyLoss.NegContraction">
            <summary>
            Energy loss coefficient for negative flow at flow contraction losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IEnergyLoss.PosExpansion">
            <summary>
            Energy loss coefficient for positive flow at flow expansion losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IEnergyLoss.NegExpansion">
            <summary>
            Energy loss coefficient for negative flow at flow expansion losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IEnergyLoss.UseAbruptChange">
            <summary>
            Flag telling if there is energy loss due to an abrupt change in river alingment
            Type: boolean
            Unit: [m]
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IEnergyLoss.UseGradualChange">
            <summary>
            Flag telling if there is energy loss due to a gradual change in river alingment
            Type: boolean
            Unit: [m]
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IEnergyLoss.UseUserDefined">
            <summary>
            Flag telling if there is an user defined energy loss
            Type: boolean
            Unit: [m]
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IEnergyLoss.UseContractionLoss">
            <summary>
            Flag telling if there is an energy loss due to a contraction
            Type: boolean
            Unit: [m]
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IEnergyLoss.UseExpansionLoss">
            <summary>
            Flag telling if there is an energy loss due to a expansion
            Type: boolean
            Unit: [m]
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IEnergyLoss.FrictionFactor">
            <summary>
            Frictionfactor used to calculate the energy loss caused by ordinary friction.
            Type: Dimensional factor
            Unit: [s2/m6]
            Default: 0.001
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IEnergyLoss.MinimumHeadloss">
            <summary>
            Minimum head loss across a structure.
            Default value = 0.01
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss.CONVERGENCE_CRITERIA">
            <summary>
            Discharge iteration tolerance.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss.MAX_NUMBER_OF_ITERATIONS">
            <summary>
            Maximum number of iterations allowed when the two nonlinear energy equations are solved iteratively
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._abruptAlignmentChange">
            <summary>
            Angle in degress describing abrupt change in river alignment
            Type: angle
            Unit: [degress]
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._gradualAlignmentChange">
            <summary>
            Angle in degress describing gradual change in river alignment
            Type: angle
            Unit: [degress]
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._roughness">
            <summary>
            Roughness for gradual change in river alignment
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._posUserDefined">
            <summary>
            Energy loss coefficient for positive flow at user defined energy losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._negUserDefined">
            <summary>
            Energy loss coefficient for negative flow at user defined energy losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._posContraction">
            <summary>
            Energy loss coefficient for positive flow at flow contraction losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._negContraction">
            <summary>
            Energy loss coefficient for negative flow at flow contraction losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._posExpansion">
            <summary>
            Energy loss coefficient for positive flow at flow expansion losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._negExpansion">
            <summary>
            Energy loss coefficient for negative flow at flow expansion losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._useAbruptChange">
            <summary>
            Flag telling if there is energy loss due to an abrupt change in river alingment
            Type: boolean
            Default: false
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._useGradualChange">
            <summary>
            Flag telling if there is energy loss due to a gradual change in river alingment
            Type: boolean
            Default: false
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._useUserDefined">
            <summary>
            Flag telling if there is an user defined energy loss
            Type: boolean
            Default: false
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._useContractionLoss">
            <summary>
            Flag telling if there is an energy loss due to a contraction
            Type: boolean
            Default: false
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._useExpansionLoss">
            <summary>
            Flag telling if there is an energy loss due to a expansion
            Type: boolean
            Default: false
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._frictionFactor">
            <summary>
            Frictionfactor used to calculate the energy loss caused by ordinary friction.
            Type: Dimensional factor
            Unit: [s2/m6]
            Default: 0.001 TODO: Does not match actual default value!!!
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._minimumHeadloss">
            <summary>
            Minimum head loss across a structure.
            Default value = 0.01
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._horizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            Unit: [m]
            Defualt: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss._partOfCompositeFlow">
            <summary>
            When the energy loss structure is part of a composite structure Q1=Q2 will differ from Qs.
            Qs=Q1*_partOfCompositeFlow;
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss.SolverMethod">
            <summary>
            Solution method for solving the energy equations
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss.UseQCrit">
            <summary>
            Flag for the NR solver
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.EnergyLoss.#ctor">
            <summary>
            Constructor method for the energy losss
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.EnergyLoss.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Prepare the weir: Set the cross sections on each side of the weir.
            </summary>
            <param name="crossSectionData">Cross section data to get cross section on each side of the structure</param>
            <param name="isLinkStructure"> </param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.EnergyLoss.Prepare(DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.EnergyLoss.SetWaterLevels(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets up- and down-stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
            <param name="upstreamVelocity">Upstream water velocity [m/s]</param>
            <param name="downstreamVelocity">Downstream water velocity [m/s]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.EnergyLoss.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.EnergyLoss.FlowAtEnergyLossStructure(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This procedure caluclates the flow at the enrgyloss structure by iterative solution of the energy equation.
            Further it calculates the derivation of the flow with respect to both up- and downstream water level.
            </summary>
            <param name="upsH">Upstream water level</param>
            <param name="dwsH">Downstream water level</param>
            <param name="upsVel">Upstream water velocity [m/s]</param>
            <param name="dwsVel">Downstream water velocity [m/s]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.EnergyLoss.CalculateDerivative(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This function calculates the derivative of the flow with respect to the upstream water level
            </summary>
            <param name="upA">Upstream area</param>
            <param name="dwA">Downstream area</param>
            <param name="sA">Structure area</param>
            <param name="ZFull">Total energy loss coeffcient</param>
            <param name="head">The water level difference across the structure</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.EnergyLoss.AreaAtStructure(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculation of the area at the energy loss structure
            </summary>
            <param name="level">Level at structure</param>
            <param name="upsTheta">Fraction of distance upstream of structure</param>
            <param name="upsA">Upstream area</param>
            <param name="dwsA">Downstream area</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.EnergyLoss.StorageWidthAtStructure(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculation of the area at the energy loss structure
            </summary>
            <param name="level">Level at structure</param>
            <param name="upsTheta">Fraction of distance upstream of structure</param>
            <param name="upsB">Upstream storage width</param>
            <param name="dwsB">Downstream storage width</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.EnergyLoss.Velocity(System.Double,System.Double)">
            <summary>
            This function caluates the velocity by dividing the discharge with the area. If the area equals zero the function returns zero.
            </summary>
            <param name="Flow">Discharge</param>
            <param name="Area">Area</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.EnergyLoss.ContractionCoefficient(System.Double,System.Double)">
            <summary>
            This function calculates the part of the total energy loss coefficient that originates from a contraction
            </summary>
            <param name="A1">Area after contraction</param>
            <param name="A2">Area before contraction</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.EnergyLoss.ExpansionCoefficient(System.Double,System.Double)">
            <summary>
            This function calculates the part of the total energy loss coefficient thaqt originates from a expansion.
            </summary>
            <param name="A1">Area before expansion</param>
            <param name="A2">Area after expansion</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.EnergyLoss.CalculateLossCoefficients(System.Double,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            This procedure calculates the total energy loss coefficient. Further,the loss coefficent valid for the 
            section upstream of the structure and the coeffcient valid for the section downstream of the structure is calculated.
            </summary>
            <param name="upsTheta">Distance from upstream cross section to the structure relative to the total distance between up- and downstream cross section</param>
            <param name="bFirstContraction">Flagg telling if there is a contraction between the upstream section and the structure</param>
            <param name="blastExpansion">Flagg telling if there is an expansion the structure and the downstream section</param>
            <param name="structureArea">Area at the structure</param>
            <param name="upsA">Upstream area</param>
            <param name="dwsA">Downstream area</param>
            <param name="structureLevel">Water level in structure</param>
            <param name="fullZeta">Total energy loss coefficient</param>
            <param name="upsZeta">Loss coefficient valid for the upstream section</param>
            <param name="dwsZeta">Loss coefficient valid for the downstream section</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.EnergyLoss.Validate">
            <summary>
            Validation of data for a energy loss structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.AbruptAlignmentChange">
            <summary>
            Angle in degress describing abrupt change in river alignment
            Type: angle
            Unit: [degress]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.GradualAlignmentChange">
            <summary>
            Angle in degress describing gradual change in river alignment
            Type: angle
            Unit: [degress]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.Roughness">
            <summary>
            Roughness for gradual change in river alignment
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.PosUserDefined">
            <summary>
            Energy loss coefficient for positive flow at user defined energy losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.NegUserDefined">
            <summary>
            Energy loss coefficient for negative flow at user defined energy losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.PosContraction">
            <summary>
            Energy loss coefficient for positive flow at flow contraction losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.NegContraction">
            <summary>
            Energy loss coefficient for negative flow at flow contraction losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.PosExpansion">
            <summary>
            Energy loss coefficient for positive flow at flow expansion losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.NegExpansion">
            <summary>
            Energy loss coefficient for negative flow at flow expansion losses
            Type: Dimensional factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.UseAbruptChange">
            <summary>
            Flag telling if there is energy loss due to an abrupt change in river alingment
            Type: boolean
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.UseGradualChange">
            <summary>
            Flag telling if there is energy loss due to a gradual change in river alingment
            Type: boolean
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.UseUserDefined">
            <summary>
            Flag telling if there is an user defined energy loss
            Type: boolean
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.UseContractionLoss">
            <summary>
            Flag telling if there is an energy loss due to a contraction
            Type: boolean
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.UseExpansionLoss">
            <summary>
            Flag telling if there is an energy loss due to a expansion
            Type: boolean
            Default: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.FrictionFactor">
            <summary>
            Frictionfactor used to calculate the energy loss caused by ordinary friction.
            Type: Dimensional factor
            Unit: [s2/m6]
            Default: 0.001
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.MinimumHeadloss">
            <summary>
            Minimum head loss across a structure.
            Default value = 0.01
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.Delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.HorizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            Unit: [m]
            Defualt: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.PartOfCompositeFlow">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.WaterLevel">
            <summary>
            Water level at the structure
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.UpstreamCrossSection">
            <summary>
            Upstream cross section data. The cross section data is the processed level, with, area.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.DownstreamCrossSection">
            <summary>
            Downstream cross section data. The cross section data is the processed level, with, area.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.StructureCrossSection">
            <summary>
            Structure cross section data. The cross section data is the processed level, with, area.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.InvertLevelUpstream">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.EnergyLoss.InvertLevelDownstream">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.StructureModule.EnergyLoss.EnergyLossSolverMethod">
            <summary>
            Solver methods for the energyloss structure.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss.EnergyLossSolverMethod.Mike11Iteration">
            <summary> Iteration similar to the one used in MIKE 11 </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss.EnergyLossSolverMethod.SolveQh">
            <summary> Solve Q-h equations </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss.EnergyLossSolverMethod.SolveVh">
            <summary> Solve V-h equations </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss.EnergyLossSolverMethod.SolveQhImpl">
            <summary> Solve Q-h equations, implicit approach </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.EnergyLoss.EnergyLossSolverMethod.SolveVhImpl">
            <summary> Solve V-h equations, implicit approach </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ExtendedHonmaWeir">
            <summary>
            Describes flow through a weir with and a set of formulas that is an extension of the formulas used 
            for the <see cref="T:DHI.Mike1D.StructureModule.IHonmaWeir">HonmaWeir</see>.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IExtendedHonmaWeir">
            <summary>
            Describes flow through a weir with and a set of formulas that is an extension of the formulas used 
            for the <see cref="T:DHI.Mike1D.StructureModule.IHonmaWeir">HonmaWeir</see>.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IExtendedHonmaWeir.Alpha">
            <summary>
            Imperfect overflow parameter.
            Unit: []
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IExtendedHonmaWeir.Beta">
            <summary>
            Imperfect overflow parameter.
            Unit: []
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IExtendedHonmaWeir.CoefficientA">
            <summary>
            Perfect overflow parameter.
            Unit: []
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IExtendedHonmaWeir.CoefficientB">
            <summary>
            Perfect overflow parameter.
            Unit: []
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IExtendedHonmaWeir.CoefficientP">
            <summary>
            Perfect overflow parameter.
            Unit: []
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IExtendedHonmaWeir.CoefficientQ">
            <summary>
            Imperfect overflow parameter.
            Unit: []
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IExtendedHonmaWeir.CoefficientR">
            <summary>
            Submerged overflow parameter.
            Unit: []
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IExtendedHonmaWeir.CrestHeight">
            <summary>
            Height at crest
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IExtendedHonmaWeir.CrestLevel">
            <summary>
            Crest level
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IExtendedHonmaWeir.CrestWidth">
            <summary>
            Width at crest
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IExtendedHonmaWeir.Delta">
            <summary>
            Submerged overflow parameter.
            Unit: []
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IExtendedHonmaWeir.Gamma">
            <summary>
            Submerged overflow parameter.
            Unit: []
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IExtendedHonmaWeir.hdhu_P">
            <summary>
            Perfect overflow parameter
            Unit: []
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IExtendedHonmaWeir.hdhu_S">
            <summary>
            Submerged overflow parameter.
            Unit: []
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ExtendedHonmaWeir._crestWidth">
            <summary>
            Width at crest
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ExtendedHonmaWeir._crestHeight">
            <summary>
            Height at crest
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ExtendedHonmaWeir._crestLevel">
            <summary>
            Crest level
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ExtendedHonmaWeir._hdhu_P">
            <summary>
            Perfect overflow parameter
            Unit: []
            Default: 0.6
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ExtendedHonmaWeir._coefficientA">
            <summary>
            Perfect overflow parameter
            Unit: []
            Default: 1.02
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ExtendedHonmaWeir._coefficientB">
            <summary>
            Perfect overflow parameter
            Unit: []
            Default: 1.37
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ExtendedHonmaWeir._coefficientP">
            <summary>
            Perfect overflow parameter
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ExtendedHonmaWeir._alpha">
            <summary>
            Imperfect overflow parameter
            Unit: []
            Default: 0.03
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ExtendedHonmaWeir._beta">
            <summary>
            Imperfect overflow parameter
            Unit: []
            Default: 1.018
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ExtendedHonmaWeir._coefficientQ">
            <summary>
            Imperfect overflow parameter
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ExtendedHonmaWeir._gamma">
            <summary>
            Submerged overflow parameter
            Unit: []
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ExtendedHonmaWeir._delta">
            <summary>
            Submerged overflow parameter
            Unit: []
            Default: 2.6
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ExtendedHonmaWeir._coefficientR">
            <summary>
            Submerged overflow parameter
            Unit: []
            Defautlt: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ExtendedHonmaWeir._hdhu_S">
            <summary>
            Submerged overflow parameter
            Unit: []
            Default: 0.7
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ExtendedHonmaWeir._horizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ExtendedHonmaWeir._delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.#ctor">
            <summary>
            Contructor. Sets the default values.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.HonmaExtWeirFlow(System.Double,System.Double)">
            <summary>
            Evaluate extended honma formula
            </summary>
            <param name="x">Upstream depth above crest</param>
            <param name="y">Downstream depth above crest</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.CrestWidth">
            <summary>
            Width at crest.
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.CrestHeight">
            <summary>
            Height at crest.
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.CrestLevel">
            <summary>
            Crest level.
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.hdhu_P">
            <summary>
            Perfect overflow parameter.
            Unit: []
            Default: 0.6
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.CoefficientA">
            <summary>
            Perfect overflow parameter.
            Unit: []
            Default: 1.02
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.CoefficientB">
            <summary>
            Perfect overflow parameter.
            Unit: []
            Default: 1.37
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.CoefficientP">
            <summary>
            Perfect overflow parameter.
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.Alpha">
            <summary>
            Imperfect overflow parameter.
            Unit: []
            Default: 0.03
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.Beta">
            <summary>
            Imperfect overflow parameter.
            Unit: []
            Default: 1.018
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.CoefficientQ">
            <summary>
            Imperfect overflow parameter.
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.Gamma">
            <summary>
            Submerged overflow parameter.
            Unit: []
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.Delta">
            <summary>
            Submerged overflow parameter.
            Unit: []
            Default: 2.6
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.CoefficientR">
            <summary>
            Submerged overflow parameter.
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.hdhu_S">
            <summary>
            Submerged overflow parameter.
            Unit: []
            Default: 0.7
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.HorizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.Delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.InvertLevelUpstream">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ExtendedHonmaWeir.InvertLevelDownstream">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.StructureModule.GateTools">
            <summary>
            
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.GateTools.GetHeadDifferenceToUseForDwsSubmergedFlow(System.Boolean,System.Double,System.Double,System.Double)">
            <summary>
            Finds which downstream water level to use for submerged flow calculation. The result depends
            on whether the actual downstream water level is within the transition zone or not.
            </summary>
            <param name="transitionZone">Boolean variable telling if we are in the transition zone</param>
            <param name="topLimit">Upper limit of the transition zone</param>
            <param name="upsWL">Water level upstream of the structure</param>
            <param name="dwsWL">Water level downstream of the structure</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.GateTools.GetUpstreamHead(System.Boolean,System.Double,System.Double,System.Double)">
            <summary>
            If the upstream water level is within the transition flow the lower limit for the 
            transition zone is returned. Otherwise the upstream water level is returned.
            </summary>
            <param name="transitionZone">Flag telling if upstream water level is within the transition zone</param>
            <param name="limit">Lower limit of the transition zone</param>
            <param name="upsWL">Upstream water level</param>
            <param name="dwsWL">Downstream water level</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.GateTools.GetTransitionFlowFactor(System.Double,System.Double,System.Double)">
            <summary>
            Returns a value betwwen 0 and 1. 1 if water level is above upper limit
             and zero if water level is below lower limit. In between linear interpolation is used.
            </summary>
            <param name="highLim">Upper limit of transition zone</param>
            <param name="lowLim">Lower limit for transition zone</param>
            <param name="WL">Water level</param>
            <returns>Transition zone factor</returns>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.FlowRegimeTypes">
            <summary>
            Enumeration indicating what flow regime the solution is in.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FlowRegimeTypes.Critical">
            <summary>
            The solution does not depend on the downstream water level
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FlowRegimeTypes.Submerged">
            <summary>
            The solution depends on downstream as well as upstream water level.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ILevelWidth">
            <summary>
            Defines data for single level in a Level/Width table. Level/Width tables are used both 
            for structure geometry and for cross section specifications for structures.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ILevelWidth.Level">
            <summary>
            Level [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ILevelWidth.Width">
            <summary>
            Width [m]
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ILevelWidthArea">
            <summary>
            Data for one level in the LevelWidthArea table
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ILevelWidthArea.Area">
            <summary>
            Area
            Unit: [m^2]
            Default: 0;
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ILevelWidths">
            <summary>
            Table of corresponding levels and widths. Can also be depths and widths.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ILevelWidths.Validate">
            <summary>
            Validates the data. The only constraint is that the levels after sorting must be monotonically increasing.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ILevelWidths.Count">
            <summary>
            Number of rows in table
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ILevelWidths.Item(System.Int32)">
            <summary>
            Level-width at specified index
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.LevelWidth">
            <summary>
            One level-width data point. Can also be depth-width.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.LevelWidth._level">
            <summary>
            Level relative to a datum in the class aggregating this class.
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.LevelWidth._width">
            <summary>
            Width corresponding to the level. 
            Unit: [m]
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidth.#ctor">
            <summary>
            Constructor. With no arguments. Neede since the class is also base class for LevelWidthArea.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidth.#ctor(System.Double,System.Double)">
            <summary>
            Constructor. Initializes the members to zero.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidth.CompareTo(DHI.Mike1D.StructureModule.ILevelWidth)">
            <summary>
            Allows LevelWidth objects to be sorted after first Level and secondly Width.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidth.Clone">
            <summary>
            Returns copy of instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.LevelWidth.Level">
            <summary>
            Level.
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.LevelWidth.Width">
            <summary>
            Level relative to a datum in the class aggregating this class.
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.LevelWidth.ExtensionData">
            <summary>
            Property used by (de)serializer, when it can not find proper target for
            a data field. Support of forward compatible data contracts. 
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.LevelWidthArea">
            <summary>
            Data for one level in the LevelWidthArea table
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.LevelWidthArea._area">
            <summary>
            Area corresponding to the level and width in the base class.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidthArea.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidthArea.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="level">level [m]</param>
            <param name="width">width [m]</param>
            <param name="area">area [m^2]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidthArea.Clone">
            <summary>
            Returns a copy of the instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.LevelWidthArea.Area">
            <summary>
            Area
            Unit: [m^2]
            Default: 0;
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.LevelWidthAreas">
            <summary>
            Table of level, width and area. Currently only used internally
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidthAreas.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidthAreas.CalcalateAreas">
            <summary>
            Used for deriving the area from the level and width. Not to be used when the class is used for 
            cross sections.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidthAreas.GetWidth(System.Double)">
            <summary>
            Interpolates/extrapolates width using linear interpolation. For levels larger than the top level, 
            vertical walls are assumed.
            </summary>
            <param name="level">the lookup level</param>
            <returns>the interpolated width</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidthAreas.GetArea(System.Double)">
            <summary>
            Interpolates/extrapolates area using linear interpolation. For levels larger than the top level, 
            vertical walls are assumed.
            This differs from m11qhcalc!.
            </summary>
            <param name="level">the lookup level</param>
            <returns>the interpolated area</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidthAreas.Validate">
            <summary>
            Validates the data. The constraints are that the levels and the areas after sorting must be monotonically increasing.
            </summary>
            <returns>String that descripes the problem.</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidthAreas.Clone">
            <summary>
            Copies an instance of the current class.
            </summary>
            <returns>copy of instance</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidthAreas.Add(DHI.Mike1D.StructureModule.ILevelWidthArea)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidthAreas.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.LevelWidthAreas.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.LevelWidthAreas.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.LevelWidths">
            <summary>
            Table of corresponding levels and widths. Can also be depths and widths.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidths.#ctor(System.Collections.Generic.IList{DHI.Mike1D.StructureModule.ILevelWidth})">
            <summary>
            Constructor, creating object from list of level-widhts
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidths.#ctor(DHI.Mike1D.StructureModule.ILevelWidths)">
            <summary>
            Sort and cache level and widths for fast interpolation
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidths.WidthFromLevel(System.Double)">
            <summary>
            Interpolates/extrapolates width using linear interpolation
            </summary>
            <param name="level">the lookup level</param>
            <returns>the interpolated width</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidths.WidthFromDepth(System.Double)">
            <summary>
            Interpolates/extrapolates width using linear interpolation
            </summary>
            <param name="depth">the lookup depth. Depth is height above first (smallest) level in collection</param>
            <returns>the interpolated width</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidths.Validate">
            <summary>
            Validates the data. The only constraint is that the levels after sorting must be monotonically increasing.
            </summary>
            <returns>String that descripes the problem.</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidths.Clone">
            <summary>
            Creates a copy of an instance.
            </summary>
            <returns>copy of instance</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidths.AdjustLevels(System.Double)">
            <summary>
            Add delta to all levels
            </summary>
            <param name="delta"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.LevelWidths.Create(DHI.Mike1D.StructureModule.ILevelWidths)">
            <summary>
            Returns an <see cref="T:DHI.Mike1D.StructureModule.LevelWidths"/> class
            from an <see cref="T:DHI.Mike1D.StructureModule.ILevelWidths"/>. If the incoming
            class is already an <see cref="T:DHI.Mike1D.StructureModule.LevelWidths"/>, 
            the same class is returned, otherwise data is copied
            to a new class.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.LevelWidths.Count">
            <summary>
            Number of coefficients
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.LevelWidths.Item(System.Int32)">
            <summary>
            Get/set a coefficient set at the specified index
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.HonmaWeir">
            <summary>
            The HonmaWeir (Weir formula 2) class describes weir flow modelled with the Honma
            formula.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IHonmaWeir">
            <summary>
            The HonmaWeir (Weir formula 2) class describes weir flow modelled with the Honma
            formula.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHonmaWeir.WeirCoefficient">
            <summary>
            Weir coefficient, multiplication coefficient in the Honma weir formula. 
            Unit: [m^0.5/s]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHonmaWeir.CrestWidth">
            <summary>
            Width of the weir opening. Width is perpendicular to the flow direction, i.e. "across the river"
            Type: River Structure Geometry
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IHonmaWeir.CrestLevel">
            <summary>
            Level of the crest of the the weir. 
            Type: River Structure Geometry
            Unit: [m]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.HonmaWeir._weirCoefficient">
            <summary>
            Weir coefficient, multiplication coefficient in the Honma weir formula. 
            Unit: [m^0.5/s]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.HonmaWeir._crestWidth">
            <summary>
            Width of the weir opening. Width is perpendicular to the flow direction, i.e. "across the river"
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.HonmaWeir._crestLevel">
            <summary>
            Level of the crest of the the weir. 
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.HonmaWeir._horizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.HonmaWeir._delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HonmaWeir.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HonmaWeir.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HonmaWeir.Validate">
            <summary>
            Writes errors, warnings and hints into their respective member classes. The member objects are initially cleared.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HonmaWeir.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HonmaWeir.HonmaWeirFlow(System.Double,System.Double)">
            <summary>
            Evaluate honma formula
            </summary>
            <param name="x">Upstream depth above crest</param>
            <param name="y">Downstream depth above crest</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HonmaWeir.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.HonmaWeir.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HonmaWeir.WeirCoefficient">
            <summary>
            Weir coefficient, multiplication coefficient in the Honma weir formula. 
            Unit: [m^0.5/s]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HonmaWeir.CrestWidth">
            <summary>
            Width of the weir opening. Width is perpendicular to the flow direction, i.e. "across the river"
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HonmaWeir.CrestLevel">
            <summary>
            Level of the crest of the the weir. 
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HonmaWeir.HorizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HonmaWeir.Delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HonmaWeir.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HonmaWeir.InvertLevelUpstream">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.HonmaWeir.InvertLevelDownstream">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.StructureModule.OrificeTable">
            <summary>
            Calculation of the flow at energy loss structures.
            <para>
            Contains predefined values of flow through orifice slice.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OrificeTable._w0H">
            <summary>
            Holds gate opening divided by water depth above the sill level.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OrificeTable._w1H">
            <summary>
            Holds the weir height above upstream bottom level divided by the water depth above the sill level.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OrificeTable._w2H">
            <summary>
            Holds the weir height above downstream bottom level divided by the water depth above the sill level.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OrificeTable._dHH">
            <summary>
            Holds the head difference in upstream and downstream water level divided by the water depth above the sill level.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OrificeTable._Q">
            <summary>
            Holds the scaled Q table.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OrificeTable._ch">
            <summary>
            Holds the water level-discharge coefficient used for free overflow.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OrificeTable._ce">
            <summary>
            Holds the energy-discharge coefficient used for free overflow.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OrificeTable._w1HForCoefficients">
            <summary>
            Holds the levels of weir height above upstream bottom level divided 
            by water depth above sill level at which the_cH and _cE coefficients are calculated.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OrificeTable.#ctor">
            <summary>
             Default constructor. An orifice table calculates the flow at energy loss structures.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OrificeTable.CalculateChAndCe">
            <summary>
            This procedure calculates the level-discharge and the
            energy-discharge coefficient for free flow. The coefficients
            depnds on the value of the weir heigt above upstream bottom level
            divided by the water depth above the sill level.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OrificeTable.EnergyDischargeCoefficieentFreeOverflow(System.Double)">
            <summary>
            This function returns the energy discharge coefficient. It is found by interpolation
            in the _w1HForCoefficients anfd _ce arrays basen on the entry argument.
            </summary>
            <param name="argument">Weir height above upstream bottom level divided by the upstream water depth above the sill level.</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OrificeTable.QCritWeir(System.Double,System.Double)">
            <summary>
            This function calculates the critical flow when overtopping a free weir.
            The calculation is solved using a combination of the equations:
            q = Ce*E*sqrt(2*g*E) and
            E = H + (sqr(q)/(2*g*sqr(H + w1)))
            The iteration performed is Newton Rhapson.
            
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OrificeTable.CalculateQSlice(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculate the flow through an orifice
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OrificeTable.CalfFdF_FindY2(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Calculate F and F0 used in the Newton-Raphson steps in FindY2()
            </summary>
            <param name="w1"></param>
            <param name="w2"></param>
            <param name="y1"></param>
            <param name="y3"></param>
            <param name="y2"></param>
            <param name="psi"></param>
            <param name="F"></param>
            <param name="dF"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OrificeTable.CorrectionHydrostaticPressure(System.Double,System.Double,System.Double)">
            <summary>
            Correction factor for hydrostatic pressure
            </summary>
            <param name="y_h"></param>
            <param name="y3_h"></param>
            <param name="w2"></param>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OrificeTable.OpeningHTable">
            <summary>
            Holds gate opening divided by water depth above the sill level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OrificeTable.UpstreamHeightHTable">
            <summary>
            Holds the weir height above upstream bottom level divided by the water depth above the sill level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OrificeTable.DownstreamHeightHTable">
            <summary>
            Holds the weir height above downstream bottom level divided by the water depth above the sill level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OrificeTable.dHHTable">
            <summary>
            Holds the head difference in upstream and downstream water level divided by the water depth above the sill level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OrificeTable.Q">
            <summary>
            Holds the scaled Q table.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.Vertical">
            <summary>
             A vertical is a vertical strip with a specific width that runs from the bottom to the top
             of an orifice.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Vertical.Center">
            <summary>
             The center of the vertical
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Vertical.Width">
            <summary>
             The width of the vertical
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IOrifice">
            <summary>
             An orifice is a structure of arbitrary shape, that can include a gate of arbitrary shape.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IOrifice.PrepareForGate">
            <summary>
            Set orifice discharge for al positions of the gate. If a control is active (a weir or gate is present)
            then this must be called after:
            1) Prepare() 
            2) Gate polygons have been defined
            3) MaxGateLevel and MinGateLevel have been set.
            <para>
            This is called automatically in prepare. It must be called explicitly if 
            gate polygons or max/min gate level are changed after the prepare step
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOrifice.DischargeCoefficient">
            <summary>
            Scale factor for total discharge through orifice
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOrifice.OrificePolygons">
            <summary>
            Shape of the opening
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOrifice.GatePolygons">
            <summary>
            Shape of gates as polygons. Gate polygons can move
            in between <see cref="P:DHI.Mike1D.StructureModule.IOrifice.MinGateLevel"/> and <see cref="P:DHI.Mike1D.StructureModule.IOrifice.MaxGateLevel"/>.
            <para>
            Y coordinates of gate polygons are relative to
            <see cref="P:DHI.Mike1D.StructureModule.IOrifice.MinGateLevel"/>
            </para>
            <para>
            If changing gate level properties during runtime, 
            be sure to update internal state by
            calling <see cref="M:DHI.Mike1D.StructureModule.IOrifice.PrepareForGate"/>
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOrifice.GateLevel">
            <summary>
            Actual gate level.
            Type: River Structure Geometry
            Unit: [m]
            <para>
            this is not a setup parameter, but a run parameter, 
            which will change during the run (if the gate is controlled).
            If the gate is not explicitly controlled, this can be used to 
            change the gate (manual/user defined control).
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOrifice.InitialGateLevel">
            <summary>
            Gate level.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOrifice.MaxGateLevel">
            <summary>
            Maximum allowed gate level
            <para>
            If changing gate level properties during runtime, 
            be sure to update internal state by
            calling <see cref="M:DHI.Mike1D.StructureModule.IOrifice.PrepareForGate"/>
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOrifice.MinGateLevel">
            <summary>
            Minimum allowed gate level
            <para>
            If changing gate level properties during runtime, 
            be sure to update internal state by
            calling <see cref="M:DHI.Mike1D.StructureModule.IOrifice.PrepareForGate"/>
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOrifice.MaxGateLevelIncreaseSpeed">
            <summary>
             Maximum speed of rising gate/weir
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOrifice.MaxGateLevelDecreaseSpeed">
            <summary>
             Maximum speed of lowering gate/weir
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOrifice.UpstreamXsDisplacement">
            <summary>
            Set upstream cross section displacement
            A positive value displaces the cross section to the right when looking from the upstream direction
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOrifice.DownstreamXsDisplacement">
            <summary>
            Set downstream cross section displacement
            A positive value displaces the cross section to the right when looking from the upstream direction
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.Orifice">
            <summary>
             An orifice is a structure of arbitrary shape.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Orifice._deltaGateLevel">
            <summary>
            Change in gate level over time step (only non-zero if control is active)
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Orifice.ExplicitStructureSupport">
            <summary>
            DEBUG: This method is called from Prepare() if _implitcit == false to check if
            the structure supports being Explicit.
            Once all structures support explicit operation this method can be deleted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Orifice.AddOrificePolygon(DHI.Mike1D.Generic.Polygon)">
            <summary>
            Add a polygon to the shape of the orifice 
            </summary>
            <param name="polygon"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Orifice.AddGatePolygon(DHI.Mike1D.Generic.Polygon)">
            <summary>
            Add a polygon to the shape of the gate 
            </summary>
            <param name="polygon"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Orifice.CalcDerivatives(System.Int32,System.Int32,System.Int32,System.Double@,System.Double@,System.Double@)">
            <summary>
            Calculate derivative of discharge through gate 
            </summary>
            <param name="i">Gate index</param>
            <param name="j">Upstream index</param>
            <param name="k">Downstream index</param>
            <param name="dqdh1"></param>
            <param name="dqdh2"></param>
            <param name="dqdw"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Orifice.PrepareTimeStep(System.DateTime,System.DateTime)">
            <summary>
            Setter for controllable structure. Used by the control module.
            Can safely be called multiple times with the same timeN.
            </summary>
            <param name="timeN"></param>
            <param name="timeNp1"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Orifice.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Orifice.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Set up structure and set runtime diagnostics object
            </summary>
            <param name="crossSectionData">Cross section data to get cross section on each side of the structure</param>
            <param name="isLinkStructure"> </param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Orifice.Prepare(DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Orifice.PrepareForGate">
            <summary>
            Set orifice discharge for al positions of the gate. If a control is active (a weir or gate is present)
            then this must be called after:
            1) Prepare() 
            2) Gate polygons have been defined
            3) MaxGateLevel and MinGateLevel have been set.
            <para>
            This is called automatically in prepare. It must be called explicitly if 
            gate polygons or max/min gate level are changed after the prepare step
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Orifice.CalculateAlpha2(System.Double,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Calculate alpha2 using bi-section.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Orifice.Validate">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Orifice.ControlSetGateLevel(System.Double,System.Int32)">
            <summary>
            Control the gate, set gate level to specified value
            </summary>
            <param name="newGateLevel">New gate level. Cannot be lower than <see cref="P:DHI.Mike1D.StructureModule.Orifice.MinGateLevel"/> or higher than <see cref="P:DHI.Mike1D.StructureModule.Orifice.MaxGateLevel"/>.</param>
            <param name="controlStrategyId">Control strategy id, used for keeping track of which strategy 
            is currently active. The strategy id can be outputted to result file.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Orifice.GetControlAction(System.String)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Orifice.GetCurrentValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Orifice.ResetControlledState">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Orifice.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Orifice.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.DischargeCoefficient">
            <summary>
            Set scale factor for total discharge through orifice
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.OrificePolygons">
            <summary>
            Shape of the opening
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.GatePolygons">
            <summary>
            Shape of gates as polygons. Gate polygons can move
            in between <see cref="P:DHI.Mike1D.StructureModule.Orifice.MinGateLevel"/> and <see cref="P:DHI.Mike1D.StructureModule.Orifice.MaxGateLevel"/>.
            <para>
            Y coordinates of gate polygons are relative to
            <see cref="P:DHI.Mike1D.StructureModule.Orifice.MinGateLevel"/>
            </para>
            <para>
            If changing gate level properties during runtime, 
            be sure to update internal state by
            calling <see cref="M:DHI.Mike1D.StructureModule.Orifice.PrepareForGate"/>
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.GateLevel">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.InitialGateLevel">
            <summary>
            Initial value of the gate level.
            Type: River Structure Geometry
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.MinGateLevel">
            <summary>
            Minimum allowed gate level.
            <para>
            If changing gate level properties during runtime, 
            be sure to update internal state by
            calling <see cref="M:DHI.Mike1D.StructureModule.Orifice.PrepareForGate"/>
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.MaxGateLevel">
            <summary>
            Maximum allowed gate level
            <para>
            If changing gate level properties during runtime, 
            be sure to update internal state by
            calling <see cref="M:DHI.Mike1D.StructureModule.Orifice.PrepareForGate"/>
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.MaxGateLevelIncreaseSpeed">
            <summary>
             Maximum speed of rising gate/weir
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.MaxGateLevelDecreaseSpeed">
            <summary>
             Maximum speed of lowering gate/weir
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.UseUpAndDownstreamCrossSection">
            <summary>
            Flag specifying whether to use upstream and downstream cross section for 
            geometry, or whether to use the 4 geometry parameters:
            <see cref="P:DHI.Mike1D.StructureModule.Orifice.UpstreamBottomLevel"/>, <see cref="P:DHI.Mike1D.StructureModule.Orifice.DownstreamBottomLevel"/>, 
            <see cref="P:DHI.Mike1D.StructureModule.Orifice.UpstreamTopLevel"/>, <see cref="P:DHI.Mike1D.StructureModule.Orifice.DownstreamTopLevel"/>.
            <para>
            If setting this to false, all the 4 geometry parameters must be set manually
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.UpstreamBottomLevel">
            <summary>
            Set upstream bottom level. 
            <para>
            On a structure reach, if this is not set, (i.e. if having the default value of <see cref="F:System.Double.MinValue"/>),
            the bottom level of the upstream node is used. 
            </para>
            <para>Also disable <see cref="P:DHI.Mike1D.StructureModule.Orifice.UseUpAndDownstreamCrossSection"/> to enable this</para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.DownstreamBottomLevel">
            <summary>
            Set downstream bottom level. 
            <para>
            On a structure reach, if this is not set, (i.e. if having the default value of <see cref="F:System.Double.MinValue"/>),
            the bottom level of the downstream node is used. 
            </para>
            <para>Also disable <see cref="P:DHI.Mike1D.StructureModule.Orifice.UseUpAndDownstreamCrossSection"/> to enable this</para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.UpstreamTopLevel">
            <summary>
            Set downstream top level. Not used if <see cref="F:DHI.Mike1D.StructureModule.Orifice._useUpAndDownstreamCrossSection"/>
            <para>
            On a structure reach, if this is not set, (i.e. if having the default value of <see cref="F:System.Double.MinValue"/>),
            the ground level of the upstream node is used, and the upstream node must be a node with volume. 
            </para>
            <para>Also disable <see cref="P:DHI.Mike1D.StructureModule.Orifice.UseUpAndDownstreamCrossSection"/> to enable this</para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.DownstreamTopLevel">
            <summary>
            Set downstream top level.
            <para>
            On a structure reach, if this is not set, (i.e. if having the default value of <see cref="F:System.Double.MinValue"/>),
            the ground level of the downstream node is used, and the downstream node must be a node with volume. 
            </para>
            <para>Also disable <see cref="P:DHI.Mike1D.StructureModule.Orifice.UseUpAndDownstreamCrossSection"/> to enable this</para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.UpstreamXsDisplacement">
            <summary>
            Set upstream cross section displacement
            A positive value displaces the cross section to the right when looking from the upstream direction
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.DownstreamXsDisplacement">
            <summary>
            Set downstream cross section displacement
            A positive value displaces the cross section to the right when looking from the upstream direction
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.InvertLevelUpstream">
            <summary>
            Invert level up stream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.InvertLevelDownstream">
            <summary>
            Invert level down stream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.Type">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.UpstreamCrossSection">
            <summary>
            Set upstream cross section
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Orifice.DownstreamCrossSection">
            <summary>
            Set downstream cross section
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.PumpType">
            <summary>
            Type of pump
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.PumpType.ConstantFlow">
            <summary>
            Constant Q
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.PumpType.HQTable">
            <summary>
             Use the upstream water level to look up Q in a table
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.PumpType.DeltaHQTable">
            <summary>
             Use the water difference between upstream and downstream to look up Q in a table
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.PumpState">
            <summary>
            State of the pump
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.PumpState.Accelerating">
            <summary>
            Increasing Q when pump starts
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.PumpState.Decelerating">
            <summary>
             Decreasing Q when pump shuts off
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.PumpState.Normal">
            <summary>
             Normal operation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.PumpState.Inactive">
            <summary>
            Pump is inactive
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IPump">
            <summary>
            Pump parameters. 
            <para>
             A pump moves water within the network, with the ability to start and stop a specific water levels
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.PumpType">
            <summary>
            Type of pump
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.StartLevel">
            <summary>
            The water level at which the pump is activated
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.StopLevel">
            <summary>
            The water level at which the pump is de-activated
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.AccelerationTime">
            <summary>
            Acceleration time
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.DecelerationTime">
            <summary>
            Deceleration time
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.ConstantFlow">
            <summary>
            Set the constant flow rate
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.HQRelation">
            <summary>
            QH relation for QH and QdeltaH pumps.
            (dH, Q) or (H, Q) pairs. The XYTable ensures that dH (or H) is always increasing.
            <para>
            For a PID controlled pump (<see cref="P:DHI.Mike1D.StructureModule.IPump.DischargeControlActive"/> == true) this HQ relation is the
            maximum pump capacity. Set to null if no maximum capacity.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.OutletLevel">
            <summary>
            Set the level of the outlet/reservoir
            <para>
            For side structures (<see cref="P:DHI.Mike1D.StructureModule.IStructure.StructureType"/> == <see cref="F:DHI.Mike1D.StructureModule.StructureTypes.SideStructure"/>) 
            and flow direction is upstream (negative Q),
            then the downstream level is equal to this reservoir level. If Q is positive, then 
            OutletLevel is used as the downstream end.
            </para>
            <para>
            Default value is <see cref="F:System.Double.MinValue"/>, effectively disabling the use of the OutletLevel
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.UseSuppressionFactor">
            <summary>
            If true, then suppresion factors from the PumpSuppressionFactorUpstream and 
            PumpSuppressionFactorDownstream delegates are used to limit the available discharge of the pump.
            Default false.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.IsSideStructure">
            <summary>
            A side structure is connected to a reservoir downstream (chainage direction).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.ReservoirLevel">
            <summary>
            Same as <see cref="P:DHI.Mike1D.StructureModule.IPump.OutletLevel"/>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.UseMaximumDischarge">
            <summary>
            If true, then the maximum alloved discharge is taken from the MaxPumpDischargeUpstream and 
            MaxPumpDischargeUpstream are use to directly set the maximum discharge.
            Default false.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.Offset">
            <summary>
            Offset on water level
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.OffsetMinDischarge">
            <summary>
            Offset to use when looking up the minimum discharge for the pump. Only used when a PID control is
            attached to the pump.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.HQRelationMinimumCapacity">
            <summary>
            QH relation for QH and QdeltaH pumps
            Minimum discharge allowed for a PID controlled pump.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.IsVariableSpeed">
            <summary>
            True if the pump supports variable speed operation (must be true for PID controlled pumps).
            Default value: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.MinStopLevel">
            <summary>
            Minimum stop level used if an external control is active. If an external control is active, then MinStopLevel
            and MaxStopLevel must be set.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.MaxStartLevel">
            <summary>
            Maximum stop level used if an external control is active. If an external control is active, then MinStopLevel
            and MaxStopLevel must be set.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.MinTimeOff">
            <summary>
            Minimum time the pump should stay off if it stops pumping.
            Default value is 0 seconds.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.MinTimeOn">
            <summary>
            Minimum time the pump should stay on if it starts pumping.
            Default value is 0 seconds.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.StartStopLevelControlActive">
            <summary>
            Must be set to true to activate external control of start and stop levels (through a PID control or similar).
            <para>
            If pump is controlled through ControlMoudle, this will set this automatically (during Prepare)
            </para>
            <para>
            Can not be combined with <see cref="P:DHI.Mike1D.StructureModule.IPump.DischargeControlActive"/>
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IPump.DischargeControlActive">
            <summary>
            Must be set to true to activate (external) control of discharge (through a PID control or similar).
            <para>
            If pump is controlled through ControlMoudle, this will set this automatically (during Prepare)
            </para>
            <para>
            Can not be combined with <see cref="P:DHI.Mike1D.StructureModule.IPump.StartStopLevelControlActive"/>
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.Pump">
            <summary>
            Pump class.
            <para>
             A pump moves water within the network, with the ability to start and stop a specific water levels
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Pump.MaxPumpDischargeUpstream">
            <summary>
            Delegate to access the volume available for pumping upstream. Used when UseSuppressionFactor is false.
            For structure reaches, this is calculated in the upstream node, else it's calculated in the upstream, h-point.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Pump.MaxPumpDischargeDownstream">
            <summary>
            Delegate to access the volume available for pumping downstream. Used when UseSuppressionFactor is false.
            For structure reaches, this is calculated in the downstream node, else it's calculated in the downstream, h-point.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Pump.PreviousDischarge">
            <summary>
            Previous discharge across the pump
            <para>
            If not set, the previous discharge will be not taking the water level derivatives into account.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Pump.PumpSuppressionFactorUpstream">
            <summary>
            Delegate to access a pump suppresion factor for flows coming from upstream. 
            Used in M11 simulations to reduce discharge through pump at low water levels.
            Not used in MIKE URBAN simulations.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Pump.PumpSuppressionFactorDownstream">
            <summary>
            Delegate to access a pump suppresion factor for flows coming from downstream. 
            Used in M11 simulations to reduce discharge through pump at low water levels.
            Not used in MIKE URBAN simulations.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Pump._pumpReversed">
            <summary>
            If negative, then all Q values in the hQ table are negative or zero and the
            flow direction of the pump is from downstream up upstream
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Pump.#ctor(DHI.Mike1D.StructureModule.PumpType)">
            <summary>
            Construct a pump
            </summary>
            <param name="pumpType"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Pump.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Set up structure and set runtime diagnostics object
            </summary>
            <param name="crossSectionData">Cross section data to get cross section on each side of the structure</param>
            <param name="isLinkStructure"> </param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Pump.Prepare(DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Pump.PrepareTimeStep(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Pump.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Pump.Validate">
            <summary>
            Writes errors, warnings and hints into their respective member classes. The member objects are initially cleared.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Pump.PreferredDt(System.TimeSpan,DHI.Mike1D.HDParameterDataAccess.TimeStepping,System.Double)">
            <summary>
            The preferred time span for the next time step. Used when adaptive time stepping is active.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Pump.ExplicitStructureSupport">
            <summary>
            DEBUG: This method is called from Prepare() if _implitcit == false to check if
            the structure supports being Explicit.
            Once all structures support explicit operation this method can be deleted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Pump.ControlSetStartLevel(System.Double,System.Int32)">
            <summary>
            Set new start level
            </summary>
            <param name="newStartLevel">New start level</param>
            <param name="controlStrategyId">Control strategy currently used.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Pump.ControlSetStopLevel(System.Double,System.Int32)">
            <summary>
            Set new stop level
            </summary>
            <param name="newStopLevel">New stop level</param>
            <param name="controlStrategyId">Control strategy currently used.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Pump.ControlSetStartStopLevel(System.Double,System.Double,System.Int32)">
            <summary>
            Set new start/stop level
            </summary>
            <param name="newStartLevel">New start level</param>
            <param name="newStopLevel">New stop level</param>
            <param name="controlStrategyId">Control strategy currently used.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Pump.GetControlAction(System.String)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Pump.GetCurrentValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Pump.ResetControlledState">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Pump.ControlSetDischarge(System.Double,System.Int32)">
            <summary>
            Set discharge for pump explicitly. 
            <para>
            Pump acceleration parameters will be used, so pump may take
            a while to obtain the desired discharge.
            </para>
            </summary>
            <param name="newDischarge">Discharge to set</param>
            <param name="controlStrategyId">Control strategy currently used.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Pump.ValueGetter(System.Int32)">
            <summary>
            Get value setter for the specified data quantity
            </summary>
            <param name="quantityIndex">Requested Quantity, index in <see cref="M:DHI.Mike1D.Generic.IQuantityProxy.Offers"/></param>
            <returns>A value getter delegate that can set the value</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Pump.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.PumpType">
            <summary>
            Type of pump
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.StartLevel">
            <summary>
            The water level at which the pump is activated
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.StopLevel">
            <summary>
            The water level at which the pump is de-activated
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.AccelerationTime">
            <summary>
            Acceleration time
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.DecelerationTime">
            <summary>
            Deceleration time
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.ConstantFlow">
            <summary>
            Set the constant flow rate
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.OutletLevel">
            <summary>
            Set the level of the outlet for the pump.
            <para>
            For side structures (<see cref="P:DHI.Mike1D.StructureModule.IStructure.StructureType"/> == <see cref="F:DHI.Mike1D.StructureModule.StructureTypes.SideStructure"/>)
            this is also used as a reservoir level, i.e. a level outside the model.  
            If flow direction is upstream (all negative Q in <see cref="P:DHI.Mike1D.StructureModule.Pump.HQRelation"/>),
            then the downstream level is equal to this reservoir level. If Q is positive, then 
            OutletLevel is used as the downstream end.
            </para>
            <para>
            Default value is <see cref="F:System.Double.MinValue"/>, effectively disabling the use of the OutletLevel
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.IsSideStructure">
            <summary>
            A side structure is connected to a reservoir downstream (chainage direction).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.ReservoirLevel">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.UseSuppressionFactor">
            <summary>
            If true, then suppresion factors from the PumpSuppressionFactorUpstream and 
            PumpSuppressionFactorDownstream delegates are used to limit the available discharge of the pump.
            Default false.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.UseMaximumDischarge">
            <summary>
            If true, then the maximum alloved discharge is taken from the 
            <see cref="F:DHI.Mike1D.StructureModule.Pump.MaxPumpDischargeUpstream"/>/<see cref="F:DHI.Mike1D.StructureModule.Pump.MaxPumpDischargeDownstream"/> and 
            that value is use to directly set the maximum discharge.
            Default false.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.HQRelation">
            <summary>
            QH relation for QdeltaH and QH pumps,
            (dH, Q) or (H, Q) pairs. The XYTable ensures that dH (or H) is always increasing.
            <para>
            For QdeltaH, a positive dH is the height that water must be RAISED across the pump.
            </para>
            <para>
            For a PID controlled pump (<see cref="P:DHI.Mike1D.StructureModule.Pump.DischargeControlActive"/> == true) this HQ relation is the
            maximum pump capacity. Set to null if no maximum capacity.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.Offset">
            <summary>
            Offset on water level
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.OffsetMinDischarge">
            <summary>
            Offset to use when looking up the minimum discharge for the pump. Only used when a PID control is
            attached to the pump.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.HQRelationMinimumCapacity">
            <summary>
            QH relation for QH and QdeltaH pumps
            Minimum discharge allowed for a PID controlled pump.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.IsVariableSpeed">
            <summary>
            True if the pump supports variable speed operation (must be true for PID controlled pumps).
            Default value: false
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.MinStopLevel">
            <summary>
            Minimum stop level used if an external control is active. If an external control is active, then MinStopLevel
            and MaxStopLevel must be set.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.MaxStartLevel">
            <summary>
            Maximum stop level used if an external control is active. If an external control is active, then MinStopLevel
            and MaxStopLevel must be set.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.MinTimeOff">
            <summary>
            Minimum time the pump should stay off if it stops pumping.
            Default value is 0 seconds.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.MinTimeOn">
            <summary>
            Minimum time the pump should stay on if it starts pumping.
            Default value is 0 seconds.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.StartStopLevelControlActive">
            <summary>
            Must be set to true to activate external control of start and stop levels (through a PID control or similar).
            <para>
            If pump is controlled through ControlMoudle, this will set this automatically (during Prepare)
            </para>
            <para>
            Can not be combined with <see cref="P:DHI.Mike1D.StructureModule.Pump.DischargeControlActive"/>
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.DischargeControlActive">
            <summary>
            Must be set to true to activate (external) control of discharge (through a PID control or similar).
            <para>
            If pump is controlled through ControlMoudle, this will set this automatically (during Prepare)
            </para>
            <para>
            Can not be combined with <see cref="P:DHI.Mike1D.StructureModule.Pump.StartStopLevelControlActive"/>
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.NumberOfStarts">
            <summary>
            Number of times the pump was started
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.TotalTimeActive">
            <summary>
            Total time the pump was active
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.IsActive">
            <summary>
             Return true if the pump is pumping
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.InvertLevelUpstream">
            <summary>
            Invert level up stream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Pump.InvertLevelDownstream">
            <summary>
            Invert level down stream
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.StructureParameters">
            <summary>
            Class which contains parameters used during initilization of structures
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StructureParameters.MaximumIterationsInCompositeStructures">
            <summary>
            Maximum iterations in composite structures to allow convergence of discharges when multiple
            structures are present in the same grid point.
            Default: 100
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StructureParameters.UseGlobalDelhs">
            <summary>
            Flag specifying whether to use the global value <see cref="P:DHI.Mike1D.StructureModule.StructureParameters.Delhs"/> for all structures
            or whether to have each structure seperately specify their own value,
            stored in <see cref="P:DHI.Mike1D.StructureModule.ILinearZeroVariation.Delhs"/>.
            <para>
            If this is set, the <see cref="P:DHI.Mike1D.StructureModule.ILinearZeroVariation.Delhs"/> will be overridden with the <see cref="P:DHI.Mike1D.StructureModule.StructureParameters.Delhs"/>
            value.
            </para>
            <para>
            Default is false.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StructureParameters.Delhs">
            <summary>
            In ILinearZeroVariation structures:
            For water level differences less than Delhs a linear Q variation is used
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StructureParameters.MinimumHeadloss">
            <summary>
            Minimum head loss across a structure.
            Default value = 0.1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StructureParameters.MaximumIterationsInStructure">
            <summary>
            Maximum number of iterations in a structure to obtain convergence of the discharge.
            Default value = 100
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StructureParameters.CulvertUpstreamExternalEnergyLevel">
            <summary>
            Method to use when solving the culvert equations
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StructureParameters.CulvertSolverMethod">
            <summary>
            Method to use when solving the culvert equations
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IValve">
            <summary>
            Sluice gate interface
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IValve.Diameter">
            <summary>
            The diameter of the valve
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IValve.FlowArea">
            <summary>
            The flow area of the valve
            Type: River Structure Geometry
            Unit: [m2]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IValve.InvertLevel">
            <summary>
            The invert level of the valve
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IValve.ValveOpening">
            <summary>
            The opening of the valve in percent. This value is overwritten if RTC is applied.
            Type: River Structure Geometry
            Unit: fraction [0;1]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IValve.FlowFactorTable">
            <summary>
            Table holding flow factor as a function of opening (as fractions [0;1]).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IValve.MinValveOpening">
            <summary>
            Minimum valve opening, when valve is controlled
            Unit: fraction [0;1]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IValve.MaxValveOpening">
            <summary>
            Maximum valve opening, when valve is controlled
            Unit: fraction [0;1]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IValve.MaxValveSpeed">
            <summary>
            Maximum valve speed, i.e. speed with which it can open and close
            Unit: [/s] - fraction per second.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IOverFlowFormula">
            <summary>
            Sluice gate interface
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOverFlowFormula.Outlet">
            <summary>
            Flag specifying whether the downstream end is out of the system 
            (outlet boundary). If true, flow out of the system is always free 
            outflow (critical flow conditions)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOverFlowFormula.CrestLevel">
            <summary>
            The level of the weir crest.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOverFlowFormula.CrestWidth">
            <summary>
            The width of the weir.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOverFlowFormula.CrestType">
            <summary>
            Crest type
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOverFlowFormula.MethodNumber">
            <summary>
            Calculation method: 1 for a Q-h table and 2 for weir formula
            Default: 2
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOverFlowFormula.DataSetID">
            <summary>
            ID of the table where the Q-h relation is located.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOverFlowFormula.WeirFlowAngle">
            <summary>
            The angle of the weir to the flow direction of the branch
            Type: Angels
            Unit: [degrees]
            Default: 0 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOverFlowFormula.WeirCoefficient">
            <summary>
            Flow coeffcient for the weir. If left undefined the flow coeeficient is
            calculated based on information on the WeirFlowAngle
            Type: Dimensional factor
            Unit: []
            Default: 0.66
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOverFlowFormula.UseWeirCoeff">
            <summary>
            Flag telling if the weir coefficient should be used or the
            coefficient should be based on the angle of the weir.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOverFlowFormula.Kc">
            <summary>
            Coeffcient used to determine overall flow coefficient when weir coefficient is not used. 
            Type: Undefined
            Unit: []
            Default: Undefined
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOverFlowFormula.TransitionCoefficient">
            <summary>
            Coefficient used to make a continuos transistion between
            submerged and not submerged flow at the weir. It expands an interval around the crest level
            In which the flow is both critical and subcritical
            Unit: [meter]
            Default: 0.0.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOverFlowFormula.MaxCrestLevel">
            <summary>
            Maximum crest level
            <para>
            Used only when the OverFlowFormula is controlled
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOverFlowFormula.MinCrestLevel">
            <summary>
            Minimum crest level
            <para>
            Used only when the OverFlowFormula is controlled
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOverFlowFormula.MaxCrestLevelIncreaseSpeed">
            <summary>
            Maximum crest level increase speed
            <para>
            Used only when the OverFlowFormula is controlled
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IOverFlowFormula.MaxCrestLevelDecreaseSpeed">
            <summary>
            Maximum crest level decrease speed
            <para>
            Used only when the OverFlowFormula is controlled
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ISideStructure">
            <summary>
            Optional interface for an <see cref="T:DHI.Mike1D.StructureModule.IStructure"/> to implement, making it
            capable of being used as a side structure
            <para>
            A side structure is not put into the reach, but added on side of the reach.
            </para>
            <para>
            A side structure with reservoir is handled in the engine by adding an additional 
            side structure reach, with a reservoir node (basin) in the other end.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISideStructure.StructureType">
            <summary>
            Type of structure
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISideStructure.Bank">
            <summary>
            Bank side that side-structure is located on
            <para>
            If side structure contains reservoir, and has 
            the <see cref="P:DHI.Mike1D.StructureModule.ReservoirData.Coordinate"/> set, 
            this is not used (and should be set to <see cref="F:DHI.Mike1D.StructureModule.SideStructureBank.Undefined"/>).
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISideStructure.SideStructureReservoir">
            <summary>
            Reservoir at end of side structure. Null if not side structure, or no reservoir is defined
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IStructureCollection">
            <summary>
            Data access model for the structure module.
            </summary>  
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructureCollection.Validate">
            <summary>
            Validates the data of all strucures in the collection. Diagnostics, Warning and Hints are collected in each of 
            the published classes for the purpose.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructureCollection.Initialize(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Initialize all structures. If cross sections are required, they must be set
            using the <see cref="T:DHI.Mike1D.CrossSectionModule.CrossSectionData"/> property before calling initialize.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructureCollection.Initialize(DHI.Mike1D.BoundaryModule.IBoundaryData,DHI.Mike1D.CrossSectionModule.CrossSectionData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Initialize all structures. If cross sections are required, they must be set
            using the <see cref="T:DHI.Mike1D.CrossSectionModule.CrossSectionData"/> property before calling initialize.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructureCollection.Prepare(DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Prepare all structures.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructureCollection.Prepare(System.DateTime,DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Prepare all structures.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructureCollection.Load(System.String,System.String)">
            <summary>
            Loads a collection of structures from a file or data base.
            </summary>
            <param name="specification">specification changes from bridge to bridge</param>
            <param name="bridgeName">Name of bride</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructureCollection.Load(System.IntPtr,System.String)">
            <summary>
            Loads a collection of structures from a file or data base.
            </summary>
            <param name="sectionPointer">Pointer to structure section in PFS data structure (unmanaged).</param>
            <param name="bridgeName">Name of bride</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructureCollection.Load(DHI.PFS.PFSSection,System.String)">
            <summary>
            Loads a collection of structures from a file or data base.
            </summary>
            <param name="section">Structure section in PFS data structure (unmanaged).</param>
            <param name="bridgeName">Name of bride</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructureCollection.Load(System.IntPtr,System.String,DHI.Mike1D.ControlModule.ControlData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Loads a collection of structures from a file or data base.
            </summary>
            <param name="sectionPointer">Pointer to structure section in PFS data structure (unmanaged).</param>
            <param name="bridgeName">Name of bride</param>
            <param name="controlData">Control data for control structures</param>
            <param name="diagnostics"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructureCollection.Load(DHI.PFS.PFSSection,System.String,DHI.Mike1D.ControlModule.ControlData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Loads a collection of structures from a file or data base.
            </summary>
            <param name="section">Structure section in PFS data structure.</param>
            <param name="bridgeName">Name of bride</param>
            <param name="controlData">Control data for control structures</param>
            <param name="diagnostics"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructureCollection.Finish">
            <summary>
            Finalize run
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructureCollection.ResetControlledState">
            <summary>
            Reset the controlled state of all controllable structures in the collection
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructureCollection.Structures">
            <summary>
            The list of all structures defined.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructureCollection.Parameters">
            <summary>
            Parameters used during initialization
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructureCollection.RemovableStructureLocations">
            <summary>
            List of locations of structures that can be removed, and replaced
            by an ordinary HD calculation, as if there where not structure there
            originally.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructureCollection.CompositStructures">
            <summary>
            The Composite structures is a list of all unique positions in the network
            with a structure. Each composite structure can contain more than one structure,
            also called parallel structures. This list of composit structures is a computational
            list, created during Initialize().
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IStructures">
            <summary>
            List of structures.
            <para>
            This interface is explicitly defined for supporting COM interop
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IStructures.Add(DHI.Mike1D.StructureModule.IStructure)">
            <summary>
            
            </summary>
            <param name="structure"></param>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructures.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IStructures.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.OverFlowFormulaCrestTypes">
            <summary>
            Overflow weir crest types
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormulaCrestTypes.Rectangular">
            <summary> Rectangular </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormulaCrestTypes.VNotch">
            <summary> V-notch </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormulaCrestTypes.Trapezoidal">
            <summary> Trapezoidal </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormulaCrestTypes.Irregular">
            <summary> Irregular </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormulaCrestTypes.LongWeir">
            <summary> Long weir </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormulaCrestTypes.CRSWeir">
            <summary> CRS - cross section </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.OverFlowFormula">
            <summary>
            Calculation of the flow at energy loss structures.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormula._delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormula._crestWidth">
            <summary>
            The width of the weir.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormula._crestType">
             <summary>
            Integere indicating which weir type it is:
             1: Rectangular
             2: V-Notch
             3: Trapezoidal
             4: Irregular
             5: Long weir
             6: CRS weir
             </summary>   
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormula._methodNumber">
            <summary>
            Calculation method: 1 for a Q-h table and 2 for weir formula
            Default: 2
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormula._dataSetID">
            <summary>
            ID of the table where the Q-h relation is located.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormula._weirFlowAngle">
            <summary>
            The angle of the weir to the flow direction of the branch
            Type: Angels
            Unit: [degrees]
            Default: 0 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormula._weirCoeff">
            <summary>
            Flow coeffcient for the weir. If left undefined the flow coeeficient is
            calculated based on information on the WeirFlowAngle
            Type: Dimensional factor
            Unit: []
            Default: 0.66
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormula._useWeirCoeff">
            <summary>
            Flag telling if the weir coefficient should be used or the
            coefficient should be based on the angle of the weir.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormula._kc">
            <summary>
            Coeffcient used to determine overall flow coefficient when weir coefficient is not used. 
            Type: Undefined
            Unit: []
            Default: Undefined
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormula._transitionCoefficient">
            <summary>
            Coefficient used to make a continuos transistion between
            submerged and not submerged flow at the weir. It expands an interval around the crest level
            In which the flow is both critical and subcritical
            Unit: [meter]
            Default: 0.0.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormula._crestLevel">
            <summary>
            The level of the weir crest.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowFormula._flowCoefficient">
            <summary>
            The final flow coefficient.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.ExplicitStructureSupport">
            <summary>
            DEBUG: This method is called from Prepare() if _implitcit == false to check if
            the structure supports being Explicit.
            Once all structures support explicit operation this method can be deleted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.#ctor">
            <summary>
            Constructor method for the valve structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.PrepareTimeStep(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.CalculateFlowCoefficients">
            <summary>
            Calculate flow coefficients
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.CalcSubmergedWeirFlow(System.Double@,System.Double@,System.Double@,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculation of the subcritical flow across  the weir according to: Q=Width*sqrt(g*Y*Y*Y)
            where Y = a*upsD*(1 - dwsD/upsD)^^b
            </summary>
            <param name="qSubCrit">The subcritical discharge [m3/s]</param>
            <param name="dQdHups">Derivative of Q with respect to upstream water level [m2/s]</param>
            <param name="dQdHdws">Derivative of Q with respect to downstream water level [m2/s]</param>
            <param name="a">Coefficient</param>
            <param name="b">Exponent</param>
            <param name="upsD">Upstream depth above sill level [m]</param>
            <param name="dwsD">Downstream depth above sill level [m]</param>
            <param name="width">Width of the weir [m]</param>
            <param name="delta">Minimum headdifference. When head difference is below this linearisation is applied</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.CalcSubmergedWeirFlowAlt(System.Double@,System.Double@,System.Double@,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculation of the subcritical flow across the weir. This version is from the MU weir.
            </summary>
            <param name="qSubCrit">The subcritical discharge [m3/s]</param>
            <param name="dQdHups">Derivative of Q with respect to upstream water level [m2/s]</param>
            <param name="dQdHdws">Derivative of Q with respect to downstream water level [m2/s]</param>
            <param name="a">Coefficient</param>
            <param name="b">Exponent</param>
            <param name="upsD">Upstream depth above sill level [m]</param>
            <param name="dwsD">Downstream depth above sill level [m]</param>
            <param name="width">Width of the weir [m]</param>
            <param name="delta">Minimum headdifference. When head difference is below this linearisation is applied</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.CalcFreeWeirFlow(System.Double@,System.Double@,System.Double@,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculation of the free flow across  the weir according to: Q=Width*sqrt(g*Y*Y*Y)where Y = a*D.
            </summary>
            <param name="qCrit">The critical discharge [m3/s]</param>
            <param name="dQdHups">Derivative of Q with respect to upstream water level [m2/s]</param>
            <param name="dQdHdws">Derivative of Q with respect to downstream water level [m2/s]</param>
            <param name="a">Coefficient</param>
            <param name="d">Upstream depth above sill level [m]</param>
            <param name="width">Width of the weir [m]</param>
            <param name="delta">Minimum head difference. When head difference is below this linearisation is applied</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.dYcdHdws(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculation of the derivative of Yc with respect to downstream water level
            </summary>
            <param name="a">Proportionality factor</param>
            <param name="b">Exponent</param>
            <param name="hDiff">Head difference across the structure</param>
            <param name="norm"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.dYcdHups_SubWeir(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculation of the derivative of Yc with respect to upstream water level for the submerged weir
            </summary>
            <param name="a">Proportionality factor</param>
            <param name="b">Exponent</param>
            <param name="locHups">Upstream depth above sill level</param>
            <param name="locHdws">Downstream depth above sill level</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.dQdYc(System.Double,System.Double)">
            <summary>
            Calculation of the derivative of Q with respect to the charateristic height Yc
            </summary>
            <param name="yC">Characteristic height [m]</param>
            /// <param name="W">Width of the structure [m]</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.QSluiceGate(System.Double,System.Double)">
            <summary>
            Calculation of the discharge as Q=Width*sqrt(g*Yc*Yc*Yc) 
            </summary>
            <param name="yC">Chracteristic height [m]</param>
            <param name="w">Width of the structure [m]</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.CalcCritWeirYc(System.Double,System.Double)">
            <summary>
            Calculation of the characteristic height for critical flow: a*D
            </summary>
            <param name="a">Coefficent a</param>
            <param name="D">Upstream depth above crest level [m]</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.CalcSubWeirYc(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculation of characteristic height for a submerged weir: a*upsDepth*(1 - dwsDepth/upsDepth)^^b
            </summary>
            <param name="a">Coeffcient a []</param>
            <param name="b">Exponent b []</param>
            <param name="upsDepth">Upstream depth above sill [m]</param>
            <param name="dwsDepth">Downstream depth above sill [m]</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.ControlSetCrestLevel(System.Double,System.Int32)">
            <summary>
            Control the structure, set crest level to specified value
            </summary>
            <param name="newCrestLevel">New crest level. Cannot be lower than <see cref="P:DHI.Mike1D.StructureModule.OverFlowFormula.MinCrestLevel"/> and larger than <see cref="P:DHI.Mike1D.StructureModule.OverFlowFormula.MaxCrestLevel"/>.</param>
            <param name="controlStrategyId">Control strategy id, used for keeping track of which strategy 
            is currently active. The strategy id can be outputted to result file.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.GetControlAction(System.String)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.GetCurrentValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.ResetControlledState">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.Validate">
            <summary>
            Validation of data for a tabulated structure.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.Offers">
            <summary>
            List of data types that is offered and can be used in GetValue
            </summary>
            <returns>List of data types offered</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowFormula.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.Delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.Outlet">
            <summary>
            Flag specifying whether the downstream end is out of the system 
            (outlet boundary). If true, flow out of the system is always free 
            outflow (critical flow conditions)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.CrestLevel">
            <summary>
            The level of the weir crest. For structures with control, this is 
            the initial creste level only.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.CurrentCrestLevel">
            <summary>
            For structure with control, the crest level may change. Use this property to 
            get/set the current crest level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.CrestWidth">
            <summary>
            The width of the weir.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.CrestType">
             <summary>
            Integere indicating which weir type it is:
             1: Rectangular
             2: V-Notch
             3: Trapezoidal
             4: Irregular
             5: Long weir
             </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.MethodNumber">
            <summary>
            Calculation method: 1 for a Q-h table and 2 for weir formula
            Default: 2
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.DataSetID">
            <summary>
            ID of the table where the Q-h relation is located.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.WeirFlowAngle">
            <summary>
            The angle of the weir to the flow direction of the branch
            Type: Angels
            Unit: [degrees]
            Default: 0 
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.WeirCoefficient">
            <summary>
            Flow coeffcient for the weir. If left undefined the flow coeeficient is
            calculated based on information on the WeirFlowAngle
            Type: Dimensional factor
            Unit: []
            Default: 0.66
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.UseWeirCoeff">
            <summary>
            Flag telling if the weir coefficient should be used or the
            coefficient should be based on the angle of the weir.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.Kc">
            <summary>
            Coeffcient used to determine overall flow coefficient when weir coefficient is not used. 
            Type: Undefined
            Unit: []
            Default: Undefined
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.TransitionCoefficient">
            <summary>
            Coefficient used to make a continuos transistion between
            submerged and not submerged flow at the weir
            Unit: []
            Default: 0.00.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.MaxCrestLevel">
            <summary>
            Maximum crest level
            <para>Used when crest level is being controlled</para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.MinCrestLevel">
            <summary>
            Minimum crest level
            <para>Used when crest level is being controlled</para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.MaxCrestLevelIncreaseSpeed">
            <summary>
            Maximum crest level increase speed
            <para>Used when crest level is being controlled</para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.MaxCrestLevelDecreaseSpeed">
            <summary>
            Maximum crest level decrease speed
            <para>Used when crest level is being controlled</para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.InvertLevelUpstream">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowFormula.InvertLevelDownstream">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IOverFlowGate">
            <summary>
            Description of an overflow gate. An overflow gate is in this context a broad crested weir with a rectangular 
            opening.
            <para>
            The over flow gate is a controlable structure. It allows the gate level to be varied.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.OverFlowGate">
            <summary>
            Description of an overflow gate. An overflow gate is in this context a broad crested weir with a rectangular 
            opening.
            
            The over flow gate is a controlable structure. It allows the gate level to be varied.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.OverFlowGate._horizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            Unit: [m]
            Defualt: 0
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowGate.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowGate.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowGate.GetInvertLevel">
            <summary>
            Return invert level (ground level)
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowGate.GetDepth(System.Double)">
            <summary>
            Calculates the depth for a given water level as water level minus the gate level. 
            </summary>
            <param name="waterLevel">Water level</param>
            <returns>Flow depth at the structure</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowGate.GetArea(System.Double)">
            <summary>
            Calculates the flow area at the structure for a given water level
            Do we actually know the water level at the structure?????
            </summary>
            <param name="structureWaterLevel"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowGate.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowGate.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowGate.ControlClose(System.Int32)">
            <summary>
            Close gate
            </summary>
            <param name="controlStrategyId">Control strategy currently used.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowGate.ControlOpen(System.Int32)">
            <summary>
            Open gate
            </summary>
            <param name="controlStrategyId">Control strategy currently used.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.OverFlowGate.GetControlAction(System.String)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowGate.HorizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            Unit: [m]
            Defualt: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowGate.InvertLevelUpstream">
            <summary>
            Invert level up stream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowGate.InvertLevelDownstream">
            <summary>
            Invert level down stream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.OverFlowGate.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IRadialGate">
            <summary>
            Description of an overflow gate. An overflow gate is in this context a broad crested weir with a rectangular 
            opening.
            
            The over flow gate is a controlable structure. It allows the gate level to be varied.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IRadialGate.TuneFactor">
            <summary>
            Discharge calibration factor. This factor is used only on the part of the 
            discharge that flows below the gate.
            Type: Dimensional factor
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IRadialGate.Height">
            <summary>
            Height above sill of the overflow crest of the gate when the gate is closed.
            Type: River Structure Geometry
            Unit: [m]
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IRadialGate.Radius">
            <summary>
            Radius of gate.
            Type: River Structure Geometry
            Unit: [m]
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IRadialGate.Trunnion">
            <summary>
            Height above sill of centre of gate circle.
            Type: River Structure Geometry
            Unit: [m]
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IRadialGate.WeirCoefficient">
            <summary>
            Coefficient used when calculating the flow above the gate.
            Type: Dimensional factor
            Unit: []
            Default: 1.838
            </summary>   
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IRadialGate.WeirExponent">
            <summary>
            Coefficient used when calculating the flow above the gate
            Type: Dimensional factor
            Unit: []
            Default: 1.5
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IRadialGate.TransitionBottom">
            <summary>
            Parameter used to define the transition zone between free flow and submerged flow.
            Type: River Structure Geometry
            Unit: [m]
            Default: -0.152
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IRadialGate.TransitionDepth">
            <summary>
            Parameter used to define the transition zone between free flow and submerged flow.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0.304
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.RadialGate">
            <summary>
            The radial gate divides the flow into an underflow part and an overflow part. When specifying gate 
            levels for a radial gate the user should specify the level for the underflow part, 
            i.e. the level of the bottom of the gate. The gate level for the overflow part is then calculated 
            based on geometric considerations. 
            
            The under flow gate is a controllable structure. It allows the gate level to be varied.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.RadialGate._srpUnderflowTransitionCoefficient">
            <summary>
            Coefficient used to make a continuos transistion between
            submerged and not submerged flow beneath the gate.
            Unit: []
            Default: 0.05.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.RadialGate._tuneFactor">
            <summary>
            Discharge calibration factor. This factor is used only on the part of the 
            discharge that flows below the gate.
            Type: Dimensional factor
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.RadialGate._height">
            <summary>
            Height above sill of the overflow crest of the gate when the gate is closed.
            Type: River Structure Geometry
            Unit: [m]
            Default: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.RadialGate._radius">
            <summary>
            Radius of gate.
            Type: River Structure Geometry
            Unit: [m]
            Default: 1.2
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.RadialGate._trunnion">
            <summary>
            Height above sill of centre of gate circle.
            Type: River Structure Geometry
            Unit: [m]
            Default: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.RadialGate._weirCoefficient">
            <summary>
            Coefficient used when calculating the flow above the gate.
            Type: Dimensional factor
            Unit: []
            Default: 1.838
            </summary>    
        </member>
        <member name="F:DHI.Mike1D.StructureModule.RadialGate._weirExponent">
            <summary>
            Coefficient used when calculating the flow above the gate
            Type: Dimensional factor
            Unit: []
            Default: 1.5
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.RadialGate._transitionBottom">
            <summary>
            Parameter used to define the transition zone between free flow and submerged flow.
            Type: River Structure Geometry
            Unit: [m]
            Default: -0.152
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.RadialGate._transitionDepth">
            <summary>
            Parameter used to define the transition zone between free flow and submerged flow.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0.304
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.RadialGate._horizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            Unit: [m]
            Defualt: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.RadialGate._delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.RadialGate.#ctor">
            <summary>
            Constructor. Sets all default values.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.RadialGate.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.RadialGate.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.RadialGate.MaxGateLevel">
            <summary>
            Calculation of maximum possible gate level.
            </summary>
            <returns>Maximum possible gate level for a radial gate.</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.RadialGate.GetLevelOfOverflowPart">
            <summary>
            The gate level of the overflow part of the structure is calculated based on geometry and gate opening.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.RadialGate.GetInclAngl">
            <summary>
            Calculation of the inclination angle of the gate relative to the canal bottom.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.RadialGate.Contraction">
            <summary>
            Calculates the contraction for flow below the gate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.RadialGate.LimitDepth(System.Double)">
            <summary>
            Calculates the downstream depth at which the flow changes from free to submerged.
            </summary>
            <param name="wlUps">Upstream water level [m]</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.RadialGate.FreeFlowCoefficient(System.Double)">
            <summary>
            Calculation of the flow coefficient for free wet flow.
            </summary>
            <param name="wlUps">Upstream water level [m]</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.RadialGate.SubmFlowCoefficient(System.Double)">
            <summary>
            Calculation of the flow coefficient for submerged wet flow.
            </summary>
            <param name="wlUps">Upstream water level [m]</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.RadialGate.Opening">
            <summary>
            This procedure returns the gate opening calculated as gatelevel minus sill level.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.RadialGate.GetDepth(System.Double)">
            <summary>
            This function returns the depth above the sill level.
            </summary>
            <param name="waterLevel">Water level</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.RadialGate.GetArea(System.Double)">
            <summary>
            
            </summary>
            <param name="structureWaterLevel"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.RadialGate.Validate">
            <summary>
            Validation of data for a radial gate.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.RadialGate.ResetControlledState">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.RadialGate.TuneFactor">
            <summary>
            Discharge calibration factor. This factor is used only on the part of the 
            discharge that flows below the gate.
            Type: Dimensional factor
            Unit: []
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.RadialGate.Height">
            <summary>
            Height above sill of the overflow crest of the gate when the gate is closed.
            Type: River Structure Geometry
            Unit: [m]
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.RadialGate.Radius">
            <summary>
            Radius of gate.
            Type: River Structure Geometry
            Unit: [m]
            Default: 1.2
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.RadialGate.Trunnion">
            <summary>
            Height above sill of centre of gate circle.
            Type: River Structure Geometry
            Unit: [m]
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.RadialGate.WeirCoefficient">
            <summary>
            Coefficient used when calculating the flow above the gate.
            Type: Dimensional factor
            Unit: []
            Default: 1.838
            </summary>   
        </member>
        <member name="P:DHI.Mike1D.StructureModule.RadialGate.WeirExponent">
            <summary>
            Coefficient used when calculating the flow above the gate
            Type: Dimensional factor
            Unit: []
            Default: 1.5
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.RadialGate.TransitionBottom">
            <summary>
            Parameter used to define the transition zone between free flow and submerged flow.
            Type: River Structure Geometry
            Unit: [m]
            Default: -0.152
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.RadialGate.TransitionDepth">
            <summary>
            Parameter used to define the transition zone between free flow and submerged flow.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0.304
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.RadialGate.HorizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            Unit: [m]
            Defualt: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.RadialGate.Delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.RadialGate.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.RadialGate.InvertLevelUpstream">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.RadialGate.InvertLevelDownstream">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ISluiceGate">
            <summary>
            Sluice gate interface
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISluiceGate.Height">
            <summary>
            The height of the gate. This is used to evaluate if over topping can occur.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISluiceGate.CsA">
            <summary>
            Factor used when calculating Yc for controlled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 1.12
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISluiceGate.CfA">
            <summary>
            Factor used when calculating Yc for controlled free flow
            Type: Dimensional factor
            Unit: []
            Default: 0.89
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISluiceGate.UsA">
            <summary>
            Factor used when calculating Yc for uncontrolled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 0.86
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISluiceGate.UfA">
            <summary>
            Factor used when calculating Yc for uncontrolled free flow and overtopping flow
            Type: Dimensional factor
            Unit: []
            Default: 0.77
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISluiceGate.CsB">
            <summary>
            Exponent used when calculating Yc for controlled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 0.21
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISluiceGate.CfB">
            <summary>
            Exponent used when calculating Yc for controlled free flow
            Type: Dimensional factor
            Unit: []
            Default: 0.17
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISluiceGate.UsB">
            <summary>
            Exponent used when calculating Yc for uncontrolled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 0.38
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISluiceGate.UpperLimit1">
            <summary>
            Upper limit between controlled submerged flow and controlled free flow
            Type: Dimensional factor
            Unit: []
            Default: 1.05
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISluiceGate.UpperLimit2">
            <summary>
            Upper limit between controlled free flow and uncontrolled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 1.55
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISluiceGate.UpperLimit3">
            <summary>
            Upper limit between uncontrolled submerged flow and uncontrolled free flow
            Type: Dimensional factor
            Unit: []
            Default: 0.7
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISluiceGate.LowerLimit1">
            <summary>
            Lower limit between controlled submerged flow and controlled free flow
            Type: Dimensional factor
            Unit: []
            Default: 0.95
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISluiceGate.LowerLimit2">
            <summary>
            Lower limit between controlled free flow and uncontrolled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 1.45
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ISluiceGate.LowerLimit3">
            <summary>
            Lower limit between uncontrolled submerged flow and uncontrolled free flow
            Type: Dimensional factor
            Unit: []
            Default: 0.6
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.SluiceGate">
            <summary>
            Calculation of the flow at operational sluice gates using formulas
            for four different flow regimes and for overtopping as well.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SluiceGate._height">
            <summary>
            The height of the gate. This is used to evaluate if over topping can occur.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SluiceGate._csA">
            <summary>
            Factor used when calculating Yc for controlled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 1.12
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SluiceGate._cfA">
            <summary>
            Factor used when calculating Yc for controlled free flow
            Type: Dimensional factor
            Unit: []
            Default: 0.89
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SluiceGate._usA">
            <summary>
            Factor used when calculating Yc for uncontrolled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 0.86
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SluiceGate._ufA">
            <summary>
            Factor used when calculating Yc for uncontrolled free flow and overtopping flow
            Type: Dimensional factor
            Unit: []
            Default: 0.77
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SluiceGate._csB">
            <summary>
            Exponent used when calculating Yc for controlled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 0.21
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SluiceGate._cfB">
            <summary>
            Exponent used when calculating Yc for controlled free flow
            Type: Dimensional factor
            Unit: []
            Default: 0.17
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SluiceGate._usB">
            <summary>
            Exponent used when calculating Yc for uncontrolled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 0.38
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SluiceGate._upperLimit1">
            <summary>
            Upper limit between controlled submerged flow and controlled free flow
            Type: Dimensional factor
            Unit: []
            Default: 1.05
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SluiceGate._upperLimit2">
            <summary>
            Upper limit between controlled free flow and uncontrolled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 1.55
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SluiceGate._upperLimit3">
            <summary>
            Upper limit between uncontrolled submerged flow and uncontrolled free flow
            Type: Dimensional factor
            Unit: []
            Default: 0.7
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SluiceGate._lowerLimit1">
            <summary>
            Lower limit between controlled submerged flow and controlled free flow
            Type: Dimensional factor
            Unit: []
            Default: 0.95
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SluiceGate._lowerLimit2">
            <summary>
            Lower limit between controlled free flow and uncontrolled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 1.45
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SluiceGate._lowerLimit3">
            <summary>
            Lower limit between uncontrolled submerged flow and uncontrolled free flow
            Type: Dimensional factor
            Unit: []
            Default: 0.6
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SluiceGate._horizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            Unit: [m]
            Defualt: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.SluiceGate._delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SluiceGate.#ctor">
            <summary>
            Constructor method for the sluice gate
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SluiceGate.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Set initial gate level and runtime diagnostics.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SluiceGate.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SluiceGate.dYcdHups(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculation of the derivative of Yc with respect to upstream water level
            </summary>
            <param name="a">Proportionality factor</param>
            <param name="b">Exponent</param>
            <param name="hDiff">Head difference across the structure</param>
            <param name="norm"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.SluiceGate.Validate">
            <summary>
            Validation of data for a sluice gate.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.Height">
            <summary>
            The height of the gate. This is used to evaluate if over topping can occur.
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.CsA">
            <summary>
            Factor used when calculating Yc for controlled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 1.12
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.CfA">
            <summary>
            Factor used when calculating Yc for controlled free flow
            Type: Dimensional factor
            Unit: []
            Default: 0.89
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.UsA">
            <summary>
            Factor used when calculating Yc for uncontrolled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 0.86
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.UfA">
            <summary>
            Factor used when calculating Yc for uncontrolled free flow and overtopping flow
            Type: Dimensional factor
            Unit: []
            Default: 0.77
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.CsB">
            <summary>
            Exponent used when calculating Yc for controlled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 0.21
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.CfB">
            <summary>
            Exponent used when calculating Yc for controlled free flow
            Type: Dimensional factor
            Unit: []
            Default: 0.17
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.UsB">
            <summary>
            Exponent used when calculating Yc for uncontrolled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 0.38
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.UpperLimit1">
            <summary>
            Upper limit between controlled submerged flow and controlled free flow
            Type: Dimensional factor
            Unit: []
            Default: 1.05
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.UpperLimit2">
            <summary>
            Upper limit between controlled free flow and uncontrolled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 1.55
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.UpperLimit3">
            <summary>
            Upper limit between uncontrolled submerged flow and uncontrolled free flow
            Type: Dimensional factor
            Unit: []
            Default: 0.7
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.LowerLimit1">
            <summary>
            Lower limit between controlled submerged flow and controlled free flow
            Type: Dimensional factor
            Unit: []
            Default: 0.95
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.LowerLimit2">
            <summary>
            Lower limit between controlled free flow and uncontrolled submerged flow
            Type: Dimensional factor
            Unit: []
            Default: 1.45
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.LowerLimit3">
            <summary>
            Lower limit between uncontrolled submerged flow and uncontrolled free flow
            Type: Dimensional factor
            Unit: []
            Default: 0.6
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.HorizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            Unit: [m]
            Defualt: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.Delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.InvertLevelUpstream">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.SluiceGate.InvertLevelDownstream">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.StructureModule.FreeOverFlowData">
            <summary>
            Represents the table of free overflow data for the special weir.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IFreeOverFlowData">
            <summary>
            Represents the table of free overflow data for the special weir.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IFreeOverFlowData.Count">
            <summary>
            Number of levels
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IFreeOverFlowData.Item(System.Int32)">
            <summary>
            Get/set level data for the specified index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.FreeOverFlowData.#ctor(System.Collections.Generic.IList{DHI.Mike1D.StructureModule.IFreeOverFlowLevelData})">
            <summary>
             Constructor, setting up data
            </summary>
            <param name="freeOverFlowLevelDataList"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.FreeOverFlowData.DischargeHPos(System.Double)">
            <summary>
            Return discharge
            </summary>
            <param name="waterLevel"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.FreeOverFlowData.DischargeDerivativeHPos(System.Double)">
            <summary>
            Return discharge derivative
            </summary>
            <param name="waterLevel"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.FreeOverFlowData.DischargeDerivativeHNegs(System.Double)">
            <summary>
            Return dischatge derivative
            </summary>
            <param name="waterLevel"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.FreeOverFlowData.DischargeHNegs(System.Double)">
            <summary>
             Get discharge at the upstream side
            </summary>
            <param name="waterLevel"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.FreeOverFlowData.CriticalWaterLevelHPos(System.Double)">
            <summary>
            Return critical water level
            </summary>
            <param name="waterLevel"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.FreeOverFlowData.CriticalWaterLevelHNegs(System.Double)">
            <summary>
             Get critical water level at the upstream side
            </summary>
            <param name="waterLevel"></param>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.FreeOverFlowData.Discharges">
            <summary>
            Gets all the Discharges of the collection.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.FreeOverFlowData.HPos">
            <summary>
            The positive (upstream) water levels.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.FreeOverFlowData.HNeg">
            <summary>
            The negative (downstream) water levels.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.FreeOverFlowData.HWeirs">
            <summary>
            The weir water levels.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.FreeOverFlowData.Areas">
            <summary>
            The weir areas
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.FreeOverFlowData.Widths">
            <summary>
            The weir widhts
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.FreeOverFlowData.Count">
            <summary>
            Return number of elements in the set, -1 if not defined
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.FreeOverFlowData.Item(System.Int32)">
            <summary>
            Get and set level data for each level
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.FreeOverFlowLevelData">
            <summary>
            Represents free over flow data for one level.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IFreeOverFlowLevelData">
            <summary>
            Represents free over flow data for one level.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IFreeOverFlowLevelData.Area">
            <summary>
            Flow Area through the weir.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IFreeOverFlowLevelData.Discharge">
            <summary>
             Discharge in case of free overflow.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IFreeOverFlowLevelData.HNeg">
            <summary>
            UpStream water level (compared to flow dir) in case of negative flow.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IFreeOverFlowLevelData.HPos">
            <summary>
            UpStream water level in case of positive flow.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IFreeOverFlowLevelData.HWeir">
            <summary>
            Water level at the weir.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IFreeOverFlowLevelData.Width">
            <summary>
            Flow Width through weir.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FreeOverFlowLevelData._discharge">
            <summary>
             Discharge in case of free overflow.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FreeOverFlowLevelData._hPos">
            <summary>
            UpStream water level in case of positive flow.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FreeOverFlowLevelData._hNeg">
            <summary>
            UpStream water level (compared to flow dir) in case of negative flow.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FreeOverFlowLevelData._hWeir">
            <summary>
            Water level at the weir.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FreeOverFlowLevelData._crestWidth">
            <summary>
            Flow Width through weir.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FreeOverFlowLevelData._area">
            <summary>
            Flow Area through the weir.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.FreeOverFlowLevelData.#ctor">
            <summary>
            Default constructor. Sets all members to zero.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.FreeOverFlowLevelData.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor. Sets the value of all members. 
            </summary>
            <param name="discharge">Discharge through weir. [m3/sec]</param>
            <param name="hPos">Upstream water level in case of positive flow. [m]</param>
            <param name="hNeg">Upstream water level in case of negative flow. [m]</param>
            <param name="hWeir">Water level at the weir opening. [m]</param>
            <param name="crestWidth">Width of the weir crest. [m]</param>
            <param name="area">Flow area through the weir. [m2]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.FreeOverFlowLevelData.CompareTo(DHI.Mike1D.StructureModule.IFreeOverFlowLevelData)">
            <summary>
            Allows for sorting after discharge.
            </summary>
            <param name="obj"></param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.FreeOverFlowLevelData.Clone">
            <summary>
            Returns a copy of the object
            </summary>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.FreeOverFlowLevelData.Discharge">
            <summary>
             Discharge in case of free overflow.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.FreeOverFlowLevelData.HPos">
            <summary>
            UpStream water level in case of positive flow.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.FreeOverFlowLevelData.HNeg">
            <summary>
            UpStream water level (compared to flow dir) in case of negative flow.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.FreeOverFlowLevelData.HWeir">
            <summary>
            Water level at the weir.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.FreeOverFlowLevelData.Width">
            <summary>
            Flow Width through weir.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.FreeOverFlowLevelData.Area">
            <summary>
            Flow Area through the weir.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.FreeOverFlowLevelData.ExtensionData">
            <summary>
            Property used by (de)serializer, when it can not find proper target for
            a data field. Support of forward compatible data contracts. 
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IBroadCrestedWeir">
            <summary>
            Interface for the special weir. Gives access to the Weir geometry data (Datum and LevelWidth) and to
            the cross section data for up- and down- stream cross sections.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.IBroadCrestedWeir.CalculateFreeOverFlowQhRelation(System.Int32)">
            <summary>
            Calculate the free overflow (critical flow) discharge table with the specified number of entries.
            If this function is not called, then the default number of levels is 20.
            </summary>
            <param name="noOfLevels"></param>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBroadCrestedWeir.SpecialWeir">
            <summary>
            Flag specifying whether the special weir formulation is enabled.
            <para>
            For the special weir, the Q-h relations are defined by the user, and
            the <see cref="P:DHI.Mike1D.StructureModule.IBroadCrestedWeir.WeirGeometry"/> is not used and need not be defined.
            The <see cref="M:DHI.Mike1D.StructureModule.IBroadCrestedWeir.CalculateFreeOverFlowQhRelation(System.Int32)"/>
            will have no effect.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBroadCrestedWeir.FreeOverFlowQHRelations">
            <summary>
            Table that specifies the relations betweem upstream water level, discharge, water level at the weir,
            and flow area. The relations holds for critical flow only, i.e. for flow that is not influenced by
            the downstream waterlevel. Data are specified for both positive and negtive flow (HPos and HNeg).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBroadCrestedWeir.WeirGeometry">
            <summary>
            Weir geometry
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.BroadCrestedWeir">
             <summary>
             The class models a broad crested weir. The flow is either critical flow in which case 
             the downstream condition has no influence on the flow or is submerged flow 
             in which case the flow depends on both the upstream and the downstream water level.
            
             The special weir is a special version of the broad crested weir. Conversely to the broad crested 
             weir, the special weir does not offer calculation of the critical flow conditions from the weir
             geometry. The special weir always has Q/h relations specified by the user. For the special weir, 
             the <see cref="P:DHI.Mike1D.StructureModule.BroadCrestedWeir.SpecialWeir"/>.
             
             The flow through the structure is governed by the energy loss due to the
             flow contraction on the upstream side of the weir and by the energy loss due
             to flow expansion on the downstream side.
             </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BroadCrestedWeir._freeOverFlowData">
            <summary>
            FreeOverFlowData holds the free overflow data table.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BroadCrestedWeir._weirGeometry">
            <summary>
            Geometry data for the structure
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BroadCrestedWeir._horizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeir.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeir.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Prepare the weir: Set the cross sections on each side of the weir.
            </summary>
            <param name="crossSectionData">Cross section data to get cross section on each side of the structure</param>
            <param name="isLinkStructure"> </param>
            <param name="diagnostics">Diagnostics that errors are reported to</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeir.Prepare(DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeir.Validate">
            <summary>
            Writes errors, warnings and hints into their respective member classes. The member objects are initially cleared.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeir.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeir.CalculateCriticalConditions(System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="criticalDischarge"></param>
            <param name="dCriticalDischargedInflowWaterLevel"></param>
            <param name="criticalWaterLevel"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeir.GetArea(System.Double)">
            <summary>
            Calculates the structure flow area for a given depth.
            </summary>
            <param name="structureWaterLevel">structure water level. [m]</param>
            <returns>structure flow area for a given depth</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeir.GetWidth(System.Double)">
            <summary>
            Calculates the structure flow area for a given depth.
            </summary>
            <param name="structureWaterLevel">structure water level. [m]</param>
            <returns>structure flow area for a given depth</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeir.CalculateFreeOverFlowQhRelation(System.Int32)">
            <summary>
            Find the levels that the Free overflow values are to be calculated fore.
            After that Width and Area are found by interpolation in the cross section
            data specified.
            <para>
            For <see cref="P:DHI.Mike1D.StructureModule.BroadCrestedWeir.SpecialWeir"/> true, this has no effect.
            </para>
            </summary>
            <param name="noOfLevels">No of levels to compute free overflow conditions for</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeir.CalculateCriticalFlow(System.Double,System.Double,System.Double@)">
            <summary>
            Integrates numerically using the trapezoid integration.
            </summary>
            <param name="waterLevel"></param>
            <param name="width"></param>
            <param name="velocityHead"></param>
            <returns>Critical discharge</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeir.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeir.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BroadCrestedWeir.FreeOverFlowQHRelations">
            <summary>
            FreeOverFlowData holds the free overflow data table.
            If FreeOverFlowData is modified, then Initialize() must be called
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BroadCrestedWeir.SpecialWeir">
            <summary>
            Flag specifying whether the special weir formulation is enabled.
            <para>
            Default is false.
            </para>
            <para>
            For the special weir, the Q-h relations are defined by the user, and
            the <see cref="P:DHI.Mike1D.StructureModule.BroadCrestedWeir.WeirGeometry"/> is not used and need not be defined.
            The <see cref="M:DHI.Mike1D.StructureModule.BroadCrestedWeir.CalculateFreeOverFlowQhRelation(System.Int32)"/>
            will have no effect.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BroadCrestedWeir.WeirGeometry">
            <summary>
            Geometry data for the structure
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BroadCrestedWeir.HorizontalOffSetFromMarker2">
            <summary>
            Horizontal offset of the structures compared to its limiting cross sections.
            </summary>    
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BroadCrestedWeir.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BroadCrestedWeir.InvertLevelUpstream">
            <summary>
            Invert level up stream
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BroadCrestedWeir.InvertLevelDownstream">
            <summary>
            Invert level down stream
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IBroadCrestedWeirGeometry">
            <summary>
            Specification of the weir geometry
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBroadCrestedWeirGeometry.Datum">
            <summary>
            Datum/offset which is added to the level column in the level/width table to get true level. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBroadCrestedWeirGeometry.LevelWidths">
            <summary>
            Weir geometry defined as levels and corresponding flow widths. 
            <para>
            The levels are relative to the <see cref="P:DHI.Mike1D.StructureModule.IBroadCrestedWeirGeometry.Datum"/>.
            </para>
            <para>
            Levels must be increasing.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBroadCrestedWeirGeometry.GeometryDataFromCrossSections">
            <summary>
            Flag specifying that the weir geometry is specified in the cross section database.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBroadCrestedWeirGeometry.GeometryCrossSectionLocation">
            <summary>
            Location of cross section data for weir geometry. 
            <para>
            If null, the location of the structure in the network is used (<see cref="P:DHI.Mike1D.StructureModule.IStructure.Location"/>).
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IBroadCrestedWeirGeometry.GeometryCrossSectionTopoId">
            <summary>
            TopoID of cross section data for weir geometry. 
            <para>
            If null, the topo id of the structure in the network is used (<see cref="P:DHI.Mike1D.StructureModule.IStructure.TopoID"/>).
            </para>
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry">
            <summary>
            Cross section 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry._datum">
            <summary>
            Datum/offset which is added to the level column in the level/width table to get true level. 
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry._levelWidths">
            <summary>
            Weir geometry defined as levels and corresponding flow widths. 
            <para>
            The levels are relative to the <see cref="P:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.Datum"/>.
            </para>
            <para>
            Levels must be increasing.
            </para>
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry._crossSection">
            <summary>
            Cross section defining the weir geometry, set during initialize
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry._levelWidthAreas">
            <summary>
            Processed geometry data. The data is used internally only. The data are datum corrected.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.RawDataCount">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.ProcessedDataCount">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.GetRawDataLevel(System.Int32)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.GetProcessedDataLevel(System.Int32)">
            <summary>
             Get processed water level at index i 
            </summary>
            <param name="i"></param>
            <returns></returns>
            <exception cref="T:DHI.Mike1D.Generic.Mike1DException"></exception>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.GetRawDataWidth(System.Int32)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.GetProcessedDataWidth(System.Int32)">
            <summary>
            Get width of weir from processed data
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.GetProcessedDataArea(System.Int32)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.GetArea(System.Double)">
            <summary>
            Calculates the structure flow area for a given depth.
            </summary>
            <param name="structureWaterLevel">structure water level. [m]</param>
            <returns>structure flow area for a given depth</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.GetWidth(System.Double)">
            <summary>
            Calculates the structure flow width for a given depth.
            </summary>
            <param name="structureWaterLevel">structure water level. [m]</param>
            <returns>structure flow width for a given depth</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.Initialize(System.Int32)">
            <summary>
            Derives a geometry table (_levelWidthAreas) from the specified geometry (_levelWidth). 
            The derived table has entrances at the levels where the free overflow data is specified.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.Validate(System.String)">
            <summary>
            Validates the specified section
            </summary>
            <returns></returns>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.Datum">
            <summary>
            Datum/offset which is added to the level column in the level/width table to get true level. 
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.LevelWidths">
            <summary>
            Weir geometry defined as levels and corresponding flow widths. 
            <para>
            The levels are relative to the <see cref="P:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.Datum"/>.
            </para>
            <para>
            Levels must be increasing.
            </para>
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.GeometryDataFromCrossSections">
            <summary>
            Flag specifying wether to use geometry data from cross section database.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.GeometryCrossSectionLocation">
            <summary>
            Location of cross section data for weir geometry. If null, the location of the structure in the network is used.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.GeometryCrossSectionTopoId">
            <summary>
            TopoID of cross section data for weir geometry. 
            If null or empty, the topo id of the structure in the network is used.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.CrossSection">
            <summary>
            Cross section defining the weir geometry
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.BroadCrestedWeirGeometry.LowestLevel">
            <summary>
             Get lowest water level 
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ITabulated">
            <summary>
            Tabulated structure interface
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.ITabulated.AllocateTable(System.Int32,System.Int32)">
            <summary>
            allocates <see cref="P:DHI.Mike1D.StructureModule.ITabulated.Table"/>, <see cref="P:DHI.Mike1D.StructureModule.ITabulated.RowHeader"/> and
            <see cref="P:DHI.Mike1D.StructureModule.ITabulated.ColumnHeader"/> with the specified sizes.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ITabulated.WaterLevelDatum">
            <summary>
            Datum to be applied to all water levels specified in the table.
            Type: water level
            Unit: [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ITabulated.DischargeFactor">
            <summary>
            Factor that are multiplied with the discharge found from the table.
            Type: discharge
            Unit: [m3/s]
            Default: 1.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ITabulated.NumberOfRows">
            <summary>
            Number of rows
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ITabulated.NumberOfCols">
            <summary>
            Number of columns in the table
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ITabulated.ColumnHeader">
            <summary>
            Holds the header for the columns
            Type : Water level or discharge depending on the chosen calculation mode
            Unit: [m3/s] or [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ITabulated.RowHeader">
            <summary>
            Holds the header for the rows
            Type : Water level 
            Unit: [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ITabulated.Table">
            <summary>
            Holds the table
            Type : Water level or discharge depending on the chosen calculation mode
            Unit: [m3/s] or [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.ITabulated.CalculationMode">
            <summary>
            Integer telling how the table should be interpreted
            When 0 then Q = f(Hups, Hdws)
            When 1 then Hups = f(Hdws, Q)
            When 2 then Hdws = f(Hups, Q)
            Type: dimensionless
            Unit: []
            Default: 0
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.Tabulated">
            <summary>
            Tabulated structures, supporting 3 different types of tables:
            <list type="bullet">
             <item>Q    = f(Hups, Hdws)</item>
             <item>Hups = f(Hdws, Q)</item>
             <item>Hdws = f(Hups, Q)</item>
            </list>
            The first argument (<see cref="P:DHI.Mike1D.StructureModule.Tabulated.RowHeader"/>) will always contain water levels,
            while the second argument (<see cref="P:DHI.Mike1D.StructureModule.Tabulated.ColumnHeader"/> can be either water level
            or discharge values, and opposite for the output (<see cref="P:DHI.Mike1D.StructureModule.Tabulated.Table"/>), depending
            on the <see cref="P:DHI.Mike1D.StructureModule.Tabulated.CalculationMode"/>.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Tabulated._waterLevelDatum">
            <summary>
            Datum to be applied to all water levels specified in the table.
            Type: water level
            Unit: [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Tabulated._dischargeFactor">
            <summary>
            Factor that are multiplied with the discharge found from the table.
            Type: discharge
            Unit: [m3/s]
            Default: 1.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Tabulated._columnHeader">
            <summary>
            Holds the header for the columns
            Type : Water level or discharge depending on the chosen calculation mode
            Unit: [m3/s] or [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Tabulated._rowHeader">
            <summary>
            Holds the header for the rows
            Type : Water level 
            Unit: [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Tabulated._table">
            <summary>
            Holds the table
            Type : Water level or discharge depending on the chosen calculation mode
            Unit: [m3/s] or [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Tabulated._calculationMode">
            <summary>
            Integer telling how the table should be interpreted
            When 0 then Q = f(Hups, Hdws)
            When 1 then Hups = f(Hdws, Q)
            When 2 then Hdws = f(Hups, Q)
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Tabulated._delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Tabulated.#ctor">
            <summary>
            Constructor method for the tabulated structure
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Tabulated.AllocateTable(System.Int32,System.Int32)">
            <summary>
            Allocate table of certain sizes
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Tabulated.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Tabulated.FlowAtTabulatedStructure(System.Double,System.Double)">
            <summary>
            This function calculates the discharge and the derivatives of the discharge
            with respect to up- and downstream water levels.
            </summary>
            <param name="upsH">Upstream water level [m]</param>
            <param name="dwsH">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Tabulated.FlowAtTabulatedStructureMode1And2(System.Double,System.Double)">
            <summary>
            This function calculates the discharge and the derivatives of the discharge
            with respect to up- and downstream water levels, for _calculationMode == 1 and _calculationMode == 2.
            This version is faster than the general version above.
            </summary>
            <param name="upsH">Upstream water level [m]</param>
            <param name="dwsH">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Tabulated.FlowAtTabulatedStructureMode0(System.Double,System.Double)">
            <summary>
            This function calculates the discharge and the derivatives of the discharge
            with respect to up- and downstream water levels, for _calculationMode == 0.
            This version is faster than the general version above.
            </summary>
            <param name="upsH">Upstream water level [m]</param>
            <param name="dwsH">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Tabulated.SortOutQandH(System.Double[]@,System.Double[]@)">
            <summary>
            Sorting out Q and H vectors.
            </summary>
            <param name="Q">Q vector is returned holding the discharge vector.</param>
            <param name="H">WL vector is returned holding the water level vector</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Tabulated.CheckIfArgumentIsValid(System.Double,System.Double[])">
            <summary>
            Checks if an argument to an vector is outside the interval defined by the vector.
            </summary>
            <param name="x">Argument to be checked</param>
            <param name="xTable">Vector</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Tabulated.Validate">
            <summary>
            Validation of data for a tabulated structure.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Tabulated.CalcMinWaterLevel">
            <summary>
            Calculates the minimum water level defined in the table.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Tabulated.WaterLevelDatum">
            <summary>
            Datum to be applied to all water levels specified in the table.
            Type: water level
            Unit: [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Tabulated.DischargeFactor">
            <summary>
            Factor that are multiplied with the discharge found from the table.
            Type: discharge
            Unit: [m3/s]
            Default: 1.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Tabulated.ColumnHeader">
            <summary>
            Holds the header for the columns
            Type : Water level or discharge depending on the chosen calculation mode
            Unit: [m3/s] or [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Tabulated.RowHeader">
            <summary>
            Holds the header for the rows
            Type : Water level 
            Unit: [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Tabulated.Table">
            <summary>
            Holds the table
            Type : Water level or discharge depending on the chosen calculation mode
            Unit: [m3/s] or [meter]
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Tabulated.CalculationMode">
            <summary>
            Integer telling how the table should be interpreted
            When 0 then Q = f(Hups, Hdws)
            When 1 then Hups = f(Hdws, Q)
            When 2 then Hdws = f(Hups, Q)
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Tabulated.Delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Tabulated.NumberOfRows">
            <summary>
            Number of rows in the table
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Tabulated.NumberOfCols">
            <summary>
            Number of columns in the table
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Tabulated.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Tabulated.InvertLevelUpstream">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Tabulated.InvertLevelDownstream">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IUnderFlowGate">
            <summary>
            
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IUnderFlowGate.UnderFlowCoefficient">
            <summary>
            Contraction coefficient.
            Type: Dimensionless factor
            Unit: []
            Default: 0.63
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IUnderFlowGate.SurchargedUnderflowCoefficient">
            <summary>
            Coefficient used to avoid instabillities when switching from subcritical to critical.
            Type: Dimensionless factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IUnderFlowGate.UnderflowTransitionCoefficient">
            <summary>
            Coefficient used to avoid instabillities when switching from submerged gate to not submerged gate.
            Type: Dimensionless factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.UnderFlowGate">
            <summary>
            Description of an underflow gate. An underflow gate is in this context a broad crested weir with a rectangular 
            opening that may be limited upward by the gate. In case the gate is not submerged the gate will act a 
            broad crested weir.
            
            The under flow gate is a controlable structure. It allows the gate level to be varied.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.UnderFlowGate._underflowCoefficient">
            <summary>
            Contraction coefficient.
            Type: Dimensionless factor
            Unit: []
            Default: 0.63
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.UnderFlowGate._surchargedUnderflowCoefficient">
            <summary>
            Coefficient used to avoid instabillities when switching from subcritical to critical.
            Type: Dimensionless factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.UnderFlowGate._underflowTransitionCoefficient">
            <summary>
            Coefficient used to make a continuos transistion between
            submerged and not submerged flow beneath the gate.
            Unit: []
            Default: 0.00.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.UnderFlowGate._horizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            Unit: [m]
            Defualt: 0
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.#ctor">
            <summary>
            Constructor. Sets the default values.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.UnderFlowGateFlow">
            <summary>
            Calculation of the flow at a submerged underflow gate. It is assumed that the gate is open, i.e. the gate level
            is above sill level. If not this is dealt with in 'SetWaterlevels' by calling 'SetZeroFlow'. An implication of this
            is that the upstream water level is above sill level otherwise the gate would not be submerged.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.GateOpening">
            <summary>
            Calculation of the gate opening
            </summary>
            <returns>Gate opening calculated as gate level minus sill level</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.CriticalDischarge(System.Double)">
            <summary>
            Calculation of the critical discharge for submerged underflow gates
            </summary>
            <param name="upsDepth">Upstream depth above sill level</param>
            <returns>Critical discharge for submerged underflow gate</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.CalculateVelocity(System.Double,System.Double)">
            <summary>
            Calculates velocity form discharge and area
            </summary>
            <param name="Q">Discharge</param>
            <param name="A">Area</param>
            <returns>Velocity based on discharge and area</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.CalculateFroude(System.Double,System.Double)">
            <summary>
            Calculation of Froude number
            </summary>
            <param name="velocity">velocity</param>
            <param name="depth">depth</param>
            <returns>the Froude number based on velocity and depth</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.CalculateMaxTailWaterLevel(System.Double,System.Double)">
            <summary>
            Calculation of the max downstream depth above the sill for which a hydraulic jump can exist
            </summary>
            <param name="fr">Froude number</param>
            <param name="depth">contracted flow depth at the structure</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.SubcriticalDischarge(System.Double)">
            <summary>
            Calculation of the subcritical discharge for a submerged underflow gate
            </summary>
            <param name="head">the head across the structure</param>
            <returns>subcritical discharge for a submerged underflow gate</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.SubcriticalDerivativeUPS(System.Double)">
            <summary>
            Calculation of the derivative of the subcritical flow with respect to the upstream water level.
            </summary>
            <param name="head">The head across the structure</param>
            <returns>derivative of the subcritcal flow with respect to upstream water level</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.CriticalDerivativeUPS(System.Double)">
            <summary>
            Calculation of the derivative of the subcritical flow with respect to the upstream water level.
            </summary>
            <param name="upsDepth">Upstream depth above sill level</param>
            <returns>derivative of the subcritcal flow with respect to upstream water level</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.GetDepth(System.Double)">
            <summary>
            Returns the depth at the structure. The result depend on the flow type at the structure
            </summary>
            <param name="waterLevel">Water level at the structure</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.GetInvertLevel">
            <summary>
            Returns the sill level of the structure.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.GetArea(System.Double)">
            <summary>
            Returns the flow area at the structure. The result depend on the flow type at the structure
            </summary>
            <param name="structureWaterLevel">water level at the structure</param>
            <returns></returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.Validate">
            <summary>
            Validation of data for an underflow gate.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.ControlClose(System.Int32)">
            <summary>
            Close gate
            </summary>
            <param name="controlStrategyId">Control strategy currently used.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.ControlOpen(System.Int32)">
            <summary>
            Open gate
            </summary>
            <param name="controlStrategyId">Control strategy currently used.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.UnderFlowGate.GetControlAction(System.String)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.UnderFlowGate.UnderFlowCoefficient">
            <summary>
            Contraction coefficient.
            Type: Dimensionless factor
            Unit: []
            Default: 0.63
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.UnderFlowGate.SurchargedUnderflowCoefficient">
            <summary>
            Coefficient used to avoid instabillities when switching from subcritical to critical.
            Type: Dimensionless factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.UnderFlowGate.UnderflowTransitionCoefficient">
            <summary>
            Coefficient used to avoid instabillities when switching from submerged gate to not submerged gate.
            Type: Dimensionless factor
            Unit: []
            Default: 0.0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.UnderFlowGate.HorizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            Unit: [m]
            Defualt: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.UnderFlowGate.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.UnderFlowGate.InvertLevelUpstream">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.UnderFlowGate.InvertLevelDownstream">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.StructureModule.Valve">
            <summary>
            Calculation of the flow through a valve
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Valve._flowAreaAtFullGateOpening">
            <summary>
            The flow area of the valve if the gate is fully open
            Type: River Structure Geometry
            Unit: [m2]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Valve._invertLevel">
            <summary>
            The invert level of the valve
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Valve._minValveOpening">
            <summary>
            Minimum valve opening, when valve is controlled
            Unit: fraction [0;1]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Valve._maxValveOpening">
            <summary>
            Maximum valve opening, when valve is controlled
            Unit: fraction [0;1]
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Valve._maxValveSpeed">
            <summary>
            Maximum valve speed, i.e. speed with which it can open and close
            Unit: [/s] - fraction per second
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Valve._delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Valve.ExplicitStructureSupport">
            <summary>
            DEBUG: This method is called from Prepare() if _implitcit == false to check if
            the structure supports being Explicit.
            Once all structures support explicit operation this method can be deleted.
            </summary>
            <returns></returns>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.Valve._valveOpening">
            <summary>
            The opening of the valve as a fraction. This value is overwritten if RTC is applied.
            Type: River Structure Geometry
            Unit: fraction [0;1]
            Default: 0
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Valve.#ctor">
            <summary>
            Constructor method for the valve
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Valve.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Valve.PrepareTimeStep(System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Valve.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Valve.Validate">
            <summary>
            Validation of data for a valve structure.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Valve.ControlSetValveOpening(System.Double,System.Int32)">
            <summary>
            Set new valve opening
            </summary>
            <param name="newValveOpening">New valve opening</param>
            <param name="controlStrategyId">Control strategy currently used.</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Valve.GetControlAction(System.String)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Valve.GetCurrentValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Valve.ResetControlledState">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Valve.Offers">
            <summary>
            List of data types that is offered and can be used in GetValue
            </summary>
            <returns>List of data types offered</returns>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Valve.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Valve.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Valve.Diameter">
            <summary>
            The diameter of the valve
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Valve.FlowArea">
            <summary>
            The flow area of the valve if the gate is fully open
            Type: River Structure Geometry
            Unit: [m2]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Valve.InvertLevel">
            <summary>
            The invert level of the valve
            Type: River Structure Geometry
            Unit: [m]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Valve.ValveOpening">
            <summary>
            The opening of the valve as a fraction. This is the initial value only, the actual value may be changed if RTC is applied.
            Type: River Structure Geometry
            Unit: fraction [0;1]
            Default: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Valve.FlowFactorTable">
            <summary>
            Table holding flow factor as a function of opening (as fraction [0;1]).
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Valve.MinValveOpening">
            <summary>
            Minimum valve opening, when valve is controlled
            Unit: fraction [0;1]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Valve.MaxValveOpening">
            <summary>
            Maximum valve opening, when valve is controlled
            Unit: fraction [0;1]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Valve.MaxValveSpeed">
            <summary>
            Maximum valve speed, i.e. speed with which it can open and close
            Unit: [/s] - fraction per second
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Valve.Delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Valve.CurrentValveOpening">
            <summary>
            For structure with control, the valve opening may change. Use this property to 
            get/set the current valve opening.
            Unit: fraction [0;1]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Valve.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Valve.InvertLevelUpstream">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Valve.InvertLevelDownstream">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.StructureModule.ValveType">
            <summary>
            Valve type.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ValveType.None">
            <summary>
            No valve.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ValveType.OnlyNegativeFlow">
            <summary>
            Only allow negative flow.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ValveType.OnlyPositiveFlow">
            <summary>
            Only allow positive flow.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.ValveType.NoFlow">
            <summary>
            Do not allow flow.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.FlowDir">
            <summary>
            FlowDir type. Used for readability of the code.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FlowDir.NegativeFlow">
            <summary>
            Negative flow direction. I.e. flow towards lower chainage.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FlowDir.NoFlow">
            <summary>
            Flow is standing still. This flag is not used, in case of no water level difference, PositiveFlow is set.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.FlowDir.PositiveFlow">
            <summary>
            Positive flow direction. I.e. flow towards higher chainage.
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.StructureCollection">
            <summary>
            Data access model for the structure module.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.StructureCollection._structures">
            <summary>
            List of structures.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.StructureCollection._removableStructureLocations">
            <summary>
            List of locations for structures that can be removed, and replaced
            by an ordinary HD calculation
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.StructureCollection._compositStructures">
            <summary>
            Composite structures
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.StructureCollection._diagnostics">
            <summary>
            Diagnostics are written into this member when Validate is called and during calculations.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureCollection.#ctor">
            <summary>
            Constructor method for the StrucutreCollection class
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureCollection.Finish">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureCollection.Load(System.String,System.String)">
            <summary>
            Loads a collection of structures from a file or data base.
            </summary>
            <param name="specification">specification changes from bridge to bridge</param>
            <param name="bridgeName">Name of bride</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureCollection.Load(System.IntPtr,System.String)">
            <param name="sectionPointer"></param>
            <param name="bridgeName"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureCollection.Load(DHI.PFS.PFSSection,System.String)">
            <param name="section"></param>
            <param name="bridgeName"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureCollection.Load(System.IntPtr,System.String,DHI.Mike1D.ControlModule.ControlData,DHI.Mike1D.Generic.IDiagnostics)">
            <param name="sectionPointer"></param>
            <param name="bridgeName"></param>
            <param name="controlData"></param>
            <param name="diagnostics"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureCollection.Load(DHI.PFS.PFSSection,System.String,DHI.Mike1D.ControlModule.ControlData,DHI.Mike1D.Generic.IDiagnostics)">
            <param name="section"></param>
            <param name="bridgeName"></param>
            <param name="controlData"></param>
            <param name="diagnostics"></param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureCollection.Load(System.String,System.String,DHI.Mike1D.ControlModule.ControlData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Load a structure collection
            </summary>
            <param name="filePath"></param>
            <param name="bridgeName"></param>
            <param name="controlData"></param>
            <param name="diagnostics"></param>
            <exception cref="T:DHI.Mike1D.Generic.Mike1DException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureCollection.Validate">
            <summary>
            Validates the data of all strucures in the collection. Diagnostics, Warning and Hints are collected in each of 
            the published classes for the purpose.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureCollection.SetDelhsForAllStructures(System.Double)">
            <summary>
            Forces a setting of Delhs for all structures in the collection that uses 
            linear zero variation. 
            <para>
            For water level differences less than Delhs a linear Q variation is used
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            </para>
            <para>
            Note that structures subsequently added to the collection, do not automatically
            get the Delhs value. 
            </para>
            <para>
            Unit: [m].
            Default: 0.01
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureCollection.SetMinumHeadlossForAllStructures(System.Double)">
            <summary>
            Minimum head loss across a structure.
            Default value = 0.01
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureCollection.SetMaximumIterationsForAllStructures(System.Int32)">
            <summary>
            Minimum head loss across a structure.
            Default value = 0.01
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureCollection.Initialize(DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Initialize structure collection. Use only when no boundary and cross section data is 
            available, typically when the structure module is used independently 
            (not part of network simulation)
            <para>
            Collects structures with identical location in composite structures.
            </para>
            <para>
            This automatically calls <see cref="!:IStructure.Initialize(IBoundaryData, CrossSectionData,bool,IDiagnostics)"/>
            on each structure in the collection, setting the IsLinkStructure to true (no cross sectino data available) 
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureCollection.Initialize(DHI.Mike1D.BoundaryModule.IBoundaryData,DHI.Mike1D.CrossSectionModule.CrossSectionData,DHI.Mike1D.Generic.IDiagnostics)">
            <summary>
            Initialize structure collection
            <para>
            Collects structures with identical location in composite structures.
            </para>
            <para>
            This does not call <see cref="!:IStructure.Initialize(IBoundaryData, CrossSectionData,bool,IDiagnostics)"/>. 
            You need also to call initialize on each structure individually.
            </para>
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureCollection.Prepare(DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureCollection.Prepare(System.DateTime,DHI.Mike1D.HDParameterDataAccess.HDParameterData,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.StructureCollection.ResetControlledState">
            <summary>
            Reset the controlled state of all controllable structures in the collection
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StructureCollection.Parameters">
            <summary>
            Parameters used during initialization
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StructureCollection.RemovableStructureLocations">
            <summary>
            List of locations of structures that can be removed, and replaced
            by an ordinary HD calculation, as if there where not structure there
            originally.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StructureCollection.Structures">
            <summary>
            Gets the collection of structures.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.StructureCollection.CompositStructures">
            <summary>
            Composite structures
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.Structures">
            <summary>
            List of structures.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structures.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structures.Add(DHI.Mike1D.StructureModule.IStructure)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structures.Clear">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structures.Contains(DHI.Mike1D.StructureModule.IStructure)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structures.CopyTo(DHI.Mike1D.StructureModule.IStructure[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structures.Remove(DHI.Mike1D.StructureModule.IStructure)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structures.IndexOf(DHI.Mike1D.StructureModule.IStructure)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structures.Insert(System.Int32,DHI.Mike1D.StructureModule.IStructure)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structures.RemoveAt(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structures.System#Collections#Generic#IEnumerable{DHI#Mike1D#StructureModule#IStructure}#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structures.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.Structures.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structures.Count">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structures.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.Structures.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Mike1D.StructureModule.IVillemonteWeir">
            <summary>
            The VillemonteWeir (Weir formula 1) class describes weir flow modelled with the Villemonte 
            formula.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IVillemonteWeir.Width">
            <summary>
            Width of the weir opening. Width is perpendicular to the flow direction, i.e. "across the river"
            Type: River Structure Geometry
            Unit: [m]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IVillemonteWeir.Height">
            <summary>
            Height above invert level.
            Type: River Structure Geometry
            Unit: [m]
            </summary>    
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IVillemonteWeir.InvertLevel">
            <summary>
            Bottom datum level.
            Type: River Structure Geometry
            Unit: [m]
            </summary>    
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IVillemonteWeir.WeirCoefficient">
            <summary>
            Multiplication factor in the weir formula.
            Type: Chezy number
            Unit: [m^(1/2)/s]
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.IVillemonteWeir.WeirExponent">
            <summary>
            Exponential coefficinet in te weir formula. 
            Type: Dimensional factor
            Unit: []
            </summary>
        </member>
        <member name="T:DHI.Mike1D.StructureModule.VillemonteWeir">
            <summary>
            The VillemonteWeir (Weir formula 1) class describes weir flow modelled with the Villemonte 
            formula.
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.VillemonteWeir.EXPONENT">
            <summary>
            Outer fixed exponent
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.VillemonteWeir._crestWidth">
            <summary>
            Width of the weir opening. Width is perpendicular to the flow direction, i.e. "across the river"
            Type: River Structure Geometry
            Unit: [m]
            Default: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.VillemonteWeir._height">
            <summary>
            Height above invert level.
            Type: River Structure Geometry
            Unit: [m]
            Default: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.VillemonteWeir._invertLevel">
            <summary>
            Bottom datum level.
            Type: River Structure Geometry
            Unit: [m]
            Default: 1
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.VillemonteWeir._weirCoefficient">
            <summary>
            Multiplication factor in the weir formula.
            Type: Chezy number
            Unit: [m^(1/2)/s]
            Default: 1.838
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.VillemonteWeir._weirExponent">
            <summary>
            Exponential coefficinet in te weir formula. 
            Type: Dimensional factor
            Unit: []
            Default: 1.5
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.VillemonteWeir._horizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            Unit: [m]
            Defualt: 0
            </summary>
        </member>
        <member name="F:DHI.Mike1D.StructureModule.VillemonteWeir._delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.VillemonteWeir.#ctor">
            <summary>
            Constructor method for the VillemonteWeir class
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.VillemonteWeir.Initialize(DHI.Mike1D.StructureModule.IStructureCollection,DHI.Mike1D.CrossSectionModule.CrossSectionData,System.Boolean,DHI.Mike1D.Generic.IDiagnostics)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.VillemonteWeir.Validate">
            <summary>
            Writes errors, warnings and hints into their respective member classes. The member objects are initially cleared.
            </summary>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.VillemonteWeir.SetWaterLevels(System.Double,System.Double)">
            <summary>
            Sets up- and down- stream water level and forces the calculation of the discharge and its derivatives.
            </summary>
            <param name="upStreamWaterLevel">Upstream water level [m]</param>
            <param name="downStreamWaterLevel">Downstream water level [m]</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.VillemonteWeir.VillemonteWeirFlow(System.Double,System.Double)">
            <summary>
            Evaluate Villemonte formula
            </summary>
            <param name="x">Upstream depth above crest</param>
            <param name="y">Downstream depth above crest</param>
        </member>
        <member name="M:DHI.Mike1D.StructureModule.VillemonteWeir.ValueGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Mike1D.StructureModule.VillemonteWeir.ValueFractionGetter(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.VillemonteWeir.Width">
            <summary>
            Width of the weir opening. Width is perpendicular to the flow direction, i.e. "across the river"
            Type: River Structure Geometry
            Unit: [m]
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.VillemonteWeir.Height">
            <summary>
            Height above invert level.
            Type: River Structure Geometry
            Unit: [m]
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.VillemonteWeir.InvertLevel">
            <summary>
            Bottom datum level.
            Type: River Structure Geometry
            Unit: [m]
            Default: 1
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.VillemonteWeir.WeirCoefficient">
            <summary>
            Multiplication factor in the weir formula.
            Type: Chezy number
            Unit: [m^(1/2)/s]
            Defualt: 1.838
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.VillemonteWeir.WeirExponent">
            <summary>
            Exponential coefficinet in te weir formula. 
            Type: Dimensional factor
            Unit: []
            Default: 1.5
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.VillemonteWeir.HorizontalOffSetFromMarker2">
            <summary>
            Value used when plotting the structue
            Unit: [m]
            Defualt: 0
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.VillemonteWeir.Delhs">
            <summary>
            Linear flow variation.                                               
            For water level differences less than delhs use a linear Q variation 
            between h1-h2=delhs and h1-h2=0. This is to avoid stability problems 
            for small water level differences where dQdh goes to infinity.  
            Unit: [m]
            Default: 0.01
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.VillemonteWeir.Type">
            <summary>
            Structure type, unique for each structure.
            </summary>
        </member>
        <member name="P:DHI.Mike1D.StructureModule.VillemonteWeir.InvertLevelUpstream">
            <inheritdoc />
        </member>
        <member name="P:DHI.Mike1D.StructureModule.VillemonteWeir.InvertLevelDownstream">
            <inheritdoc />
        </member>
    </members>
</doc>
